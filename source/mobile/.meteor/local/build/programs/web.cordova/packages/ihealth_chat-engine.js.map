{"version":3,"sources":["meteor://ðŸ’»app/packages/ihealth_chat-engine/dispatcher/dispatcher.js","meteor://ðŸ’»app/packages/ihealth_chat-engine/stores/messageStore.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/stores/channelStore.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/stores/statusStore.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/actions/channelActions.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/actions/messageActions.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/actions/statusActions.coffee","meteor://ðŸ’»app/packages/ihealth_chat-engine/camera.coffee","meteor://ðŸ’»app/components/ChatChannelList.jsx","meteor://ðŸ’»app/components/ChatView.jsx"],"names":[],"mappings":"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","file":"/packages/ihealth_chat-engine.js","sourcesContent":["\n\nIH.Store = {};  // TODO: move to utils\nIH.Action = {};  // TODO: move to utils\n\nChatDispatcher = new MeteorFlux.Dispatcher();\n","\nIH.Coll.ChatMessages = new Mongo.Collection \"chat_message\"\nIH.Schema.ChatMessages = new SimpleSchema\n\n  createdAt:\n    type: Date\n    index: -1\n    autoValue: ->\n      if @isInsert\n        new Date()\n      else if @isUpsert\n        $setOnInsert: new Date()\n      else\n        @unset()\n    denyUpdate: true\n\n  SID:\n    type: String\n    label: \"Sender ID\"\n\n  CHID:\n    type: String\n    label: \"Channel ID\"\n    index: true\n\n  type:\n    type: String\n    label: \"Message Type\"    # \"txt\", \"img\", \"file\", \"note\", \"audio\", \"video\", etc\n    autoValue: ->\n      unless @isSet\n        \"txt\"\n    optional: true\n\n  content:\n    type: String    # ?\n\n\n\nIH.Coll.ChatMessages.attachSchema IH.Schema.ChatMessages\n\nIH.Coll.ChatMessages.allow\n  insert: (userId, doc) ->\n    userId and userId is doc.SID\n\n  update: (userId, doc, fields, modifier) ->\n    false\n\n  remove: (userId, doc, fields, modifier) ->\n    false\n\n  fetch: [\"senderId\"]\n\n#\n#IH.Coll.ChatMessages.before.insert (userId, doc) ->\n#  _.extend doc, {from: userId, read: false}\n#  return doc\n\nIH.Store.ChatMessages = {}\n\nIH.Store.ChatMessages.dispatchToken = ChatDispatcher.register (action)->\n\n  switch action.type\n\n    when \"CREATE_NEW_MESSAGE\"\n      IH.Coll.ChatMessages.insert(action.message)\n\n    when \"DOCTOR_JOINED_CHANNEL\"\n#      username =  # need to fetch username from ID\n      insertObj =\n        SID: \"system\"\n        CHID: action.channelID\n        type: \"note\"\n        content: \"#{action.doctor} joined channel\"\n      IH.Coll.ChatMessages.insert(insertObj)\n\n\n","\n\nLastMsgSchema = new SimpleSchema\n  createdAt:\n    type: Date\n\n  from:\n    type: String\n    label: \"Sender ID\"\n\n  content:\n    type: String\n\n\nIH.Coll.ChatChannels = new Mongo.Collection(\"chat_channel\")\nIH.Schema.ChatChannels = new SimpleSchema\n\n  createdAt:\n    type: Date\n    index: -1\n    autoValue: ->\n      if @isInsert\n        new Date()\n      else if @isUpsert\n        $setOnInsert: new Date()\n      else\n        @unset()\n\n  updatedAt:\n    type: Date\n    autoValue: ->\n      if @isUpdate\n        new Date()\n    optional: true\n    denyInsert: true\n\n  PID:\n    type: String\n    label: \"Patient ID\"\n\n  DID:\n    type: String\n    label: \"Primary Doctor of this Channel\"\n\n  others:\n    type: [ String ]\n    label: \"List of Other Doctors' IDs\"\n    autoValue: ->\n      if @isInsert and not @isSet\n        return []\n\n  lastMsg:\n    type: LastMsgSchema\n    label: \"last message of channel\"\n    optional: true\n\n\nIH.Coll.ChatChannels.attachSchema IH.Schema.ChatChannels\n\n\nIH.Coll.ChatChannels.allow\n\n  insert: ->\n    true\n\n  update: ->\n    true\n\n  remove: ->\n    false\n\n\nIH.Store.ChatChannels =\n\n  create: (patient, doctor) ->\n    newChannel =\n      PID: patient\n      DID: doctor\n      others: []\n    IH.Coll.ChatChannels.insert(newChannel)\n\n  addUser: (channelID, doctor) ->\n    IH.Coll.ChatChannels.update(channelID, {$push: {others: doctor}})\n\n  removeUser: (channelID, doctor) ->\n    IH.Coll.ChatChannels.update(channelID, {$pull: {others: doctor}})\n\n  updateLastMsg: (m) ->\n    updateMsg =\n      createdAt: new Date()\n      from: m.SID\n      content: m.content\n\n    IH.Coll.ChatChannels.update(m.CHID, {$set: {lastMsg: updateMsg}})\n\n\n# dispatcher token\nIH.Store.ChatChannels.dispatchToken = ChatDispatcher.register (action)->\n\n  switch action.type\n\n    when \"NEW_CONTACTS_CREATED\"\n      IH.Store.ChatChannels.create(action.patient, action.doctor)\n\n    when \"DOCTOR_JOINED_CHANNEL\"\n      IH.Store.ChatChannels.addUser(action.channelID, action.doctor)\n\n    when \"DOCTOR_LEFT_CHANNEL\"\n      IH.Store.ChatChannels.removeUser(action.channelID, action.doctor)\n\n    when \"USER_ACTIVATE_CHANNEL\"\n      if Meteor.isClient\n        Session.set(\"ACTIVE_CHAT_CHANNEL\", action.channelID)\n\n    when \"CREATE_NEW_MESSAGE\"\n      ChatDispatcher.waitFor([IH.Store.ChatMessages.dispatchToken])\n      if Meteor.isClient\n        IH.Store.ChatChannels.updateLastMsg(action.message)\n","\nIH.Coll.ChatStatus = new Mongo.Collection(\"chat_status\")\nIH.Schema.ChatStatus = new SimpleSchema\n\n  createdAt:\n    type: Date\n    index: -1\n    autoValue: ->\n      if @isInsert\n        new Date()\n      else if @isUpsert\n        $setOnInsert: new Date()\n      else\n        @unset()\n\n  updatedAt:\n    type: Date\n    autoValue: ->\n      if @isUpdate\n        new Date()\n    optional: true\n    denyInsert: true\n\n  UID:\n    type: String\n    label: \"User ID\"\n\n  CHID:\n    type: String\n    label: \"Channel ID\"\n\n  active:\n    type: Boolean\n    label: \"Channel is active\"\n    autoValue: ->\n      if @isInsert\n        false\n\n  numUnread:\n    type: Number\n    label: \"Number of unread message per User+Channel\"\n    optional: true\n    autoValue: ->\n      if @isInsert\n        return 0\n\n\n\n#TODO: put in users collections (related to this.active)\n#  status:\n#    type: String\n#    label: \"\"\n\nIH.Coll.ChatStatus.attachSchema IH.Schema.ChatStatus\n\n\nIH.Coll.ChatStatus.allow\n\n  insert: ->\n    true\n\n  update: (userId, doc) ->\n    userId and userId is doc.UID\n\n  remove: ->\n    false\n\n# methods\n\n_fetchAllOtherChannelUsers = (cid, uid) ->\n  chnl = IH.Coll.ChatChannels.findOne(cid)\n#   _.filter allChannelUsers, (user) ->\n#    return user isnt cid\n  return allChannelUsers\n\n_getStatusID = (action) ->\n  channelID = if action.message? then action.message.CHID else action.channelID\n  status = IH.Coll.ChatStatus.findOne({UID: Meteor.userId(), CHID: channelID})\n  if status?\n    statusID = status._id\n  return statusID\n\n\n# TODO: sid should be a list of all user_status in this channel\n\nIH.Store.ChatStatus =\n\n  incUnreadCount: (sid) ->\n    # _fetchAllOtherChannelUsers (except uid)\n    status = IH.Coll.ChatStatus.findOne(sid)\n    unless status.active\n      IH.Coll.ChatStatus.update(sid, {$inc: {numUnread: 1}})\n\n  clearUnreadCount: (sid) ->\n    IH.Coll.ChatStatus.update(sid, {$set: {active: true, numUnread: 0}})\n\n  deActivate: (sid) ->\n    IH.Coll.ChatStatus.update(sid, {$set: {active: false}})\n\n\n# dispatcher token\nIH.Store.ChatStatus.dispatchToken = ChatDispatcher.register (action)->\n\n  statusID = _getStatusID(action)\n  unless statusID?\n    console.error \"channel status not found\"\n\n  switch action.type\n\n    when \"CREATE_NEW_MESSAGE\"\n      ChatDispatcher.waitFor([IH.Store.ChatMessages.dispatchToken])\n      IH.Store.ChatStatus.incUnreadCount(statusID)\n\n    when \"USER_ACTIVATE_CHANNEL\"\n      IH.Store.ChatStatus.clearUnreadCount(statusID)\n\n    when \"USER_LEFT_CHANNEL\"\n      IH.Store.ChatStatus.deActivate(statusID)\n\n\n\n","\nIH.Action.ChatChannels =\n\n  setChannelActive: (channelID) ->\n    ChatDispatcher.dispatch(\n      type: \"USER_ACTIVATE_CHANNEL\"\n      channelID: channelID\n    )\n\n# TODO: RequestToAddUser","\nIH.Action.ChatMessages =\n\n  createMessage: (message, channelID) ->\n    ChatDispatcher.dispatch(\n      type: \"CREATE_NEW_MESSAGE\"\n      message: message\n#      channelID: channelID\n    )","\nIH.Action.ChatStatus =\n\n  activateChannel: (channelID)->\n    ChatDispatcher.dispatch(\n      type: \"USER_ACTIVATE_CHANNEL\"\n      channelID: channelID\n    )\n\n  deActivateChannel: (channelID)->\n    ChatDispatcher.dispatch(\n      type: \"USER_LEFT_CHANNEL\"\n      channelID: channelID\n    )","\nCamera = {}\n\nif Meteor.isCordova\n\n  Camera.getPicture = (options, callback) ->\n    unless callback\n      callback = options\n      options = {}\n\n    success = (data) ->\n      callback null, \"data:image/jpeg;base64,\" + data\n\n    failure = (error) ->\n      callback new Meteor.Error(\"cordovaError\", error)\n\n    navigator.camera.getPicture success, failure, _.extend(options,\n      quality: options.quality or 49\n      targetWidth: options.width or 640\n      targetHeight: options.height or 480\n      destinationType: Camera.DestinationType.DATA_URL\n    )","\nIH.RC.ChatChannelList = React.createClass({\n  mixins: [ReactMeteorData],\n  getMeteorData() {\n    //var contacts = Meteor.user().profile.contacts;\n\n    let channelList = [];\n    this.handle = Meteor.subscribe(\"ChatChannelList\");\n    if (this.handle.ready()){\n      var userId = Meteor.userId();\n      channelList = IH.Coll.ChatStatus.find({UID: userId}).map(function(s){\n        var ch = IH.Coll.ChatChannels.findOne({_id: s.CHID});\n\n        var contactID = ch.DID === userId? ch.PID : ch.DID;\n        var user = Meteor.users.findOne(contactID).profile;\n        var latestMsg = ch.lastMsg; //\n\n        return {\n          _id: ch._id,\n          name: user.name,\n          avatar: user.avatar,\n          href: \"/chat_channel/\" + ch._id,\n          msg: latestMsg\n        }\n      })\n    }\n\n    return {\n      channelList: channelList\n    }\n  },\n  //getDataContent() {\n  //  return <RC.List>\n  //    { _.map(this.data.channelList, function(c){\n  //      return <RC.Item\n  //        href = {c.href}\n  //        avatar = {c.avatar}\n  //        title = {c.name}\n  //        subtitle = {c.msg}\n  //        />\n  //    })\n  //    }\n  //  </RC.List>\n  //},\n  componentWillUnmount() {\n    this.handle.stop();\n  },\n  render() {\n    return <div>\n      <RC.List>\n        { _.map(this.data.channelList, function(c,n){\n          console.log(c)\n\n          return <RC.Item\n            theme = \"avatar\"\n            href = {c.href}\n            avatar = {c.avatar}\n            title = {c.name}\n            subtitle = {c.msg? c.msg.content : null}\n            note = {c.msg ? c.msg.createdAt: null}\n            key = {n}\n            />\n        })\n        }\n      </RC.List>\n\n    </div>\n  }\n});\n//{this.data.channelList? this.getDataContent(): <p>Loading...</p>}","\nvar _defaultMessagesLimit = 30;\nvar _incrementalMessageLimit = 20;\nvar _initLoading = true;\nvar _currentScrollPosition = 0;\n\nvar incrementalScroll = function (e) {\n\n  var scrollY = (this.y || window.pageYOffset) - window.pageYOffset;\n  this.y = window.pageYOffset;\n  _triggerLoadMore(scrollY, window.pageYOffset);\n};\n\nvar _triggerLoadMore = function(scrollY, offsetY) {\n  var directionY = !scrollY ? \"NONE\" : scrollY > 0 ? \"UP\" : \"DOWN\"\n  if (directionY === \"UP\" && offsetY === 0 ) {\n    console.log(\"window.scroll passed this line\", offsetY)\n    _resetMessageSubLimit()\n  }\n};\n\nvar _resetMessageSubLimit = function (){\n\n  var before = Session.get(\"Message_Sub_Limit\");\n  var after = before + _incrementalMessageLimit;\n  Session.set(\"Message_Sub_Limit\", after)\n};\n\nIH.RC.ChatView = React.createClass({\n  mixins: [ReactMeteorData],\n\n  getInitialState(){\n    return {messageSubLimit: _defaultMessagesLimit}\n  },\n  getMeteorData() {\n    var channelId = this.props.channelID || FlowRouter.getParam(\"slug\");\n    var messageLimit = Session.get(\"Message_Sub_Limit\") || _defaultMessagesLimit;\n\n    this.handle1 = Meteor.subscribe(\"ChatMessageList\", channelId, messageLimit);\n    this.handle2 =  Meteor.subscribe(\"ChatMessageUser\", channelId)\n\n    this.subscriptionsReady = this.handle1.ready() && this.handle2.ready();\n\n    var query = {\n      CHID: channelId\n    };\n    var options = {\n      sort: {createdAt: 1}\n    };\n\n    var channel, messages;\n\n    if (this.subscriptionsReady) {\n\n      if (this.initialLoading) {\n        IH.Action.ChatStatus.activateChannel(this.props.channelID);\n        this.initialLoading = false;\n      }\n\n      channel = IH.Coll.ChatChannels.findOne(channelId);\n      messages = IH.Coll.ChatMessages.find(query, options).map(function(m){\n        user = Meteor.users.findOne(m.SID).profile;\n\n        return {\n          from: m.SID,\n          msg: m.content,\n          date: m.createdAt,\n          type: m.type,\n          avatar: user.avatar,\n          name: user.name,\n          gender: user.gender\n        }\n      });\n    }\n\n    return {\n      channel: channel,\n      messages: messages\n    }\n  },\n  componentWillMount() {\n    Session.set(\"Message_Sub_Limit\", _defaultMessagesLimit);\n    this.props.channelID = this.props.channelID || FlowRouter.getParam(\"slug\");\n    this.initialLoading = true;\n  },\n  componentDidMount() {\n    window.addEventListener(\"scroll\", incrementalScroll);\n  },\n  componentWillUpdate() {\n    var node = this.refs.messageContainer.getDOMNode();\n    this.shouldScrollBottom = node.scrollTop + node.offsetHeight === node.scrollHeight;\n    //_currentScrollPosition = node.scrollHeight;\n  },\n  componentDidUpdate() {\n    var node = this.refs.messageContainer.getDOMNode();\n\n    if (this.handle1.ready() && this.handle2.ready() ) {\n      if (this.shouldScrollBottom) {\n        console.log(\"node.scrollHeight in update \", node.scrollHeight);\n        if (_initLoading && this.data.messages) {\n          window.scrollTo(0, 10000);\n          _initLoading = false;\n        } else {\n          node.scrollTop = node.scrollHeight;\n        }\n      } else {\n        //console.log(\"_currentScrollPosition\", _currentScrollPosition, node.scrollHeight)\n\n        node.scrollTop = _currentScrollPosition;   // why this doesn't work??\n      }\n      _currentScrollPosition = node.scrollHeight;\n    }\n  },\n  componentWillUnmount() {\n\n    // web should use a different approach,\n    // e.g. remove from active channel list\n\n    this.handle1.stop();\n    this.handle2.stop();\n    window.removeEventListener(\"scroll\");\n\n    IH.Action.ChatStatus.deActivateChannel(this.props.channelID);\n    Session.set(\"ACTIVE_CHAT_CHANNEL\", null);\n  },\n  sendNewMessage(msg) {\n    let message = {\n      type: \"txt\",\n      content: msg,\n      SID: Meteor.userId(),\n      CHID: this.props.channelID\n    };\n    IH.Action.ChatMessages.createMessage(message, this.props.channelID)\n  },\n  takeNSendPhoto() {\n\n    // TODO: added \"camera\" button\n\n    if (Meteor.isCordova) {\n      var msg;\n      Camera.getPicture({}, function(e, pic){\n        if (e) {\n          Meteor.setTimeout(function() {\n            alert(\"e.message)\")\n          }, 0);\n        } else {\n          msg = pic;\n        }\n      })\n\n      let message = {\n        type: \"img\",\n        content: msg,\n        SID: Meteor.userId(),\n        CHID: this.props.channelID\n      };\n      IH.Action.ChatMessages.createMessage(message, this.props.channelID)\n\n    } else {\n      alert(\"Web camera is not supported yet.\")\n    }\n  },\n  getDataContent(){\n    //return <IH.RC.ChatMessageList messages={this.data.messages} {...this.props}/>; // user props...\n\n    var lastMsg = {}\n    let userId = Meteor.userId();\n\n    return <div>\n      {\n        _.map(this.data.messages, function(m, n){\n          let first = n===0 ? true : !(h.nk(lastMsg, \"m.name\")==h.nk(m, \"m.name\"));\n          let dateBreak = moment(m.date).format(\"MM/DD/YY\");\n          let lastBreak = n===0 || !lastMsg.date ? null : moment(lastMsg.date).format(\"MM/DD/YY\");\n          lastMsg = m;\n\n          // TODO: use <img> for type==\"img\"\n\n          return <RC.ChatBubble\n            key={n}\n            isUser={userId==m.from}\n            showDateBreak={dateBreak!=lastBreak}\n            firstOfGroup={first}\n            message={m.msg}\n            date={m.date}\n            avatar={m.avatar}\n            name={m.name}\n            gender={m.gender}\n            />\n        })\n      }\n      <RC.ChatTextArea name=\"message\" onSubmit={this.sendNewMessage} />\n    </div>\n  },\n\n\n  render() {\n    var subscriptionsReady = this.subscriptionsReady;\n\n    return <div ref=\"messageContainer\">\n      { subscriptionsReady? this.getDataContent() : <p>Loading...</p> }\n    </div>\n  }\n})"]}