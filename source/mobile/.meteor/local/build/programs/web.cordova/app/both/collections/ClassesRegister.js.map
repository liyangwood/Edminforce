{"version":3,"sources":["meteor://💻app/both/collections/ClassesRegister.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D","file":"/both/collections/ClassesRegister.js","sourcesContent":["\nDB.ClassesRegister = new Mongo.Collection('classesRegister');\n\n\n\nDB.Schema.ClassesRegister = new SimpleSchema({\n    /*\n    *  classId确定后sessionId就确定了。\n    *  添加这个字段可以用便查询swimmer在当前session是否有课\n    * */\n    sessionId: {\n        type: String\n    },\n    //方便查询\n    accountId: {\n        type: String,\n        optional: true\n    },\n    \n    //方便查询  因为注册level 并不能根据swimmer或者 class的信息得出!!!\n    // 一个class有多个level\n    // 对于新用户returnback用户swimmer的level可能和注册的level一致\n    // 对于正在游的用户 注册的level比swimmer的level 高一个等级\n    classLevel:{\n        type: String,\n        optional: true\n    },\n    classId: {\n        type: String\n    },\n    swimmerId: {\n        type: String\n    },\n    cartId:{\n        type: String  //即使后台直接注册也会产生 cart\n    },\n\n    timestamp: {//todo change to lastModified\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate || this.isInsert || this.isUpsert) {\n                return new Date();\n            }\n        },\n        optional: true\n    },\n    registerTime:{ //从购物车获取\n        type: Date,\n        optional: true\n    },\n\n    //可能是normal canceling 或changing\n    status: {\n        type: String,\n        //optional: true,\n        allowedValues:['normal','canceling','changing'],\n        defaultValue:'normal'\n    },\n    //在 cancel和change class时标记\n    carted:{\n        //type: [DB.Schema.ClassesShoppingCart],\n        type: [String], //存储cancel和change类型的购物车id\n        optional: true,\n        blackbox: true\n    }\n\n\n});\n\nDB.ClassesRegister.attachSchema(DB.Schema.ClassesRegister)"]}