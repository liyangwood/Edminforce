{"version":3,"sources":["meteor://ðŸ’»app/client/app/class.edit/SwimmerItemClassItem.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,6BAA6B,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAClD,aAAS,EAAE;AACP,oBAAY,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACpC,cAAM,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;KAC/B;AACD,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;;;;AAKZ,YAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;AAC1C,YAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;AACnC,YAAI,SAAS,GAAG,YAAY,CAAC,SAAS;;AAEtC,cAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACnC,cAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAGvC,eAAO;AACH,mBAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,SAAS,EAAC,CAAC,CAAC,KAAK,EAAE;AACnD,qBAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC,KAAK,EAAE;SACrD,CAAC;KACL;;AAED,UAAM,cAAG;AACL,YAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;;AAE1C,YAAI,IAAI,GAAG,4BAA4B,GACjC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,GACrD,aAAa,GAAG,YAAY,CAAC,SAAS,GACtC,kBAAkB,GAAG,YAAY,CAAC,GAAG;;AAE3C,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;;;YAEpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG;;;gBACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;aACzB,GAAG,EAAE;SAEhB,GACA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAE;AAAC,cAAE,CAAC,IAAI;cAAC,SAAS,EAAC,gBAAgB;AACtD,oBAAI,EAAE,IAAK;AACX,qBAAK,EAAC,wBAAwB;AAC9B,uBAAO,EAAC,mBAAmB;YAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;SACtB,GAAC,EAAE;KACpB;CACJ,CAAC,CAAC,sE","file":"/client/app/class.edit/SwimmerItemClassItem.jsx","sourcesContent":["Cal.ClassEditSwimmerItemClassItem = React.createClass({\n    propTypes: {\n        registerInfo: React.PropTypes.object,\n        isLink: React.PropTypes.bool\n    },\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        //account swimmers classes\n        //Meteor.subscribe(\"accountWithSwimmersAndClasses\",'account1');\n\n        let registerInfo = this.props.registerInfo\n        let classId = registerInfo.classId;\n        let swimmerId = registerInfo.swimmerId\n\n        Meteor.subscribe(\"class\", classId);\n        Meteor.subscribe(\"swimmer\", swimmerId);\n\n\n        return {\n            swimmer: DB.Swimmers.find({_id: swimmerId}).fetch(),\n            classInfo: DB.Classes.find({_id: classId}).fetch()\n        };\n    },\n\n    render() {\n        let registerInfo = this.props.registerInfo\n\n        let href = '/classEdit/operationBoard?'\n            + 'classId=' + encodeURIComponent(registerInfo.classId)\n            + '&swimmerId=' + registerInfo.swimmerId\n            + '&registerInfoId=' + registerInfo._id\n\n        return !this.props.isLink ? <p>\n            {\n                this.data.classInfo.length ? <span >\n                    {this.data.classInfo[0].name}\n                </span> : ''\n            }\n        </p> :\n            this.data.classInfo.length ?<RC.Item className=\"item-text-wrap\"\n                     href={href}\n                     theme=\"icon-left, icon-right \"\n                     uiClass=\"user, angle-right\">\n                {this.data.classInfo[0].name}\n            </RC.Item>:''\n    }\n});\n"]}