{"version":3,"sources":["meteor://ðŸ’»app/packages/velocity_source-map-support/packages/velocity_source-map-support.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+F","file":"/packages/velocity_source-map-support.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/velocity:source-map-support/source_map_support.js                       //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nSourceMapSupport = {                                                                // 1\n  install: function () {                                                            // 2\n    if (Meteor.isClient) {                                                          // 3\n      installClient();                                                              // 4\n    } else if (Meteor.isServer) {                                                   // 5\n      installServer();                                                              // 6\n    }                                                                               // 7\n  }                                                                                 // 8\n}                                                                                   // 9\n                                                                                    // 10\nfunction installClient() {                                                          // 11\n  window.sourceMapSupport.install();                                                // 12\n}                                                                                   // 13\n                                                                                    // 14\nfunction installServer() {                                                          // 15\n  var fs = Npm.require('fs');                                                       // 16\n  var path = Npm.require('path');                                                   // 17\n  var sourceMapSupport = Npm.require('source-map-support');                         // 18\n                                                                                    // 19\n  var serverJsonPath = path.resolve(process.argv[2]);                               // 20\n  var serverDir = path.dirname(serverJsonPath);                                     // 21\n  var serverJson = JSON.parse(fs.readFileSync(serverJsonPath, 'utf8'));             // 22\n                                                                                    // 23\n  // Map from load path to its source map.                                          // 24\n  var parsedSourceMaps = {};                                                        // 25\n                                                                                    // 26\n  // Lazy load source maps when we need them                                        // 27\n  var loadSourceMaps = _.once(function () {                                         // 28\n    // Read all the source maps into memory once.                                   // 29\n    _.each(serverJson.load, function (fileInfo) {                                   // 30\n      if (fileInfo.sourceMap) {                                                     // 31\n        var rawSourceMap = fs.readFileSync(                                         // 32\n          path.resolve(serverDir, fileInfo.sourceMap), 'utf8');                     // 33\n        // Parse the source map only once, not each time it's needed. Also remove   // 34\n        // the anti-XSSI header if it's there.                                      // 35\n        var parsedSourceMap = JSON.parse(rawSourceMap.replace(/^\\)\\]\\}'/, ''));     // 36\n        // source-map-support doesn't ever look at the sourcesContent field, so     // 37\n        // there's no point in keeping it in memory.                                // 38\n        delete parsedSourceMap.sourcesContent;                                      // 39\n        if (fileInfo.sourceMapRoot) {                                               // 40\n          // Add the specified root to any root that may be in the file.            // 41\n          parsedSourceMap.sourceRoot = path.join(                                   // 42\n            fileInfo.sourceMapRoot, parsedSourceMap.sourceRoot || '');              // 43\n        }                                                                           // 44\n        parsedSourceMaps[path.resolve(serverDir, fileInfo.path)] = parsedSourceMap; // 45\n      }                                                                             // 46\n    });                                                                             // 47\n  });                                                                               // 48\n                                                                                    // 49\n  var retrieveSourceMap = function (pathForSourceMap) {                             // 50\n    loadSourceMaps();                                                               // 51\n    if (_.has(parsedSourceMaps, pathForSourceMap))                                  // 52\n      return { map: parsedSourceMaps[pathForSourceMap] };                           // 53\n    return null;                                                                    // 54\n  };                                                                                // 55\n                                                                                    // 56\n  sourceMapSupport.install({                                                        // 57\n    // Use the source maps specified in program.json instead of parsing source      // 58\n    // code for them.                                                               // 59\n    retrieveSourceMap: retrieveSourceMap,                                           // 60\n    // For now, don't fix the source line in uncaught exceptions, because we        // 61\n    // haven't fixed handleUncaughtExceptions in source-map-support to properly     // 62\n    // locate the source files.                                                     // 63\n    handleUncaughtExceptions: false                                                 // 64\n  });                                                                               // 65\n}                                                                                   // 66\n                                                                                    // 67\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}