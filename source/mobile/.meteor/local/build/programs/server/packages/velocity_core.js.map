{"version":3,"sources":["meteor://ðŸ’»app/src/source_map_support.js","meteor://ðŸ’»app/src/polyfills.js","meteor://ðŸ’»app/src/globals.js","meteor://ðŸ’»app/src/collections.js","meteor://ðŸ’»app/src/helpers.js","meteor://ðŸ’»app/src/methods/logs/logs_reset.js","meteor://ðŸ’»app/src/methods/logs/logs_submit.js","meteor://ðŸ’»app/src/methods/mirrors/mirror_init.js","meteor://ðŸ’»app/src/methods/mirrors/mirror_register.js","meteor://ðŸ’»app/src/methods/mirrors/mirror_request.js","meteor://ðŸ’»app/src/methods/mirrors/parentHandshake.js","meteor://ðŸ’»app/src/methods/options/getOption.js","meteor://ðŸ’»app/src/methods/options/setOption.js","meteor://ðŸ’»app/src/methods/options/setOptions.js","meteor://ðŸ’»app/src/methods/reports/reports_completed.js","meteor://ðŸ’»app/src/methods/reports/reports_reset.js","meteor://ðŸ’»app/src/methods/reports/reports_submit.js","meteor://ðŸ’»app/src/methods/copySampleTests.js","meteor://ðŸ’»app/src/methods/featureTestDone.js","meteor://ðŸ’»app/src/methods/featureTestFailed.js","meteor://ðŸ’»app/src/methods/isEnabled.js","meteor://ðŸ’»app/src/methods/isMirror.js","meteor://ðŸ’»app/src/methods/register_framework.js","meteor://ðŸ’»app/src/methods/reset.js","meteor://ðŸ’»app/src/methods/returnTODOTestAndMarkItAsDOING.js","meteor://ðŸ’»app/src/methods.js","meteor://ðŸ’»app/src/core.js","meteor://ðŸ’»app/src/core-shared.js","meteor://ðŸ’»app/src/mirrors/mirrorRegistrar.js"],"names":[],"mappings":"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","file":"/packages/velocity_core.js","sourcesContent":["/* globals SourceMapSupport: false */\n\nSourceMapSupport.install();\n","'use strict';\n\n// PhantomJS 1.x does not support Function.bind.\n// This is a very commonly used function and\n// the resulting errors are very hard to debug right now.\n// For this reason we include it in velocity:core.\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(otherThis) {\n    return _.bind(this, otherThis);\n  };\n}\n","/* globals\n   Velocity: true,\n   VelocityInternals: true\n*/\n\n/**\n * The `Velocity` object provides a common API for test frameworks to report\n * test results.  Frameworks can also request assets, such as a copy of the\n * user's application (the 'mirror') in which tests can be safely run without\n * impacting on-going development.\n *\n * Test results and log activity are reported via\n * {{#crossLink \"Meteor.methods\"}}Meteor methods{{/crossLink}}.\n *\n * @class Velocity\n */\nVelocity = {\n  /**\n   * @class Velocity.Collections\n   */\n  Collections: {},\n  Methods: {}\n};\n\nVelocityInternals = {};\n","/* global\n VelocityTestFiles: true,\n VelocityFixtureFiles: true,\n VelocityTestReports: true,\n VelocityAggregateReports: true,\n VelocityLogs: true,\n VelocityMirrors: true,\n VelocityOptions: true\n */\n\nvar collectionOptions = {};\n\nif (Meteor.isServer) {\n  var velocityMongoUrl = process.env.VELOCITY_MONGO_URL;\n  if (velocityMongoUrl) {\n    collectionOptions._driver = new MongoInternals.RemoteCollectionDriver(velocityMongoUrl);\n  }\n}\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.TestFiles = new Mongo.Collection('velocityTestFiles', collectionOptions);\n/**\n * @property VelocityTestFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestFiles`\n */\nVelocityTestFiles = Velocity.Collections.TestFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.FixtureFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.FixtureFiles = new Mongo.Collection('velocityFixtureFiles', collectionOptions);\n/**\n * @property VelocityFixtureFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.FixtureFiles`\n */\nVelocityFixtureFiles = Velocity.Collections.FixtureFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestReports\n * @type Mongo.Collection\n */\nVelocity.Collections.TestReports = new Mongo.Collection('velocityTestReports', collectionOptions);\n/**\n * @property VelocityTestReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestReports`\n */\nVelocityTestReports = Velocity.Collections.TestReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.AggregateReports\n * @type Mongo.Collection\n */\nVelocity.Collections.AggregateReports = new Mongo.Collection('velocityAggregateReports', collectionOptions);\n/**\n * TODO: Needs description and example records\n *\n * @property VelocityAggregateReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.AggregateReports`\n */\nVelocityAggregateReports = Velocity.Collections.AggregateReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Logs\n * @type Mongo.Collection\n */\nVelocity.Collections.Logs = new Mongo.Collection('velocityLogs', collectionOptions);\n/**\n * @property VelocityLogs\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Logs`\n */\nVelocityLogs = Velocity.Collections.Logs;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Mirrors\n * @type Mongo.Collection\n */\nVelocity.Collections.Mirrors = new Mongo.Collection('velocityMirrors', collectionOptions);\n/**\n * @property VelocityMirrors\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Mirrors`\n */\nVelocityMirrors = Velocity.Collections.Mirrors;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Options\n * @type Mongo.Collection\n */\nVelocity.Collections.Options = new Mongo.Collection('velocityOptions', collectionOptions);\n/**\n * @property VelocityOptions\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Options`\n */\nVelocityOptions = Velocity.Collections.Options;\n\n\n(function () {\n  'use strict';\n\n  if (Meteor.isServer) {\n    Meteor.publish('VelocityTestFiles', function () {\n      return Velocity.Collections.TestFiles.find({});\n    });\n    Meteor.publish('VelocityFixtureFiles', function () {\n      return Velocity.Collections.FixtureFiles.find({});\n    });\n    Meteor.publish('VelocityTestReports', function () {\n      return Velocity.Collections.TestReports.find({});\n    });\n    Meteor.publish('VelocityAggregateReports', function () {\n      return VelocityAggregateReports.find({});\n    });\n    Meteor.publish('VelocityLogs', function () {\n      return VelocityLogs.find({});\n    });\n    Meteor.publish('VelocityMirrors', function () {\n      return VelocityMirrors.find({});\n    });\n    Meteor.publish('VelocityOptions', function () {\n      return VelocityOptions.find({});\n    });\n  }\n\n  if (Meteor.isClient) {\n    Meteor.subscribe('VelocityTestFiles');\n    Meteor.subscribe('VelocityFixtureFiles');\n    Meteor.subscribe('VelocityTestReports');\n    Meteor.subscribe('VelocityAggregateReports');\n    Meteor.subscribe('VelocityLogs');\n    Meteor.subscribe('VelocityMirrors');\n    Meteor.subscribe('VelocityOptions');\n  }\n})();\n","/* globals VelocityInternals: true */\n\n'use strict';\n\nvar files = VelocityMeteorInternals.files;\n\nVelocityInternals.isWindows = function () {\n  return process.platform === 'win32';\n};\n\nVelocityInternals.isDirectory = function (path) {\n  var stat = files.statOrNull(path);\n  return stat && stat.isDirectory();\n};\n\nVelocityInternals.isEnvironmentVariableTrue = function (environmentVariable, defaultValue = true) {\n  var type = typeof environmentVariable;\n\n  switch (type) {\n    case 'undefined':\n      return defaultValue;\n    case 'string':\n      if (environmentVariable.toLowerCase() === 'false' ||\n        parseInt(environmentVariable) === 0) {\n        return false;\n      }\n      return true;\n    default:\n      return !!environmentVariable;\n  }\n};\n","/**\n * Clear log entries, either for a specific framework or for\n * all frameworks.\n *\n * @method velocity/logs/reset\n * @param {Object} [options]\n *   @param {String} [options.framework] The name of a specific framework\n *                                       to clear logs for.  Ex. 'mocha'\n */\nVelocity.Methods['velocity/logs/reset'] = function (options) {\n  options = options || {};\n  check(options, {\n    framework: Match.Optional(String)\n  });\n\n  var query = {};\n  if (options.framework) {\n    query.framework = options.framework;\n  }\n  Velocity.Collections.Logs.remove(query);\n};\n","/**\n * Log a message to the Velocity log store.  This provides a central\n * location for different reporters to query for test framework log\n * entries.\n *\n * @method velocity/logs/submit\n * @param {Object} options\n *   @param {String} options.framework The name of the test framework\n *   @param {String} options.message The message to log\n *   @param {String} [options.level] Log level.  Ex. 'error'. Default: 'info'\n *   @param {Date} [options.timestamp]\n */\nVelocity.Methods['velocity/logs/submit'] = function (options) {\n  check(options, {\n    framework: String,\n    message: String,\n    level: Match.Optional(String),\n    timestamp: Match.Optional(Match.OneOf(Date, String))\n  });\n\n  Velocity.Collections.Logs.insert({\n    framework: options.framework,\n    message: options.message,\n    level: options.level || 'info',\n    timestamp: options.timestamp ? new Date(options.timestamp) : new Date()\n  });\n};\n","/**\n * Stores metadata about the mirror.\n * Before a mirror implementation starts, it needs to call\n * this method to let Velocity know it is starting up.\n *\n * @method velocity/mirrors/init\n * @param {Object} options\n *   @param {String} options.framework The name of the test framework\n *                                     making the request\n *   @param {Number} options.port The port this mirror is running on\n *   @param {String} options.mongoUrl The mongo url this mirror is using\n *   @param {String} options.host The root url of this mirror without any\n *                        additional paths. Used for making DDP connections\n *   @param {String} options.rootUrl The root url of this mirror, which also\n *                           includes the path and params\n *   @param {String} options.rootUrlPath Adds this string to the end of\n *                           the root url in the Velocity.Collections.Mirrors\n *                           collection. To be used by test frameworks to\n *                           recognize when they are executing in a mirror.\n *                           eg. `/?jasmine=true`\n * @param {Object} [extra] Any additional metadata the implementing mirror\n *                         would like to store in the Velocity mirrors\n *                         collection.\n */\nVelocity.Methods['velocity/mirrors/init'] = function (options, extra) {\n  check(options, {\n    framework: String,\n    port: Number,\n    mongoUrl: String,\n    host: String,\n    rootUrl: String,\n    rootUrlPath: String,\n    pid: Number\n  });\n  check(extra, Match.Optional(Object));\n\n  if (extra) {\n    _.extend(options, extra);\n  }\n\n\n  var _upsertQuery = {\n    framework: options.framework,\n    port: options.port\n  };\n\n  var _options = _.extend(options, {\n    state: 'starting'\n  });\n\n  Velocity.Collections.Mirrors.upsert(_upsertQuery,\n    _options);\n};\n","/**\n * Lets Velocity know the mirror has started successfully\n *\n * @method velocity/mirrors/register\n * @param {Object} options\n *   @param {String} options.framework The name of the test framework\n *                                     making the request\n *   @param {String} options.host The root url of this mirror without any\n *                                additional paths. Must include port. Used\n *                                for making DDP connections\n */\nVelocity.Methods['velocity/mirrors/register'] = function (options) {\n  check(options, Match.ObjectIncluding({\n    framework: String,\n    host: String\n  }));\n\n  DEBUG && console.log('[velocity] Mirror registered. Handshaking with mirror...', options);\n\n  this.unblock();\n\n  // TODO: Should the host really include the port?\n  var mirrorConnection = DDP.connect(options.host, {\n    onConnected: function () {\n      DEBUG && console.log('[velocity] Connected to mirror, setting state to ready', options);\n      mirrorConnection.call('velocity/parentHandshake', function (error, response) {\n        DEBUG && console.log('[velocity] Parent Handshake response', error, response);\n        var _updateQuery = {\n          framework: options.framework,\n          port: parseInt(options.port)\n        };\n        Velocity.Collections.Mirrors.update(_updateQuery, {\n          $set: {\n            state: 'ready',\n            lastModified: Date.now()\n          }\n        });\n        mirrorConnection.disconnect();\n      });\n    }\n  });\n};\n","/* globals DEBUG: true, _: true */\n\nvar DEBUG = !!process.env.VELOCITY_DEBUG;\nvar _ = Npm.require('lodash');\nvar url = Npm.require('url');\nvar mongodbUri = Npm.require('mongodb-uri');\nvar freeport = Npm.require('freeport');\nvar tmp = Npm.require('tmp');\nvar files = VelocityMeteorInternals.files;\nvar _mirrorChildProcesses = {};\nNpm.require('colors');\n\n\n// Specifies the Meteor release that we use for mirrors\nVelocity.mirrorMeteorReleaseName = 'velocity:METEOR';\nVelocity.mirrorMeteorVersion = '1.2.0.2_1';\nVelocity.mirrorMeteorRelease = process.env.VELOCITY_MIRROR_METEOR_RELEASE ||\n  Velocity.mirrorMeteorReleaseName + '@' + Velocity.mirrorMeteorVersion;\nVelocity.mirrorMeteorToolReleaseName = 'velocity:meteor-tool';\nVelocity.mirrorMeteorToolVersion = '1.1.9_1';\nVelocity.mirrorMeteorToolRelease = process.env.VELOCITY_MIRROR_METEOR_TOOL_RELEASE ||\n  Velocity.mirrorMeteorToolReleaseName + '@' + Velocity.mirrorMeteorToolVersion;\n\n\n/**\n * Starts a new mirror if it has not already been started, and reuses an\n * existing one if it is already started.\n *\n * This method will update the `Velocity.Collections.Mirrors` collection with once the mirror is ready.\n *\n * @method velocity/mirrors/request\n * @for Meteor.methods\n * @param {Object} options                  Options for the mirror.\n * @param {String} options.framework        The name of the calling framework\n * @param {String} [options.testsPath]      The path to tests for this framework.\n *                                          For example 'jasmine/server/unit'.\n *                                          Don't include a leading or trailing slash.\n * @param {String} [options.args]           Additional arguments that the mirror is called with\n *                                          It accepts all the options that are available for `meteor run`.\n * @param {Object} [options.env]            Additional environment variables that the mirror is called with.\n * @param {Number} [options.port]           Use a specific port.  Default is random, free port.\n * @param {String} [options.rootUrlPath]    Adds this string to the end of the root url in the\n *                                          Velocity.Collections.Mirrors collection. eg. `/?jasmine=true`\n * @param {Number} [options.nodes]          The number of mirrors required. This is used by\n *                                          distributable frameworks. Default is 1\n * @param {Boolean} [options.handshake]     Specifies whether or not this mirror should perform\n *                                          a DDP handshake with the parent. Distributable\n *                                          frameworks can use this to get mirrors to behave\n *                                          like workers. The default is true\n *\n */\nVelocity.Methods['velocity/mirrors/request'] = function (options) {\n  check(options, {\n    framework: String,\n    testsPath: Match.Optional(String),\n    args: Match.Optional([Match.Any]),\n    env: Match.Optional(Object),\n    port: Match.Optional(Number),\n    rootUrlPath: Match.Optional(String),\n    nodes: Match.Optional(Number),\n    handshake: Match.Optional(Boolean)\n  });\n\n  this.unblock();\n\n  _startMirrors(options);\n};\n\n\nfunction _startMirrors (options) {\n  options = _.extend({\n    nodes: 1\n  }, options);\n  DEBUG && console.log('[velocity]', options.nodes, 'mirror(s) requested');\n  // only respect a provided port if a single mirror is requested\n  if (options.port && options.nodes === 1) {\n    _startMirror(options);\n  } else {\n    _reuseMirrors();\n    _startUninitializedMirrorsWithFreePorts();\n  }\n\n  function _reuseMirrors() {\n    options.unitializedNodes = options.nodes;\n    var _reusableMirrorsForFramework = _.filter(Velocity.reusableMirrors, function(rmp) {\n      return rmp.framework === options.framework && rmp.reused === false;\n    });\n\n    _reusableMirrorsForFramework.forEach(function(rmff) {\n      rmff.reused = true;\n\n      options.port = rmff.port;\n      _startMirror(options);\n\n      options.unitializedNodes--;\n\n    });\n\n  }\n\n  function _startUninitializedMirrorsWithFreePorts() {\n    var startWithFreePort = Meteor.bindEnvironment(function(err, port) {\n      options.port = port;\n      _startMirror(options);\n    });\n\n    for (var i = 0; i < options.unitializedNodes; i++) {\n      freeport(startWithFreePort);\n    }\n  }\n}\n\n\nvar _generateSettingsFile = _.memoize(function () {\n  var tmpObject = tmp.fileSync();\n  files.writeFile(tmpObject.name, JSON.stringify(Meteor.settings));\n  return tmpObject.name;\n});\n\n\nfunction _startMirror (options) {\n\n  // TODO, options is passed as a reference, maybe we should pass a copy instead\n\n  options.handshake = options.handshake === undefined ? true : options.handshake;\n  options.rootUrlPath = (options.rootUrlPath || '');\n  options.host = _getMirrorUrl(options.port);\n  options.rootUrl = options.host;\n\n  var environment = _getEnvironmentVariables(options);\n\n  // append the port to the mirror log if there are multiple mirrors\n  var processName = environment.FRAMEWORK;\n  if (options.nodes > 1) {\n    processName = environment.FRAMEWORK + '_' + environment.PORT;\n  }\n\n  var mirrorChild = _getMirrorChild(environment.FRAMEWORK, processName);\n  if (mirrorChild.isRunning()) {\n    return;\n  }\n\n  var command = VelocityInternals.isWindows() ? 'meteor.bat' : 'meteor';\n  var args = [\n    'run',\n    '--test-app',\n    '--port', String(environment.PORT)\n  ];\n\n  if (options.testsPath) {\n    args.push('--include-tests', files.convertToStandardPath(options.testsPath));\n  }\n\n  if (VelocityInternals.isEnvironmentVariableTrue(process.env.VELOCITY_CI, false)) {\n    args.push('--once');\n  }\n\n  if (Meteor.settings) {\n    var settingsPath = _generateSettingsFile();\n    args.push('--settings', settingsPath);\n  }\n\n  if (options.args) {\n    args.push.apply(args, options.args);\n  }\n\n  // Make it possible to debug a mirror\n  if (\n    process.env.VELOCITY_DEBUG_MIRROR &&\n    process.env.VELOCITY_DEBUG_MIRROR === environment.FRAMEWORK &&\n    !_.contains(options.args, '--debug-port')\n  ) {\n    var debugPort = '5858';\n    args.push('--debug-port', debugPort);\n    console.log('[velocity] Your mirror is now paused and ready for debugging!');\n    console.log();\n    console.log('[velocity] To debug the server process using a graphical debugging interface,');\n    console.log('[velocity] visit this URL in your web browser:');\n    console.log('[velocity] http://localhost:8080/debug?port=' + debugPort);\n  }\n\n  // Allow to use checked out meteor for spawning mirrors\n  // for development on our Meteor fork\n  if (!process.env.VELOCITY_USE_CHECKED_OUT_METEOR) {\n    args.push('--release', Velocity.mirrorMeteorRelease);\n  }\n\n  mirrorChild.spawn({\n    command: command,\n    args: args,\n    options: {\n      cwd: process.env.VELOCITY_APP_PATH || process.env.PWD,\n      env: environment\n    }\n  });\n\n  DEBUG && console.log(\n    '[velocity] Mirror process forked with pid',\n    mirrorChild.getPid()\n  );\n\n\n  console.log(('[velocity] ' +\n    environment.FRAMEWORK + ' is starting a mirror at ' +\n    environment.ROOT_URL + '.'\n  ).yellow);\n\n  var isMeteorToolInstalled = MeteorFilesHelpers.isPackageInstalled(\n    Velocity.mirrorMeteorToolReleaseName,\n    Velocity.mirrorMeteorToolVersion\n  );\n  if (!isMeteorToolInstalled) {\n    console.log(\n      '[velocity] *** Meteor Tools is installing ***',\n      '\\nThis takes a few minutes the first time.'.yellow\n    );\n  }\n\n  console.log(('[velocity] You can see the mirror logs at: tail -f ' +\n  files.convertToOSPath(files.pathJoin(Velocity.getAppPath(),\n    '.meteor', 'local', 'log', processName + '.log'))).yellow);\n\n  Meteor.call('velocity/mirrors/init', {\n    framework: environment.FRAMEWORK,\n    port: environment.PORT,\n    mongoUrl: environment.MONGO_URL,\n    host: environment.HOST,\n    rootUrl: environment.ROOT_URL,\n    rootUrlPath: environment.ROOT_URL_PATH,\n    pid: mirrorChild.getPid()\n  });\n}\n\n\n/**\n * Return URL for the mirror with the given port.\n *\n * @method _getMirrorUrl\n * @param {Number} port Mirror port\n * @return {String} Mirror URL\n * @private\n */\nfunction _getMirrorUrl (port) {\n  var rootUrlParts = url.parse(Meteor.absoluteUrl());\n  return url.format({\n    protocol: rootUrlParts.protocol,\n    slashes: rootUrlParts.slashes,\n    hostname: rootUrlParts.hostname,\n    port: port,\n    pathname: rootUrlParts.pathname\n  });\n}\n\n\n/**\n * Return the environment variables that a mirror should run with\n *\n * @method _getEnvironmentVariables\n * @param {Object} options Required fields:\n *   @param {String} options.framework The name of the test framework\n *                                     making the request\n *   @param {Number} options.port The port this mirror is running on\n *   @param {String} options.host The root url of this mirror without any\n *                        additional paths. Used for making DDP connections\n *   @param {String} options.rootUrl The root url of this mirror, which also\n *                           includes the path and params\n *   @param {String} options.rootUrlPath Adds this string to the end of\n *                           the root url in the Velocity.Collections.Mirrors\n *                           collection. To be used by test frameworks to\n *                           recognize when they are executing in a mirror.\n *                           eg. `/?jasmine=true`\n *   @param {Boolean} options.handshake Specifies whether or not this mirror\n *                                      should perform a DDP handshake with\n *                                      the parent. Distributable frameworks\n *                                      can use this to get mirrors to behave\n *                                      like workers.\n *   @param {Object} [options.env] Additional environment variables that the\n *                                 mirror is called with.\n * @return {Object} environment variables\n * @private\n */\nfunction _getEnvironmentVariables (options) {\n  var env = {\n    PORT: options.port,\n    // PORT gets overridden by Meteor so we save the mirror port in\n    // MIRROR_PORT too.\n    MIRROR_PORT: options.port,\n    HOST: options.host,\n    ROOT_URL_PATH: options.rootUrlPath,\n    ROOT_URL: options.rootUrl,\n    FRAMEWORK: options.framework,\n    MONGO_URL: _getMongoUrl(options.framework),\n    PARENT_URL: process.env.ROOT_URL,\n    IS_MIRROR: true,\n    HANDSHAKE: options.handshake,\n    VELOCITY_MAIN_APP_PATH: Velocity.getAppPath(),\n    METEOR_SETTINGS: JSON.stringify(_.extend({}, Meteor.settings))\n  };\n\n  if (options.env) {\n    _.defaults(env, options.env);\n  }\n\n  _.defaults(env, process.env);\n\n  return env;\n}\n\n\n/**\n * Returns the MongoDB URL for the given database.\n *\n * @method _getMongoUrl\n * @param {Object} database\n * @return {String} MongoDB Url\n * @private\n */\nfunction _getMongoUrl (database) {\n  var parts = mongodbUri.parse(process.env.VELOCITY_MONGO_URL || process.env.MONGO_URL);\n  parts.database += '-' + database;\n  return mongodbUri.format(parts);\n}\n\n\nfunction _getMirrorChild (framework, processName) {\n  var _processName = processName || framework;\n  var mirrorChild = _mirrorChildProcesses[_processName];\n  if (!mirrorChild) {\n    mirrorChild = new sanjo.LongRunningChildProcess(_processName);\n    _mirrorChildProcesses[_processName] = mirrorChild;\n  }\n  return mirrorChild;\n}\n","/**\n * This is the best indicator of the mirror's ready status, so it's used\n * to inform the user when there may be delays\n *\n * @method velocity/parentHandshake\n * @for Meteor.methods\n */\nVelocity.Methods['velocity/parentHandshake'] = function () {\n  console.log('[velocity] Established connection with Velocity.');\n};\n","/**\n * Get an option\n *\n * @method velocity/getOption\n * @param {String} name The name of the option.\n * @return {*} The value of the option or null.\n */\nVelocity.Methods['velocity/getOption'] = function (name) {\n  check(name, String);\n\n  var option = Velocity.Collections.Options.findOne({name: name});\n  return option ? option.value : null;\n};\n","/**\n * Set an option.\n *\n * @method velocity/setOption\n * @for Meteor.methods\n * @param {String} name The name of the option.\n * @param {*} value The value of the option.\n */\nVelocity.Methods['velocity/setOption'] = function (name, value) {\n  check(name, String);\n  check(value, Match.Any);\n\n  Velocity.Collections.Options.upsert(\n    {name: name},\n    {$set: {name: name, value: value}}\n  );\n};\n","/**\n * Set multiple options.\n *\n * @method velocity/setOptions\n * @param options Hash with options (name: value).\n */\nVelocity.Methods['velocity/setOptions'] = function (options) {\n  check(options, Object);\n\n  for (var name in options) {\n    if (options.hasOwnProperty(name)) {\n      Meteor.call('velocity/setOption', name, options[name]);\n    }\n  }\n};\n","/**\n * Frameworks must call this method to inform Velocity they have completed\n * their current test runs. Velocity uses this flag when running in CI mode.\n *\n * @method velocity/reports/completed\n * @param {Object} data\n *   @param {String} data.framework Name of a test framework.  Ex. 'jasmine'\n */\nVelocity.Methods['velocity/reports/completed'] = function (data) {\n  check(data, {\n    framework: String\n  });\n\n  Velocity.Collections.AggregateReports.upsert({'name': data.framework},\n    {$set: {'result': 'completed'}});\n  VelocityInternals.updateAggregateReports();\n};\n","/**\n * Clear test and aggregate reports, either for a specific framework or for\n * all frameworks.\n *\n * @method velocity/reports/reset\n * @param {Object} [options]\n *   @param {String} [options.framework] The name of a specific framework\n *                    to clear results for.  Ex. 'jasmine' or 'mocha'\n *   @param {Array} [options.notIn] A list of test Ids which should be kept\n *                                  (not cleared).  These Ids must match the\n *                                  ones passed to `velocity/reports/submit`.\n */\nVelocity.Methods['velocity/reports/reset'] = function (options) {\n  var query = {};\n\n  options = options || {};\n  check(options, {\n    framework: Match.Optional(String),\n    notIn: Match.Optional([String])\n  });\n\n  if (options.framework) {\n    query.framework = options.framework;\n    Velocity.Collections.AggregateReports.upsert({name: options.framework},\n      {$set: {result: 'pending'}});\n  }\n\n  if (options.notIn) {\n    query = _.assign(query, {_id: {$nin: options.notIn}});\n  }\n\n  Velocity.Collections.TestReports.remove(query);\n\n  VelocityInternals.updateAggregateReports();\n};\n","//////////////////////////////////////////////////////////////////////\n// Reports\n//\n\n/**\n * Record the results of an individual test run; a simple collector of\n * test data.\n *\n * The `data` object is stored in its entirety; any field may be passed in.\n * The optional fields documented here are suggestions based on what the\n * standard html-reporter supports.  Whether or not a field is actually\n * used is up to the specific test reporter that the user has installed.\n *\n * @method velocity/reports/submit\n * @param {Object} data\n *   @param {String} data.name Name of the test that was executed.\n *   @param {String} data.framework Name of a testing framework.\n *                                  For example, 'jasmine' or 'mocha'.\n *   @param {String} data.result The results of the test.  Standard values\n *                               are 'passed' and 'failed'.  Different test\n *                               reporters can support other values.  For\n *                               example, the aggregate tests collection uses\n *                               'pending' to indicate that results are still\n *                               coming in.\n *   @param {String} [data.id] Used to update a specific test result.  If not\n *                             provided, frameworks can use the\n *                             `velocity/reports/reset` Meteor method to\n *                             clear all tests.\n *   @param {Array} [data.ancestors] The hierarchy of suites and blocks above\n *                                   this test. For example,\n *                                ['Template', 'leaderboard', 'selected_name']\n *   @param {Date} [data.timestamp] The time that the test started for this\n *                                  result.\n *   @param {Number} [data.duration] The test duration in milliseconds.\n *   @param {String} [data.browser] Which browser did the test run in?\n *   @param {String} [data.failureType] For example, 'expect' or 'assert'\n *   @param {String} [data.failureMessage]\n *   @param {String} [data.failureStackTrace] The stack trace associated with\n *                                            the failure\n */\nVelocity.Methods['velocity/reports/submit'] = function (data) {\n  check(data, Match.ObjectIncluding({\n    name: String,\n    framework: String,\n    result: String,\n    id: Match.Optional(String),\n    ancestors: Match.Optional([String]),\n    timestamp: Match.Optional(Match.OneOf(Date, String)),\n    duration: Match.Optional(Number),\n    browser: Match.Optional(String),\n    failureType: Match.Optional(Match.Any),\n    failureMessage: Match.Optional(String),\n    failureStackTrace: Match.Optional(Match.Any)\n  }));\n\n  data.timestamp = data.timestamp ? new Date(data.timestamp) : new Date();\n  data.id = data.id || Random.id();\n\n  Velocity.Collections.TestReports.upsert(data.id, {$set: data});\n\n  VelocityInternals.updateAggregateReports();\n};\n","var files = VelocityMeteorInternals.files;\nvar fs = Npm.require('fs-extra');\nvar mkdirp = Meteor.wrapAsync(fs.mkdirp, fs);\n\n/**\n * Copy sample tests from frameworks `sample-tests` directories\n * to the user's application's `tests` directory.\n *\n * @method velocity/copySampleTests\n *\n * @param {Object} options\n *   @param {String} options.framework Framework name. Ex. 'jasmine', 'mocha'\n */\nVelocity.Methods['velocity/copySampleTests'] = function (options) {\n  var sampleTestGenerator,\n    sampleTests;\n\n  options = options || {};\n  check(options, {\n    framework: String\n  });\n\n  this.unblock();\n\n  sampleTestGenerator = VelocityInternals.frameworkConfigs[options.framework].sampleTestGenerator;\n  if (sampleTestGenerator) {\n    sampleTests = sampleTestGenerator(options);\n\n    DEBUG && console.log('[velocity] found ', sampleTests.length,\n      'sample test files for', options.framework);\n\n    sampleTests.forEach(function (testFile) {\n      var fullTestPath = files.pathJoin(Velocity.getTestsPath(), testFile.path),\n        testDir = files.pathDirname(fullTestPath);\n\n      mkdirp(files.convertToOSPath(testDir));\n      files.writeFile(fullTestPath, testFile.contents);\n    });\n  }\n};\n","/**\n * Marks test file as DONE\n *\n * @method velocity/featureTestDone\n *\n * @param {Object} options\n *   @param {String} options.featureId id of test\n */\nVelocity.Methods['velocity/featureTestDone'] = function (options) {\n  check(options, {\n    featureId: String\n  });\n\n  Velocity.Collections.TestFiles.update({\n    _id: options.featureId\n  }, {\n    $set: {status: 'DONE'}\n  });\n\n};\n","/**\n * Marks test file as TODO\n *\n * @method velocity/featureTestFailed\n *\n * @param {Object} options\n *   @param {String} options.featureId id of test\n */\nVelocity.Methods['velocity/featureTestFailed'] = function (options) {\n  check(options, {\n    featureId: String\n  });\n\n  Velocity.Collections.TestFiles.update({\n    _id: options.featureId\n  }, {\n    $set: {\n      status: 'TODO',\n      brokenPreviously: true\n    }\n  });\n};\n","/**\n * Exposes the VELOCITY environment variable.\n *\n * @method velocity/isEnabled\n * @for Meteor.methods\n * @return {Boolean} true if VELOCITY environment variable is truthy.\n *                   false if VELOCITY environment variable is falsy.\n *                   Default: true\n */\nVelocity.Methods['velocity/isEnabled'] = function () {\n  return VelocityInternals.isEnvironmentVariableTrue(process.env.VELOCITY);\n};\n","/**\n * Exposes the IS_MIRROR flag.\n *\n * @method velocity/isMirror\n * @for Meteor.methods\n * @return {Boolean} true if currently running in mirror\n */\nVelocity.Methods['velocity/isMirror'] = function () {\n  return !!process.env.IS_MIRROR;\n};\n","/**\n * Registers a testing framework plugin via a Meteor method.\n *\n * @method velocity/register/framework\n * @param {String} name The name of the testing framework.\n * @param {Object} [options] Options for the testing framework.\n *   @param {String} [options.regex] The regular expression for test files\n *                    that should be assigned to the testing framework.\n *                    The path relative to the tests folder is matched\n *                    against it. Default: 'name/.+\\.js$' (name is\n *                    the testing framework name).\n *   @param {String} [options.disableAutoReset]   Velocity's reset cycle\n *                    will skip reports and logs for this framework.\n *                    It is up to the framework to clean up its ****!\n *   @param {Function} [options.sampleTestGenerator] sampleTestGenerator\n *                    returns an array of fileObjects with the following\n *                    fields:\n *                      path - String - relative path to place test files\n *                                      (from PROJECT/tests)\n *                      contents - String - contents to put in the test file\n *                                          at the corresponding path\n */\nVelocity.Methods['velocity/register/framework'] = function (name, options) {\n  options = options || {};\n  check(name, String);\n  check(options, {\n    disableAutoReset: Match.Optional(Boolean),\n    regex: Match.Optional(RegExp),\n    sampleTestGenerator: Match.Optional(Function)\n  });\n\n  VelocityInternals.frameworkConfigs[name] = VelocityInternals.parseTestingFrameworkOptions(name, options);\n\n  // make sure the appropriate aggregate records are added\n  VelocityInternals.reset(name);\n};\n","/**\n * Clear all test reports, aggregate reports, and logs.\n *\n * @method velocity/reset\n */\nVelocity.Methods['velocity/reset'] = function (name) {\n  check(name, String);\n  VelocityInternals.reset(name);\n};\n","/**\n * Finds a test file with TODO status\n * changes the status to 'DOING', and returns it\n *\n * @method velocity/returnTODOTestAndMarkItAsDOING\n *\n * @param {Object} options\n *   @param {String} options.framework Framework name. Ex. 'jasmine', 'mocha'\n */\nVelocity.Methods['velocity/returnTODOTestAndMarkItAsDOING'] = function(options) {\n  check(options, {\n    framework: String\n  });\n\n  var _query = {\n    targetFramework: options.framework,\n    status: 'TODO'\n  };\n\n  var _update = {\n    $set: {status: 'DOING'}\n  };\n\n\n  var collectionObj = Velocity.Collections.TestFiles.rawCollection();\n  var wrappedFunc = Meteor.wrapAsync(collectionObj.findAndModify,\n    collectionObj);\n  var _TODOtest = wrappedFunc(_query, {}, _update, {});\n\n  return _TODOtest;\n};\n","Meteor.methods(Velocity.Methods);\n","/* globals\n DEBUG: true,\n CONTINUOUS_INTEGRATION: true\n */\n\nDEBUG = !!process.env.VELOCITY_DEBUG;\nCONTINUOUS_INTEGRATION = process.env.VELOCITY_CI;\n\n/**\n * @module Velocity\n * @class Velocity\n */\n(function () {\n  'use strict';\n\n//////////////////////////////////////////////////////////////////////\n// Init\n//\n\n  DEBUG && console.log('[velocity] adding velocity core');\n  CONTINUOUS_INTEGRATION && console.log('[velocity] is in continuous integration mode');\n\n  var _ = Npm.require('lodash');\n  var files = VelocityMeteorInternals.files;\n  VelocityInternals.frameworkConfigs = {};\n  var _watcher;\n  var _velocityStarted = false;\n  var _velocityStartupFunctions = [];\n  var FIXTURE_REG_EXP = new RegExp('-fixture.(js|coffee)$');\n\n\n  _removeTerminatedMirrors();\n\n  _setReusableMirrors();\n\n  if (process.env.NODE_ENV === 'development' &&\n    process.env.VELOCITY !== '0' &&\n    !process.env.IS_MIRROR\n  ) {\n    Meteor.startup(function () {\n      Meteor.defer(function initializeVelocity () {\n        DEBUG && console.log('[velocity] Server startup');\n        DEBUG && console.log('[velocity] app dir', Velocity.getAppPath());\n        DEBUG && console.log('[velocity] config =', JSON.stringify(VelocityInternals.frameworkConfigs, null, 2));\n\n        //kick-off everything\n        _resetAll();\n\n        _initFileWatcher(VelocityInternals.frameworkConfigs, _triggerVelocityStartupFunctions);\n\n      });\n    });\n  }\n\n//////////////////////////////////////////////////////////////////////\n// Public Methods\n//\n\n  _.extend(Velocity, {\n\n    /**\n     * Run code when Velocity is started.\n     *\n     * Velocity is considered started when the file watcher has\n     * completed the scan of the file system.\n     *\n     * @method startup\n     * @return {function} A function to run on startup\n     */\n    startup: function (func) {\n      if (_velocityStarted) {\n        DEBUG && console.log('[velocity] Velocity already started. Immediately calling func');\n        Meteor.defer(func);\n      } else {\n        DEBUG && console.log('[velocity] Velocity not started. Queueing func');\n        _velocityStartupFunctions.push(func);\n      }\n    },\n\n    /**\n     * Get the application root path.\n     *\n     * @method getAppPath\n     * @return {String} app root path\n     */\n    getAppPath: _.memoize(function () {\n      var appPath = files.findAppDir();\n      if (appPath) {\n        appPath = files.pathResolve(appPath);\n      }\n\n      return files.convertToOSPath(appPath);\n    }),\n\n\n    /**\n     * Get path to application's or application package's 'tests' directory\n     *\n     * @method getTestsPath\n     * @param {String} packageName optional package name\n     * @return {String} application's tests directory\n     */\n    getTestsPath: function (packageName) {\n      return files.convertToOSPath(\n        files.pathJoin(packageName ? Velocity.getPackagePath(packageName) : Velocity.getAppPath(), 'tests')\n      );\n    },\n\n    /**\n     * Get path to application's 'packages' directory\n     *\n     * @method getPackagesPath\n     * @return {String} application's packages directory\n     */\n    getPackagesPath: function () {\n      return files.convertToOSPath(files.pathJoin(Velocity.getAppPath(), 'packages'));\n    },\n\n    /**\n     * Get path to application's package directory\n     *\n     * @method getPackagesPath\n     * @param {String} packageName package name\n     * @return {String} application's packages directory\n     */\n    getPackagePath: function (packageName) {\n      return files.convertToOSPath(files.pathJoin(Velocity.getPackagesPath(), packageName));\n    },\n\n\n    /**\n     * A collection of callbacks to be executed after all tests have completed\n     * and the aggregate test results have been reported.\n     *\n     * See {{#crossLink 'Velocity/addPostProcessor:method'}}{{/crossLink}}\n     *\n     * @property postProcessors\n     * @type Array\n     * @default []\n     */\n    postProcessors: [],\n\n    /**\n     * Add a callback which will execute after all tests have completed\n     * and after the aggregate test results have been reported.\n     *\n     * @method addPostProcessor\n     * @param {Function} processor\n     */\n    addPostProcessor: function (processor) {\n      Velocity.postProcessors.push(processor);\n    },\n\n    /**\n     * Get a message that displays where bugs in Velocity core itself should\n     * be reported.\n     *\n     * @method getReportGithubIssueMessage\n     * @return {String} message with bug repo url\n     */\n    getReportGithubIssueMessage: function () {\n      return 'Please report the issue here: ' +\n        'https://github.com/meteor-velocity/velocity/issues';\n    },\n\n    /**\n     * Registers a testing framework plugin.\n     *\n     * @method registerTestingFramework\n     * @param {String} name The name of the testing framework.\n     * @param {Object} [options] Options for the testing framework.\n     *   @param {String} [options.regex] The regular expression for test files\n     *                    that should be assigned to the testing framework.\n     *                    The path relative to the tests folder is matched\n     *                    against it. Default: 'name/.+\\.js$' (name is\n     *                    the testing framework name).\n     *   @param {String} [options.disableAutoReset]   Velocity's reset cycle\n     *                    will skip reports and logs for this framework.\n     *                    It is up to the framework to clean up its ****!\n     *   @param {Function} [options.sampleTestGenerator] sampleTestGenerator\n     *                    returns an array of fileObjects with the following\n     *                    fields:\n     *                      path - String - relative path to place test files\n     *                                      (from PROJECT/tests)\n     *                      contents - String - contents to put in the test file\n     *                                          at the corresponding path\n     */\n    registerTestingFramework: function (name, options) {\n      DEBUG && console.log('[velocity] Register framework ' + name + ' with regex ' + options.regex);\n      VelocityInternals.frameworkConfigs[name] = VelocityInternals.parseTestingFrameworkOptions(name, options);\n      // make sure the appropriate aggregate records are added\n      Velocity.Collections.AggregateReports.insert({\n        name: name,\n        result: 'pending'\n      });\n    },\n\n    /**\n     * Unregister a testing framework.  Mostly used for internal testing\n     * of core Velocity functions.\n     *\n     * @method unregisterTestingFramework\n     * @param {String} name Name of framework to unregister\n     */\n    unregisterTestingFramework: function (name) {\n      Velocity.Collections.TestReports.remove({framework: name});\n      Velocity.Collections.Logs.remove({framework: name});\n      Velocity.Collections.AggregateReports.remove({name: name});\n      Velocity.Collections.TestFiles.remove({targetFramework: name});\n\n      delete VelocityInternals.frameworkConfigs[name];\n    }\n  });\n\n\n//////////////////////////////////////////////////////////////////////\n// Private functions\n//\n\n  function _triggerVelocityStartupFunctions () {\n    _velocityStarted = true;\n    DEBUG && console.log('[velocity] Triggering queued startup functions');\n\n    while (_velocityStartupFunctions.length) {\n      var func = _velocityStartupFunctions.pop();\n      Meteor.defer(func);\n    }\n  }\n\n   VelocityInternals.parseTestingFrameworkOptions = function (name, options) {\n    options = options || {};\n    _.defaults(options, {\n      name: name,\n      regex: name + '/.+\\\\.js$'\n    });\n\n    options._regexp = new RegExp(options.regex);\n\n    return options;\n  };\n\n  /**\n   * Initialize the directory/file watcher.\n   *\n   * @method _initFileWatcher\n   * @param {Object} config See {{#crossLink 'Velocity/registerTestingFramework:method'}}{{/crossLink}}\n   * @param {function} callback  Called after the watcher completes its first scan and is ready\n   * @private\n   */\n  function _initFileWatcher (config, callback) {\n    var paths,\n        packagesPath;\n\n    Velocity.Collections.TestFiles.remove({});\n    Velocity.Collections.FixtureFiles.remove({});\n\n    paths = [Velocity.getTestsPath()];\n    packagesPath = Velocity.getPackagesPath();\n\n    if (VelocityInternals.isDirectory(packagesPath)) {\n      var packageNames = files.readdir(packagesPath),\n          packageTestsPaths = _.chain(packageNames)\n            .filter(_isPackageWithTests)\n            .map(Velocity.getTestsPath)\n            .value();\n      paths.push.apply(paths, packageTestsPaths);\n    }\n\n    paths = _.map(paths, files.convertToOSPath);\n\n    DEBUG && console.log('[velocity] Add paths to watcher', paths);\n\n    _watcher = chokidar.watch(paths, {\n      ignored: /[\\/\\\\](\\.|node_modules)/,\n      persistent: true\n    });\n    _watcher.on('add', Meteor.bindEnvironment(function (filePath) {\n      var relativePath,\n          packageRelativePath,\n          targetFramework,\n          data;\n\n      filePath = files.convertToStandardPath(files.pathNormalize(filePath));\n      relativePath = _getRelativePath(filePath);\n\n      // if this is a fixture file, put it in the fixtures collection\n      if (FIXTURE_REG_EXP.test(relativePath)) {\n        DEBUG && console.log('[velocity] Found fixture file', relativePath);\n        Velocity.Collections.FixtureFiles.insert({\n          _id: filePath,\n          absolutePath: filePath,\n          relativePath: relativePath,\n          lastModified: Date.now()\n        });\n        // bail early\n        return;\n      }\n\n      DEBUG && console.log('[velocity] Search framework for path', relativePath);\n\n      packageRelativePath = (relativePath.indexOf('packages') === 0) ?\n        relativePath.split('/').slice(2).join('/') :\n        relativePath;\n\n      // test against each test framework's regexp matcher, use first one that matches\n      targetFramework = _.find(config, function (framework) {\n        return framework._regexp.test(packageRelativePath);\n      });\n\n      if (targetFramework) {\n        DEBUG && console.log('[velocity] Target framework for', relativePath, 'is', targetFramework.name);\n\n        data = {\n          _id: filePath,\n          name: files.pathBasename(filePath),\n          absolutePath: filePath,\n          relativePath: relativePath,\n          targetFramework: targetFramework.name,\n          lastModified: Date.now()\n        };\n\n        Velocity.Collections.TestFiles.insert(data);\n      } else {\n        DEBUG && console.log('[velocity] No framework registered for', relativePath);\n      }\n    }));  // end watcher.on 'add'\n\n    _watcher.on('change', Meteor.bindEnvironment(function (filePath) {\n      DEBUG && console.log('[velocity] File changed:', _getRelativePath(filePath));\n\n      // Since we key on filePath and we only add files we're interested in,\n      // we don't have to worry about inadvertently updating records for files\n      // we don't care about.\n      filePath = files.convertToStandardPath(files.pathNormalize(filePath));\n      Velocity.Collections.TestFiles.update(filePath, {$set: {lastModified: Date.now()}});\n    }));\n\n    _watcher.on('unlink', Meteor.bindEnvironment(function (filePath) {\n      filePath = files.convertToStandardPath(files.pathNormalize(filePath));\n      DEBUG && console.log('[velocity] File removed:',\n        _getRelativePath(filePath));\n\n      Velocity.Collections.TestFiles.remove(filePath);\n    }));\n\n    _watcher.on('ready', Meteor.bindEnvironment(function () {\n      DEBUG && console.log('[velocity] File scan complete, now watching',\n        Velocity.getTestsPath().substring(Velocity.getAppPath().length));\n\n      callback && callback();\n    }));\n\n  }  // end _initFileWatcher\n\n\n  function _isPackageWithTests(packageName) {\n    return packageName !== 'tests-proxy' &&\n      VelocityInternals.isDirectory(Velocity.getTestsPath(packageName));\n  }\n\n\n  /**\n   * Clear test reports, aggregate reports, and logs for a specific framework.\n   *\n   * @method VelocityInternals.reset\n   * @param {String} name Framework to reset\n   */\n  VelocityInternals.reset = function (name) {\n    DEBUG && console.log('[velocity] resetting', name);\n\n    Velocity.Collections.Logs.remove({framework: name});\n    Velocity.Collections.TestReports.remove({framework: name});\n    Velocity.Collections.AggregateReports.remove({name: name});\n\n    Velocity.Collections.AggregateReports.insert({\n      name: name,\n      result: 'pending'\n    });\n  };\n\n  /**\n   * Clear all test reports, aggregate reports, and logs.\n   *\n   * @method _resetAll\n   * @param {Object} config See {{#crossLink 'Velocity/registerTestingFramework:method'}}{{/crossLink}}\n   * @private\n   */\n  function _resetAll () {\n    var allFrameworks,\n        frameworksToIgnore;\n\n    DEBUG && console.log('[velocity] resetting the world');\n\n    allFrameworks = _getTestFrameworkNames();\n\n    // ignore frameworks that have opted-out\n    frameworksToIgnore = _(VelocityInternals.frameworkConfigs)\n      .where({disableAutoReset: true})\n      .pluck('_resetAllname')\n      .value();\n\n    DEBUG && console.log('[velocity] frameworks with disable auto reset:',\n      frameworksToIgnore);\n\n    Velocity.Collections.AggregateReports.remove({});\n    Velocity.Collections.Logs.remove({framework: {$nin: frameworksToIgnore}});\n    Velocity.Collections.TestReports.remove({framework: {$nin: frameworksToIgnore}});\n\n    _.forEach(allFrameworks, function (testFramework) {\n      Velocity.Collections.AggregateReports.insert({\n        name: testFramework,\n        result: 'pending'\n      });\n    });\n  }\n\n\n  /**\n   * If any one test has failed, mark the aggregate test result as failed.\n   *\n   * @method VelocityInternals.updateAggregateReports\n   */\n  VelocityInternals.updateAggregateReports = function  () {\n    var aggregateResult,\n        completedFrameworksCount,\n        allFrameworks = _getTestFrameworkNames();\n\n    Velocity.Collections.AggregateReports.upsert({name: 'aggregateResult'},\n      {$set: {result: 'pending'}});\n    Velocity.Collections.AggregateReports.upsert({name: 'aggregateComplete'},\n      {$set: {result: 'pending'}});\n\n    // if all of our test reports have valid results\n    if (!Velocity.Collections.TestReports.findOne({result: ''})) {\n\n      // pessimistically set passed state, ensuring all other states\n      // take precedence in order below\n      aggregateResult =\n        Velocity.Collections.TestReports.findOne({result: 'failed'}) ||\n        Velocity.Collections.TestReports.findOne({result: 'undefined'}) ||\n        Velocity.Collections.TestReports.findOne({result: 'skipped'}) ||\n        Velocity.Collections.TestReports.findOne({result: 'pending'}) ||\n        Velocity.Collections.TestReports.findOne({result: 'passed'}) ||\n        {result: 'pending'};\n\n      // update the global status\n      Velocity.Collections.AggregateReports.update({name: 'aggregateResult'},\n        {$set: {result: aggregateResult.result}});\n    }\n\n\n    // Check if all test frameworks have completed successfully\n    completedFrameworksCount = Velocity.Collections.AggregateReports.find({\n      name: {$in: allFrameworks},\n      result: 'completed'\n    }).count();\n\n    if (allFrameworks.length === completedFrameworksCount) {\n      Velocity.Collections.AggregateReports.update({name: 'aggregateComplete'},\n        {$set: {'result': 'completed'}});\n      _.each(Velocity.postProcessors, function (processor) {\n        processor();\n      });\n    }\n  };\n\n  function _getRelativePath (filePath) {\n    var relativePath = filePath.substring(Velocity.getAppPath().length);\n\n    if (relativePath[0] === '/') {\n      relativePath = relativePath.substring(1);\n    }\n    return relativePath;\n  }\n\n  function _getTestFrameworkNames () {\n    return _.pluck(VelocityInternals.frameworkConfigs, 'name');\n  }\n\n  function _removeTerminatedMirrors() {\n    // Remove terminated mirrors from previous runs\n    // This is needed for `meteor --test` to work properly\n    Velocity.Collections.Mirrors.find({}).forEach(function(mirror) {\n      try {\n        process.kill(mirror.pid, 0);\n      } catch (error) {\n        Velocity.Collections.Mirrors.remove({pid: mirror.pid});\n      }\n    });\n  }\n\n  function _setReusableMirrors() {\n    Velocity.reusableMirrors = [];\n    Velocity.Collections.Mirrors.find({}).forEach(function(mirror) {\n      mirror.reused = false;\n      Velocity.reusableMirrors.push(mirror);\n    });\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // Public Methods\n  //\n\n  /**\n   * Mirrors can share the same codebase as the main process.\n   * This method will run provided code inside a mirror only.\n   *\n   * where: client / server\n   *\n   * @method onTest\n   * @for Velocity\n   * @param {Function} code\n   */\n  Velocity.onTest = function (code) {\n    Meteor.call('velocity/isMirror', function (err, res) {\n      if (res) {\n        code();\n      }\n    });\n  };\n\n  if (Meteor.isServer) {\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOption\">velocity/setOption</a>\n     *\n     * @method setOption\n     */\n    Velocity.setOption = function (name, value) {\n      Meteor.call('velocity/setOption', name, value);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOptions\">velocity/setOptions</a>\n     *\n     * @method setOptions\n     */\n    Velocity.setOptions = function (options) {\n      Meteor.call('velocity/setOptions', options);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/getOption\">velocity/getOption</a>\n     *\n     * @method getOption\n     * @for Velocity\n     */\n    Velocity.getOption = function (name) {\n      return Meteor.call('velocity/getOption', name);\n    };\n  }\n\n})();\n","/* globals\n DEBUG: true,\n WebApp: false\n */\n\nDEBUG = !!process.env.VELOCITY_DEBUG;\n\n(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // This code will run inside a mirror and connects the mirror to\n  // velocity via ddp once the mirror starts. Velocity will then\n  // inform frameworks this mirror is ready.\n  //\n  if (process.env.IS_MIRROR) {\n    if (process.env.HANDSHAKE) {\n      WebApp.onListening(function () {\n        Meteor.defer(function handshakeWithParent() {\n          DEBUG && console.log('[velocity] Mirror started. Connecting via DDP to parent');\n          var velocityConnection = DDP.connect(process.env.PARENT_URL, {\n            onConnected: function () {\n              DEBUG && console.log('[velocity] Mirror connected to parent. Registering mirror...');\n              velocityConnection.call('velocity/mirrors/register', {\n                framework: process.env.FRAMEWORK,\n                host: process.env.HOST,\n                port: process.env.MIRROR_PORT\n              }, function (error) {\n                if (error) {\n                  console.error(\n                    '[velocity] Could not connect to parent via DDP. ' +\n                    'Please restart your app and try again. ' +\n                    'If this happens often please report it as issue to velocity:core.',\n                    error\n                  );\n                }\n                // Disconnect because we no longer need the connection\n                velocityConnection.disconnect();\n              });\n            }\n          });\n        });\n      });\n    } else {\n      DEBUG && console.log('[velocity] Mirror', process.env.MIRROR_PORT , 'configured not to handshake');\n    }\n  }\n\n})();\n"]}