{"version":3,"sources":["meteor://ðŸ’»app/packages/velocity_console-reporter/packages/velocity_console-reporter.js"],"names":[],"mappingsyF","file":"/packages/velocity_console-reporter.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/velocity:console-reporter/ConsoleReporter.js                     //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\nConsoleReporter = function () {                                              // 1\n                                                                             // 2\n};                                                                           // 3\n                                                                             // 4\n_.extend(ConsoleReporter.prototype, {                                        // 5\n                                                                             // 6\n  reportSummary: function (name, testReports) {                              // 7\n    var passedTestReports = _.filter(testReports, function (testReport) {    // 8\n      return testReport.result === 'passed';                                 // 9\n    });                                                                      // 10\n    var failedTestReports = _.filter(testReports, function (testReport) {    // 11\n      return testReport.result === 'failed';                                 // 12\n    });                                                                      // 13\n    this.reportPassed(name, passedTestReports);                              // 14\n    this.reportFailed(name, failedTestReports);                              // 15\n  },                                                                         // 16\n                                                                             // 17\n  reportPassed: function (name, testReports) {                               // 18\n    var totalTime = this.formatTime(this.totalTime(testReports));            // 19\n    var summary =  name + ': ' + testReports.length + ' tests passed';       // 20\n    if (testReports.length > 0) {                                            // 21\n      summary += ' (' + totalTime + ')';                                     // 22\n    }                                                                        // 23\n    console.log(summary);                                                    // 24\n  },                                                                         // 25\n                                                                             // 26\n  reportFailed: function (name, testReports) {                               // 27\n    if (testReports.length > 0) {                                            // 28\n      var summary =  name + ': ' + testReports.length + ' tests failed';     // 29\n      console.error(summary);                                                // 30\n      _.forEach(testReports, this.reportOneFailed.bind(this));               // 31\n    }                                                                        // 32\n  },                                                                         // 33\n                                                                             // 34\n  reportOneFailed: function (testReport) {                                   // 35\n    console.error(testReport.name);                                          // 36\n    console.error(testReport.failureMessage);                                // 37\n    console.error(testReport.failureStackTrace);                             // 38\n  },                                                                         // 39\n                                                                             // 40\n  totalTime: function (results) {                                            // 41\n    var firstTimeStamp, lastTimestamp, lastDuration;                         // 42\n    _.each(results, function (result) {                                      // 43\n      if (!firstTimeStamp ||  firstTimeStamp > result.timestamp.getTime()) { // 44\n        firstTimeStamp = result.timestamp.getTime();                         // 45\n      }                                                                      // 46\n      if (!lastTimestamp ||  lastTimestamp < result.timestamp.getTime()) {   // 47\n        lastTimestamp = result.timestamp.getTime();                          // 48\n        lastDuration = result.duration;                                      // 49\n      }                                                                      // 50\n    });                                                                      // 51\n                                                                             // 52\n    return lastTimestamp + lastDuration - firstTimeStamp;                    // 53\n  },                                                                         // 54\n                                                                             // 55\n  formatTime: function (ms) {                                                // 56\n    if (ms >= 1000) {                                                        // 57\n      return Math.round(ms / 1000) + 's';                                    // 58\n    } else {                                                                 // 59\n      return ms + 'ms';                                                      // 60\n    }                                                                        // 61\n  }                                                                          // 62\n});                                                                          // 63\n                                                                             // 64\n///////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////\n//                                                                           //\n// packages/velocity:console-reporter/main.js                                //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n                                                                             //\n/* globals                                                                   // 1\n   VelocityAggregateReports: false,                                          // 2\n   ConsoleReporter: false                                                    // 3\n */                                                                          // 4\n                                                                             // 5\nvar consoleReporter = new ConsoleReporter();                                 // 6\nvar startTime = new Date();                                                  // 7\n                                                                             // 8\nVelocityAggregateReports                                                     // 9\n  .find({                                                                    // 10\n    name: {$nin: ['aggregateResult', 'aggregateComplete']},                  // 11\n    result: 'completed'                                                      // 12\n  })                                                                         // 13\n  .observe({                                                                 // 14\n    added: onComplete,                                                       // 15\n    changed: onComplete                                                      // 16\n  });                                                                        // 17\n                                                                             // 18\nfunction onComplete(aggregateReport) {                                       // 19\n  var testReports = VelocityTestReports                                      // 20\n    .find({                                                                  // 21\n      framework: aggregateReport.name,                                       // 22\n      timestamp: {$gt: startTime}                                            // 23\n    })                                                                       // 24\n    .fetch();                                                                // 25\n                                                                             // 26\n  if (testReports.length) {                                                  // 27\n    consoleReporter.reportSummary(                                           // 28\n      aggregateReport.name,                                                  // 29\n      testReports                                                            // 30\n    );                                                                       // 31\n  }                                                                          // 32\n}                                                                            // 33\n                                                                             // 34\n///////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}