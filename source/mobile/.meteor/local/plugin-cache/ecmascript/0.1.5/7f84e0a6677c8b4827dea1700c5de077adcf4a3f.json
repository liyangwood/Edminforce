{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // Public Methods\n  //\n\n  /**\n   * Mirrors can share the same codebase as the main process.\n   * This method will run provided code inside a mirror only.\n   *\n   * where: client / server\n   *\n   * @method onTest\n   * @for Velocity\n   * @param {Function} code\n   */\n  Velocity.onTest = function (code) {\n    Meteor.call('velocity/isMirror', function (err, res) {\n      if (res) {\n        code();\n      }\n    });\n  };\n\n  if (Meteor.isServer) {\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOption\">velocity/setOption</a>\n     *\n     * @method setOption\n     */\n    Velocity.setOption = function (name, value) {\n      Meteor.call('velocity/setOption', name, value);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOptions\">velocity/setOptions</a>\n     *\n     * @method setOptions\n     */\n    Velocity.setOptions = function (options) {\n      Meteor.call('velocity/setOptions', options);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/getOption\">velocity/getOption</a>\n     *\n     * @method getOption\n     * @for Velocity\n     */\n    Velocity.getOption = function (name) {\n      return Meteor.call('velocity/getOption', name);\n    };\n  }\n})();","ast":null,"map":{"version":3,"sources":["/src/core-shared.js"],"names":[],"mappings":"AAAA,CAAC,YAAY;AACX,cAAY,CAAC;;;;;;;;;;;;;;;;AAgBb,UAAQ,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE;AAChC,UAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACnD,UAAI,GAAG,EAAE;AACP,YAAI,EAAE,CAAC;OACR;KACF,CAAC,CAAC;GACJ,CAAC;;AAEF,MAAI,MAAM,CAAC,QAAQ,EAAE;;;;;;AAMnB,YAAQ,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE;AAC1C,YAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAChD,CAAC;;;;;;;AAOF,YAAQ,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;AACvC,YAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;KAC7C,CAAC;;;;;;;;AAQF,YAAQ,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE;AACnC,aAAO,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KAChD,CAAC;GACH;CAEF,CAAA,EAAG,CAAC","file":"/src/core-shared.js.map","sourcesContent":["(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // Public Methods\n  //\n\n  /**\n   * Mirrors can share the same codebase as the main process.\n   * This method will run provided code inside a mirror only.\n   *\n   * where: client / server\n   *\n   * @method onTest\n   * @for Velocity\n   * @param {Function} code\n   */\n  Velocity.onTest = function (code) {\n    Meteor.call('velocity/isMirror', function (err, res) {\n      if (res) {\n        code();\n      }\n    });\n  };\n\n  if (Meteor.isServer) {\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOption\">velocity/setOption</a>\n     *\n     * @method setOption\n     */\n    Velocity.setOption = function (name, value) {\n      Meteor.call('velocity/setOption', name, value);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOptions\">velocity/setOptions</a>\n     *\n     * @method setOptions\n     */\n    Velocity.setOptions = function (options) {\n      Meteor.call('velocity/setOptions', options);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/getOption\">velocity/getOption</a>\n     *\n     * @method getOption\n     * @for Velocity\n     */\n    Velocity.getOption = function (name) {\n      return Meteor.call('velocity/getOption', name);\n    };\n  }\n\n})();\n"]},"hash":"7f84e0a6677c8b4827dea1700c5de077adcf4a3f"}
