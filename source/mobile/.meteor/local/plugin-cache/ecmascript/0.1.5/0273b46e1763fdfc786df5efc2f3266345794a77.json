{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/* globals VelocityInternals: true */\n\n'use strict';\n\nvar files = VelocityMeteorInternals.files;\n\nVelocityInternals.isWindows = function () {\n  return process.platform === 'win32';\n};\n\nVelocityInternals.isDirectory = function (path) {\n  var stat = files.statOrNull(path);\n  return stat && stat.isDirectory();\n};\n\nVelocityInternals.isEnvironmentVariableTrue = function (environmentVariable) {\n  var defaultValue = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n  var type = typeof environmentVariable;\n\n  switch (type) {\n    case 'undefined':\n      return defaultValue;\n    case 'string':\n      if (environmentVariable.toLowerCase() === 'false' || parseInt(environmentVariable) === 0) {\n        return false;\n      }\n      return true;\n    default:\n      return !!environmentVariable;\n  }\n};","ast":null,"map":{"version":3,"sources":["/src/helpers.js"],"names":[],"mappings":";;AAEA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,uBAAuB,CAAC,KAAK,CAAC;;AAE1C,iBAAiB,CAAC,SAAS,GAAG,YAAY;AACxC,SAAO,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC;CACrC,CAAC;;AAEF,iBAAiB,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE;AAC9C,MAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAClC,SAAO,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;CACnC,CAAC;;AAEF,iBAAiB,CAAC,yBAAyB,GAAG,UAAU,mBAAmB,EAAuB;MAArB,YAAY,yDAAG,IAAI;;AAC9F,MAAI,IAAI,GAAG,OAAO,mBAAmB,CAAC;;AAEtC,UAAQ,IAAI;AACV,SAAK,WAAW;AACd,aAAO,YAAY,CAAC;AAAA,AACtB,SAAK,QAAQ;AACX,UAAI,mBAAmB,CAAC,WAAW,EAAE,KAAK,OAAO,IAC/C,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACrC,eAAO,KAAK,CAAC;OACd;AACD,aAAO,IAAI,CAAC;AAAA,AACd;AACE,aAAO,CAAC,CAAC,mBAAmB,CAAC;AAAA,GAChC;CACF,CAAC","file":"/src/helpers.js.map","sourcesContent":["/* globals VelocityInternals: true */\n\n'use strict';\n\nvar files = VelocityMeteorInternals.files;\n\nVelocityInternals.isWindows = function () {\n  return process.platform === 'win32';\n};\n\nVelocityInternals.isDirectory = function (path) {\n  var stat = files.statOrNull(path);\n  return stat && stat.isDirectory();\n};\n\nVelocityInternals.isEnvironmentVariableTrue = function (environmentVariable, defaultValue = true) {\n  var type = typeof environmentVariable;\n\n  switch (type) {\n    case 'undefined':\n      return defaultValue;\n    case 'string':\n      if (environmentVariable.toLowerCase() === 'false' ||\n        parseInt(environmentVariable) === 0) {\n        return false;\n      }\n      return true;\n    default:\n      return !!environmentVariable;\n  }\n};\n"]},"hash":"0273b46e1763fdfc786df5efc2f3266345794a77"}
