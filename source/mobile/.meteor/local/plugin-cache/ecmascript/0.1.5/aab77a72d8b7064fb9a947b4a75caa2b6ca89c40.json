{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Finds a test file with TODO status\n * changes the status to 'DOING', and returns it\n *\n * @method velocity/returnTODOTestAndMarkItAsDOING\n *\n * @param {Object} options\n *   @param {String} options.framework Framework name. Ex. 'jasmine', 'mocha'\n */\nVelocity.Methods['velocity/returnTODOTestAndMarkItAsDOING'] = function (options) {\n  check(options, {\n    framework: String\n  });\n\n  var _query = {\n    targetFramework: options.framework,\n    status: 'TODO'\n  };\n\n  var _update = {\n    $set: { status: 'DOING' }\n  };\n\n  var collectionObj = Velocity.Collections.TestFiles.rawCollection();\n  var wrappedFunc = Meteor.wrapAsync(collectionObj.findAndModify, collectionObj);\n  var _TODOtest = wrappedFunc(_query, {}, _update, {});\n\n  return _TODOtest;\n};","ast":null,"map":{"version":3,"sources":["/src/methods/returnTODOTestAndMarkItAsDOING.js"],"names":[],"mappings":";;;;;;;;;AASA,QAAQ,CAAC,OAAO,CAAC,yCAAyC,CAAC,GAAG,UAAS,OAAO,EAAE;AAC9E,OAAK,CAAC,OAAO,EAAE;AACb,aAAS,EAAE,MAAM;GAClB,CAAC,CAAC;;AAEH,MAAI,MAAM,GAAG;AACX,mBAAe,EAAE,OAAO,CAAC,SAAS;AAClC,UAAM,EAAE,MAAM;GACf,CAAC;;AAEF,MAAI,OAAO,GAAG;AACZ,QAAI,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC;GACxB,CAAC;;AAGF,MAAI,aAAa,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;AACnE,MAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,EAC5D,aAAa,CAAC,CAAC;AACjB,MAAI,SAAS,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;;AAErD,SAAO,SAAS,CAAC;CAClB,CAAC","file":"/src/methods/returnTODOTestAndMarkItAsDOING.js.map","sourcesContent":["/**\n * Finds a test file with TODO status\n * changes the status to 'DOING', and returns it\n *\n * @method velocity/returnTODOTestAndMarkItAsDOING\n *\n * @param {Object} options\n *   @param {String} options.framework Framework name. Ex. 'jasmine', 'mocha'\n */\nVelocity.Methods['velocity/returnTODOTestAndMarkItAsDOING'] = function(options) {\n  check(options, {\n    framework: String\n  });\n\n  var _query = {\n    targetFramework: options.framework,\n    status: 'TODO'\n  };\n\n  var _update = {\n    $set: {status: 'DOING'}\n  };\n\n\n  var collectionObj = Velocity.Collections.TestFiles.rawCollection();\n  var wrappedFunc = Meteor.wrapAsync(collectionObj.findAndModify,\n    collectionObj);\n  var _TODOtest = wrappedFunc(_query, {}, _update, {});\n\n  return _TODOtest;\n};\n"]},"hash":"aab77a72d8b7064fb9a947b4a75caa2b6ca89c40"}
