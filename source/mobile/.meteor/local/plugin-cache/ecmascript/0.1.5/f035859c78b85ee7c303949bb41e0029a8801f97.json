{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/* global\n VelocityTestFiles: true,\n VelocityFixtureFiles: true,\n VelocityTestReports: true,\n VelocityAggregateReports: true,\n VelocityLogs: true,\n VelocityMirrors: true,\n VelocityOptions: true\n */\n\nvar collectionOptions = {};\n\nif (Meteor.isServer) {\n  var velocityMongoUrl = process.env.VELOCITY_MONGO_URL;\n  if (velocityMongoUrl) {\n    collectionOptions._driver = new MongoInternals.RemoteCollectionDriver(velocityMongoUrl);\n  }\n}\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.TestFiles = new Mongo.Collection('velocityTestFiles', collectionOptions);\n/**\n * @property VelocityTestFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestFiles`\n */\nVelocityTestFiles = Velocity.Collections.TestFiles;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.FixtureFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.FixtureFiles = new Mongo.Collection('velocityFixtureFiles', collectionOptions);\n/**\n * @property VelocityFixtureFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.FixtureFiles`\n */\nVelocityFixtureFiles = Velocity.Collections.FixtureFiles;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestReports\n * @type Mongo.Collection\n */\nVelocity.Collections.TestReports = new Mongo.Collection('velocityTestReports', collectionOptions);\n/**\n * @property VelocityTestReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestReports`\n */\nVelocityTestReports = Velocity.Collections.TestReports;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.AggregateReports\n * @type Mongo.Collection\n */\nVelocity.Collections.AggregateReports = new Mongo.Collection('velocityAggregateReports', collectionOptions);\n/**\n * TODO: Needs description and example records\n *\n * @property VelocityAggregateReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.AggregateReports`\n */\nVelocityAggregateReports = Velocity.Collections.AggregateReports;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Logs\n * @type Mongo.Collection\n */\nVelocity.Collections.Logs = new Mongo.Collection('velocityLogs', collectionOptions);\n/**\n * @property VelocityLogs\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Logs`\n */\nVelocityLogs = Velocity.Collections.Logs;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Mirrors\n * @type Mongo.Collection\n */\nVelocity.Collections.Mirrors = new Mongo.Collection('velocityMirrors', collectionOptions);\n/**\n * @property VelocityMirrors\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Mirrors`\n */\nVelocityMirrors = Velocity.Collections.Mirrors;\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Options\n * @type Mongo.Collection\n */\nVelocity.Collections.Options = new Mongo.Collection('velocityOptions', collectionOptions);\n/**\n * @property VelocityOptions\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Options`\n */\nVelocityOptions = Velocity.Collections.Options;\n\n(function () {\n  'use strict';\n\n  if (Meteor.isServer) {\n    Meteor.publish('VelocityTestFiles', function () {\n      return Velocity.Collections.TestFiles.find({});\n    });\n    Meteor.publish('VelocityFixtureFiles', function () {\n      return Velocity.Collections.FixtureFiles.find({});\n    });\n    Meteor.publish('VelocityTestReports', function () {\n      return Velocity.Collections.TestReports.find({});\n    });\n    Meteor.publish('VelocityAggregateReports', function () {\n      return VelocityAggregateReports.find({});\n    });\n    Meteor.publish('VelocityLogs', function () {\n      return VelocityLogs.find({});\n    });\n    Meteor.publish('VelocityMirrors', function () {\n      return VelocityMirrors.find({});\n    });\n    Meteor.publish('VelocityOptions', function () {\n      return VelocityOptions.find({});\n    });\n  }\n\n  if (Meteor.isClient) {\n    Meteor.subscribe('VelocityTestFiles');\n    Meteor.subscribe('VelocityFixtureFiles');\n    Meteor.subscribe('VelocityTestReports');\n    Meteor.subscribe('VelocityAggregateReports');\n    Meteor.subscribe('VelocityLogs');\n    Meteor.subscribe('VelocityMirrors');\n    Meteor.subscribe('VelocityOptions');\n  }\n})();","ast":null,"map":{"version":3,"sources":["/src/collections.js"],"names":[],"mappings":";;;;;;;;;;AAUA,IAAI,iBAAiB,GAAG,EAAE,CAAC;;AAE3B,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,MAAI,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;AACtD,MAAI,gBAAgB,EAAE;AACpB,qBAAiB,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC;GACzF;CACF;;;;;;;;AAQD,QAAQ,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAM9F,iBAAiB,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC;;;;;;;;AASnD,QAAQ,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAMpG,oBAAoB,GAAG,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC;;;;;;;;AASzD,QAAQ,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,qBAAqB,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAMlG,mBAAmB,GAAG,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC;;;;;;;;AASvD,QAAQ,CAAC,WAAW,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,0BAA0B,EAAE,iBAAiB,CAAC,CAAC;;;;;;;;AAQ5G,wBAAwB,GAAG,QAAQ,CAAC,WAAW,CAAC,gBAAgB,CAAC;;;;;;;;AASjE,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAMpF,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;;;;;;;;AASzC,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAM1F,eAAe,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;;;;;;;;AAS/C,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;;;;;;AAM1F,eAAe,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC;;AAG/C,CAAC,YAAY;AACX,cAAY,CAAC;;AAEb,MAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,YAAY;AAC9C,aAAO,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAChD,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,YAAY;AACjD,aAAO,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACnD,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,YAAY;AAChD,aAAO,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAClD,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,0BAA0B,EAAE,YAAY;AACrD,aAAO,wBAAwB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1C,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,cAAc,EAAE,YAAY;AACzC,aAAO,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,YAAY;AAC5C,aAAO,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACjC,CAAC,CAAC;AACH,UAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,YAAY;AAC5C,aAAO,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACjC,CAAC,CAAC;GACJ;;AAED,MAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,UAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;AACtC,UAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;AACzC,UAAM,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;AACxC,UAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;AAC7C,UAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;AACjC,UAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;AACpC,UAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;GACrC;CACF,CAAA,EAAG,CAAC","file":"/src/collections.js.map","sourcesContent":["/* global\n VelocityTestFiles: true,\n VelocityFixtureFiles: true,\n VelocityTestReports: true,\n VelocityAggregateReports: true,\n VelocityLogs: true,\n VelocityMirrors: true,\n VelocityOptions: true\n */\n\nvar collectionOptions = {};\n\nif (Meteor.isServer) {\n  var velocityMongoUrl = process.env.VELOCITY_MONGO_URL;\n  if (velocityMongoUrl) {\n    collectionOptions._driver = new MongoInternals.RemoteCollectionDriver(velocityMongoUrl);\n  }\n}\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.TestFiles = new Mongo.Collection('velocityTestFiles', collectionOptions);\n/**\n * @property VelocityTestFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestFiles`\n */\nVelocityTestFiles = Velocity.Collections.TestFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.FixtureFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.FixtureFiles = new Mongo.Collection('velocityFixtureFiles', collectionOptions);\n/**\n * @property VelocityFixtureFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.FixtureFiles`\n */\nVelocityFixtureFiles = Velocity.Collections.FixtureFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestReports\n * @type Mongo.Collection\n */\nVelocity.Collections.TestReports = new Mongo.Collection('velocityTestReports', collectionOptions);\n/**\n * @property VelocityTestReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestReports`\n */\nVelocityTestReports = Velocity.Collections.TestReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.AggregateReports\n * @type Mongo.Collection\n */\nVelocity.Collections.AggregateReports = new Mongo.Collection('velocityAggregateReports', collectionOptions);\n/**\n * TODO: Needs description and example records\n *\n * @property VelocityAggregateReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.AggregateReports`\n */\nVelocityAggregateReports = Velocity.Collections.AggregateReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Logs\n * @type Mongo.Collection\n */\nVelocity.Collections.Logs = new Mongo.Collection('velocityLogs', collectionOptions);\n/**\n * @property VelocityLogs\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Logs`\n */\nVelocityLogs = Velocity.Collections.Logs;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Mirrors\n * @type Mongo.Collection\n */\nVelocity.Collections.Mirrors = new Mongo.Collection('velocityMirrors', collectionOptions);\n/**\n * @property VelocityMirrors\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Mirrors`\n */\nVelocityMirrors = Velocity.Collections.Mirrors;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Options\n * @type Mongo.Collection\n */\nVelocity.Collections.Options = new Mongo.Collection('velocityOptions', collectionOptions);\n/**\n * @property VelocityOptions\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Options`\n */\nVelocityOptions = Velocity.Collections.Options;\n\n\n(function () {\n  'use strict';\n\n  if (Meteor.isServer) {\n    Meteor.publish('VelocityTestFiles', function () {\n      return Velocity.Collections.TestFiles.find({});\n    });\n    Meteor.publish('VelocityFixtureFiles', function () {\n      return Velocity.Collections.FixtureFiles.find({});\n    });\n    Meteor.publish('VelocityTestReports', function () {\n      return Velocity.Collections.TestReports.find({});\n    });\n    Meteor.publish('VelocityAggregateReports', function () {\n      return VelocityAggregateReports.find({});\n    });\n    Meteor.publish('VelocityLogs', function () {\n      return VelocityLogs.find({});\n    });\n    Meteor.publish('VelocityMirrors', function () {\n      return VelocityMirrors.find({});\n    });\n    Meteor.publish('VelocityOptions', function () {\n      return VelocityOptions.find({});\n    });\n  }\n\n  if (Meteor.isClient) {\n    Meteor.subscribe('VelocityTestFiles');\n    Meteor.subscribe('VelocityFixtureFiles');\n    Meteor.subscribe('VelocityTestReports');\n    Meteor.subscribe('VelocityAggregateReports');\n    Meteor.subscribe('VelocityLogs');\n    Meteor.subscribe('VelocityMirrors');\n    Meteor.subscribe('VelocityOptions');\n  }\n})();\n"]},"hash":"f035859c78b85ee7c303949bb41e0029a8801f97"}
