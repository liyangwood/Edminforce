{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["extends"]},"ignored":false,"code":"\nvar themes = [\"overlay-light\", \"overlay-dark\"];\nIH.RC.User = React.createClass({\n  displayName: \"User\",\n\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"ih-login\",\n  themeDefault: \"overlay-dark\",\n  themes: themes,\n\n  propTypes: {\n    fullHeight: React.PropTypes.bool,\n    noHeader: React.PropTypes.bool,\n    alignTop: React.PropTypes.bool,\n    bgColor: React.PropTypes.string,\n    registerCallback: React.PropTypes.func,\n\n    // Common Props\n    theme: React.PropTypes.string,\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object\n  },\n\n  getInitialState: function () {\n    return {\n      buttonActive: false,\n      waiting: false,\n      action: _.contains([\"login\", \"register\", \"reset\"], this.props.action) ? this.props.action : \"login\",\n      msg: null,\n      notification: null\n    };\n  },\n  /**\n   * @ @ @ @\n   * Handler\n   * @ @ @ @\n   */\n  checkButtonState: function (e) {\n    debugger;\n    switch (this.state.action) {\n      case \"login\":\n        var form = this.refs.loginForm.getFormData();\n        break;\n      case \"register\":\n        var form = this.refs.registerForm.getFormData();\n        break;\n      case \"reset\":\n        var form = this.refs.resetForm.getFormData();\n        break;\n    }\n    var test = _.every(_.values(form), function (t) {\n      return t.length && t.length > 0;\n    });\n    if (this.state.action == 'register' && form.pwRepeat) {\n      if (!App.checkPassword(form.pw)) {\n        this.setState({\n          msg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\",\n          buttonActive: false\n        });\n        return;\n      } else if (this.state.msg) {\n        this.setState({ msg: null });\n      }\n    }\n    if (test !== this.state.buttonActive) this.setState({ buttonActive: test });\n  },\n  resetForm: function () {\n    this.setState({\n      waiting: false,\n      msg: null,\n      buttonActive: false\n    });\n    if (this.state.action == \"login\") {\n      this.refs.username.reset();\n      this.refs.password.reset();\n    } else if (this.state.action == \"register\") {\n      this.refs.regEmail.reset();\n      this.refs.regPw.reset();\n      this.refs.regPwRepeat.reset();\n    } else if (this.state.action == \"reset\") {\n      this.refs.email.reset();\n    }\n  },\n  switchAction: function () {\n    this.resetForm();\n    this.setState({ buttonActive: false });\n\n    if (this.state.action == \"reset\") {\n      this.setState({ action: \"login\" });\n      return;\n    } else {\n      this.setState({ action: this.state.action == \"register\" ? \"login\" : \"register\" });\n    }\n  },\n  startReset: function () {\n    this.resetForm();\n    this.setState({\n      emailFound: true\n    });\n    this.setState({ action: \"reset\" });\n    return;\n  },\n  login: function (e) {\n    var _this = this;\n\n    e.preventDefault();\n    if (this.state.msg) return null;\n\n    var form = this.refs.loginForm.getFormData();\n\n    if (form.username.length && form.password.length) {\n      (function () {\n        // Attempt Log In\n        var self = _this;\n        _this.setState({ waiting: true });\n        Meteor.loginWithPassword(form.username, form.password, function (err) {\n          debugger;\n          if (!err) {\n            if (form.keepName == 'on') {\n              Cookie.set('username', form.username);\n            } else {\n              Cookie.clear('username');\n            }\n            self.resetForm();\n          }\n\n          var passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : React.createElement(\n            \"p\",\n            null,\n            \"You are now logged in!\"\n          );\n\n          if (_.isFunction(self.props.loginCallback)) self.props.loginCallback();\n\n          // message hook;for calphin listener\n          if (!err) {\n            Dispatcher.dispatch({\n              actionType: \"AUTH_LOGIN_SUCCESS\"\n            });\n            return;\n          }\n\n          self.setState({\n            msg: passedMsg,\n            buttonActive: false,\n            waiting: false\n          });\n        });\n      })();\n    }\n  },\n  register: function (e) {\n    debugger;\n    e.preventDefault();\n    if (this.state.msg) return null;\n\n    var self = this;\n    var form = this.refs.registerForm.getFormData();\n\n    if (form.term != 'on') {\n      this.setState({\n        notification: \"Please accept the following terms of use.\"\n      });\n      return null;\n    }\n\n    if (form.pw == form.pwRepeat) {\n      if (!App.checkPassword(form.pw)) {\n        this.setState({\n          msg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\"\n        });\n        return;\n      }\n      // Create User\n      Accounts.createUser({\n        email: form.email,\n        password: form.pw\n      }, function (err) {\n        if (!err) {\n          Meteor.call('SetOptIn', Meteor.userId(), form.OptIn == \"on\" ? true : false, function (error, res) {\n            console.log(error);\n            err = error;\n          });\n          self.resetForm();\n        }\n\n        var passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : React.createElement(\n          \"p\",\n          null,\n          \"Thank you for registering!\"\n        );\n\n        if (_.isFunction(self.props.registerCallback)) self.props.registerCallback();\n\n        if (!err) {\n          Dispatcher.dispatch({\n            actionType: \"AUTH_REGISTER_SUCCESS\"\n          });\n          return;\n        }\n        self.setState({\n          msg: passedMsg,\n          buttonActive: false,\n          waiting: false\n        });\n      });\n    } else this.setState({\n      msg: ph.errorMsgs[1001],\n      buttonActive: false,\n      waiting: false\n    });\n  },\n\n  reset: function (e) {\n    var _this2 = this;\n\n    e.preventDefault();\n    if (this.state.msg) return null;\n\n    var form = this.refs.resetForm.getFormData();\n\n    if (form.email.length) {\n      (function () {\n        // Attempt Log In\n        var self = _this2;\n        _this2.setState({ waiting: true });\n        Meteor.call('CheckEmail', form.email, function (err, result) {\n          debugger;\n          if (!!err) {\n            console.log(err);\n            result = false;\n          }\n\n          if (result) {\n            Accounts.forgotPassword({ email: form.email }, function (err) {\n              console.log(err);\n              var passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : React.createElement(\n                \"p\",\n                null,\n                \"Password Reset Email Has Been Sent!\"\n              );\n              self.setState({ msg: passedMsg });\n            });\n          } else {\n            // the email address is not found\n            this.setState({\n              emailFound: false,\n              waiting: false,\n              buttonActive: false,\n              msg: \"Entered E-mail is not in record.\"\n            });\n          }\n        });\n      })();\n    }\n  },\n\n  removeMsg: function (e) {\n    e.preventDefault();\n    this.setState({\n      waiting: false,\n      msg: null\n    });\n  },\n\n  jumpToNextPage: function (e) {\n    e.preventDefault();\n    this.setState({\n      waiting: false,\n      notification: null,\n      msg: null\n    });\n  },\n\n  printMsg: function () {\n    console.log(\"printMsg is called\", this.state.msg);\n    debugger;\n    var currentMessages = this.state.msg ? [this.state.msg] : [];\n    return React.createElement(\n      \"div\",\n      null,\n      currentMessages.map(function (m, n) {\n        return React.createElement(\n          \"div\",\n          { className: \"center\", key: n },\n          React.createElement(\n            \"div\",\n            { className: \"bigger inline-block invis-70 red\" },\n            _.isString(m) ? React.createElement(\n              \"div\",\n              null,\n              m\n            ) : m\n          )\n        );\n      })\n    );\n  },\n\n  /**\n   * @ @ @ @\n   * Render\n   * @ @ @ @\n   */\n  renderMsg: function () {\n    var self = this;\n    var bg = h.checkColorClass(this.props.bgColor) ? this.props.bgColor : null;\n    var msgs = this.state.notification ? [this.state.notification] : []; // This will always be either 1 or 0\n\n    return React.createElement(\n      RC.Animate,\n      { transitionName: \"scale\" },\n      msgs.map(function (m, n) {\n        return React.createElement(\n          \"div\",\n          { className: \"abs-full table on-top\" + (bg ? \" bg-\" + bg : \"\"), key: n },\n          React.createElement(\n            \"div\",\n            { className: \"inside center\" },\n            _.isString(m) ? React.createElement(\n              \"p\",\n              null,\n              m\n            ) : m,\n            React.createElement(\n              RC.Button,\n              { onClick: self.jumpToNextPage, theme: \"circle\", buttonColor: bg },\n              \"OK\"\n            )\n          )\n        );\n      })\n    );\n  },\n\n  renderForm: function () {\n    var inputTheme = \"small-label\";\n    var buttonTheme = \"full\";\n    if (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n      inputTheme += \",\" + this.props.theme;\n      buttonTheme += \",\" + this.props.theme;\n    }\n\n    switch (this.state.action) {\n\n      case \"login\":\n        return React.createElement(\n          RC.Form,\n          { onSubmit: this.login, onKeyUp: this.checkButtonState, ref: \"loginForm\" },\n          React.createElement(\n            \"div\",\n            null,\n            \"Log In To Your Calphin Account\"\n          ),\n          this.printMsg(),\n          React.createElement(RC.Input, { name: \"username\", label: \"E-Mail\", theme: inputTheme, ref: \"username\", value: Cookie.get('username') }),\n          React.createElement(RC.Input, { name: \"password\", label: \"Password\", type: \"password\", theme: inputTheme, ref: \"password\" }),\n          React.createElement(\n            RC.Button,\n            { name: \"button\", theme: buttonTheme, active: this.state.buttonActive, disabled: this.state.waiting },\n            this.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Log In\"\n          ),\n          React.createElement(RC.Checkbox, { name: \"keepName\", ref: \"keepName\", value: true, label: \"Remember My User Name\" })\n        );\n        break;\n\n      case \"register\":\n        return React.createElement(\n          RC.Form,\n          { onSubmit: this.register, onKeyUp: this.checkButtonState, ref: \"registerForm\" },\n          React.createElement(\n            \"div\",\n            null,\n            \"Create an Account\"\n          ),\n          this.printMsg(),\n          React.createElement(RC.Input, { name: \"email\", label: \"E-Mail\", theme: inputTheme, ref: \"regEmail\" }),\n          React.createElement(RC.PasswordInput, { name: \"pw\", label: \"Password\", type: \"password\", theme: inputTheme, ref: \"regPw\" }),\n          React.createElement(RC.Input, { name: \"pwRepeat\", label: \"Repeat Password\", type: \"password\", theme: inputTheme, ref: \"regPwRepeat\" }),\n          React.createElement(\n            RC.Button,\n            { name: \"button\", theme: buttonTheme, active: this.state.buttonActive, disabled: this.state.waiting },\n            this.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Sign Up\"\n          ),\n          React.createElement(RC.Checkbox, { name: \"term\", ref: \"term\", value: true, label: \"Yes，I accpet Privacy Policy and Terms of Use.\" }),\n          React.createElement(RC.Checkbox, { name: \"optIn\", ref: \"optIn\", value: true, label: \"Yes，I’d like to receive email communications from Calphin Aquatic Club\" })\n        );\n\n      case \"reset\":\n        debugger;\n        return React.createElement(\n          RC.Form,\n          { onSubmit: this.reset, onKeyUp: this.checkButtonState, ref: \"resetForm\" },\n          React.createElement(\n            \"div\",\n            null,\n            \"Reset Password via Email\"\n          ),\n          this.printMsg(),\n          React.createElement(RC.Input, { name: \"email\", label: \"E-Mail Address\", theme: inputTheme, ref: \"email\" }),\n          React.createElement(\n            RC.Button,\n            { name: \"button\", theme: buttonTheme, active: this.state.buttonActive, disabled: this.state.waiting },\n            this.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Send Password Reset E-mail\"\n          )\n        );\n        break;\n    }\n  },\n\n  render: function () {\n\n    var classes = this.getTheme() + (this.props.fullHeight ? \" full-height\" : \"\") + (this.props.noHeader ? \" no-header\" : \"\") + (h.checkColorClass(this.props.bgColor) ? \" bg-\" + this.props.bgColor : \"\") + (this.props.alignTop ? \"\" : \" table\");\n\n    return React.createElement(\n      \"div\",\n      babelHelpers._extends({}, _.omit(this.props, [\"className\", \"theme\"]), { className: classes }),\n      React.createElement(\n        \"div\",\n        { className: \"inside\" },\n        React.createElement(\n          \"div\",\n          { className: \"re-wrapper\" },\n          this.props.children,\n          this.renderMsg(),\n          this.renderForm(),\n          this.state.action != \"login\" ? null : React.createElement(\n            \"p\",\n            { className: \"center\" },\n            React.createElement(\n              \"span\",\n              { className: \"smallest inline-block cursor open-registration invis-70\", onClick: this.startReset },\n              \"Forgot Your Password?\"\n            )\n          ),\n          this.props.disableSwitch ? null : React.createElement(\n            \"p\",\n            { className: \"center\" },\n            React.createElement(\n              \"span\",\n              { className: \"smallest inline-block cursor open-registration invis-70\", onClick: this.switchAction },\n              this.state.action == \"login\" ? \"Create a new account\" : \"Log-in with an existing account\"\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") IH.RC.User.Help = {\n  Type: \"Unique/Canvas\",\n  Themes: themes,\n  PropTypes: {\n    fullHeight: \"Boolean (Makes the login area equal to screen size)\",\n    noHeader: \"Boolean (If fullHeight and noHeader are both true, close the gap where the header would normally be)\",\n    alignTop: \"Boolean (Makes the login area center vertically)\",\n    bgColor: \"String (Must be a valid CSS color class)\",\n    action: \"String [\\\"login\\\", \\\"register\\\"]\",\n    registerCallback: \"Callback function for user registrations\"\n  },\n  Description: \"Creates a login form.\"\n};","ast":null,"map":{"version":3,"sources":["/RC/login.jsx"],"names":[],"mappings":"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","file":"/RC/login.jsx.map","sourcesContent":["\nlet themes = [\"overlay-light\",\"overlay-dark\"]\nIH.RC.User = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"ih-login\",\n  themeDefault: \"overlay-dark\",\n  themes: themes,\n\n  propTypes: {\n    fullHeight: React.PropTypes.bool,\n    noHeader: React.PropTypes.bool,\n    alignTop: React.PropTypes.bool,\n    bgColor: React.PropTypes.string,\n    registerCallback: React.PropTypes.func,\n\n    // Common Props\n    theme: React.PropTypes.string,\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n  },\n\n  getInitialState() {\n    return {\n      buttonActive: false,\n      waiting: false,\n      action: _.contains([\"login\",\"register\",\"reset\"], this.props.action) ? this.props.action : \"login\",\n      msg: null,\n      notification: null\n    }\n  },\n  /**\n   * @ @ @ @\n   * Handler\n   * @ @ @ @\n   */\n  checkButtonState(e){\n    debugger\n    switch (this.state.action){\n      case \"login\":\n        var form = this.refs.loginForm.getFormData()\n        break\n      case \"register\":\n        var form = this.refs.registerForm.getFormData()\n        break\n      case \"reset\":\n        var form = this.refs.resetForm.getFormData()\n        break\n    }\n    let test = _.every( _.values(form), function(t){\n      return t.length && t.length>0\n    })\n    if (this.state.action == 'register' && form.pwRepeat){\n      if (!App.checkPassword(form.pw)) {\n        this.setState({\n          msg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\",\n          buttonActive: false\n        })\n        return\n      } else if (this.state.msg) {\n        this.setState({ msg: null })\n      }\n    }\n    if (test !== this.state.buttonActive)\n      this.setState({ buttonActive: test })\n  },\n  resetForm(){\n    this.setState({\n      waiting: false,\n      msg: null,\n      buttonActive: false,\n    })\n    if (this.state.action == \"login\") {\n      this.refs.username.reset()\n      this.refs.password.reset()\n    } else if (this.state.action == \"register\") {\n      this.refs.regEmail.reset()\n      this.refs.regPw.reset()\n      this.refs.regPwRepeat.reset()\n    } else if (this.state.action == \"reset\") {\n      this.refs.email.reset()\n    }\n  },\n  switchAction(){\n    this.resetForm()\n    this.setState({ buttonActive: false })\n\n    if (this.state.action == \"reset\") {\n      this.setState({action: \"login\"})\n      return\n    }\n    else {\n      this.setState({ action: this.state.action==\"register\" ? \"login\" : \"register\" })\n    }\n  },\n  startReset(){\n    this.resetForm()\n    this.setState({\n      emailFound: true\n    })\n    this.setState({action: \"reset\"})\n    return   \n  },\n  login(e){\n    e.preventDefault()\n    if (this.state.msg) return null\n\n    let form = this.refs.loginForm.getFormData()\n\n    if (form.username.length && form.password.length) {\n      // Attempt Log In\n      let self = this\n      this.setState({ waiting: true })\n      Meteor.loginWithPassword( form.username, form.password, function(err){\n        debugger\n        if (!err){\n          if (form.keepName == 'on') {\n            Cookie.set('username', form.username)\n          } else  {\n            Cookie.clear('username')\n          }\n          self.resetForm()\n        }\n\n        let passedMsg = err && err.error\n          ? (ph.errorMsgs[err.error] || err.reason)\n          : <p>You are now logged in!</p>\n\n        if (_.isFunction(self.props.loginCallback))\n          self.props.loginCallback()\n\n        // message hook;for calphin listener\n        if(!err){\n          Dispatcher.dispatch({\n            actionType: \"AUTH_LOGIN_SUCCESS\"\n          });\n          return;\n        }\n\n        self.setState({\n          msg: passedMsg,\n          buttonActive: false,\n          waiting: false,\n        })\n      })\n    }\n  },\n  register(e){\n    debugger\n    e.preventDefault()\n    if (this.state.msg) return null\n\n    let self = this\n    let form = this.refs.registerForm.getFormData()\n\n    if (form.term != 'on') {\n      this.setState({\n        notification: \"Please accept the following terms of use.\"\n      })\n      return null\n    }\n\n    if (form.pw==form.pwRepeat) {\n      if (!App.checkPassword(form.pw)) {\n        this.setState({\n          msg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\"\n        })\n        return\n      }\n      // Create User\n      Accounts.createUser({\n        email: form.email,\n        password: form.pw\n      }, function(err) {\n        if (!err){\n          Meteor.call('SetOptIn', Meteor.userId(), form.OptIn == \"on\" ? true : false, function(error, res){\n            console.log(error)\n            err = error;\n          })\n          self.resetForm()\n        }\n\n        let passedMsg = err && err.error\n          ? (ph.errorMsgs[err.error] || err.reason)\n          : <p>Thank you for registering!</p>\n\n        if (_.isFunction(self.props.registerCallback))\n          self.props.registerCallback()\n\n        if(!err){\n          Dispatcher.dispatch({\n            actionType: \"AUTH_REGISTER_SUCCESS\"\n          });\n          return;\n        }\n        self.setState({\n          msg: passedMsg,\n          buttonActive: false,\n          waiting: false,\n        })\n      })\n    } else\n      this.setState({\n        msg: ph.errorMsgs[1001],\n        buttonActive: false,\n        waiting: false,\n      })\n  },\n\n  reset(e){\n    e.preventDefault()\n    if (this.state.msg) return null\n\n    let form = this.refs.resetForm.getFormData()\n\n    if (form.email.length) {\n      // Attempt Log In\n      let self = this\n      this.setState({ waiting: true })\n      Meteor.call('CheckEmail', form.email, function(err, result){\n        debugger\n        if (!!err) {\n          console.log(err)\n          result = false\n        }\n\n        if (result){\n          Accounts.forgotPassword({ email: form.email },function(err){\n            console.log(err)\n            let passedMsg = err && err.error\n              ? (ph.errorMsgs[err.error] || err.reason)\n              : <p>Password Reset Email Has Been Sent!</p>\n            self.setState({ msg: passedMsg })\n          })\n        } else {\n        // the email address is not found\n          this.setState({\n            emailFound: false,\n            waiting: false,\n            buttonActive:false,\n            msg: \"Entered E-mail is not in record.\",\n          })\n        }\n      })\n    }\n  },\n\n  removeMsg(e){\n    e.preventDefault()\n    this.setState({\n      waiting: false,\n      msg: null,\n    })\n  },\n\n  jumpToNextPage(e){\n    e.preventDefault()\n    this.setState({\n      waiting: false,\n      notification: null,\n      msg:null\n    })\n  },\n\n  printMsg(){\n    console.log(\"printMsg is called\", this.state.msg)\n    debugger\n    let currentMessages = this.state.msg ? [this.state.msg] : []\n    return <div>\n      {\n        currentMessages.map(function(m,n){\n          return <div className=\"center\" key={n}>\n                      <div className=\"bigger inline-block invis-70 red\">\n                        {_.isString(m) ? <div>{m}</div> : m}\n                      </div>\n                    </div>\n        })\n      }\n    </div>\n\n  },\n\n  /**\n   * @ @ @ @\n   * Render\n   * @ @ @ @\n   */\n  renderMsg(){\n    let self = this\n    let bg = h.checkColorClass(this.props.bgColor) ? this.props.bgColor : null\n    let msgs = this.state.notification ? [this.state.notification] : [] // This will always be either 1 or 0\n\n    return <RC.Animate transitionName=\"scale\">\n      {\n      msgs.map( function(m,n){\n        return <div className={\"abs-full table on-top\"+(bg ? \" bg-\"+bg : \"\")} key={n}>\n          <div className=\"inside center\">\n            {_.isString(m) ? <p>{m}</p> : m}\n            <RC.Button onClick={self.jumpToNextPage} theme=\"circle\" buttonColor={bg}>OK</RC.Button>\n          </div>\n        </div>\n      })\n      }\n    </RC.Animate>\n  },\n\n  renderForm(){\n    var inputTheme = \"small-label\"\n    var buttonTheme = \"full\"\n    if (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      inputTheme += \",\"+this.props.theme\n      buttonTheme += \",\"+this.props.theme\n    }\n\n    switch (this.state.action) {\n\n      case \"login\":\n        return <RC.Form onSubmit={this.login} onKeyUp={this.checkButtonState} ref=\"loginForm\">\n          <div>Log In To Your Calphin Account</div>\n          {this.printMsg()}\n          <RC.Input name=\"username\" label=\"E-Mail\" theme={inputTheme} ref=\"username\" value={Cookie.get('username')}/>\n          <RC.Input name=\"password\" label=\"Password\" type=\"password\" theme={inputTheme} ref=\"password\" />\n          <RC.Button name=\"button\" theme={buttonTheme} active={this.state.buttonActive} disabled={this.state.waiting}>\n            {this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Log In\"}\n          </RC.Button>\n          <RC.Checkbox name=\"keepName\" ref=\"keepName\" value={true} label=\"Remember My User Name\"/>\n        </RC.Form>\n      break\n\n      case \"register\":\n        return <RC.Form onSubmit={this.register} onKeyUp={this.checkButtonState} ref=\"registerForm\">\n          <div>Create an Account</div>\n          {this.printMsg()}\n          <RC.Input name=\"email\" label=\"E-Mail\" theme={inputTheme} ref=\"regEmail\" />\n          <RC.PasswordInput name=\"pw\" label=\"Password\" type=\"password\" theme={inputTheme} ref=\"regPw\" />\n          <RC.Input name=\"pwRepeat\" label=\"Repeat Password\" type=\"password\" theme={inputTheme} ref=\"regPwRepeat\" />\n          <RC.Button name=\"button\" theme={buttonTheme} active={this.state.buttonActive} disabled={this.state.waiting}>\n            {this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Sign Up\"}\n          </RC.Button>\n          <RC.Checkbox name=\"term\" ref=\"term\" value={true} label=\"Yes，I accpet Privacy Policy and Terms of Use.\"/>\n          <RC.Checkbox name=\"optIn\" ref=\"optIn\" value={true} label=\"Yes，I’d like to receive email communications from Calphin Aquatic Club\"/>\n        </RC.Form>\n\n      case \"reset\":\n      debugger\n        return (\n          <RC.Form onSubmit={this.reset} onKeyUp={this.checkButtonState} ref=\"resetForm\">\n          <div>Reset Password via Email</div>\n          {this.printMsg()}\n          <RC.Input name=\"email\" label=\"E-Mail Address\" theme={inputTheme} ref=\"email\" />\n          <RC.Button name=\"button\" theme={buttonTheme} active={this.state.buttonActive} disabled={this.state.waiting}>\n            {this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Send Password Reset E-mail\"}\n          </RC.Button>\n        </RC.Form>\n        )\n      break\n    }\n  },\n\n\n  render(){\n\n    var classes = this.getTheme()\n      +(this.props.fullHeight ? \" full-height\" : \"\")\n      +(this.props.noHeader ? \" no-header\" : \"\")\n      +(h.checkColorClass(this.props.bgColor) ? \" bg-\"+this.props.bgColor : \"\")\n      +(this.props.alignTop ? \"\" : \" table\")\n\n    return <div {... _.omit(this.props, [\"className\",\"theme\"])} className={classes}>\n      <div className=\"inside\">\n        <div className=\"re-wrapper\">\n          {this.props.children}\n          {this.renderMsg()}\n          {this.renderForm()}\n          {\n            this.state.action != \"login\" ? null :\n            <p className=\"center\">\n              <span className=\"smallest inline-block cursor open-registration invis-70\" onClick={this.startReset}>\n                Forgot Your Password?\n              </span>\n            </p>\n          }\n          {\n            this.props.disableSwitch ? null :\n            <p className=\"center\">\n              <span className=\"smallest inline-block cursor open-registration invis-70\" onClick={this.switchAction}>\n                {this.state.action==\"login\" ? \"Create a new account\" : \"Log-in with an existing account\"}\n              </span>\n            </p>\n          }\n        </div>\n      </div>\n    </div>\n  }\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  IH.RC.User.Help = {\n    Type: \"Unique/Canvas\",\n    Themes: themes,\n    PropTypes: {\n      fullHeight: \"Boolean (Makes the login area equal to screen size)\",\n      noHeader: \"Boolean (If fullHeight and noHeader are both true, close the gap where the header would normally be)\",\n      alignTop: \"Boolean (Makes the login area center vertically)\",\n      bgColor: \"String (Must be a valid CSS color class)\",\n      action: \"String [\\\"login\\\", \\\"register\\\"]\",\n      registerCallback: \"Callback function for user registrations\",\n    },\n    Description: \"Creates a login form.\"\n  }\n"]},"hash":"1e1efbe436f2ff97fb073405473b1e93c0169ab7"}
