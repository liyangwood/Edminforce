{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 9/14/15.\n */\n\n{\n    (function () {\n        //let CRSelectClassPageStoreClass;\n        //Dependency.autorun(function () {\n        //    CRSelectClassPageStoreClass = Dependency.get('classRegister.SelectClassPage.storeClass');\n        //});\n\n        var CRSelectClassPageStore = undefined;\n        Dependency.autorun(function () {\n            CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n        });\n\n        Cal.CRSelectClassPage = React.createClass({\n            displayName: \"CRSelectClassPage\",\n\n            mixins: [ReactMeteorData, Cal.Mixins.windowUnload],\n            getMeteorData: function () {\n\n                //todo\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                //Meteor.subscribe(\"appInfo\");\n                Meteor.subscribe(\"classes\");\n                Meteor.subscribe(\"activeShoppingCart\");\n\n                //仅在页面加载时才初始化\n                //var CRSelectClassPageStore = new CRSelectClassPageStoreClass;\n\n                var data = {\n                    account: Meteor.users.find().fetch(),\n\n                    swimmers: CRSelectClassPageStore.getSwimmers().fetch(),\n\n                    currentLevel: CRSelectClassPageStore.currentLevel.get(), //next level\n\n                    currentSwimmer: CRSelectClassPageStore.currentSwimmer.get(),\n                    currentClass: CRSelectClassPageStore.currentClass.get(),\n\n                    //should wait for currentSwimmer\n                    avaiableDays: CRSelectClassPageStore.avaiableDays.get(),\n                    avaiableTimes: CRSelectClassPageStore.avaiableTimes.get(),\n                    currentDay: CRSelectClassPageStore.currentDay.get(),\n                    currentTime: CRSelectClassPageStore.currentTime.get(),\n\n                    currentStep: CRSelectClassPageStore.currentStep.get(),\n\n                    classesNoSeatByLevel: CRSelectClassPageStore.classesNoSeatByLevel.get(),\n\n                    //一次选课流程的所有信息\n                    selectedClasses: CRSelectClassPageStore.selectedClasses.get()\n\n                };\n\n                //\n                return data;\n            },\n\n            /////////////////////////////////////////////////////////////////\n            ///////////actions///////////\n            swimmerChange: function (e) {\n                var value = this.refs.swimmer.getValue();\n\n                var swimmer = _.find(this.data.swimmers, function (v, n) {\n                    return v._id == value;\n                });\n\n                Dispatcher.dispatch({\n                    actionType: \"CRSelectClassPage_SWIMMER_CHANGE\",\n                    swimmer: swimmer\n                });\n            },\n            dayChange: function (e) {\n                var value = this.refs.day.getValue();\n                value = parseInt(value, 10);\n\n                Dispatcher.dispatch({\n                    actionType: \"CRSelectClassPage_DAY_CHANGE\",\n                    day: value\n                });\n            },\n            timeChange: function (e) {\n                var value = this.refs.time.getValue();\n                value = parseInt(value, 10);\n                Dispatcher.dispatch({\n                    actionType: \"CRSelectClassPage_TIME_CHANGE\",\n                    time: value\n                });\n            },\n\n            formSubmit: function (e) {\n                e.preventDefault();\n\n                var formData = this.refs.myForm.getFormData();\n\n                //todo validation info in ui\n                if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n                    alert('please select a class');\n                    return;\n                }\n                //no class match\n                if (!this.data.currentClass) {\n                    alert('please select a class');\n                    return;\n                }\n\n                //check duplicate\n                var selectedClasses = this.data.selectedClasses;\n                var currentClass = this.data.currentClass;\n                if (App.currentClass_in_selectedClasses(currentClass, selectedClasses)) {\n                    alert('class duplicated');\n                    return;\n                }\n\n                Dispatcher.dispatch({\n                    actionType: \"CRSelectClassPage_CLASS_SELECT\",\n                    currentStep: this.data.currentStep,\n                    selectedClass: formData\n                });\n            },\n\n            goToEdit: function (num) {\n\n                /*\n                 <div className=\"col col-20\">\n                 <button className=\"button button-clear\"\n                 onClick={this.goToEdit.bind(this,1)}\n                 >Edit</button>\n                 </div>\n                 */\n                Dispatcher.dispatch({\n                    actionType: \"CRSelectClassPage_CLASS_EDIT\",\n                    currentStep: this.data.currentStep,\n                    eidtStep: num\n                });\n            },\n            goToWaitingList: function (e) {\n                e.preventDefault();\n\n                var href = \"/classRegister/AddWaitingList\" + \"?swimmerId=\" + this.data.currentSwimmer._id + \"&classLevel=\" + this.data.currentLevel;\n\n                var classesNoSeat = this.data.classesNoSeatByLevel.length;\n\n                if (classesNoSeat == 0) {\n\n                    alert('All classes are available, you can register now');\n                } else {\n                    FlowRouter.go(href);\n                }\n            },\n            componentWillMount: function () {\n\n                Dispatcher.dispatch({\n                    actionType: \"componentWillMount_CRSelectClassPage\"\n                });\n\n                //尝试清除不完整的购物项\n                Meteor.call('clear_uncompleted_item_in_cart');\n            },\n            onBeforeUnload: function (e) {\n                var message = \"You may lost data, are you sure leving?\";\n                e.returnValue = message;\n                return message;\n            },\n            render: function () {\n\n                var swimmers = this.data.swimmers.map(function (v, i) {\n                    return { text: v['name'], value: v._id };\n                });\n\n                var swimmer = this.data.selectedClasses.get('swimmer');\n                var class1 = this.data.selectedClasses.get('class1');\n                var class2 = this.data.selectedClasses.get('class2');\n                var class3 = this.data.selectedClasses.get('class3');\n\n                //let currentSwimmerValue = this.data.currentSwimmer\n                //    && {value:this.data.currentSwimmer._id,\n                //        text:this.data.currentSwimmer.name}\n\n                var currentSwimmerValue = this.data.currentSwimmer && this.data.currentSwimmer._id;\n\n                //\n\n                return React.createElement(\n                    \"div\",\n                    null,\n                    React.createElement(\n                        RC.Card,\n                        { key: Math.random(), className: \"padding\" },\n                        React.createElement(\n                            \"h4\",\n                            { className: \"brand\" },\n                            \"Register for spring 2015\"\n                        ),\n                        class1 ? React.createElement(\n                            \"div\",\n                            { className: \"row\" },\n                            React.createElement(\n                                \"div\",\n                                { className: \"col\" },\n                                \"Preference 1\"\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { className: \"col\" },\n                                class1.name\n                            )\n                        ) : '',\n                        class2 ? React.createElement(\n                            \"div\",\n                            { className: \"row\" },\n                            React.createElement(\n                                \"div\",\n                                { className: \"col\" },\n                                \"Preference 2\"\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { className: \"col\" },\n                                class2 && class2.name\n                            )\n                        ) : '',\n                        class3 ? React.createElement(\n                            \"div\",\n                            { className: \"row\" },\n                            React.createElement(\n                                \"div\",\n                                { className: \"col\" },\n                                \"Preference 3\"\n                            ),\n                            React.createElement(\n                                \"div\",\n                                { className: \"col \" },\n                                class3 && class3.name\n                            )\n                        ) : ''\n                    ),\n                    React.createElement(\n                        RC.Form,\n                        { ref: \"myForm\", key: Math.random(), onSubmit: this.formSubmit },\n                        React.createElement(\n                            RC.List,\n                            { theme: \"inset\" },\n                            this.data.currentStep == 1 ? React.createElement(RC.Select2, {\n                                ref: \"swimmer\",\n                                options: swimmers,\n                                value: currentSwimmerValue,\n                                name: \"swimmer\",\n                                changeHandler: this.swimmerChange,\n                                label: \"Swimmer\"\n                            }) : React.createElement(\n                                RC.Item,\n                                { uiColor: \"brand1\" },\n                                \"Swimmer: \",\n                                this.data.currentSwimmer && this.data.currentSwimmer.name\n                            ),\n                            React.createElement(\n                                RC.Item,\n                                { uiColor: \"brand1\" },\n                                \"Level: \",\n                                this.data.currentLevel\n                            ),\n                            React.createElement(RC.Select2, {\n                                ref: \"day\",\n                                options: this.data.avaiableDays,\n                                value: this.data.currentDay,\n                                name: \"day\",\n                                changeHandler: this.dayChange,\n                                label: \"Day\"\n                            }),\n                            React.createElement(RC.Select2, {\n                                ref: \"time\",\n                                options: this.data.avaiableTimes,\n                                value: this.data.currentTime,\n                                name: \"time\",\n                                changeHandler: this.timeChange,\n                                label: \"Time\"\n                            }),\n                            React.createElement(\n                                RC.Button,\n                                { name: \"button\", type: \"submit\",\n                                    onClick: this.formSubmit,\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                this.data.currentStep == 1 ? 'Book' : 'Select'\n                            ),\n                            this.data.currentStep == 1 ? React.createElement(\n                                RC.Button,\n                                { name: \"button\",\n                                    onClick: this.goToWaitingList,\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                \"Waiting List\"\n                            ) : ''\n                        )\n                    )\n                );\n            }\n\n        });\n    })();\n}\n/*swimmer && swimmer.name*/","ast":null,"map":{"version":3,"sources":["/client/app/class.register/SelectClassPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassPage.jsx.map","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n\n{\n    //let CRSelectClassPageStoreClass;\n    //Dependency.autorun(function () {\n    //    CRSelectClassPageStoreClass = Dependency.get('classRegister.SelectClassPage.storeClass');\n    //});\n\n    let CRSelectClassPageStore;\n    Dependency.autorun(function () {\n        CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    });\n\n\n    Cal.CRSelectClassPage = React.createClass({\n        mixins: [ReactMeteorData,Cal.Mixins.windowUnload],\n        getMeteorData() {\n\n            //todo\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            //Meteor.subscribe(\"appInfo\");\n            Meteor.subscribe(\"classes\");\n            Meteor.subscribe(\"activeShoppingCart\");\n\n            //仅在页面加载时才初始化\n            //var CRSelectClassPageStore = new CRSelectClassPageStoreClass;\n\n\n            var data = {\n                account: Meteor.users.find().fetch(),\n\n                swimmers: CRSelectClassPageStore.getSwimmers().fetch(),\n\n                currentLevel:CRSelectClassPageStore.currentLevel.get(), //next level\n\n\n                currentSwimmer: CRSelectClassPageStore.currentSwimmer.get(),\n                currentClass:CRSelectClassPageStore.currentClass.get(),\n\n                //should wait for currentSwimmer\n                avaiableDays: CRSelectClassPageStore.avaiableDays.get(),\n                avaiableTimes: CRSelectClassPageStore.avaiableTimes.get(),\n                currentDay: CRSelectClassPageStore.currentDay.get(),\n                currentTime: CRSelectClassPageStore.currentTime.get(),\n\n                currentStep: CRSelectClassPageStore.currentStep.get(),\n\n                classesNoSeatByLevel:CRSelectClassPageStore.classesNoSeatByLevel.get(),\n\n                //一次选课流程的所有信息\n                selectedClasses: CRSelectClassPageStore.selectedClasses.get()\n\n            }\n\n            //\n            return data;\n\n        },\n\n        /////////////////////////////////////////////////////////////////\n        ///////////actions///////////\n        swimmerChange(e){\n            var value = this.refs.swimmer.getValue()\n\n            var swimmer = _.find(this.data.swimmers, function (v, n) {\n                return v._id == value;\n            })\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_SWIMMER_CHANGE\",\n                swimmer: swimmer\n            });\n\n        },\n        dayChange(e){\n            var value = this.refs.day.getValue()\n            value = parseInt(value, 10)\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_DAY_CHANGE\",\n                day: value\n            });\n\n\n        },\n        timeChange(e){\n            var value = this.refs.time.getValue()\n            value = parseInt(value, 10)\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_TIME_CHANGE\",\n                time: value\n            });\n\n        },\n\n        formSubmit (e) {\n            e.preventDefault()\n\n            var formData = this.refs.myForm.getFormData()\n\n\n\n            //todo validation info in ui\n            if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n                alert('please select a class')\n                return;\n            }\n            //no class match\n            if(!this.data.currentClass){\n                alert('please select a class')\n                return\n            }\n\n            //check duplicate\n            var selectedClasses =this.data.selectedClasses\n            var currentClass =this.data.currentClass\n            if(App.currentClass_in_selectedClasses(currentClass,selectedClasses)){\n                alert('class duplicated')\n                return;\n            }\n\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_CLASS_SELECT\",\n                currentStep: this.data.currentStep,\n                selectedClass: formData\n            });\n\n        },\n\n        goToEdit(num){\n\n            /*\n             <div className=\"col col-20\">\n             <button className=\"button button-clear\"\n             onClick={this.goToEdit.bind(this,1)}\n             >Edit</button>\n             </div>\n\n            */\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_CLASS_EDIT\",\n                currentStep: this.data.currentStep,\n                eidtStep: num\n            });\n\n        },\n        goToWaitingList(e){\n            e.preventDefault()\n\n            var href=\"/classRegister/AddWaitingList\"\n                    +\"?swimmerId=\"+this.data.currentSwimmer._id\n                    +\"&classLevel=\"+ this.data.currentLevel\n\n            var classesNoSeat = this.data.classesNoSeatByLevel.length\n\n            if(classesNoSeat==0){\n\n                alert('All classes are available, you can register now')\n\n            }else{\n                FlowRouter.go(href);\n            }\n\n\n        },\n        componentWillMount(){\n\n            Dispatcher.dispatch({\n                actionType: \"componentWillMount_CRSelectClassPage\"\n            });\n\n            //尝试清除不完整的购物项\n            Meteor.call('clear_uncompleted_item_in_cart')\n\n        },\n        onBeforeUnload(e){\n            var message = \"You may lost data, are you sure leving?\";\n            e.returnValue = message;\n            return message;\n        },\n        render() {\n\n            let swimmers = this.data.swimmers.map(function (v, i) {\n                return {text: v['name'], value: v._id}\n            })\n\n            let swimmer = this.data.selectedClasses.get('swimmer')\n            let class1 = this.data.selectedClasses.get('class1')\n            let class2 = this.data.selectedClasses.get('class2')\n            let class3 = this.data.selectedClasses.get('class3')\n\n\n            //let currentSwimmerValue = this.data.currentSwimmer\n            //    && {value:this.data.currentSwimmer._id,\n            //        text:this.data.currentSwimmer.name}\n\n            let currentSwimmerValue = this.data.currentSwimmer\n                    && this.data.currentSwimmer._id\n\n            //\n\n            return <div>\n                <RC.Card key={Math.random()} className=\"padding\">\n                    <h4 className=\"brand\">Register for spring 2015</h4>\n\n                    {/*swimmer && swimmer.name*/}\n\n                    {\n                        class1?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 1\n                            </div>\n                            <div className=\"col\">\n                                {class1.name}\n                            </div>\n\n                        </div>:''\n\n                    }\n\n                    {\n                        class2?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 2\n                            </div>\n                            <div className=\"col\">\n                                {class2 && class2.name}\n                            </div>\n\n                        </div>:''\n                    }\n                    {\n                        class3?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 3\n                            </div>\n                            <div className=\"col \">\n                                {class3 && class3.name}\n                            </div>\n\n                        </div>:''\n                    }\n\n                </RC.Card>\n\n                <RC.Form ref=\"myForm\" key={Math.random()} onSubmit={this.formSubmit}>\n                    <RC.List theme=\"inset\">\n\n                        {\n                            this.data.currentStep == 1 ?\n                                <RC.Select2\n                                    ref=\"swimmer\"\n                                    options={swimmers}\n                                    value= {currentSwimmerValue}\n                                    name=\"swimmer\"\n                                    changeHandler={this.swimmerChange}\n                                    label=\"Swimmer\"\n                                    />\n\n                                : <RC.Item uiColor=\"brand1\">\n                                    Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n                                </RC.Item>\n                        }\n\n\n                        <RC.Item uiColor=\"brand1\">\n                            Level: {this.data.currentLevel}\n                        </RC.Item>\n\n                        <RC.Select2\n                            ref=\"day\"\n                            options={this.data.avaiableDays}\n                            value={this.data.currentDay}\n                            name=\"day\"\n                            changeHandler={this.dayChange}\n                            label=\"Day\"\n                            />\n\n                        <RC.Select2\n                            ref=\"time\"\n                            options={this.data.avaiableTimes}\n                            value={this.data.currentTime}\n                            name=\"time\"\n                            changeHandler={this.timeChange}\n                            label=\"Time\"\n                            />\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   onClick={this.formSubmit}\n                                   theme=\"full\" buttonColor=\"brand\">\n                            {this.data.currentStep == 1 ? 'Book':'Select'}\n                        </RC.Button>\n\n\n                        {\n                            this.data.currentStep == 1 ?\n                                    <RC.Button name=\"button\"\n                                               onClick={this.goToWaitingList}\n                                               theme=\"full\" buttonColor=\"brand\">\n                                        Waiting List\n                                    </RC.Button>\n                                : ''\n                        }\n\n\n                    </RC.List>\n                </RC.Form>\n            </div>\n        }\n\n    })\n\n}"]},"hash":"08a4e452012279c9bbdd4ee4cd3102010b473ba8"}
