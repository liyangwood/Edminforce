{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["extends"]},"ignored":false,"code":"\n// @@@@@\n// Timeline Canvas\n// @@@@@\n\nvar timelineThemes = [];\nRC.Timeline = React.createClass({\n  displayName: \"Timeline\",\n\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"timeline\",\n  themes: timelineThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    lineColor: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n    list: React.PropTypes.array,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string\n  },\n\n  render: function () {\n\n    var defaultFormat = this.props.dateFormat || \"MMM Do, YYYY\";\n    var count = 0;\n\n    if (!this.props.list) return React.createElement(\n      \"ul\",\n      babelHelpers._extends({}, this.props, { className: this.getTheme() + (h.checkColorClass(this.props.lineColor) ? \" timeline-\" + this.props.lineColor : \"\") }),\n      this.props.children\n    );\n\n    return React.createElement(\n      \"ul\",\n      { className: \"timeline \" + this.getTheme(this.props.theme), id: this.props.id },\n      this.props.list.map(function (item, n) {\n\n        var odd_or_even = \"\"; // This is used for className, don't set it to null\n        var itemLabel = null;\n        var itemRender = null;\n\n        var brand = [\"bg-brand\", \"bg-brand2\", \"bg-brand3\"];\n        var brandClass = _.isNumber(item.brand) && brand[item.brand] ? brand[item.brand] : \"\";\n        var uiIcon = React.createElement(\n          \"figure\",\n          { className: \"round \" + brandClass },\n          item.type == \"title\" ? React.createElement(RC.uiIcon, { uiClass: item.uiClass, uiSize: item.uiSize || 0, theme: \"tiny\" }) : null\n        );\n\n        switch (item.type) {\n          case \"title\":\n            itemRender = React.createElement(\n              \"h4\",\n              { className: \"title sub\" },\n              fw.getDateFromProps(item.label, item.dateFormat, defaultFormat)\n            );\n            break;\n          case \"list-item\":\n          default:\n            odd_or_even = count++ % 2 ? \" even\" : \" odd\";\n            itemLabel = React.createElement(\n              \"strong\",\n              { className: \"block label\" },\n              _.isDate(item.title) ? fw.getDateFromProps(item.title, item.dateFormat, defaultFormat) : item.title\n            );\n            item.type = \"listItem\";\n            itemRender = item.href ? React.createElement(\n              \"a\",\n              { className: \"block\", href: item.href },\n              item.text\n            ) : item.text;\n        }\n\n        return React.createElement(\n          \"li\",\n          { className: \"type-\" + item.type + odd_or_even, key: n },\n          React.createElement(\n            \"div\",\n            { className: \"inner\" },\n            uiIcon,\n            itemLabel,\n            itemRender\n          )\n        );\n      })\n    );\n  }\n});\n\n// @@@@@\n// Journal Item\n// @@@@@\n\nvar journalThemes = [\"title\"];\nRC.Journal = React.createClass({\n  displayName: \"Journal\",\n\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"journal\",\n  themes: journalThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string\n  },\n\n  render: function () {\n\n    // Format Setups\n    var dateFormat = this.props.dateFormat || \"MMM Do, YYYY\";\n    var brand = this.props.uiBrand || \"brand\";\n    var classes = this.getTheme() + \" journal-\" + brand;\n\n    // Declarations\n    var title = _.isDate(this.props.title) ? fw.getDateFromProps(this.props.title, dateFormat) : this.props.title;\n    var content = null;\n    var ui = null;\n\n    switch (this.props.theme) {\n      case \"title\":\n        // @@@@\n        // Title\n        // @@@@\n        if (this.props.uiClass) {\n          var uiObject = _.pick(this.props, fw.uiKeysCircle);\n          ui = React.createElement(RC.uiIcon, _.defaults(uiObject, { uiBrand: brand }));\n        }\n        content = React.createElement(\n          \"strong\",\n          null,\n          title\n        );\n        break;\n      default:\n        // @@@@\n        // Default\n        // @@@@\n        content = React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            \"strong\",\n            { className: \"block \" + brand },\n            title\n          ),\n          this.props.children\n        );\n    }\n\n    return React.createElement(\n      \"li\",\n      babelHelpers._extends({}, _.omit(this.props, [\"children\", \"dateFormat\", \"className\"]), { className: classes }),\n      ui,\n      content\n    );\n  }\n});\n\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") {\n  RC.Timeline.Help = {\n    Type: \"canvas\",\n    Themes: timelineThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      lineColor: \"String, Hex, CSS\",\n      list: \"Array (Optional)\"\n    },\n    \"PropTypes for List\": {\n      brand: \"Integer (0 to 2, chooses from one of the 3 theme colours) or Brand CSS\",\n      type: 'Array, [\"title\", \"list-item\"] Defaults to list-item',\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      title: \"String\",\n      href: \"String\"\n    },\n    Description: \"Created for documenting series of events. Especially useful for documenting times.\"\n  };\n  RC.Journal.Help = {\n    Type: \"Item\",\n    Themes: journalThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      uiBrand: \"Flexible\",\n      title: \"String\"\n    },\n    Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n  };\n}","ast":null,"map":{"version":3,"sources":["/RC/timeline/timeline.jsx"],"names":[],"mappings":"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","file":"/RC/timeline/timeline.jsx.map","sourcesContent":["\n// @@@@@\n// Timeline Canvas\n// @@@@@\n\nlet timelineThemes = []\nRC.Timeline = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"timeline\",\n  themes: timelineThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    lineColor: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n    list: React.PropTypes.array,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n  },\n\n  render() {\n\n    let defaultFormat = this.props.dateFormat || \"MMM Do, YYYY\"\n    let count = 0\n\n    if (!this.props.list)\n      return <ul {... this.props} className={this.getTheme()+(h.checkColorClass(this.props.lineColor) ? \" timeline-\"+this.props.lineColor : \"\")}>\n        {this.props.children}\n      </ul>\n\n    return <ul className={\"timeline \"+this.getTheme(this.props.theme)} id={this.props.id}>\n      {\n      this.props.list.map(function(item,n){\n\n        var odd_or_even = \"\" // This is used for className, don't set it to null\n        var itemLabel = null\n        var itemRender = null\n\n        let brand = [\"bg-brand\",\"bg-brand2\",\"bg-brand3\"]\n        let brandClass = _.isNumber(item.brand) && brand[item.brand] ? brand[item.brand] : \"\"\n        let uiIcon = <figure className={\"round \"+brandClass}>\n          {\n          item.type==\"title\"\n            ? <RC.uiIcon uiClass={item.uiClass} uiSize={item.uiSize || 0} theme=\"tiny\"/>\n            : null\n          }\n        </figure>\n\n        switch(item.type){\n          case \"title\":\n            itemRender = <h4 className=\"title sub\">\n              {fw.getDateFromProps(item.label, item.dateFormat, defaultFormat)}\n            </h4>\n          break\n          case \"list-item\":\n          default:\n            odd_or_even = count++%2 ? \" even\" : \" odd\"\n            itemLabel = <strong className=\"block label\">\n              {_.isDate(item.title) ? fw.getDateFromProps(item.title, item.dateFormat, defaultFormat) : item.title}\n            </strong>\n            item.type = \"listItem\"\n            itemRender = item.href ? <a className=\"block\" href={item.href}>{item.text}</a> : item.text\n        }\n\n        return <li className={\"type-\"+item.type+odd_or_even} key={n}>\n          <div className=\"inner\">\n            {uiIcon}\n            {itemLabel}\n            {itemRender}\n          </div>\n        </li>\n      })\n      }\n    </ul>\n  },\n})\n\n// @@@@@\n// Journal Item\n// @@@@@\n\nlet journalThemes = [\"title\"]\nRC.Journal = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"journal\",\n  themes: journalThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n  },\n\n  render() {\n\n    // Format Setups\n    let dateFormat = this.props.dateFormat || \"MMM Do, YYYY\"\n    let brand = this.props.uiBrand || \"brand\"\n    let classes = this.getTheme()+\" journal-\"+brand\n\n    // Declarations\n    var title = _.isDate(this.props.title) ? fw.getDateFromProps(this.props.title, dateFormat) : this.props.title\n    var content = null\n    var ui = null\n\n    switch(this.props.theme){\n      case \"title\":\n        // @@@@\n        // Title\n        // @@@@\n        if (this.props.uiClass) {\n          var uiObject = _.pick(this.props, fw.uiKeysCircle)\n          ui = <RC.uiIcon {... _.defaults(uiObject,{ uiBrand: brand })} />\n        }\n        content = <strong>{title}</strong>\n      break\n      default:\n        // @@@@\n        // Default\n        // @@@@\n        content = <div>\n          <strong className={\"block \"+brand}>{title}</strong>\n          {this.props.children}\n        </div>\n    }\n\n    return <li {... _.omit(this.props, [\"children\",\"dateFormat\",\"className\"])} className={classes}>\n      {ui}\n      {content}\n    </li>\n  },\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\") {\n  RC.Timeline.Help = {\n    Type: \"canvas\",\n    Themes: timelineThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      lineColor: \"String, Hex, CSS\",\n      list: \"Array (Optional)\",\n    },\n    \"PropTypes for List\": {\n      brand: \"Integer (0 to 2, chooses from one of the 3 theme colours) or Brand CSS\",\n      type: 'Array, [\"title\", \"list-item\"] Defaults to list-item',\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      title: \"String\",\n      href: \"String\"\n    },\n    Description: \"Created for documenting series of events. Especially useful for documenting times.\"\n  }\n  RC.Journal.Help = {\n    Type: \"Item\",\n    Themes: journalThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      uiBrand: \"Flexible\",\n      title: \"String\"\n    },\n    Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n  }\n}\n"]},"hash":"c381a6c5deb16b6f7359b25476e8b8171f0b484d"}
