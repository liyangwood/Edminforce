{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 9/26/15.\n */\n\nDependency.add('Account.AddSwimmer.store', new function () {\n\n    var self = this;\n    //swimmer eval level\n    self.evalLevel = new ReactiveVar();\n\n    self.addSwimmerFormData = new ReactiveVar({\n        name: '',\n        dob: '',\n        gender: 'male',\n        location: ''\n    });\n\n    self.locationOptions = new ReactiveVar(['Fremont', 'Dublin']);\n\n    self.tokenId = Dispatcher.register(function (payload) {\n        switch (payload.actionType) {\n            case \"ACCOUNT_EVAL_LEVEL_SUBMIT\":\n                {\n                    self.evalLevel.set(payload.level);\n                    FlowRouter.go('/account/AddSwimmer');\n                    break;\n                }\n            case \"ACCOUNT_ADD_SWIMMER_SUBMIT\":\n                {\n                    DB.Swimmers.insert(payload.fromData, function (err, result) {\n                        if (err) {\n                            console.error(err);\n                            return;\n                        }\n                        FlowRouter.go('/account');\n                    });\n                    break;\n                }\n\n            case \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\":\n                {\n\n                    self.addSwimmerFormData.set(payload.fromData);\n\n                    break;\n                }\n\n            case \"PASSWORD_CHANGE_SUCCESS\":\n                {\n                    FlowRouter.go('/account');\n                    break;\n                }\n            case \"USERNAME_CHANGE_SUCCESS\":\n                {\n                    FlowRouter.go('/account');\n                    break;\n                }\n            case \"EMERGENCY_CONTACT_CHANGE_SUCCESS\":\n                {\n                    FlowRouter.go('/account');\n                    break;\n                }\n            case \"ALTERNATE_CONTACT_CHANGE_SUCCESS\":\n                {\n                    FlowRouter.go('/account');\n                    break;\n                }\n            case \"GO_BACK\":\n                {\n                    FlowRouter.go('/account');\n                    break;\n                }\n        }\n    });\n}());","ast":null,"map":{"version":3,"sources":["/client/app/account/Account.store.jsx"],"names":[],"mappings":";;;;AAIA,UAAU,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,YAAY;;AAEvD,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,QAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAA;;AAElC,QAAI,CAAC,kBAAkB,GAAG,IAAI,WAAW,CAAC;AACtC,YAAI,EAAC,EAAE;AACP,WAAG,EAAC,EAAE;AACN,cAAM,EAAC,MAAM;AACb,gBAAQ,EAAC,EAAE;KACd,CAAC,CAAA;;AAEF,QAAI,CAAC,eAAe,GAAE,IAAI,WAAW,CAAC,CAAC,SAAS,EAAC,QAAQ,CAAC,CAAC,CAAA;;AAE3D,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,OAAO,EAAE;AAClD,gBAAQ,OAAO,CAAC,UAAU;AACtB,iBAAK,2BAA2B;AAAC;AAC7B,wBAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;AACjC,8BAAU,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACrC,0BAAM;iBACT;AAAA,AACD,iBAAK,4BAA4B;AAAC;AAC9B,sBAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAC,UAAS,GAAG,EAAC,MAAM,EAAC;AACpD,4BAAG,GAAG,EAAE;AACJ,mCAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AAClB,mCAAO;yBACV;AACD,kCAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;qBAC7B,CAAC,CAAA;AACF,0BAAM;iBACT;;AAAA,AAED,iBAAK,gCAAgC;AAAC;;AAElC,wBAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;;AAE7C,0BAAK;iBACR;;AAAA,AAED,iBAAK,yBAAyB;AAAC;AAC3B,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;AACzB,0BAAM;iBACT;AAAA,AACD,iBAAK,yBAAyB;AAAC;AAC3B,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;AACzB,0BAAM;iBACT;AAAA,AACD,iBAAK,kCAAkC;AAAC;AACpC,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;AACzB,0BAAM;iBACT;AAAA,AACD,iBAAK,kCAAkC;AAAC;AACpC,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;AACzB,0BAAM;iBACT;AAAA,AACD,iBAAK,SAAS;AAAC;AACX,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAA;AACzB,0BAAM;iBACT;AAAA,SACJ;KACJ,CAAC,CAAA;CACL,EAAA,CAAC,CAAA","file":"/client/app/account/Account.store.jsx.map","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\nDependency.add('Account.AddSwimmer.store', new function () {\n\n    var self = this;\n    //swimmer eval level\n    self.evalLevel = new ReactiveVar()\n\n    self.addSwimmerFormData = new ReactiveVar({\n        name:'',\n        dob:'',\n        gender:'male',\n        location:''\n    })\n\n    self.locationOptions= new ReactiveVar(['Fremont','Dublin'])\n\n    self.tokenId = Dispatcher.register(function (payload) {\n        switch (payload.actionType) {\n            case \"ACCOUNT_EVAL_LEVEL_SUBMIT\":{\n                self.evalLevel.set(payload.level)\n                FlowRouter.go('/account/AddSwimmer');\n                break;\n            }\n            case \"ACCOUNT_ADD_SWIMMER_SUBMIT\":{\n                DB.Swimmers.insert(payload.fromData,function(err,result){\n                    if(err) {\n                        console.error(err)\n                        return;\n                    }\n                    FlowRouter.go('/account');\n                })\n                break;\n            }\n\n            case \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\":{\n\n                self.addSwimmerFormData.set(payload.fromData)\n\n                break\n            }\n\n            case \"PASSWORD_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"USERNAME_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"EMERGENCY_CONTACT_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"ALTERNATE_CONTACT_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"GO_BACK\":{\n                FlowRouter.go('/account')\n                break;\n            }\n        }\n    })\n})"]},"hash":"2c97033eba84413a6e2697754d002ccf8bb4bfc4"}
