{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\nRC.LeftNav2 = React.createClass({\n    displayName: 'LeftNav2',\n\n    getInitialState: function () {\n        return {\n            closing: false,\n            isOpen: this.props.openOnInit\n        };\n    },\n    open: function () {\n        if (!this.state.closing) this.setState({ isOpen: true });\n    },\n    close: function () {\n        var self = this;\n        this.setState({ closing: true });\n        Meteor.setTimeout(function () {\n            self.setState({ isOpen: false, closing: false });\n        }, 400);\n    },\n    //linkClickHandler(e) {\n    //    if (e.target.href)\n    //        this.close()\n    //},\n\n    ///////////////actions//////\n    /*\n    *!!! Should not change private state directly\n    *!!! must according to store.\n    * */\n    action_close: function () {\n        Dispatcher.dispatch({ actionType: 'LEFT_NAV_CLOSE' });\n    },\n    action_linkClickHandler: function (e) {\n        if (e.target.href) {\n            Dispatcher.dispatch({ actionType: 'LEFT_NAV_CLOSE' });\n        }\n    },\n\n    ////////////////////////////////////////\n    //@@@ Sync parent props and private state\n    // property is the only entry to update the private status\n    componentWillReceiveProps: function (nextProps) {\n\n        if (nextProps.openOnInit == false) {\n            this.close();\n        } else if (nextProps.openOnInit == true) {\n            this.open();\n        }\n    },\n\n    render: function () {\n        if (!this.state.isOpen) return null;\n\n        return React.createElement(\n            'nav',\n            { className: \"transition left-nav fixed-full \" + (this.state.closing ? \"out\" : \"in\") },\n            React.createElement('div', { className: 'back abs-full', onClick: this.action_close }),\n            React.createElement(\n                'div',\n                { className: 'inner bg-white scroll', onClick: this.action_linkClickHandler },\n                React.createElement('div', { onClick: this.props.toggleNavFunc }),\n                React.createElement(RC.NavList, { list: this.props.navList, showCurrent: false })\n            )\n        );\n    }\n});","ast":null,"map":{"version":3,"sources":["/RC/leftNav/leftNav2.jsx"],"names":[],"mappings":";AACA,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC5B,mBAAe,EAAA,YAAG;AACd,eAAO;AACH,mBAAO,EAAE,KAAK;AACd,kBAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAChC,CAAA;KACJ;AACD,QAAI,EAAA,YAAG;AACH,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EACnB,IAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAA;KACpC;AACD,SAAK,EAAA,YAAG;AACJ,YAAI,IAAI,GAAG,IAAI,CAAA;AACf,YAAI,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAA;AAC9B,cAAM,CAAC,UAAU,CAAC,YAAU;AACxB,gBAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAA;SACjD,EAAE,GAAG,CAAC,CAAA;KACV;;;;;;;;;;;AAWD,gBAAY,EAAA,YAAE;AACV,kBAAU,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAC,gBAAgB,EAAC,CAAC,CAAA;KACrD;AACD,2BAAuB,EAAA,UAAC,CAAC,EAAE;AACvB,YAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAC;AACd,sBAAU,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAC,gBAAgB,EAAC,CAAC,CAAA;SACrD;KACJ;;;;;AAKD,6BAAyB,EAAA,UAAC,SAAS,EAAC;;AAEhC,YAAG,SAAS,CAAC,UAAU,IAAE,KAAK,EAAC;AAC3B,gBAAI,CAAC,KAAK,EAAE,CAAA;SACf,MAAK,IAAG,SAAS,CAAC,UAAU,IAAE,IAAI,EAAC;AAChC,gBAAI,CAAC,IAAI,EAAE,CAAA;SACd;KACJ;;AAED,UAAM,EAAA,YAAG;AACL,YAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,IAAI,CAAA;;AAEnC,eAAO;;cAAK,SAAS,EAAE,iCAAiC,IAAE,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,GAAG,IAAI,CAAA,AAAC,AAAC;YACzF,6BAAK,SAAS,EAAC,eAAe,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,AAAC,GAAE;YAE5D;;kBAAK,SAAS,EAAC,uBAAuB,EAAC,OAAO,EAAE,IAAI,CAAC,uBAAuB,AAAC;gBACzE,6BAAK,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,AAAC,GAAE;gBACzC,oBAAC,EAAE,CAAC,OAAO,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,AAAC,EAAC,WAAW,EAAE,KAAK,AAAC,GAAG;aAC1D;SAEJ,CAAA;KACT;CACJ,CAAC,CAAA","file":"/RC/leftNav/leftNav2.jsx.map","sourcesContent":["\nRC.LeftNav2 = React.createClass({\n    getInitialState() {\n        return {\n            closing: false,\n            isOpen: this.props.openOnInit\n        }\n    },\n    open() {\n        if (!this.state.closing)\n            this.setState({isOpen: true})\n    },\n    close() {\n        let self = this\n        this.setState({closing: true})\n        Meteor.setTimeout(function(){\n            self.setState({isOpen: false, closing: false})\n        }, 400)\n    },\n    //linkClickHandler(e) {\n    //    if (e.target.href)\n    //        this.close()\n    //},\n\n    ///////////////actions//////\n    /*\n    *!!! Should not change private state directly\n    *!!! must according to store.\n    * */\n    action_close(){\n        Dispatcher.dispatch({actionType:'LEFT_NAV_CLOSE'})\n    },\n    action_linkClickHandler(e) {\n        if (e.target.href){\n            Dispatcher.dispatch({actionType:'LEFT_NAV_CLOSE'})\n        }\n    },\n\n    ////////////////////////////////////////\n    //@@@ Sync parent props and private state\n    // property is the only entry to update the private status\n    componentWillReceiveProps(nextProps){\n\n        if(nextProps.openOnInit==false){\n            this.close()\n        }else if(nextProps.openOnInit==true){\n            this.open()\n        }\n    },\n\n    render() {\n        if (!this.state.isOpen) return null\n\n        return <nav className={\"transition left-nav fixed-full \"+(this.state.closing ? \"out\" : \"in\")}>\n            <div className=\"back abs-full\" onClick={this.action_close}/>\n\n            <div className=\"inner bg-white scroll\" onClick={this.action_linkClickHandler}>\n                <div onClick={this.props.toggleNavFunc}/>\n                <RC.NavList list={this.props.navList} showCurrent={false} />\n            </div>\n\n        </nav>\n    }\n})\n"]},"hash":"a39ed0cbc48a666038ceddaad4123a87923bdad9"}
