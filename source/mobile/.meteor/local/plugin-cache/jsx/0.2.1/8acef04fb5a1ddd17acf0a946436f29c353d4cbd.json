{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 9/26/15.\n */\n\n{\n    (function () {\n\n        var accountStore = undefined;\n        Dependency.autorun(function () {\n            accountStore = Dependency.get('Account.AddSwimmer.store');\n        });\n\n        Cal.AccountAddSwimmer = React.createClass({\n            displayName: 'AccountAddSwimmer',\n\n            mixins: [ReactMeteorData],\n\n            getMeteorData: function () {\n                return {\n                    formData: accountStore.addSwimmerFormData.get(),\n                    evalLevel: accountStore.evalLevel.get(), //单独页面设置\n                    locationOptions: accountStore.locationOptions.get()\n                };\n            },\n\n            ////actions\n            formSubmit: function (e) {\n                e.preventDefault();\n\n                var fromData = this.refs.AddSwimmerForm.getFormData();\n\n                fromData.level = accountStore.evalLevel.get();\n\n                if (!fromData.name || !fromData.level || !fromData.location) {\n                    alert('please complete the form ');\n                    return;\n                }\n\n                fromData.accountId = Meteor.userId();\n\n                Dispatcher.dispatch({\n                    actionType: \"ACCOUNT_ADD_SWIMMER_SUBMIT\",\n                    fromData: fromData\n                });\n            },\n            goToEvaluation: function () {\n\n                var fromData = this.refs.AddSwimmerForm.getFormData();\n\n                //保存当前页面表单数据\n                Dispatcher.dispatch({\n                    actionType: \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\",\n                    fromData: fromData\n                });\n\n                var href = \"/account/EvalLevel\";\n                FlowRouter.go(href);\n            },\n            render: function () {\n                return React.createElement(\n                    'div',\n                    null,\n                    React.createElement(\n                        RC.Form,\n                        { ref: 'AddSwimmerForm', onSubmit: this.formSubmit },\n                        React.createElement(RC.Input, { name: 'name', label: 'Name',\n                            ref: 'name',\n                            value: this.data.formData && this.data.formData.name }),\n                        React.createElement(RC.Select, {\n                            options: [{ text: \"Male\", value: 'male' }, { text: 'Female', value: 'female' }],\n                            name: 'gender',\n                            label: 'Gender',\n                            value: '{this.data.formData && this.data.formData.gender}'\n                        }),\n                        React.createElement(RC.Input, { name: 'dob', label: 'Birthday',\n                            placeholder: '2005/01/01',\n                            value: this.data.formData && this.data.formData.dob }),\n                        React.createElement(RC.Select, {\n                            options: this.data.locationOptions,\n                            name: 'location',\n                            label: 'Location',\n                            value: this.data.formData && this.data.formData.location\n\n                        }),\n                        React.createElement(\n                            RC.Item,\n                            null,\n                            React.createElement(\n                                'span',\n                                null,\n                                'Level'\n                            ),\n                            React.createElement(\n                                'b',\n                                { style: { 'marginLeft': '5px', color: 'blue' } },\n                                this.data.evalLevel\n                            ),\n                            React.createElement(\n                                'a',\n                                { className: 'button-clear',\n                                    onClick: this.goToEvaluation,\n                                    style: { float: 'right' } },\n                                ' Evaluation Level'\n                            )\n                        ),\n                        React.createElement(\n                            RC.Button,\n                            { name: 'level', theme: 'full',\n                                onClick: this.formSubmit,\n                                buttonColor: 'brand' },\n                            'Add'\n                        )\n                    )\n                );\n            }\n        });\n    })();\n}","ast":null,"map":{"version":3,"sources":["/client/app/account/AccountAddSwimmer.jsx"],"names":[],"mappings":";;;;AAIA;;;AAEI,YAAI,YAAY,YAAA,CAAC;AACjB,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,wBAAY,GAAG,UAAU,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;SAC7D,CAAC,CAAC;;AAEH,WAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEtC,kBAAM,EAAE,CAAC,eAAe,CAAC;;AAEzB,yBAAa,EAAA,YAAG;AACZ,uBAAO;AACH,4BAAQ,EAAC,YAAY,CAAC,kBAAkB,CAAC,GAAG,EAAE;AAC9C,6BAAS,EAAC,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE;AACtC,mCAAe,EAAC,YAAY,CAAC,eAAe,CAAC,GAAG,EAAE;iBACrD,CAAA;aACJ;;;AAGD,sBAAU,EAAA,UAAC,CAAC,EAAC;AACT,iBAAC,CAAC,cAAc,EAAE,CAAA;;AAElB,oBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAA;;AAErD,wBAAQ,CAAC,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,CAAA;;AAE7C,oBAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAG,CAAC,QAAQ,CAAC,QAAQ,EAAC;AACtD,yBAAK,CAAC,2BAA2B,CAAC,CAAA;AAClC,2BAAO;iBACV;;AAED,wBAAQ,CAAC,SAAS,GAAE,MAAM,CAAC,MAAM,EAAE,CAAA;;AAGnC,0BAAU,CAAC,QAAQ,CAAC;AAChB,8BAAU,EAAE,4BAA4B;AACxC,4BAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;aAEN;AACD,0BAAc,EAAA,YAAE;;AAEZ,oBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAA;;;AAGrD,0BAAU,CAAC,QAAQ,CAAC;AAChB,8BAAU,EAAE,gCAAgC;AAC5C,4BAAQ,EAAE,QAAQ;iBACrB,CAAC,CAAC;;AAEH,oBAAI,IAAI,GAAC,oBAAoB,CAAA;AAC7B,0BAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;aAGtB;AACD,kBAAM,EAAA,YAAG;AACL,uBAAO;;;oBACH;AAAC,0BAAE,CAAC,IAAI;0BAAC,GAAG,EAAC,gBAAgB,EAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,AAAC;wBAEpD,oBAAC,EAAE,CAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM;AACxB,+BAAG,EAAC,MAAM;AACV,iCAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,AAAC,GAAE;wBAEjE,oBAAC,EAAE,CAAC,MAAM;AACN,mCAAO,EAAE,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,EAAC,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,QAAQ,EAAC,CAAC,AAAC;AACrE,gCAAI,EAAC,QAAQ;AACb,iCAAK,EAAC,QAAQ;AACd,iCAAK,EAAC,mDAAmD;0BACvD;wBAEN,oBAAC,EAAE,CAAC,KAAK,IAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,UAAU;AAC3B,uCAAW,EAAC,YAAY;AACxB,iCAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,AAAC,GAAE;wBAGhE,oBAAC,EAAE,CAAC,MAAM;AACN,mCAAO,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,AAAC;AACnC,gCAAI,EAAC,UAAU;AACf,iCAAK,EAAC,UAAU;AAChB,iCAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,AAAC;;0BAEvD;wBAEN;AAAC,8BAAE,CAAC,IAAI;;4BACJ;;;;6BAAoB;4BAEpB;;kCAAG,KAAK,EAAE,EAAC,YAAY,EAAC,KAAK,EAAC,KAAK,EAAC,MAAM,EAAC,AAAC;gCACvC,IAAI,CAAC,IAAI,CAAC,SAAS;6BACpB;4BAGH;;kCAAG,SAAS,EAAC,cAAc;AACxB,2CAAO,EAAE,IAAI,CAAC,cAAc,AAAC;AAC7B,yCAAK,EAAE,EAAC,KAAK,EAAC,OAAO,EAAC,AAAC;;6BAAsB;yBAG3C;wBAGV;AAAC,8BAAE,CAAC,MAAM;8BAAC,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM;AACzB,uCAAO,EAAE,IAAI,CAAC,UAAU,AAAC;AACzB,2CAAW,EAAC,OAAO;;yBAElB;qBAGN;iBAER,CAAA;aACT;SACJ,CAAC,CAAA;;CAEL","file":"/client/app/account/AccountAddSwimmer.jsx.map","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\n{\n\n    let accountStore;\n    Dependency.autorun(function () {\n        accountStore = Dependency.get('Account.AddSwimmer.store');\n    });\n\n    Cal.AccountAddSwimmer = React.createClass({\n\n        mixins: [ReactMeteorData],\n\n        getMeteorData() {\n            return {\n                formData:accountStore.addSwimmerFormData.get(),\n                evalLevel:accountStore.evalLevel.get(),  //单独页面设置\n                locationOptions:accountStore.locationOptions.get()\n            }\n        },\n\n        ////actions\n        formSubmit(e){\n            e.preventDefault()\n\n            var fromData = this.refs.AddSwimmerForm.getFormData()\n\n            fromData.level = accountStore.evalLevel.get()\n\n            if(!fromData.name || !fromData.level|| !fromData.location){\n                alert('please complete the form ')\n                return;\n            }\n\n            fromData.accountId= Meteor.userId()\n\n\n            Dispatcher.dispatch({\n                actionType: \"ACCOUNT_ADD_SWIMMER_SUBMIT\",\n                fromData: fromData\n            });\n\n        },\n        goToEvaluation(){\n\n            var fromData = this.refs.AddSwimmerForm.getFormData()\n\n            //保存当前页面表单数据\n            Dispatcher.dispatch({\n                actionType: \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\",\n                fromData: fromData\n            });\n\n            var href=\"/account/EvalLevel\"\n            FlowRouter.go(href)\n\n\n        },\n        render() {\n            return <div>\n                <RC.Form ref=\"AddSwimmerForm\" onSubmit={this.formSubmit}>\n\n                    <RC.Input name=\"name\" label=\"Name\"\n                              ref=\"name\"\n                              value={this.data.formData && this.data.formData.name}/>\n\n                    <RC.Select\n                        options={[{text:\"Male\",value:'male'},{text:'Female',value:'female'}]}\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value=\"{this.data.formData && this.data.formData.gender}\"\n                        />\n\n                    <RC.Input name=\"dob\" label=\"Birthday\"\n                              placeholder=\"2005/01/01\"\n                              value={this.data.formData && this.data.formData.dob}/>\n\n\n                    <RC.Select\n                        options={this.data.locationOptions}\n                        name=\"location\"\n                        label=\"Location\"\n                        value={this.data.formData && this.data.formData.location}\n\n                        />\n\n                    <RC.Item>\n                        <span  >Level</span>\n\n                        <b style={{'marginLeft':'5px',color:'blue'}}>\n                            {this.data.evalLevel}\n                        </b>\n\n\n                         <a className=\"button-clear\"\n                            onClick={this.goToEvaluation}\n                            style={{float:'right'}}> Evaluation Level</a>\n\n\n                    </RC.Item>\n\n\n                    <RC.Button name=\"level\" theme=\"full\"\n                               onClick={this.formSubmit}\n                               buttonColor=\"brand\">\n                        Add\n                    </RC.Button>\n\n\n                </RC.Form>\n\n            </div>\n        }\n    })\n\n}\n"]},"hash":"8acef04fb5a1ddd17acf0a946436f29c353d4cbd"}
