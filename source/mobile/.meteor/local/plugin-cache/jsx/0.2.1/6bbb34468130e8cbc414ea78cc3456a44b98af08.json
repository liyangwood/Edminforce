{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 9/16/15.\n */\n\n{\n    //let CRSelectClassPageStore;\n    //Dependency.autorun(function () {\n    //    CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    //});\n\n    Cal.CRSelectClassReadyPage = React.createClass({\n        displayName: 'CRSelectClassReadyPage',\n\n        propTypes: {\n            cartId: React.PropTypes.string,\n            swimmerId: React.PropTypes.string,\n            classId: React.PropTypes.string\n\n        },\n\n        mixins: [ReactMeteorData],\n        getMeteorData: function () {\n\n            Meteor.subscribe(\"activeShoppingCart\");\n\n            var shoppingCart = DB.ShoppingCart.findOne({\n                _id: this.props.cartId,\n                type: 'register',\n                status: 'active'\n            });\n\n            console.log(shoppingCart);\n\n            debugger;\n\n            var cartItem = {};\n            if (shoppingCart && shoppingCart.items) {\n\n                cartItem = _.findWhere(shoppingCart.items, {\n                    swimmerId: this.props.swimmerId,\n                    classId: this.props.classId\n                });\n            }\n\n            return {\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n\n                cartItem: cartItem\n            };\n        },\n\n        goToEdit: function (swimmerId, classId, preferenceNum) {\n\n            var url = '/classRegister/SelectClassEdit' + '?swimmerId=' + swimmerId + '&classId=' + classId + '&preferenceNum=' + preferenceNum + '&cartId=' + this.props.cartId;\n\n            FlowRouter.go(url);\n        },\n\n        render: function () {\n            var self = this;\n\n            console.log('CRSelectClassReadyPage cart', this.data.cartItem);\n\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //\n            //let class1 = this.data.selectedClassesMap.get('class1')\n            //let class2 = this.data.selectedClassesMap.get('class2')\n            //let class3 = this.data.selectedClassesMap.get('class3')\n\n            if (this.data.cartItem) {\n                var swimmer = this.data.cartItem['swimmer'];\n\n                var class1 = this.data.cartItem['class1'];\n                var class2 = this.data.cartItem['class2'];\n                var class3 = this.data.cartItem['class3'];\n            }\n\n            return React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    RC.List,\n                    { theme: 'inset' },\n                    React.createElement(\n                        RC.Item,\n                        { theme: 'body' },\n                        React.createElement(\n                            'h2',\n                            { className: 'brand' },\n                            'Register for spring 2015'\n                        ),\n                        swimmer ? React.createElement(\n                            'div',\n                            { className: 'row' },\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                'Swimmer:'\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                swimmer.name\n                            )\n                        ) : '',\n                        class1 ? React.createElement(\n                            'div',\n                            { className: 'row' },\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                'Preference 1'\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                class1.name\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col col-20' },\n                                React.createElement(\n                                    'button',\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 1) },\n                                    'Edit'\n                                )\n                            )\n                        ) : '',\n                        class2 ? React.createElement(\n                            'div',\n                            { className: 'row' },\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                'Preference 2'\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                class2.name\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col col-20' },\n                                React.createElement(\n                                    'button',\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 2) },\n                                    'Edit'\n                                )\n                            )\n                        ) : '',\n                        class3 ? React.createElement(\n                            'div',\n                            { className: 'row' },\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                'Preference 3'\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col' },\n                                class3.name\n                            ),\n                            React.createElement(\n                                'div',\n                                { className: 'col col-20' },\n                                React.createElement(\n                                    'button',\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 3) },\n                                    'Edit'\n                                )\n                            )\n                        ) : ''\n                    ),\n                    React.createElement(\n                        RC.URL,\n                        { href: '/classRegister/SelectClass' },\n                        React.createElement(\n                            RC.Button,\n                            { name: 'button', type: 'submit',\n                                theme: 'full', buttonColor: 'brand' },\n                            'Register More'\n                        )\n                    ),\n                    React.createElement(\n                        RC.URL,\n                        { href: '/classRegister/RegBillingPage' },\n                        React.createElement(\n                            RC.Button,\n                            { name: 'button', type: 'submit',\n                                theme: 'full', buttonColor: 'brand' },\n                            'Checkout'\n                        )\n                    )\n                )\n            );\n        }\n    });\n}","ast":null,"map":{"version":3,"sources":["/client/app/class.register/SelectClassReadyPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassReadyPage.jsx.map","sourcesContent":["/**\n * Created on 9/16/15.\n */\n\n{\n    //let CRSelectClassPageStore;\n    //Dependency.autorun(function () {\n    //    CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    //});\n\n    Cal.CRSelectClassReadyPage = React.createClass({\n        propTypes:{\n            cartId:React.PropTypes.string,\n            swimmerId:React.PropTypes.string,\n            classId:React.PropTypes.string\n\n        },\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            Meteor.subscribe(\"activeShoppingCart\");\n\n\n            var shoppingCart= DB.ShoppingCart.findOne({\n                _id:this.props.cartId,\n                type:'register',\n                status:'active'\n            })\n\n\n            console.log(shoppingCart)\n\n            debugger\n\n            var cartItem={}\n            if(shoppingCart && shoppingCart.items){\n\n                cartItem= _.findWhere(shoppingCart.items,{\n                    swimmerId:this.props.swimmerId,\n                    classId:this.props.classId\n                })\n\n            }\n\n\n\n            return {\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n\n                cartItem:cartItem\n            }\n        },\n\n        goToEdit(swimmerId, classId, preferenceNum){\n\n            var url = '/classRegister/SelectClassEdit'\n                + '?swimmerId=' + swimmerId\n                + '&classId=' + classId\n                + '&preferenceNum=' + preferenceNum\n                + '&cartId=' + this.props.cartId\n\n            FlowRouter.go(url);\n\n        },\n\n        render() {\n            let self = this\n\n\n            console.log('CRSelectClassReadyPage cart',this.data.cartItem)\n\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //\n            //let class1 = this.data.selectedClassesMap.get('class1')\n            //let class2 = this.data.selectedClassesMap.get('class2')\n            //let class3 = this.data.selectedClassesMap.get('class3')\n\n            if(this.data.cartItem){\n                var swimmer = this.data.cartItem['swimmer']\n\n                var class1 = this.data.cartItem['class1']\n                var class2 = this.data.cartItem['class2']\n                var class3 = this.data.cartItem['class3']\n            }\n\n\n\n            return <div>\n                <RC.List theme=\"inset\">\n                    <RC.Item theme=\"body\">\n                        <h2 className=\"brand\">Register for spring 2015</h2>\n                        {\n                            swimmer ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Swimmer:\n                                </div>\n                                <div className=\"col\">\n                                    {swimmer.name}\n                                </div>\n                            </div> : ''\n                        }\n\n\n                        {\n                            class1 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 1\n                                </div>\n                                <div className=\"col\">\n                                    {class1.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,1)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class2 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 2\n                                </div>\n                                <div className=\"col\">\n                                    {class2.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,2)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class3 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 3\n                                </div>\n                                <div className=\"col\">\n                                    {class3.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,3)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n\n                    </RC.Item>\n\n                    <RC.URL href=\"/classRegister/SelectClass\">\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Register More\n                        </RC.Button>\n\n                    </RC.URL>\n\n\n                    <RC.URL href=\"/classRegister/RegBillingPage\">\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Checkout\n                        </RC.Button>\n\n                    </RC.URL>\n\n                </RC.List>\n            </div>\n        }\n    })\n}\n"]},"hash":"6bbb34468130e8cbc414ea78cc3456a44b98af08"}
