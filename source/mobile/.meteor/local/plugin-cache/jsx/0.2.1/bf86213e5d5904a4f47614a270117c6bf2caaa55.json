{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\nIH.RC.ChatChannelList = React.createClass({\n  displayName: \"ChatChannelList\",\n\n  mixins: [ReactMeteorData],\n  getMeteorData: function () {\n    //var contacts = Meteor.user().profile.contacts;\n\n    var channelList = [];\n    this.handle = Meteor.subscribe(\"ChatChannelList\");\n    if (this.handle.ready()) {\n      var userId = Meteor.userId();\n      channelList = IH.Coll.ChatStatus.find({ UID: userId }).map(function (s) {\n        var ch = IH.Coll.ChatChannels.findOne({ _id: s.CHID });\n\n        var contactID = ch.DID === userId ? ch.PID : ch.DID;\n        var user = Meteor.users.findOne(contactID).profile;\n        var latestMsg = ch.lastMsg; //\n\n        return {\n          _id: ch._id,\n          name: user.name,\n          avatar: user.avatar,\n          href: \"/chat_channel/\" + ch._id,\n          msg: latestMsg\n        };\n      });\n    }\n\n    return {\n      channelList: channelList\n    };\n  },\n  //getDataContent() {\n  //  return <RC.List>\n  //    { _.map(this.data.channelList, function(c){\n  //      return <RC.Item\n  //        href = {c.href}\n  //        avatar = {c.avatar}\n  //        title = {c.name}\n  //        subtitle = {c.msg}\n  //        />\n  //    })\n  //    }\n  //  </RC.List>\n  //},\n  componentWillUnmount: function () {\n    this.handle.stop();\n  },\n  render: function () {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        RC.List,\n        null,\n        _.map(this.data.channelList, function (c, n) {\n          console.log(c);\n\n          return React.createElement(RC.Item, {\n            theme: \"avatar\",\n            href: c.href,\n            avatar: c.avatar,\n            title: c.name,\n            subtitle: c.msg ? c.msg.content : null,\n            note: c.msg ? c.msg.createdAt : null,\n            key: n\n          });\n        })\n      )\n    );\n  }\n});\n//{this.data.channelList? this.getDataContent(): <p>Loading...</p>}","ast":null,"map":{"version":3,"sources":["/components/ChatChannelList.jsx"],"names":[],"mappings":";AACA,EAAE,CAAC,EAAE,CAAC,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;;;AACxC,QAAM,EAAE,CAAC,eAAe,CAAC;AACzB,eAAa,EAAA,YAAG;;;AAGd,QAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;AAClD,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAC;AACtB,UAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,iBAAW,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,CAAC,CAAC,GAAG,CAAC,UAAS,CAAC,EAAC;AAClE,YAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC;;AAErD,YAAI,SAAS,GAAG,EAAE,CAAC,GAAG,KAAK,MAAM,GAAE,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;AACnD,YAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;AACnD,YAAI,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC;;AAE3B,eAAO;AACL,aAAG,EAAE,EAAE,CAAC,GAAG;AACX,cAAI,EAAE,IAAI,CAAC,IAAI;AACf,gBAAM,EAAE,IAAI,CAAC,MAAM;AACnB,cAAI,EAAE,gBAAgB,GAAG,EAAE,CAAC,GAAG;AAC/B,aAAG,EAAE,SAAS;SACf,CAAA;OACF,CAAC,CAAA;KACH;;AAED,WAAO;AACL,iBAAW,EAAE,WAAW;KACzB,CAAA;GACF;;;;;;;;;;;;;;AAcD,sBAAoB,EAAA,YAAG;AACrB,QAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;GACpB;AACD,QAAM,EAAA,YAAG;AACP,WAAO;;;MACL;AAAC,UAAE,CAAC,IAAI;;QACJ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAS,CAAC,EAAC,CAAC,EAAC;AAC1C,iBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;;AAEd,iBAAO,oBAAC,EAAE,CAAC,IAAI;AACb,iBAAK,EAAG,QAAQ;AAChB,gBAAI,EAAI,CAAC,CAAC,IAAI,AAAC;AACf,kBAAM,EAAI,CAAC,CAAC,MAAM,AAAC;AACnB,iBAAK,EAAI,CAAC,CAAC,IAAI,AAAC;AAChB,oBAAQ,EAAI,CAAC,CAAC,GAAG,GAAE,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,AAAC;AACxC,gBAAI,EAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,GAAE,IAAI,AAAC;AACtC,eAAG,EAAI,CAAC,AAAC;YACP,CAAA;SACL,CAAC;OAEM;KAEN,CAAA;GACP;CACF,CAAC,CAAC","file":"/components/ChatChannelList.jsx.map","sourcesContent":["\nIH.RC.ChatChannelList = React.createClass({\n  mixins: [ReactMeteorData],\n  getMeteorData() {\n    //var contacts = Meteor.user().profile.contacts;\n\n    let channelList = [];\n    this.handle = Meteor.subscribe(\"ChatChannelList\");\n    if (this.handle.ready()){\n      var userId = Meteor.userId();\n      channelList = IH.Coll.ChatStatus.find({UID: userId}).map(function(s){\n        var ch = IH.Coll.ChatChannels.findOne({_id: s.CHID});\n\n        var contactID = ch.DID === userId? ch.PID : ch.DID;\n        var user = Meteor.users.findOne(contactID).profile;\n        var latestMsg = ch.lastMsg; //\n\n        return {\n          _id: ch._id,\n          name: user.name,\n          avatar: user.avatar,\n          href: \"/chat_channel/\" + ch._id,\n          msg: latestMsg\n        }\n      })\n    }\n\n    return {\n      channelList: channelList\n    }\n  },\n  //getDataContent() {\n  //  return <RC.List>\n  //    { _.map(this.data.channelList, function(c){\n  //      return <RC.Item\n  //        href = {c.href}\n  //        avatar = {c.avatar}\n  //        title = {c.name}\n  //        subtitle = {c.msg}\n  //        />\n  //    })\n  //    }\n  //  </RC.List>\n  //},\n  componentWillUnmount() {\n    this.handle.stop();\n  },\n  render() {\n    return <div>\n      <RC.List>\n        { _.map(this.data.channelList, function(c,n){\n          console.log(c)\n\n          return <RC.Item\n            theme = \"avatar\"\n            href = {c.href}\n            avatar = {c.avatar}\n            title = {c.name}\n            subtitle = {c.msg? c.msg.content : null}\n            note = {c.msg ? c.msg.createdAt: null}\n            key = {n}\n            />\n        })\n        }\n      </RC.List>\n\n    </div>\n  }\n});\n//{this.data.channelList? this.getDataContent(): <p>Loading...</p>}"]},"hash":"bf86213e5d5904a4f47614a270117c6bf2caaa55"}
