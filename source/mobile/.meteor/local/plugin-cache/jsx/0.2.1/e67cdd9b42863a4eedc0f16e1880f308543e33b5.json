{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 10/1/15.\n */\n\nCal.SelectSwimmer = React.createClass({\n    displayName: \"SelectSwimmer\",\n\n    propTypes: {\n        swimmers: React.PropTypes.array,\n        currentSwimmer: React.PropTypes.object,\n        changeMessage: React.PropTypes.string,\n        readyOnly: React.PropTypes.bool\n    },\n    mixins: [ReactMeteorData],\n    getMeteorData: function () {\n        var swimmers = this.props.swimmers && this.props.swimmers.map(function (v, i) {\n            return { text: v['name'], value: v._id };\n        });\n\n        var currentSwimmerValue = this.props.currentSwimmer && this.props.currentSwimmer._id;\n        //&& {value:this.props.currentSwimmer._id,\n        //    text:this.props.currentSwimmer.name}\n\n        return {\n            swimmers: swimmers,\n            currentSwimmerValue: currentSwimmerValue,\n\n            currentSwimmer: this.props.currentSwimmer,\n            readyOnly: this.props.readyOnly\n        };\n    },\n\n    //actions\n    swimmerChange: function (e) {\n        var value = this.refs.swimmer.getValue();\n\n        var swimmer = _.find(this.props.swimmers, function (v, n) {\n            return v._id == value;\n        });\n\n        Dispatcher.dispatch({\n            actionType: this.props.changeMessage,\n            swimmer: swimmer\n        });\n    },\n\n    render: function () {\n\n        return this.props.readyOnly ? React.createElement(\n            RC.Item,\n            { uiColor: \"brand1\" },\n            \"Swimmer: \",\n            this.data.currentSwimmer && this.data.currentSwimmer.name\n        ) : React.createElement(RC.Select2, {\n            ref: \"swimmer\",\n            options: this.data.swimmers,\n            value: this.data.currentSwimmerValue,\n            name: \"swimmer\",\n            changeHandler: this.swimmerChange,\n            label: \"Swimmer\"\n        });\n    }\n});","ast":null,"map":{"version":3,"sources":["/client/app/component/SelectSwimmer.jsx"],"names":[],"mappings":";;;;AAIA,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAClC,aAAS,EAAE;AACP,gBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/B,sBAAc,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACtC,qBAAa,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACrC,iBAAS,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;KAClC;AACD,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,EAAA,YAAG;AACZ,YAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACtE,mBAAO,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAC,CAAA;SACzC,CAAC,CAAA;;AAGN,YAAI,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAA;;;;AAKpF,eAAO;AACH,oBAAQ,EAAE,QAAQ;AAClB,+BAAmB,EAAE,mBAAmB;;AAExC,0BAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;AACzC,qBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;SAClC,CAAA;KACJ;;;AAGD,iBAAa,EAAA,UAAC,CAAC,EAAC;AACZ,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAA;;AAExC,YAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;AACtD,mBAAO,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC;SACzB,CAAC,CAAA;;AAEF,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;AACpC,mBAAO,EAAE,OAAO;SACnB,CAAC,CAAC;KAEN;;AAED,UAAM,EAAA,YAAG;;AAEL,eAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GACvB;AAAC,cAAE,CAAC,IAAI;cAAC,OAAO,EAAC,QAAQ;;YACX,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI;SAC7D,GAER,oBAAC,EAAE,CAAC,OAAO;AACT,eAAG,EAAC,SAAS;AACb,mBAAO,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,AAAC;AAC5B,iBAAK,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,AAAC;AACrC,gBAAI,EAAC,SAAS;AACd,yBAAa,EAAE,IAAI,CAAC,aAAa,AAAC;AAClC,iBAAK,EAAC,SAAS;UACjB,CAAA;KAGT;CACJ,CAAC,CAAA","file":"/client/app/component/SelectSwimmer.jsx.map","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\nCal.SelectSwimmer = React.createClass({\n    propTypes: {\n        swimmers: React.PropTypes.array,\n        currentSwimmer: React.PropTypes.object,\n        changeMessage: React.PropTypes.string,\n        readyOnly: React.PropTypes.bool,\n    },\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        let swimmers = this.props.swimmers && this.props.swimmers.map(function (v, i) {\n                return {text: v['name'], value: v._id}\n            })\n\n\n        let currentSwimmerValue = this.props.currentSwimmer && this.props.currentSwimmer._id\n        //&& {value:this.props.currentSwimmer._id,\n        //    text:this.props.currentSwimmer.name}\n\n\n        return {\n            swimmers: swimmers,\n            currentSwimmerValue: currentSwimmerValue,\n\n            currentSwimmer: this.props.currentSwimmer,\n            readyOnly: this.props.readyOnly\n        }\n    },\n\n    //actions\n    swimmerChange(e){\n        var value = this.refs.swimmer.getValue()\n\n        var swimmer = _.find(this.props.swimmers, function (v, n) {\n            return v._id == value;\n        })\n\n        Dispatcher.dispatch({\n            actionType: this.props.changeMessage,\n            swimmer: swimmer\n        });\n\n    },\n\n    render() {\n\n        return this.props.readyOnly ?\n            <RC.Item uiColor=\"brand1\">\n                Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n            </RC.Item>\n\n            : <RC.Select2\n                ref=\"swimmer\"\n                options={this.data.swimmers}\n                value={this.data.currentSwimmerValue}\n                name=\"swimmer\"\n                changeHandler={this.swimmerChange}\n                label=\"Swimmer\"\n            />\n\n\n    }\n})"]},"hash":"e67cdd9b42863a4eedc0f16e1880f308543e33b5"}
