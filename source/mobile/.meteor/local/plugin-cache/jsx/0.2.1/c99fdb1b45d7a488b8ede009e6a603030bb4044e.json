{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/**\n * Created on 9/26/15.\n */\n\n{\n\n    var AccountRoute = FlowRouter.group({\n        prefix: '/account',\n        triggersEnter: [function (context) {}],\n        triggersExit: [function () {}]\n    });\n\n    AccountRoute.route('/', {\n        //name: \"account\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Management\",\n                headerNav: null,\n                bodyTmpl: React.createElement(Cal.AccountManagement, null)\n            });\n        }\n    });\n\n    AccountRoute.route('/AddSwimmer', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"AddSwimmer\",\n                headerNav: null,\n                bodyTmpl: React.createElement(Cal.AccountAddSwimmer, null)\n            });\n        }\n    });\n\n    AccountRoute.route('/EvalLevel', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"EvalLevel\",\n                headerNav: null,\n                bodyTmpl: React.createElement(Cal.AccountEvalSwimmerLevel, null)\n            });\n        }\n    });\n\n    AccountRoute.route('/SwimmerProfile/:swimmerId', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"SwimmerProfile\",\n                headerNav: null,\n                bodyTmpl: React.createElement(Cal.AccountSwimmerProfile, { swimmerId: p.swimmerId })\n            });\n        }\n    });\n\n    AccountRoute.route('/ResetPassword', {\n        action: function (p) {\n\n            var pageTitle = \"Reset Password\";\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: React.createElement(Cal.ResetPasswordUser, null)\n            };\n            App.routeHandler(p, dynamicRoute);\n        }\n    });\n\n    AccountRoute.route('/ResetUserName', {\n        action: function (p) {\n\n            var pageTitle = \"Reset Password\";\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: React.createElement(Cal.ResetUserName, null)\n            };\n            App.routeHandler(p, dynamicRoute);\n        }\n    });\n\n    AccountRoute.route('/alternateContact', {\n        action: function (p) {\n\n            var pageTitle = \"Reset Password\";\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: React.createElement(Cal.ChangeAlternateContact, null)\n            };\n            App.routeHandler(p, dynamicRoute);\n        }\n    });\n\n    AccountRoute.route('/emergencyContact', {\n        action: function (p) {\n\n            var pageTitle = \"Reset Password\";\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: React.createElement(Cal.ChangeEmergencyContact, null)\n            };\n            App.routeHandler(p, dynamicRoute);\n        }\n    });\n}","ast":null,"map":{"version":3,"sources":["/client/lib/router/account.jsx"],"names":[],"mappings":"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","file":"/client/lib/router/account.jsx.map","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\n{\n\n    let AccountRoute = FlowRouter.group({\n        prefix: '/account',\n        triggersEnter: [function(context){\n\n        }],\n        triggersExit: [function(){\n\n        }]\n    });\n\n\n\n    AccountRoute.route('/', {\n        //name: \"account\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Management\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountManagement/>\n            })\n        }\n    })\n\n    AccountRoute.route('/AddSwimmer', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"AddSwimmer\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountAddSwimmer/>\n            })\n        }\n    })\n\n    AccountRoute.route('/EvalLevel', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"EvalLevel\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountEvalSwimmerLevel/>\n            })\n        }\n    })\n\n    AccountRoute.route('/SwimmerProfile/:swimmerId', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"SwimmerProfile\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountSwimmerProfile swimmerId = {p.swimmerId}/>\n            })\n        }\n    })\n\n    AccountRoute.route('/ResetPassword', {\n        action: function(p){\n\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ResetPasswordUser/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/ResetUserName', {\n        action: function(p){\n\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ResetUserName/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/alternateContact', {\n        action: function(p){\n\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ChangeAlternateContact/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/emergencyContact', {\n        action: function(p){\n\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ChangeEmergencyContact/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n}\n\n\n"]},"hash":"c99fdb1b45d7a488b8ede009e6a603030bb4044e"}
