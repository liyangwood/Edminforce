{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":["extends"]},"ignored":false,"code":"/**\n * Created on 9/16/15.\n */\n{\n\n    var themes_select = [];\n    RC.Select2 = React.createClass({\n        displayName: \"Select2\",\n\n        mixins: [RC.Mixins.Theme],\n        themeGroup: \"item\",\n        themes: themes_select,\n\n        propTypes: {\n            theme: React.PropTypes.string,\n            value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),\n            name: React.PropTypes.string,\n            error: React.PropTypes.bool,\n            label: React.PropTypes.string,\n            labelColor: React.PropTypes.string\n        },\n        getInitialState: function () {\n            return {\n                value: false\n            };\n        },\n\n        //提供通过属性 render组件的接口\n        componentWillReceiveProps: function (nextProps) {\n            if (nextProps.value != this.state.value) {\n                this.setState({ value: nextProps.value });\n            }\n        },\n        reset: function () {\n            this.setState({ value: false });\n        },\n        getValue: function () {\n            return (this.state.value !== false ? this.state.value : this.props.value) || \"\";\n        },\n        changeHandler: function (e) {\n            this.setState({ value: e.target.value });\n            if (_.isFunction(this.props.changeHandler)) {\n                this.state.value = e.target.value; // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n                this.props.changeHandler(e);\n            }\n        },\n        render: function () {\n\n            var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\";\n\n            return React.createElement(\n                \"label\",\n                { className: classes },\n                this.props.label ? React.createElement(\n                    \"span\",\n                    { className: \"input-label\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n                    this.props.label\n                ) : null,\n                React.createElement(\n                    \"select\",\n                    babelHelpers._extends({}, _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"labelColor\"]), { onChange: this.changeHandler, value: this.getValue(), ref: \"select\" }),\n                    this.props.options.map(function (o, n) {\n                        if (_.isString(o)) o = { value: o };\n                        o = _.isObject(o) && o.value ? o : { value: undefined };\n                        return React.createElement(\n                            \"option\",\n                            { value: o.value, key: n },\n                            o.text || o.value\n                        );\n                    })\n                )\n            );\n        }\n    });\n\n    //////\n    RC.RadioGroup2 = React.createClass({\n        displayName: \"RadioGroup2\",\n\n        propTypes: {\n            id: React.PropTypes.string,\n            theme: React.PropTypes.string,\n\n            list: React.PropTypes.array,\n            label: React.PropTypes.string,\n            name: React.PropTypes.string,\n            className: React.PropTypes.string,\n\n            error: React.PropTypes.bool,\n            style: React.PropTypes.object,\n            disabled: React.PropTypes.bool\n        },\n        getInitialState: function () {\n            var list = _.isArray(this.props.list) ? this.props.list : [];\n            var self = this;\n\n            return {\n                checked: list.map(function (c) {\n                    return c.value && c.value == self.props.value ? true : false;\n                })\n            };\n        },\n        reset: function () {\n            var list = _.isArray(this.props.list) ? this.props.list : [];\n            var self = this;\n            var checked = list.map(function (c) {\n                return c.value && c.value == self.props.value ? true : false;\n            });\n            this.setState({ checked: checked });\n        },\n        getValue: function (n) {\n            var _this = this;\n\n            if (_.isUndefined(n)) {\n                var realVal;\n\n                (function () {\n                    realVal = null;\n\n                    var self = _this;\n                    _.every(_this.state.checked, function (c, nn) {\n                        if (c) realVal = self.props.list[nn].value;\n                        return !c;\n                    });\n                })();\n            }\n            return this.state.checked[n];\n        },\n        changeHandler: function (n) {\n            var checked = this.state.checked;\n            this.setState({ checked: checked.map(function (c, nn) {\n                    return nn == n;\n                }) });\n            if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(this.props.list[n]);\n        },\n        makeRadio: function (radio, n) {\n            var checked = this.getValue(n);\n            var classes = \"item item-radio \" + (radio.className || \"\");\n            /**\n             * NOTE\n             * <div> is used instead of <label> to overcome Web/Mobile issues\n             */\n            return React.createElement(\n                \"div\",\n                { className: classes, key: n, onClick: this.changeHandler.bind(null, n) },\n                React.createElement(\"input\", babelHelpers._extends({}, _.omit(radio, [\"checked\", \"type\", \"label\"]), { type: \"radio\", onChange: function () {}, checked: checked })),\n                React.createElement(\n                    \"div\",\n                    { className: \"item-content\" },\n                    radio.label\n                ),\n                React.createElement(RC.uiIcon, { uiClass: this.props.uiClass || \"check\", uiColor: this.props.uiColor, uiSize: this.props.uiSize, className: \"radio-fa\" })\n            );\n        },\n        render: function () {\n\n            if (!this.props.list.length) return null;\n\n            var self = this;\n            var radioGroup = this.props.name || h.random_string();\n\n            return React.createElement(\n                \"div\",\n                null,\n                this.props.list.map(function (g, n) {\n                    g.name = radioGroup;\n                    return self.makeRadio(g, n);\n                })\n            );\n        }\n    });\n}","ast":null,"map":{"version":3,"sources":["/RC/form/formElements2.jsx"],"names":[],"mappings":"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","file":"/RC/form/formElements2.jsx.map","sourcesContent":["/**\n * Created on 9/16/15.\n */\n{\n\n    let themes_select = []\n    RC.Select2 = React.createClass({\n        mixins: [RC.Mixins.Theme],\n        themeGroup: \"item\",\n        themes: themes_select,\n\n        propTypes: {\n            theme: React.PropTypes.string,\n            value: React.PropTypes.oneOfType([\n                React.PropTypes.string,\n                React.PropTypes.number\n            ]),\n            name: React.PropTypes.string,\n            error: React.PropTypes.bool,\n            label: React.PropTypes.string,\n            labelColor: React.PropTypes.string,\n        },\n        getInitialState(){\n            return {\n                value: false\n            }\n        },\n\n        //提供通过属性 render组件的接口\n        componentWillReceiveProps(nextProps){\n            if(nextProps.value!=this.state.value){\n                this.setState({ value: nextProps.value })\n            }\n        },\n        reset(){\n            this.setState({ value: false })\n        },\n        getValue(){\n            return (this.state.value!==false ? this.state.value : this.props.value) || \"\"\n        },\n        changeHandler: function(e) {\n            this.setState({value: e.target.value})\n            if (_.isFunction(this.props.changeHandler)) {\n                this.state.value = e.target.value // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n                this.props.changeHandler(e)\n            }\n        },\n        render() {\n\n            var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\"\n\n            return <label className={classes}>\n                {this.props.label ? <span className={\"input-label\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor : \"\")}>{this.props.label}</span> : null}\n                <select {... _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"labelColor\"])} onChange={this.changeHandler} value={this.getValue()} ref=\"select\">\n                    {\n                        this.props.options.map(function(o,n){\n                            if (_.isString(o)) o = { value: o }\n                            o = _.isObject(o) && o.value ? o : { value: undefined }\n                            return <option value={o.value} key={n}>{o.text || o.value}</option>\n                        })\n                    }\n                </select>\n            </label>\n        }\n    })\n\n\n\n    //////\n    RC.RadioGroup2 = React.createClass({\n        propTypes: {\n            id: React.PropTypes.string,\n            theme: React.PropTypes.string,\n\n            list: React.PropTypes.array,\n            label: React.PropTypes.string,\n            name: React.PropTypes.string,\n            className: React.PropTypes.string,\n\n            error: React.PropTypes.bool,\n            style: React.PropTypes.object,\n            disabled: React.PropTypes.bool,\n        },\n        getInitialState(){\n            let list = _.isArray(this.props.list) ? this.props.list : []\n            let self = this\n\n            return {\n                checked: list.map( function(c){\n                    return c.value && c.value==self.props.value ? true : false\n                })\n            }\n        },\n        reset(){\n            let list = _.isArray(this.props.list) ? this.props.list : []\n            let self = this\n            let checked = list.map( function(c){\n                return c.value && c.value==self.props.value ? true : false\n            })\n            this.setState({ checked: checked })\n        },\n        getValue(n){\n            if (_.isUndefined(n)) {\n                var realVal = null\n                let self = this\n                _.every(this.state.checked, function(c,nn){\n                    if (c)\n                        realVal = self.props.list[nn].value\n                    return !c\n                })\n            }\n            return this.state.checked[n]\n        },\n        changeHandler: function(n) {\n            let checked = this.state.checked\n            this.setState({checked: checked.map(function(c,nn){\n                return nn==n\n            })})\n            if (_.isFunction(this.props.changeHandler))\n                this.props.changeHandler(this.props.list[n])\n        },\n        makeRadio(radio,n){\n            let checked = this.getValue(n)\n            let classes = \"item item-radio \"+(radio.className || \"\")\n            /**\n             * NOTE\n             * <div> is used instead of <label> to overcome Web/Mobile issues\n             */\n            return <div className={classes} key={n} onClick={this.changeHandler.bind(null,n)}>\n                <input {... _.omit(radio, [\"checked\",\"type\",\"label\"])} type=\"radio\" onChange={function(){}} checked={checked} />\n                <div className=\"item-content\">{radio.label}</div>\n                <RC.uiIcon uiClass={this.props.uiClass || \"check\"} uiColor={this.props.uiColor} uiSize={this.props.uiSize} className=\"radio-fa\" />\n            </div>\n        },\n        render() {\n\n            if (!this.props.list.length) return null\n\n            let self = this\n            let radioGroup = this.props.name || h.random_string()\n\n            return <div>\n                {\n                    this.props.list.map(function(g,n){\n                        g.name = radioGroup\n                        return self.makeRadio(g,n)\n                    })\n                }\n            </div>\n        }\n    })\n\n\n\n}\n"]},"hash":"dd387bc6cd28325c664a75181739b92888cd47e5"}
