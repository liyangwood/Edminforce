{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\n\n{\n    (function () {\n        //let CRSelectClassEditPageStoreClass;\n        //Dependency.autorun(function () {\n        //    CRSelectClassEditPageStoreClass = Dependency.get('classRegister.CRSelectClassEditPage.storeClass');\n        //});\n        var PageStore = undefined;\n        Dependency.autorun(function () {\n            PageStore = Dependency.get('classRegister.CRSelectClassEditPage.store');\n        });\n\n        function getShoppingItem(cart, swimmerId, classId) {\n            if (!cart || !cart.items) return;\n            var items = cart.items;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].swimmerId == swimmerId && items[i].classId == classId) {\n                    return items[i];\n                }\n            }\n            return null;\n        }\n\n        Cal.CRSelectClassEditPage = React.createClass({\n            displayName: \"CRSelectClassEditPage\",\n\n            propTypes: {\n                cartId: React.PropTypes.string,\n                swimmerId: React.PropTypes.string,\n                classId: React.PropTypes.string,\n                preferenceNum: React.PropTypes.number //preferenceNumber\n\n            },\n            mixins: [ReactMeteorData],\n\n            getMeteorData: function () {\n\n                //////////////////subscribe/////////////////////////\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                //Meteor.subscribe(\"appInfo\");\n                Meteor.subscribe(\"classes\");\n                Meteor.subscribe(\"activeShoppingCart\");\n                //Meteor.subscribe(\"accountShoppingCart\");\n\n                //var PageStore = new CRSelectClassEditPageStoreClass;\n\n                var data = {\n\n                    cart: PageStore.cart.get(),\n\n                    //account: Meteor.users.find().fetch(),\n                    currentSwimmer: PageStore.currentSwimmer.get(),\n                    currentClass: PageStore.currentClass.get(),\n\n                    currentLevel: PageStore.currentLevel.get(), //next level\n\n                    //should wait for currentSwimmer\n                    avaiableDays: PageStore.avaiableDays.get(),\n                    avaiableTimes: PageStore.avaiableTimes.get(),\n                    currentDay: PageStore.currentDay.get(),\n                    currentTime: PageStore.currentTime.get()\n\n                };\n\n                //currentStep: PageStore.currentStep.get(),\n\n                //一次选课流程的所有信息\n                //selectedClasses: PageStore.selectedClasses.get()\n\n                //debugger\n                return data;\n            },\n\n            componentWillMount: function () {\n                ///         ///PASS  props value to store\n                Dispatcher.dispatch({\n                    actionType: 'CRSelectClassEditPage_PROPS_UPDATE',\n                    props: this.props\n                });\n            },\n            formSubmit: function (e) {\n                e.preventDefault();\n\n                Dispatcher.dispatch({\n                    actionType: 'CRSelectClassEditPage_CLASS_SELECT',\n                    props: this.props\n                });\n            },\n\n            ///////////////actions////////////////\n\n            render: function () {\n\n                var items = this.data.cart && this.data.cart.items;\n                var item = _.findWhere(items, {\n                    swimmerId: this.props.swimmerId,\n                    classId: this.props.classId\n                });\n                console.log(item);\n                //debugger\n\n                return React.createElement(\n                    \"div\",\n                    null,\n                    React.createElement(\n                        RC.Card,\n                        { className: \"padding\" },\n                        React.createElement(\n                            \"h4\",\n                            { className: \"brand\" },\n                            \"Register Class Edit Preference\",\n                            this.props.preferenceNum\n                        ),\n                        React.createElement(\n                            \"div\",\n                            null,\n                            \"now :\",\n                            item && item['class' + this.props.preferenceNum] && item['class' + this.props.preferenceNum].name\n                        ),\n                        React.createElement(\n                            \"div\",\n                            null,\n                            \"changed :\",\n                            this.data.currentClass && this.data.currentClass.name\n                        )\n                    ),\n                    React.createElement(\n                        RC.Form,\n                        { ref: \"myForm\", onSubmit: this.formSubmit },\n                        React.createElement(\n                            RC.Item,\n                            { uiColor: \"brand1\" },\n                            \"Swimmer: \",\n                            this.data.currentSwimmer && this.data.currentSwimmer.name\n                        ),\n                        React.createElement(\n                            RC.Item,\n                            { uiColor: \"brand1\" },\n                            \"Level: \",\n                            this.data.currentLevel\n                        ),\n                        React.createElement(Cal.SelectDay, {\n                            avaiableDays: this.data.avaiableDays,\n                            currentDay: this.data.currentDay,\n                            changeMessage: \"CRSelectClassEditPage_DAY_CHANGE\"\n                        }),\n                        React.createElement(Cal.SelectTime, {\n                            avaiableTimes: this.data.avaiableTimes,\n                            currentTime: this.data.currentTime,\n                            changeMessage: \"CRSelectClassEditPage_TIME_CHANGE\"\n                        }),\n                        React.createElement(\n                            RC.Button,\n                            { name: \"button\", type: \"submit\",\n                                onClick: this.formSubmit,\n                                theme: \"full\", buttonColor: \"brand\" },\n                            this.data.currentStep == 1 ? 'Book' : 'Select'\n                        )\n                    )\n                );\n            }\n\n        });\n    })();\n}","ast":null,"map":{"version":3,"sources":["/client/app/class.register/SelectClassEditPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassEditPage.jsx.map","sourcesContent":["\n\n{\n    //let CRSelectClassEditPageStoreClass;\n    //Dependency.autorun(function () {\n    //    CRSelectClassEditPageStoreClass = Dependency.get('classRegister.CRSelectClassEditPage.storeClass');\n    //});\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.CRSelectClassEditPage.store');\n    });\n\n\n\n\n    function getShoppingItem(cart,swimmerId, classId){\n        if(!cart || !cart.items) return;\n        var items = cart.items\n\n        for(var i=0;i<items.length;i++){\n            if(items[i].swimmerId ==swimmerId\n                &&items[i].classId == classId\n            ){\n                return items[i]\n            }\n        }\n        return null\n    }\n\n\n    Cal.CRSelectClassEditPage = React.createClass({\n        propTypes:{\n            cartId:React.PropTypes.string,\n            swimmerId:React.PropTypes.string,\n            classId:React.PropTypes.string,\n            preferenceNum:React.PropTypes.number //preferenceNumber\n\n        },\n        mixins: [ReactMeteorData],\n\n        getMeteorData() {\n\n            //////////////////subscribe/////////////////////////\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            //Meteor.subscribe(\"appInfo\");\n            Meteor.subscribe(\"classes\");\n            Meteor.subscribe(\"activeShoppingCart\");\n            //Meteor.subscribe(\"accountShoppingCart\");\n\n\n            //var PageStore = new CRSelectClassEditPageStoreClass;\n\n\n\n            var data = {\n\n                cart:PageStore.cart.get(),\n\n                //account: Meteor.users.find().fetch(),\n                currentSwimmer: PageStore.currentSwimmer.get(),\n                currentClass:PageStore.currentClass.get(),\n\n                currentLevel:PageStore.currentLevel.get(), //next level\n\n\n                //should wait for currentSwimmer\n                avaiableDays: PageStore.avaiableDays.get(),\n                avaiableTimes: PageStore.avaiableTimes.get(),\n                currentDay: PageStore.currentDay.get(),\n                currentTime: PageStore.currentTime.get(),\n\n                //currentStep: PageStore.currentStep.get(),\n\n                //一次选课流程的所有信息\n                //selectedClasses: PageStore.selectedClasses.get()\n\n            }\n\n            //debugger\n            return data;\n\n        },\n\n\n        componentWillMount(){\n///         ///PASS  props value to store\n            Dispatcher.dispatch({\n                actionType: 'CRSelectClassEditPage_PROPS_UPDATE',\n                props: this.props\n            });\n\n        },\n        formSubmit(e){\n            e.preventDefault()\n\n            Dispatcher.dispatch({\n                actionType: 'CRSelectClassEditPage_CLASS_SELECT',\n                props: this.props\n            });\n\n        },\n\n\n        ///////////////actions////////////////\n\n        render: function () {\n\n            let items = this.data.cart && this.data.cart.items ;\n            var item = _.findWhere(items,{\n                swimmerId:this.props.swimmerId,\n                classId:this.props.classId\n            })\n            console.log(item)\n            //debugger\n\n\n            return <div>\n\n                <RC.Card className=\"padding\">\n                    <h4 className=\"brand\">Register Class Edit Preference{this.props.preferenceNum}</h4>\n\n                    <div>\n                        now :{item && item['class'+this.props.preferenceNum] && item['class'+this.props.preferenceNum].name}\n                    </div>\n                    <div>\n                        changed :{this.data.currentClass && this.data.currentClass.name}\n                    </div>\n\n\n                </RC.Card>\n\n                <RC.Form ref=\"myForm\"  onSubmit={this.formSubmit}>\n\n                    <RC.Item uiColor=\"brand1\">\n                        Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n                    </RC.Item>\n                    <RC.Item uiColor=\"brand1\">\n                        Level: {this.data.currentLevel}\n                    </RC.Item>\n\n                    <Cal.SelectDay\n                        avaiableDays={this.data.avaiableDays}\n                        currentDay={this.data.currentDay}\n                        changeMessage=\"CRSelectClassEditPage_DAY_CHANGE\"\n                        />\n                    <Cal.SelectTime\n                        avaiableTimes={this.data.avaiableTimes}\n                        currentTime={this.data.currentTime}\n                        changeMessage=\"CRSelectClassEditPage_TIME_CHANGE\"\n                        />\n\n                    <RC.Button name=\"button\" type=\"submit\"\n                               onClick={this.formSubmit}\n                               theme=\"full\" buttonColor=\"brand\">\n                        {this.data.currentStep == 1 ? 'Book':'Select'}\n                    </RC.Button>\n\n                </RC.Form>\n\n\n\n                </div>;\n        }\n\n    });\n\n}\n"]},"hash":"df95be56a147ed45532f61fb8fd842623cdba677"}
