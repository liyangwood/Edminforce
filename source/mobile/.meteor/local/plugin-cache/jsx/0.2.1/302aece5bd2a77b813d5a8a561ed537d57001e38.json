{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"\nRC.ChatBubble = React.createClass({\n  displayName: \"ChatBubble\",\n\n  // getInitialState(){\n  //   return {\n  //     selected: null\n  //   }\n  // },\n  getTheme: function (name) {\n    var theme = _.contains([\"regular\"], name) ? name : \"regular\";\n    return theme;\n  },\n  render: function () {\n    // let curState = this.state.selected // Currently unused\n    var classList = [\"chat-bubble\", this.props.className || \"\", this.props.isUser ? \"to\" : \"from\", this.props.firstOfGroup ? \"first\" : \"\", this.getTheme(this.props.theme)];\n    var date = _.isDate(this.props.date) ? this.props.date : false;\n\n    return React.createElement(\n      \"div\",\n      { className: classList.join(\" \"), id: this.props.id },\n      this.props.showDateBreak && date ? React.createElement(\n        \"div\",\n        { className: \"date-break\" },\n        React.createElement(\n          \"span\",\n          { className: \"inline-block\" },\n          moment(date).format(\"dddd, MMM D, YYYY\")\n        )\n      ) : null,\n      React.createElement(\n        \"div\",\n        { className: \"inner normal\", \"data-time\": date ? moment(date).format(\"h:mm a\") : \"\" },\n        !this.props.firstOfGroup || this.props.isUser ? null : React.createElement(\n          \"div\",\n          { className: \"author alt-thick\" },\n          React.createElement(RC.Avatar, { src: this.props.avatar, uiClass: _.contains([\"male\", \"female\"], this.props.gender) ? this.props.gender : \"male\" }),\n          this.props.name\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          this.props.message\n        )\n      )\n    );\n  }\n});","ast":null,"map":{"version":3,"sources":["/RC/chat/chatBubble.jsx"],"names":[],"mappings":";AACA,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;;;;;;AAMhC,UAAQ,EAAA,UAAC,IAAI,EAAC;AACZ,QAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,GACrC,IAAI,GAAG,SAAS,CAAA;AACpB,WAAO,KAAK,CAAA;GACb;AACD,QAAM,EAAA,YAAG;;AAEP,QAAI,SAAS,GAAG,CACd,aAAa,EACb,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,EAAE,EAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,MAAM,EACjC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,OAAO,GAAG,EAAE,EACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAChC,CAAA;AACD,QAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAA;;AAE9D,WAAO;;QAAK,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC,EAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAC;MAC3D,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,IAAI,GAAG;;UAAK,SAAS,EAAC,YAAY;QAAC;;YAAM,SAAS,EAAC,cAAc;UAAE,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC;SAAQ;OAAM,GAAG,IAAI;MAC7J;;UAAK,SAAS,EAAC,cAAc,EAAC,aAAW,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,AAAC;QAEjF,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAClD;;YAAK,SAAS,EAAC,kBAAkB;UAC/B,oBAAC,EAAE,CAAC,MAAM,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC,EAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,AAAC,GAAG;UAC5H,IAAI,CAAC,KAAK,CAAC,IAAI;SACZ;QAER;;;UAAI,IAAI,CAAC,KAAK,CAAC,OAAO;SAAK;OACvB;KACF,CAAA;GACP;CACF,CAAC,CAAA","file":"/RC/chat/chatBubble.jsx.map","sourcesContent":["\nRC.ChatBubble = React.createClass({\n  // getInitialState(){\n  //   return {\n  //     selected: null\n  //   }\n  // },\n  getTheme(name){\n    let theme = _.contains([\"regular\"], name)\n      ? name : \"regular\"\n    return theme\n  },\n  render() {\n    // let curState = this.state.selected // Currently unused\n    let classList = [\n      \"chat-bubble\",\n      this.props.className || \"\",\n      this.props.isUser ? \"to\" : \"from\",\n      this.props.firstOfGroup ? \"first\" : \"\",\n      this.getTheme(this.props.theme)\n    ]\n    let date = _.isDate(this.props.date) ? this.props.date : false\n\n    return <div className={classList.join(\" \")} id={this.props.id}>\n      {this.props.showDateBreak && date ? <div className=\"date-break\"><span className=\"inline-block\">{moment(date).format(\"dddd, MMM D, YYYY\")}</span></div> : null}\n      <div className=\"inner normal\" data-time={date ? moment(date).format(\"h:mm a\") : \"\"}>\n        {\n        !this.props.firstOfGroup || this.props.isUser ? null\n        : <div className=\"author alt-thick\">\n            <RC.Avatar src={this.props.avatar} uiClass={_.contains([\"male\",\"female\"], this.props.gender) ? this.props.gender : \"male\"} />\n            {this.props.name}\n          </div>\n        }\n        <p>{this.props.message}</p>\n      </div>\n    </div>\n  }\n})\n"]},"hash":"302aece5bd2a77b813d5a8a561ed537d57001e38"}
