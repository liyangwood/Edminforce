{"version":3,"sources":["meteor://ðŸ’»app/both/collections/Accounts.js"],"names":[],"mappings":"cfile":"/both/collections/Accounts.js","sourcesContent":["/*\n*\n* Refer to https://github.com/aldeed/meteor-collection2\n* Attach a Schema to Meteor.users\n*\n* */\n\n\n//Accounts = new Mongo.Collection('accounts');\n\n/*\n name: \"Joe Schmoe\",\n phone: \"+1 555 555 5555\",\n address: \"Somewhere, San Jose, CA 95134\",\n location: \"Dublin\" or \"Fremont\",\n */\n\nDB.Schema.AccountProfile = new SimpleSchema({\n    name: {\n        type: String,\n        optional: true\n    },\n    phone: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    location: {\n        type: String,\n        optional: true\n    }\n});\n\nDB.Schema.Account = new SimpleSchema({\n\n    username: {\n        type: String,\n        optional: true\n    },\n    emails: {\n        type: Array\n    },\n\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n\n    //name: {\n    //    type: String\n    //},\n\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n\n    // !!!Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n\n    role: {\n        type: String,\n        optional: true    //todo change to false\n    },\n\n    profile: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n\n\n    credits: {\n        type: Number,\n        optional: true\n    },\n\n    alterContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    emergencyContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    optInCheck: {\n        type: Boolean,\n        optional: true\n    },\n    swimmers: {\n        type: [String],\n        optional: true\n\n    }\n});\n\n\n//Accounts.attachSchema(App.Schema.Account)\n\nMeteor.users.attachSchema(DB.Schema.Account);"]}