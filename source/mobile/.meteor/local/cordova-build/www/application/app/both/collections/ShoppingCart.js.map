{"version":3,"sources":["meteor://💻app/both/collections/ShoppingCart.js"],"names":[],"mappings":"efile":"/both/collections/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/13/15.\n */\n\n/*\n *\n * 无效购物车需要定时执行的程序进行清空\n *\n * */\nDB.ShoppingCart = new Mongo.Collection('shoppingCart');\n\n\nDB.ShoppingCart.attachSchema(new SimpleSchema({\n\n    accountId: {\n        type: String\n    },\n    sessionId:{\n        type: String,\n        optional: true //todo remove\n    },\n\n    /*\n     *\n         active\n         pending\n         checking\n         applied\n         done\n\n         expiring\n         expired\n\n         canceling\n         canceled\n\n     *\n     * */\n    status: {\n        type: String\n    },\n\n    /*\n    * 购物车添加类型，cancel ，change独立于register另建购物车 方便事务中恢复逻辑的实现\n    * 否则一个中断于pending时购物车中若同时存在三种项目 会增加恢复执行或回滚的复杂性\n    * */\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    },\n\n    lastModified: {   //用于计算超时 清空购物车\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate) {\n                return new Date();\n            }\n            if (this.isUpsert) {\n                return new Date();\n            }\n            if (this.isInsert) {\n                return new Date();\n            }\n        }\n    },\n    appliedTime:{//完成交易 设置applied的时间\n        type: Date,\n        optional: true\n    },\n    /*\n     *\n     * 两种类型的超时时间不一样\n     *\n     * pay-in-store  24h\n     * pay-now   15 minutes\n     * */\n    checkoutType: {\n        type: String,\n        optional: true  //add default value?\n    },\n\n\n    /*\n        添加class或取消class\n        {\n        type=='add'\n        sessionId   //todo remove\n        swimmerId classId, quantity\n        swimmer class1 class2 class3\n        }\n\n        change class\n        {\n            type=='change'\n            sessionId, swimmerId,\n            fromClass, toClass\n        }\n\n        isBookTheSameTime //标记购物项是否是通过bookthesametime添加\n\n    * */\n    //\n    items: {\n        type: [Object],\n        optional: true,\n        blackbox: true\n    }\n\n}))"]}