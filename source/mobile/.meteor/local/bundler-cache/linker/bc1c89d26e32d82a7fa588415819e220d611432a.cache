[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar WebApp = Package.webapp.WebApp;\nvar Mongo = Package.mongo.Mongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Random = Package.random.Random;\nvar _ = Package.underscore._;\nvar SourceMapSupport = Package['velocity:source-map-support'].SourceMapSupport;\nvar babelHelpers = Package['babel-runtime'].babelHelpers;\nvar Promise = Package.promise.Promise;\nvar Map = Package['ecmascript-collections'].Map;\nvar Set = Package['ecmascript-collections'].Set;\n\n/* Package-scope variables */\nvar Velocity, VelocityInternals, VelocityTestFiles, VelocityFixtureFiles, VelocityTestReports, VelocityAggregateReports, VelocityLogs, VelocityMirrors, VelocityOptions;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/source_map_support.js                                                          //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/* globals SourceMapSupport: false */                                                                        //\n                                                                                                             //\nSourceMapSupport.install();                                                                                  // 3\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/polyfills.js                                                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n'use strict';                                                                                                // 1\n                                                                                                             //\n// PhantomJS 1.x does not support Function.bind.                                                             //\n// This is a very commonly used function and                                                                 //\n// the resulting errors are very hard to debug right now.                                                    //\n// For this reason we include it in velocity:core.                                                           //\nif (!Function.prototype.bind) {                                                                              // 7\n  Function.prototype.bind = function (otherThis) {                                                           // 8\n    return _.bind(this, otherThis);                                                                          // 9\n  };                                                                                                         //\n}                                                                                                            //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/globals.js                                                                     //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/* globals                                                                                                   //\n   Velocity: true,                                                                                           //\n   VelocityInternals: true                                                                                   //\n*/                                                                                                           //\n                                                                                                             //\n/**                                                                                                          //\n * The `Velocity` object provides a common API for test frameworks to report                                 //\n * test results.  Frameworks can also request assets, such as a copy of the                                  //\n * user's application (the 'mirror') in which tests can be safely run without                                //\n * impacting on-going development.                                                                           //\n *                                                                                                           //\n * Test results and log activity are reported via                                                            //\n * {{#crossLink \"Meteor.methods\"}}Meteor methods{{/crossLink}}.                                              //\n *                                                                                                           //\n * @class Velocity                                                                                           //\n */                                                                                                          //\nVelocity = {                                                                                                 // 17\n  /**                                                                                                        //\n   * @class Velocity.Collections                                                                             //\n   */                                                                                                        //\n  Collections: {},                                                                                           // 21\n  Methods: {}                                                                                                // 22\n};                                                                                                           //\n                                                                                                             //\nVelocityInternals = {};                                                                                      // 25\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/collections.js                                                                 //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/* global                                                                                                    //\n VelocityTestFiles: true,                                                                                    //\n VelocityFixtureFiles: true,                                                                                 //\n VelocityTestReports: true,                                                                                  //\n VelocityAggregateReports: true,                                                                             //\n VelocityLogs: true,                                                                                         //\n VelocityMirrors: true,                                                                                      //\n VelocityOptions: true                                                                                       //\n */                                                                                                          //\n                                                                                                             //\nvar collectionOptions = {};                                                                                  // 11\n                                                                                                             //\nif (Meteor.isServer) {                                                                                       // 13\n  var velocityMongoUrl = process.env.VELOCITY_MONGO_URL;                                                     // 14\n  if (velocityMongoUrl) {                                                                                    // 15\n    collectionOptions._driver = new MongoInternals.RemoteCollectionDriver(velocityMongoUrl);                 // 16\n  }                                                                                                          //\n}                                                                                                            //\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.TestFiles                                                                  //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.TestFiles = new Mongo.Collection('velocityTestFiles', collectionOptions);               // 26\n/**                                                                                                          //\n * @property VelocityTestFiles                                                                               //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.TestFiles`                                                          //\n */                                                                                                          //\nVelocityTestFiles = Velocity.Collections.TestFiles;                                                          // 32\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.FixtureFiles                                                               //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.FixtureFiles = new Mongo.Collection('velocityFixtureFiles', collectionOptions);         // 41\n/**                                                                                                          //\n * @property VelocityFixtureFiles                                                                            //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.FixtureFiles`                                                       //\n */                                                                                                          //\nVelocityFixtureFiles = Velocity.Collections.FixtureFiles;                                                    // 47\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.TestReports                                                                //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.TestReports = new Mongo.Collection('velocityTestReports', collectionOptions);           // 56\n/**                                                                                                          //\n * @property VelocityTestReports                                                                             //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.TestReports`                                                        //\n */                                                                                                          //\nVelocityTestReports = Velocity.Collections.TestReports;                                                      // 62\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.AggregateReports                                                           //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.AggregateReports = new Mongo.Collection('velocityAggregateReports', collectionOptions);\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property VelocityAggregateReports                                                                        //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.AggregateReports`                                                   //\n */                                                                                                          //\nVelocityAggregateReports = Velocity.Collections.AggregateReports;                                            // 79\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.Logs                                                                       //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.Logs = new Mongo.Collection('velocityLogs', collectionOptions);                         // 88\n/**                                                                                                          //\n * @property VelocityLogs                                                                                    //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.Logs`                                                               //\n */                                                                                                          //\nVelocityLogs = Velocity.Collections.Logs;                                                                    // 94\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.Mirrors                                                                    //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.Mirrors = new Mongo.Collection('velocityMirrors', collectionOptions);                   // 103\n/**                                                                                                          //\n * @property VelocityMirrors                                                                                 //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.Mirrors`                                                            //\n */                                                                                                          //\nVelocityMirrors = Velocity.Collections.Mirrors;                                                              // 109\n                                                                                                             //\n/**                                                                                                          //\n * TODO: Needs description and example records                                                               //\n *                                                                                                           //\n * @property Velocity.Collections.Options                                                                    //\n * @type Mongo.Collection                                                                                    //\n */                                                                                                          //\nVelocity.Collections.Options = new Mongo.Collection('velocityOptions', collectionOptions);                   // 118\n/**                                                                                                          //\n * @property VelocityOptions                                                                                 //\n * @type Mongo.Collection                                                                                    //\n * @deprecated Use `Velocity.Collections.Options`                                                            //\n */                                                                                                          //\nVelocityOptions = Velocity.Collections.Options;                                                              // 124\n                                                                                                             //\n(function () {                                                                                               // 127\n  'use strict';                                                                                              // 128\n                                                                                                             //\n  if (Meteor.isServer) {                                                                                     // 130\n    Meteor.publish('VelocityTestFiles', function () {                                                        // 131\n      return Velocity.Collections.TestFiles.find({});                                                        // 132\n    });                                                                                                      //\n    Meteor.publish('VelocityFixtureFiles', function () {                                                     // 134\n      return Velocity.Collections.FixtureFiles.find({});                                                     // 135\n    });                                                                                                      //\n    Meteor.publish('VelocityTestReports', function () {                                                      // 137\n      return Velocity.Collections.TestReports.find({});                                                      // 138\n    });                                                                                                      //\n    Meteor.publish('VelocityAggregateReports', function () {                                                 // 140\n      return VelocityAggregateReports.find({});                                                              // 141\n    });                                                                                                      //\n    Meteor.publish('VelocityLogs', function () {                                                             // 143\n      return VelocityLogs.find({});                                                                          // 144\n    });                                                                                                      //\n    Meteor.publish('VelocityMirrors', function () {                                                          // 146\n      return VelocityMirrors.find({});                                                                       // 147\n    });                                                                                                      //\n    Meteor.publish('VelocityOptions', function () {                                                          // 149\n      return VelocityOptions.find({});                                                                       // 150\n    });                                                                                                      //\n  }                                                                                                          //\n                                                                                                             //\n  if (Meteor.isClient) {                                                                                     // 154\n    Meteor.subscribe('VelocityTestFiles');                                                                   // 155\n    Meteor.subscribe('VelocityFixtureFiles');                                                                // 156\n    Meteor.subscribe('VelocityTestReports');                                                                 // 157\n    Meteor.subscribe('VelocityAggregateReports');                                                            // 158\n    Meteor.subscribe('VelocityLogs');                                                                        // 159\n    Meteor.subscribe('VelocityMirrors');                                                                     // 160\n    Meteor.subscribe('VelocityOptions');                                                                     // 161\n  }                                                                                                          //\n})();                                                                                                        //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/methods/options/getOption.js                                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/**                                                                                                          //\n * Get an option                                                                                             //\n *                                                                                                           //\n * @method velocity/getOption                                                                                //\n * @param {String} name The name of the option.                                                              //\n * @return {*} The value of the option or null.                                                              //\n */                                                                                                          //\nVelocity.Methods['velocity/getOption'] = function (name) {                                                   // 8\n  check(name, String);                                                                                       // 9\n                                                                                                             //\n  var option = Velocity.Collections.Options.findOne({ name: name });                                         // 11\n  return option ? option.value : null;                                                                       // 12\n};                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/methods/options/setOption.js                                                   //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/**                                                                                                          //\n * Set an option.                                                                                            //\n *                                                                                                           //\n * @method velocity/setOption                                                                                //\n * @for Meteor.methods                                                                                       //\n * @param {String} name The name of the option.                                                              //\n * @param {*} value The value of the option.                                                                 //\n */                                                                                                          //\nVelocity.Methods['velocity/setOption'] = function (name, value) {                                            // 9\n  check(name, String);                                                                                       // 10\n  check(value, Match.Any);                                                                                   // 11\n                                                                                                             //\n  Velocity.Collections.Options.upsert({ name: name }, { $set: { name: name, value: value } });               // 13\n};                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/methods/options/setOptions.js                                                  //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n/**                                                                                                          //\n * Set multiple options.                                                                                     //\n *                                                                                                           //\n * @method velocity/setOptions                                                                               //\n * @param options Hash with options (name: value).                                                           //\n */                                                                                                          //\nVelocity.Methods['velocity/setOptions'] = function (options) {                                               // 7\n  check(options, Object);                                                                                    // 8\n                                                                                                             //\n  for (var name in babelHelpers.sanitizeForInObject(options)) {                                              // 10\n    if (options.hasOwnProperty(name)) {                                                                      // 11\n      Meteor.call('velocity/setOption', name, options[name]);                                                // 12\n    }                                                                                                        //\n  }                                                                                                          //\n};                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/methods.js                                                                     //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nMeteor.methods(Velocity.Methods);                                                                            // 1\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// packages/velocity_core/src/core-shared.js                                                                 //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n(function () {                                                                                               // 1\n  'use strict';                                                                                              // 2\n                                                                                                             //\n  //////////////////////////////////////////////////////////////////////                                     //\n  // Public Methods                                                                                          //\n  //                                                                                                         //\n                                                                                                             //\n  /**                                                                                                        //\n   * Mirrors can share the same codebase as the main process.                                                //\n   * This method will run provided code inside a mirror only.                                                //\n   *                                                                                                         //\n   * where: client / server                                                                                  //\n   *                                                                                                         //\n   * @method onTest                                                                                          //\n   * @for Velocity                                                                                           //\n   * @param {Function} code                                                                                  //\n   */                                                                                                        //\n  Velocity.onTest = function (code) {                                                                        // 18\n    Meteor.call('velocity/isMirror', function (err, res) {                                                   // 19\n      if (res) {                                                                                             // 20\n        code();                                                                                              // 21\n      }                                                                                                      //\n    });                                                                                                      //\n  };                                                                                                         //\n                                                                                                             //\n  if (Meteor.isServer) {                                                                                     // 26\n    /**                                                                                                      //\n     * See <a href=\"Meteor.methods.html#method_velocity/setOption\">velocity/setOption</a>                    //\n     *                                                                                                       //\n     * @method setOption                                                                                     //\n     */                                                                                                      //\n    Velocity.setOption = function (name, value) {                                                            // 32\n      Meteor.call('velocity/setOption', name, value);                                                        // 33\n    };                                                                                                       //\n                                                                                                             //\n    /**                                                                                                      //\n     * See <a href=\"Meteor.methods.html#method_velocity/setOptions\">velocity/setOptions</a>                  //\n     *                                                                                                       //\n     * @method setOptions                                                                                    //\n     */                                                                                                      //\n    Velocity.setOptions = function (options) {                                                               // 41\n      Meteor.call('velocity/setOptions', options);                                                           // 42\n    };                                                                                                       //\n                                                                                                             //\n    /**                                                                                                      //\n     * See <a href=\"Meteor.methods.html#method_velocity/getOption\">velocity/getOption</a>                    //\n     *                                                                                                       //\n     * @method getOption                                                                                     //\n     * @for Velocity                                                                                         //\n     */                                                                                                      //\n    Velocity.getOption = function (name) {                                                                   // 51\n      return Meteor.call('velocity/getOption', name);                                                        // 52\n    };                                                                                                       //\n  }                                                                                                          //\n})();                                                                                                        //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['velocity:core'] = {\n  Velocity: Velocity,\n  VelocityTestFiles: VelocityTestFiles,\n  VelocityFixtureFiles: VelocityFixtureFiles,\n  VelocityTestReports: VelocityTestReports,\n  VelocityAggregateReports: VelocityAggregateReports,\n  VelocityLogs: VelocityLogs,\n  VelocityMirrors: VelocityMirrors,\n  VelocityOptions: VelocityOptions\n};\n\n})();\n","servePath":"/packages/velocity_core.js","sourceMap":{"version":3,"sources":["/src/source_map_support.js","/src/polyfills.js","/src/globals.js","/src/collections.js","/src/methods/options/getOption.js","/src/methods/options/setOption.js","/src/methods/options/setOptions.js","/src/methods.js","/src/core-shared.js"],"names":[],"mappings":"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","file":"/packages/velocity_core.js","sourcesContent":["/* globals SourceMapSupport: false */\n\nSourceMapSupport.install();\n","'use strict';\n\n// PhantomJS 1.x does not support Function.bind.\n// This is a very commonly used function and\n// the resulting errors are very hard to debug right now.\n// For this reason we include it in velocity:core.\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(otherThis) {\n    return _.bind(this, otherThis);\n  };\n}\n","/* globals\n   Velocity: true,\n   VelocityInternals: true\n*/\n\n/**\n * The `Velocity` object provides a common API for test frameworks to report\n * test results.  Frameworks can also request assets, such as a copy of the\n * user's application (the 'mirror') in which tests can be safely run without\n * impacting on-going development.\n *\n * Test results and log activity are reported via\n * {{#crossLink \"Meteor.methods\"}}Meteor methods{{/crossLink}}.\n *\n * @class Velocity\n */\nVelocity = {\n  /**\n   * @class Velocity.Collections\n   */\n  Collections: {},\n  Methods: {}\n};\n\nVelocityInternals = {};\n","/* global\n VelocityTestFiles: true,\n VelocityFixtureFiles: true,\n VelocityTestReports: true,\n VelocityAggregateReports: true,\n VelocityLogs: true,\n VelocityMirrors: true,\n VelocityOptions: true\n */\n\nvar collectionOptions = {};\n\nif (Meteor.isServer) {\n  var velocityMongoUrl = process.env.VELOCITY_MONGO_URL;\n  if (velocityMongoUrl) {\n    collectionOptions._driver = new MongoInternals.RemoteCollectionDriver(velocityMongoUrl);\n  }\n}\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.TestFiles = new Mongo.Collection('velocityTestFiles', collectionOptions);\n/**\n * @property VelocityTestFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestFiles`\n */\nVelocityTestFiles = Velocity.Collections.TestFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.FixtureFiles\n * @type Mongo.Collection\n */\nVelocity.Collections.FixtureFiles = new Mongo.Collection('velocityFixtureFiles', collectionOptions);\n/**\n * @property VelocityFixtureFiles\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.FixtureFiles`\n */\nVelocityFixtureFiles = Velocity.Collections.FixtureFiles;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.TestReports\n * @type Mongo.Collection\n */\nVelocity.Collections.TestReports = new Mongo.Collection('velocityTestReports', collectionOptions);\n/**\n * @property VelocityTestReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.TestReports`\n */\nVelocityTestReports = Velocity.Collections.TestReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.AggregateReports\n * @type Mongo.Collection\n */\nVelocity.Collections.AggregateReports = new Mongo.Collection('velocityAggregateReports', collectionOptions);\n/**\n * TODO: Needs description and example records\n *\n * @property VelocityAggregateReports\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.AggregateReports`\n */\nVelocityAggregateReports = Velocity.Collections.AggregateReports;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Logs\n * @type Mongo.Collection\n */\nVelocity.Collections.Logs = new Mongo.Collection('velocityLogs', collectionOptions);\n/**\n * @property VelocityLogs\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Logs`\n */\nVelocityLogs = Velocity.Collections.Logs;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Mirrors\n * @type Mongo.Collection\n */\nVelocity.Collections.Mirrors = new Mongo.Collection('velocityMirrors', collectionOptions);\n/**\n * @property VelocityMirrors\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Mirrors`\n */\nVelocityMirrors = Velocity.Collections.Mirrors;\n\n\n/**\n * TODO: Needs description and example records\n *\n * @property Velocity.Collections.Options\n * @type Mongo.Collection\n */\nVelocity.Collections.Options = new Mongo.Collection('velocityOptions', collectionOptions);\n/**\n * @property VelocityOptions\n * @type Mongo.Collection\n * @deprecated Use `Velocity.Collections.Options`\n */\nVelocityOptions = Velocity.Collections.Options;\n\n\n(function () {\n  'use strict';\n\n  if (Meteor.isServer) {\n    Meteor.publish('VelocityTestFiles', function () {\n      return Velocity.Collections.TestFiles.find({});\n    });\n    Meteor.publish('VelocityFixtureFiles', function () {\n      return Velocity.Collections.FixtureFiles.find({});\n    });\n    Meteor.publish('VelocityTestReports', function () {\n      return Velocity.Collections.TestReports.find({});\n    });\n    Meteor.publish('VelocityAggregateReports', function () {\n      return VelocityAggregateReports.find({});\n    });\n    Meteor.publish('VelocityLogs', function () {\n      return VelocityLogs.find({});\n    });\n    Meteor.publish('VelocityMirrors', function () {\n      return VelocityMirrors.find({});\n    });\n    Meteor.publish('VelocityOptions', function () {\n      return VelocityOptions.find({});\n    });\n  }\n\n  if (Meteor.isClient) {\n    Meteor.subscribe('VelocityTestFiles');\n    Meteor.subscribe('VelocityFixtureFiles');\n    Meteor.subscribe('VelocityTestReports');\n    Meteor.subscribe('VelocityAggregateReports');\n    Meteor.subscribe('VelocityLogs');\n    Meteor.subscribe('VelocityMirrors');\n    Meteor.subscribe('VelocityOptions');\n  }\n})();\n","/**\n * Get an option\n *\n * @method velocity/getOption\n * @param {String} name The name of the option.\n * @return {*} The value of the option or null.\n */\nVelocity.Methods['velocity/getOption'] = function (name) {\n  check(name, String);\n\n  var option = Velocity.Collections.Options.findOne({name: name});\n  return option ? option.value : null;\n};\n","/**\n * Set an option.\n *\n * @method velocity/setOption\n * @for Meteor.methods\n * @param {String} name The name of the option.\n * @param {*} value The value of the option.\n */\nVelocity.Methods['velocity/setOption'] = function (name, value) {\n  check(name, String);\n  check(value, Match.Any);\n\n  Velocity.Collections.Options.upsert(\n    {name: name},\n    {$set: {name: name, value: value}}\n  );\n};\n","/**\n * Set multiple options.\n *\n * @method velocity/setOptions\n * @param options Hash with options (name: value).\n */\nVelocity.Methods['velocity/setOptions'] = function (options) {\n  check(options, Object);\n\n  for (var name in options) {\n    if (options.hasOwnProperty(name)) {\n      Meteor.call('velocity/setOption', name, options[name]);\n    }\n  }\n};\n","Meteor.methods(Velocity.Methods);\n","(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // Public Methods\n  //\n\n  /**\n   * Mirrors can share the same codebase as the main process.\n   * This method will run provided code inside a mirror only.\n   *\n   * where: client / server\n   *\n   * @method onTest\n   * @for Velocity\n   * @param {Function} code\n   */\n  Velocity.onTest = function (code) {\n    Meteor.call('velocity/isMirror', function (err, res) {\n      if (res) {\n        code();\n      }\n    });\n  };\n\n  if (Meteor.isServer) {\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOption\">velocity/setOption</a>\n     *\n     * @method setOption\n     */\n    Velocity.setOption = function (name, value) {\n      Meteor.call('velocity/setOption', name, value);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/setOptions\">velocity/setOptions</a>\n     *\n     * @method setOptions\n     */\n    Velocity.setOptions = function (options) {\n      Meteor.call('velocity/setOptions', options);\n    };\n\n    /**\n     * See <a href=\"Meteor.methods.html#method_velocity/getOption\">velocity/getOption</a>\n     *\n     * @method getOption\n     * @for Velocity\n     */\n    Velocity.getOption = function (name) {\n      return Meteor.call('velocity/getOption', name);\n    };\n  }\n\n})();\n"]}}]