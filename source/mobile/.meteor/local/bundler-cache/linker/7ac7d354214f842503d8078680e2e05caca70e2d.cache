[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar moment = Package['momentjs:moment'].moment;\nvar DefaultRoutes = Package['ihealth:utils'].DefaultRoutes;\nvar h = Package['ihealth:utils'].h;\nvar IH = Package['ihealth:utils'].IH;\nvar React = Package['react-runtime'].React;\nvar ReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nvar Roles = Package['alanning:roles'].Roles;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar FlowRouter = Package['kadira:flow-router'].FlowRouter;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar FastRender = Package['meteorhacks:fast-render'].FastRender;\nvar __init_fast_render = Package['meteorhacks:fast-render'].__init_fast_render;\nvar FastClick = Package.fastclick.FastClick;\nvar babelHelpers = Package['babel-runtime'].babelHelpers;\nvar Mongo = Package.mongo.Mongo;\n\n/* Package-scope variables */\nvar RC, fw;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/framework.jsx                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC = {};                                                                                                              // 2\n                                                                                                                      //\nRC.NotFound = React.createClass({                                                                                     // 4\n  displayName: \"NotFound\",                                                                                            //\n                                                                                                                      //\n  render: function () {                                                                                               // 5\n    return React.createElement(                                                                                       // 6\n      \"div\",                                                                                                          //\n      { className: \"table bg-brand-light\" },                                                                          //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"inside center\" },                                                                               //\n        React.createElement(                                                                                          //\n          \"h4\",                                                                                                       //\n          null,                                                                                                       //\n          \"Component Not Found\"                                                                                       //\n        )                                                                                                             //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nRC.Avatar = React.createClass({                                                                                       // 14\n  displayName: \"Avatar\",                                                                                              //\n                                                                                                                      //\n  render: function () {                                                                                               // 15\n    if (!this.props.src && !this.props.uiClass) return null;                                                          // 16\n                                                                                                                      //\n    return React.createElement(                                                                                       // 18\n      \"figure\",                                                                                                       //\n      { className: \"avatar background round overflow\" + (this.props.src ? \"\" : \" none\"), style: this.props.src ? { backgroundImage: \"url(\" + this.props.src + \")\" } : {} },\n      !this.props.src ? React.createElement(RC.uiIcon, { theme: this.props.theme, uiClass: this.props.uiClass, uiColor: this.props.uiColor, uiSize: this.props.uiSize }) : null\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nRC.uiIcon = React.createClass({                                                                                       // 24\n  displayName: \"uiIcon\",                                                                                              //\n                                                                                                                      //\n  propTypes: {                                                                                                        // 25\n    uiClass: React.PropTypes.string,                                                                                  // 26\n    // uiSize: THIS IS FLEXIBLE                                                                                       //\n    // uiBrand: THIS IS FLEXIBLE                                                                                      //\n    uiColor: React.PropTypes.string                                                                                   // 29\n  },                                                                                                                  //\n  render: function () {                                                                                               // 31\n    if (!this.props.uiClass) return null;                                                                             // 32\n                                                                                                                      //\n    // Round to closest 5 decimals                                                                                    //\n    // let uiOpacity = !this.props.uiOpacity ? 75 : Number(this.props.uiOpacity)*100                                  //\n    // uiOpacity = 5 * Math.round(uiOpacity/5)                                                                        //\n                                                                                                                      //\n    var styles = {};                                                                                                  // 38\n    var brandNum = _.isNumber(this.props.uiBrand) ? this.props.uiBrand : this.props.uiBrand || -1;                    // 39\n    var sizeList = [\"\", \"fa-lg\", \"fa-2x\", \"fa-3x\", \"fa-4x\", \"fa-5x\"];                                                 // 40\n    var brandList = [\"bg-brand\", \"bg-brand2\", \"bg-brand3\"];                                                           // 41\n                                                                                                                      //\n    // Brand                                                                                                          //\n    if (_.isString(brandNum) && _.contains([\"brand\", \"brand1\", \"brand2\", \"brand3\"], brandNum)) brandNum = ({          // 44\n      brand: 0,                                                                                                       // 46\n      brand1: 0,                                                                                                      // 47\n      brand2: 1,                                                                                                      // 48\n      brand3: 2                                                                                                       // 49\n    })[brandNum];                                                                                                     //\n                                                                                                                      //\n    var classList = [\"fa\", \"fa-\" + this.props.uiClass.trim(), this.props.className || \"\"];                            // 52\n                                                                                                                      //\n    // Color                                                                                                          //\n    if (h.checkColorClass(this.props.uiColor)) classList.push(this.props.uiColor);else if (this.props.uiColor) styles.color = this.props.uiColor;\n                                                                                                                      //\n    // Size                                                                                                           //\n    if (_.isNumber(this.props.uiSize) && this.props.uiSize % 1 == 0) classList.push(sizeList[this.props.uiSize] || sizeList[1]);else if (_.contains(sizeList, this.props.uiSize)) classList.push(this.props.uiSize);else if (this.props.uiSize) styles.fontSize = this.props.uiSize;\n                                                                                                                      //\n    var ui = React.createElement(\"i\", { className: classList.join(\" \"), style: styles });                             // 72\n    return brandNum >= 0 ? React.createElement(                                                                       // 73\n      \"span\",                                                                                                         //\n      { className: \"fa-wrap \" + (brandList[brandNum] || brandList[0]) },                                              //\n      ui                                                                                                              //\n    ) : ui;                                                                                                           //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nRC.VerticalAlign = React.createClass({                                                                                // 77\n  displayName: \"VerticalAlign\",                                                                                       //\n                                                                                                                      //\n  render: function () {                                                                                               // 78\n    if (!this.props.children) return null;                                                                            // 79\n    var style = this.props.height ? { height: this.props.height } : {};                                               // 80\n                                                                                                                      //\n    return React.createElement(                                                                                       // 82\n      \"div\",                                                                                                          //\n      { className: \"table\" },                                                                                         //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"inside \" + (this.props.className || \"\") + (this.props.center ? \" center\" : \"\"), style: style },\n        this.props.children                                                                                           //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nRC.URL = React.createClass({                                                                                          // 90\n  displayName: \"URL\",                                                                                                 //\n                                                                                                                      //\n  render: function () {                                                                                               // 91\n                                                                                                                      //\n    var props = _.omit(this.props, [\"tagName\"]);                                                                      // 93\n                                                                                                                      //\n    if (props.href) return React.createElement(                                                                       // 95\n      \"a\",                                                                                                            //\n      props,                                                                                                          //\n      props.children                                                                                                  //\n    );else {                                                                                                          //\n      var keys = _.keys(props);                                                                                       // 98\n      if (_.intersection(keys, [\"onClick\", \"onTouchTap\", \"onTouch\"]).length) props.className = (props.className || \"\") + \" cursor\";\n                                                                                                                      //\n      if (_.isString(props.tagName)) return React.createElement(this.props.tagName, props, props.children);           // 102\n                                                                                                                      //\n      return React.createElement(                                                                                     // 105\n        \"span\",                                                                                                       //\n        props,                                                                                                        //\n        props.children                                                                                                //\n      );                                                                                                              //\n    }                                                                                                                 //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nRC.Animate = React.addons.CSSTransitionGroup;                                                                         // 110\n                                                                                                                      //\nRC.Mixins = {                                                                                                         // 112\n  // @@@@@                                                                                                            //\n  // Theme Mixins                                                                                                     //\n  Theme: {                                                                                                            // 115\n    getTheme: function (t) {                                                                                          // 116\n      var classList = [];                                                                                             // 117\n      var self = this;                                                                                                // 118\n      var themeList = h.strToArray(t || this.props.theme || this.themeDefault || \"regular\");                          // 119\n                                                                                                                      //\n      if (_.isString(this.themeGroup)) classList.push(this.themeGroup);                                               // 121\n                                                                                                                      //\n      if (_.isArray(this.themes) || t) {                                                                              // 124\n        _.map(_.intersection(self.themes, themeList), function (t) {                                                  // 125\n          classList.push(_.isString(self.themeGroup) ? self.themeGroup + \"-\" + t : t);                                // 126\n        });                                                                                                           //\n      }                                                                                                               //\n                                                                                                                      //\n      if (_.isString(this.props.className)) classList.push(this.props.className);                                     // 132\n                                                                                                                      //\n      return classList.join(\" \");                                                                                     // 135\n    }                                                                                                                 //\n  },                                                                                                                  //\n  // @@@@@                                                                                                            //\n  // Premade Mixins                                                                                                   //\n  Premade: {                                                                                                          // 140\n    makeAvatarItem: function (props) {                                                                                // 141\n                                                                                                                      //\n      if (_.isUndefined(props)) props = this.props;                                                                   // 143\n      var keys = _.keys(props);                                                                                       // 144\n                                                                                                                      //\n      if (_.intersection(keys, [\"title\", \"subtitle\", \"avatar\", \"uiClass\"]).length) {                                  // 146\n        var uiKeys = [\"uiClass\", \"uiSize\", \"uiBrand\", \"uiColor\"];                                                     // 147\n                                                                                                                      //\n        if (props.avatar) var avatar = React.createElement(\"img\", { src: props.avatar });else if (_.intersection(keys, uiKeys).length) {\n          var uiProps = fw.pickProps(props, uiKeys);                                                                  // 152\n          var avatar = React.createElement(RC.uiIcon, uiProps);                                                       // 153\n        }                                                                                                             //\n                                                                                                                      //\n        return React.createElement(                                                                                   // 156\n          RC.Item,                                                                                                    // 156\n          { theme: props.avatar || props.uiClass ? \"avatar\" : null },                                                 //\n          avatar,                                                                                                     //\n          props.title ? React.createElement(                                                                          //\n            \"h2\",                                                                                                     //\n            null,                                                                                                     //\n            props.title                                                                                               //\n          ) : null,                                                                                                   //\n          props.subtitle ? React.createElement(                                                                       //\n            \"p\",                                                                                                      //\n            null,                                                                                                     //\n            props.subtitle                                                                                            //\n          ) : null                                                                                                    //\n        );                                                                                                            //\n      }                                                                                                               //\n      return null;                                                                                                    // 162\n    }                                                                                                                 //\n  }                                                                                                                   //\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/framework_helpers.jsx                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nfw = {                                                                                                                // 2\n  getDateFromProps: function (date, format, defaultFormat) {                                                          // 3\n    if (!_.isDate(date)) return date;                                                                                 // 4\n                                                                                                                      //\n    var dateFormat = format || defaultFormat || \"MM/DD/YY\";                                                           // 6\n                                                                                                                      //\n    if (_.isDate(date)) {                                                                                             // 8\n      date = moment(date);                                                                                            // 9\n      date = dateFormat == \"ago\" ? date.fromNow(true) : date.format(dateFormat);                                      // 10\n    }                                                                                                                 //\n                                                                                                                      //\n    return date;                                                                                                      // 13\n  },                                                                                                                  //\n  uniformChildren: function (unfilteredChildren, filter) {                                                            // 15\n    if (!unfilteredChildren) return [];                                                                               // 16\n    var children = !unfilteredChildren.map ? [unfilteredChildren] : unfilteredChildren;                               // 17\n                                                                                                                      //\n    children = children.map(function (c) {                                                                            // 19\n      if (c.type != \"div\" && _.isString(c)) c = React.createElement(                                                  // 20\n        \"div\",                                                                                                        //\n        null,                                                                                                         //\n        c                                                                                                             //\n      );                                                                                                              //\n      return c;                                                                                                       // 22\n    });                                                                                                               //\n                                                                                                                      //\n    return _.filter(children.map(function (c, n) {                                                                    // 25\n                                                                                                                      //\n      if (_.isString(c.type)) {                                                                                       // 27\n        return c;                                                                                                     // 28\n      } else if (c.type.displayName) {                                                                                //\n        if (filter && filter != c.type.displayName) {                                                                 // 30\n          console.warn(\"Child was rejected because it did not pass the name filter (\" + filter + \").\");               // 31\n          return undefined;                                                                                           // 32\n        }                                                                                                             //\n      } else {                                                                                                        //\n        return c;                                                                                                     // 36\n      }                                                                                                               //\n    }), function (c) {                                                                                                //\n      return !_.isUndefined(c);                                                                                       // 39\n    });                                                                                                               //\n  },                                                                                                                  //\n  uiKeys: [\"uiClass\", \"uiSize\", \"uiColor\"],                                                                           // 42\n  uiKeysCircle: [\"uiClass\", \"uiSize\", \"uiColor\", \"uiBrand\"],                                                          // 43\n  omitProps: function (props, filterList) {                                                                           // 44\n    if (!_.isArray(filterList) || !filterList.length) return props;                                                   // 45\n    return _.omit(props, filterList);                                                                                 // 47\n  },                                                                                                                  //\n  pickProps: function (props, filterList) {                                                                           // 49\n    if (!_.isArray(filterList) || !filterList.length) return props;                                                   // 50\n    return _.pick(props, filterList);                                                                                 // 52\n  }                                                                                                                   //\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/card/card.jsx                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\n// let themes = [\"regular\",\"no-edges\"]                                                                                //\nvar themes = [];                                                                                                      // 3\n                                                                                                                      //\nRC.Card = React.createClass({                                                                                         // 5\n  displayName: \"Card\",                                                                                                //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme, RC.Mixins.Premade],                                                                       // 6\n  themeGroup: \"card\",                                                                                                 // 7\n  themes: themes,                                                                                                     // 8\n  propTypes: {                                                                                                        // 9\n    title: React.PropTypes.string,                                                                                    // 10\n    subtitle: React.PropTypes.string,                                                                                 // 11\n    avatar: React.PropTypes.string,                                                                                   // 12\n    uiClass: React.PropTypes.string,                                                                                  // 13\n                                                                                                                      //\n    theme: React.PropTypes.string,                                                                                    // 15\n    id: React.PropTypes.string,                                                                                       // 16\n    className: React.PropTypes.string,                                                                                // 17\n    style: React.PropTypes.object                                                                                     // 18\n  },                                                                                                                  //\n                                                                                                                      //\n  render: function () {                                                                                               // 21\n    var header = this.makeAvatarItem();                                                                               // 22\n    var children = fw.uniformChildren(this.props.children, \"Item\");                                                   // 23\n    if (!children.length && !header) return null;                                                                     // 24\n                                                                                                                      //\n    return React.createElement(                                                                                       // 26\n      \"div\",                                                                                                          //\n      { className: this.getTheme() },                                                                                 //\n      header,                                                                                                         //\n      children                                                                                                        //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.Card.Help = {                                                   // 33\n  Type: \"Canvas\",                                                                                                     // 35\n  Themes: themes,                                                                                                     // 36\n  PropTypes: {                                                                                                        // 37\n    theme: \"String\",                                                                                                  // 38\n    avatar: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',                               // 39\n    title: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',                                // 40\n    subtitle: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',                             // 41\n    uiClass: \"String (FontAwesome)\",                                                                                  // 42\n    uiColor: \"String or HEX\",                                                                                         // 43\n    uiBrand: \"Flexible\",                                                                                              // 44\n    uiSize: \"Flexible\"                                                                                                // 45\n  },                                                                                                                  //\n  Description: \"Creates a card component. Similar to cards found in many Social Networking apps such as Facebook, Instagram, Twitter, or Pinterest, etc.\"\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/item/item.jsx                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nvar themes = [\"icon-left item-text-wrap\", \"text-wrap\", \"body\", \"divider\", \"avatar\", \"image\", \"tabs\", \"icon-left\", \"icon-right\", \"thumbnail-left\", \"thumbnail-right\"];\nRC.Item = React.createClass({                                                                                         // 3\n  displayName: \"Item\",                                                                                                //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 4\n  themeGroup: \"item\",                                                                                                 // 5\n  themes: themes,                                                                                                     // 6\n                                                                                                                      //\n  propTypes: {                                                                                                        // 8\n    uiClass: React.PropTypes.string,                                                                                  // 9\n    uiColor: React.PropTypes.string,                                                                                  // 10\n    uiBrand: React.PropTypes.number,                                                                                  // 11\n    // uiSize: IS FLEXIBLE                                                                                            //\n                                                                                                                      //\n    avatar: React.PropTypes.string,                                                                                   // 14\n    title: React.PropTypes.string,                                                                                    // 15\n    subtitle: React.PropTypes.string,                                                                                 // 16\n    iconAlign: React.PropTypes.string,                                                                                // 17\n    note: React.PropTypes.string,                                                                                     // 18\n                                                                                                                      //\n    theme: React.PropTypes.string,                                                                                    // 20\n    id: React.PropTypes.string,                                                                                       // 21\n    className: React.PropTypes.string,                                                                                // 22\n    style: React.PropTypes.object                                                                                     // 23\n  },                                                                                                                  //\n  render: function () {                                                                                               // 25\n    var _this = this;                                                                                                 //\n                                                                                                                      //\n    var self = this;                                                                                                  // 27\n    var uiKeys = [\"uiClass\", \"uiSize\", \"uiColor\"];                                                                    // 28\n    var themeList = h.strToArray(this.props.theme);                                                                   // 29\n                                                                                                                      //\n    if (_.contains(themeList, \"tabs\")) {                                                                              // 31\n      var _ret = (function () {                                                                                       //\n        var list = _.isArray(_this.props.list) ? _this.props.list : [];                                               // 32\n        var iconAlign = _.contains([\"left\", \"right\"], _this.props.iconAlign) ? _this.props.iconAlign : \"left\";        // 33\n                                                                                                                      //\n        // @@@@@                                                                                                      //\n        // Tabs @@                                                                                                    //\n        return {                                                                                                      // 37\n          v: React.createElement(                                                                                     //\n            \"div\",                                                                                                    //\n            { className: \"item tabs tabs-icon-\" + iconAlign },                                                        //\n            list.map(function (t, n) {                                                                                //\n              var aProps = fw.omitProps(t, uiKeys);                                                                   // 39\n              var ui = null;                                                                                          // 40\n                                                                                                                      //\n              if (_.intersection(_.keys(t), uiKeys).length) {                                                         // 42\n                if (_.isUndefined(t.uiSize)) t.uiSize = \"1.75em\";                                                     // 43\n                var _uiProps = _.pick(t, uiKeys);                                                                     // 44\n                ui = React.createElement(RC.uiIcon, _uiProps);                                                        // 45\n              }                                                                                                       //\n                                                                                                                      //\n              return React.createElement(                                                                             // 48\n                RC.URL,                                                                                               // 48\n                babelHelpers._extends({}, aProps, { className: \"tab-item\", key: n }),                                 //\n                ui && iconAlign == \"left\" ? ui : null,                                                                //\n                t.label,                                                                                              //\n                ui && iconAlign == \"right\" ? ui : null                                                                //\n              );                                                                                                      //\n            })                                                                                                        //\n          )                                                                                                           //\n        };                                                                                                            //\n      })();                                                                                                           //\n                                                                                                                      //\n      if (typeof _ret === \"object\") return _ret.v;                                                                    //\n    }                                                                                                                 //\n                                                                                                                      //\n    // @@@@@                                                                                                          //\n    // Default @                                                                                                      //\n    var avatar = [];                                                                                                  // 59\n    var title = null;                                                                                                 // 60\n    var subtitle = null;                                                                                              // 61\n    var custTheme = null;                                                                                             // 62\n                                                                                                                      //\n    var keys = _.keys(this.props);                                                                                    // 64\n    var uiKeysAvatar = [\"uiClass\", \"uiSize\", \"uiBrand\", \"uiColor\"];                                                   // 65\n                                                                                                                      //\n    var aProps = _.omit(this.props, uiKeys.concat([\"label\", \"uiBrand\"]));                                             // 67\n                                                                                                                      //\n    if (_.intersection([\"avatar\", \"icon-left\", \"icon-right\", \"thumbnail-left\", \"thumbnail-right\"], themeList).length) {\n                                                                                                                      //\n      if (_.intersection([\"avatar\", \"thumbnail-left\", \"thumbnail-right\"], themeList).length) {                        // 71\n        // @@@@@                                                                                                      //\n        // Avatar & Thumbnail                                                                                         //\n        // @@@@@                                                                                                      //\n        if (_.intersection(keys, [\"title\", \"subtitle\", \"avatar\", \"uiClass\"]).length) {                                // 75\n          if (this.props.avatar) {                                                                                    // 76\n            avatar.push(React.createElement(\"img\", { src: this.props.avatar }));                                      // 77\n            if (this.props.uiClass) {                                                                                 // 78\n              custTheme = this.props.theme + \" icon-right\";                                                           // 79\n              avatar.push(React.createElement(RC.uiIcon, fw.pickProps(this.props, uiKeys)));                          // 80\n            }                                                                                                         //\n          } else if (this.props.uiClass) {                                                                            //\n            var uiProps = fw.pickProps(this.props, uiKeys.concat(\"uiBrand\"));                                         // 83\n            if (_.isUndefined(uiProps.uiBrand)) uiProps.uiBrand = 0;                                                  // 84\n            avatar.push(React.createElement(RC.uiIcon, uiProps));                                                     // 86\n          }                                                                                                           //\n                                                                                                                      //\n          if (this.props.title) title = React.createElement(                                                          // 89\n            \"h2\",                                                                                                     //\n            null,                                                                                                     //\n            this.props.title                                                                                          //\n          );                                                                                                          //\n          if (this.props.subtitle) subtitle = React.createElement(                                                    // 90\n            \"p\",                                                                                                      //\n            null,                                                                                                     //\n            this.props.subtitle                                                                                       //\n          );                                                                                                          //\n        }                                                                                                             //\n      } else {                                                                                                        //\n        // @@@@@                                                                                                      //\n        // Icon Left, Right or Both                                                                                   //\n        // @@@@@                                                                                                      //\n        if (_.intersection(_.keys(this.props), uiKeys).length) {                                                      // 96\n          (function () {                                                                                              //\n            uiKeys.push(\"tagName\");                                                                                   // 97\n            var uiLoop = _.object(uiKeys, _.map(uiKeys, function (u) {                                                // 98\n              if (_.isString(self.props[u])) return self.props[u].split(\",\");else return [];                          // 99\n            }));                                                                                                      //\n                                                                                                                      //\n            _.map(uiLoop.uiClass, function (thisClass, n) {                                                           // 105\n              avatar.push(React.createElement(RC.uiIcon, {                                                            // 106\n                uiClass: thisClass.trim(),                                                                            // 107\n                uiSize: _.isUndefined(uiLoop.uiSize[n]) ? \"1.75em\" : uiLoop.uiSize[n],                                // 108\n                uiColor: uiLoop.uiColor[n] || \"\",                                                                     // 109\n                tagName: uiLoop.tagName[n] || \"div\"                                                                   // 110\n              }));                                                                                                    //\n            });                                                                                                       //\n          })();                                                                                                       //\n        }                                                                                                             //\n                                                                                                                      //\n        title = this.props.label || \"\";                                                                               // 115\n      }                                                                                                               //\n    }                                                                                                                 //\n                                                                                                                      //\n    if (avatar[1]) var trail = avatar[1];else if (this.props.note) var trail = React.createElement(                   // 119\n      \"span\",                                                                                                         //\n      { className: \"item-note\" },                                                                                     //\n      this.props.note                                                                                                 //\n    );else var trail = null;                                                                                          //\n                                                                                                                      //\n    return React.createElement(                                                                                       // 126\n      RC.URL,                                                                                                         // 126\n      babelHelpers._extends({}, aProps, { tagName: aProps.tagName || \"div\", className: this.getTheme(custTheme) }),   //\n      avatar[0],                                                                                                      //\n      title || subtitle ? React.createElement(                                                                        //\n        \"div\",                                                                                                        //\n        null,                                                                                                         //\n        title,                                                                                                        //\n        subtitle                                                                                                      //\n      ) : null,                                                                                                       //\n      this.props.children,                                                                                            //\n      trail                                                                                                           //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.Item.Help = {                                                   // 136\n  Type: \"Item\",                                                                                                       // 138\n  Themes: themes,                                                                                                     // 139\n  PropTypes: {                                                                                                        // 140\n    theme: \"String\",                                                                                                  // 141\n    uiClass: \"String\",                                                                                                // 142\n    uiColor: \"String\",                                                                                                // 143\n    uiSize: \"Flexible\",                                                                                               // 144\n    uiBrand: \"Flexible\",                                                                                              // 145\n                                                                                                                      //\n    avatar: \"String (Used to auto-create Avatar Head Design)\",                                                        // 147\n    title: \"String (Used to auto-create Avatar Head Design)\",                                                         // 148\n    subtitle: \"String (Used to auto-create Avatar Head Design)\",                                                      // 149\n                                                                                                                      //\n    iconAlign: \"String (Used for \\\"tabs\\\" theme only)\",                                                               // 151\n    note: \"String (Small text to the right)\"                                                                          // 152\n  },                                                                                                                  //\n  Description: \"Use this component inside RC.Card or RC.List. This is a very versatile inner component with many themes and options.\"\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/chat/chatBubble.jsx                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC.ChatBubble = React.createClass({                                                                                   // 2\n  displayName: \"ChatBubble\",                                                                                          //\n                                                                                                                      //\n  // getInitialState(){                                                                                               //\n  //   return {                                                                                                       //\n  //     selected: null                                                                                               //\n  //   }                                                                                                              //\n  // },                                                                                                               //\n  getTheme: function (name) {                                                                                         // 8\n    var theme = _.contains([\"regular\"], name) ? name : \"regular\";                                                     // 9\n    return theme;                                                                                                     // 11\n  },                                                                                                                  //\n  render: function () {                                                                                               // 13\n    // let curState = this.state.selected // Currently unused                                                         //\n    var classList = [\"chat-bubble\", this.props.className || \"\", this.props.isUser ? \"to\" : \"from\", this.props.firstOfGroup ? \"first\" : \"\", this.getTheme(this.props.theme)];\n    var date = _.isDate(this.props.date) ? this.props.date : false;                                                   // 22\n                                                                                                                      //\n    return React.createElement(                                                                                       // 24\n      \"div\",                                                                                                          //\n      { className: classList.join(\" \"), id: this.props.id },                                                          //\n      this.props.showDateBreak && date ? React.createElement(                                                         //\n        \"div\",                                                                                                        //\n        { className: \"date-break\" },                                                                                  //\n        React.createElement(                                                                                          //\n          \"span\",                                                                                                     //\n          { className: \"inline-block\" },                                                                              //\n          moment(date).format(\"dddd, MMM D, YYYY\")                                                                    //\n        )                                                                                                             //\n      ) : null,                                                                                                       //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"inner normal\", \"data-time\": date ? moment(date).format(\"h:mm a\") : \"\" },                        //\n        !this.props.firstOfGroup || this.props.isUser ? null : React.createElement(                                   //\n          \"div\",                                                                                                      //\n          { className: \"author alt-thick\" },                                                                          //\n          React.createElement(RC.Avatar, { src: this.props.avatar, uiClass: _.contains([\"male\", \"female\"], this.props.gender) ? this.props.gender : \"male\" }),\n          this.props.name                                                                                             //\n        ),                                                                                                            //\n        React.createElement(                                                                                          //\n          \"p\",                                                                                                        //\n          null,                                                                                                       //\n          this.props.message                                                                                          //\n        )                                                                                                             //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/chat/chatTextarea.jsx                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC.ChatTextArea = React.createClass({                                                                                 // 2\n  displayName: \"ChatTextArea\",                                                                                        //\n                                                                                                                      //\n  getTheme: function (name) {                                                                                         // 3\n    var theme = _.contains([\"regular\", \"opacity\", \"flat\"], name) ? name : \"regular\";                                  // 4\n    return theme;                                                                                                     // 6\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 8\n    return {                                                                                                          // 9\n      selected: null                                                                                                  // 10\n    };                                                                                                                //\n  },                                                                                                                  //\n  clickHandler: function (e) {                                                                                        // 13\n    if (_.isFunction(this.props.onSubmit)) {                                                                          // 14\n      e.preventDefault();                                                                                             // 15\n      this.props.onSubmit(this.refs.msg.getDOMNode().value);                                                          // 16\n      this.refs.msg.getDOMNode().value = \"\";                                                                          // 17\n    }                                                                                                                 //\n  },                                                                                                                  //\n  keyHandler: function (e) {                                                                                          // 20\n    if (e.which == 13) this.clickHandler(e);                                                                          // 21\n  },                                                                                                                  //\n  // getTheme(name){                                                                                                  //\n  //   let theme = _.contains([\"regular\",\"chat\"], name)                                                               //\n  //     ? name : \"regular\"                                                                                           //\n  //   return theme                                                                                                   //\n  // },                                                                                                               //\n  render: function () {                                                                                               // 28\n                                                                                                                      //\n    var classList = [\"chat-textarea\", this.getTheme(this.props.theme), this.props.className || \"\"];                   // 30\n                                                                                                                      //\n    return React.createElement(                                                                                       // 36\n      \"div\",                                                                                                          //\n      { id: this.props.id },                                                                                          //\n      React.createElement(\"div\", { className: \"chat-textarea-spacer\" }),                                              //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: classList.join(\" \") },                                                                           //\n        React.createElement(\"textarea\", { ref: \"msg\", value: this.props.value, name: this.props.name, placeholder: this.props.placeholder, onKeyDown: this.keyHandler }),\n        React.createElement(                                                                                          //\n          \"button\",                                                                                                   //\n          { onClick: this.clickHandler },                                                                             //\n          React.createElement(RC.uiIcon, { uiClass: this.props.uiClass || \"paper-plane\", uiColor: \"white\" })          //\n        )                                                                                                             //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/globalNav/globalNav.jsx                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nvar themes = [\"regular\", \"opacity\", \"flat\"];                                                                          // 2\nRC.GlobalNav = React.createClass({                                                                                    // 3\n  displayName: \"GlobalNav\",                                                                                           //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 4\n  themeGroup: \"\",                                                                                                     // 5\n  themes: themes,                                                                                                     // 6\n                                                                                                                      //\n  propTypes: {                                                                                                        // 8\n    id: React.PropTypes.string,                                                                                       // 9\n    className: React.PropTypes.string,                                                                                // 10\n    theme: React.PropTypes.string,                                                                                    // 11\n                                                                                                                      //\n    animate: React.PropTypes.bool,                                                                                    // 13\n    isVisible: React.PropTypes.bool,                                                                                  // 14\n    allowLongLabels: React.PropTypes.bool,                                                                            // 15\n    list: React.PropTypes.array                                                                                       // 16\n  },                                                                                                                  //\n                                                                                                                      //\n  getInitialState: function () {                                                                                      // 19\n    return {                                                                                                          // 20\n      selected: null                                                                                                  // 21\n    };                                                                                                                //\n  },                                                                                                                  //\n  clickHandler: function (n, onClick) {                                                                               // 24\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick) this.setState({ selected: n });              // 25\n                                                                                                                      //\n    if (_.isFunction(onClick)) onClick();                                                                             // 28\n  },                                                                                                                  //\n  render: function () {                                                                                               // 31\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null;                                          // 32\n                                                                                                                      //\n    var self = this;                                                                                                  // 34\n    var curState = this.state.selected;                                                                               // 35\n    var curPath = FlowRouter.current().path;                                                                          // 36\n                                                                                                                      //\n    _.every(this.props.list, function (link) {                                                                        // 38\n      var test = link.href == curPath;                                                                                // 39\n      if (test) curState = null;                                                                                      // 40\n      return !test;                                                                                                   // 42\n    });                                                                                                               //\n                                                                                                                      //\n    var location = _.contains([\"auto\", \"top\", \"bottom\"], this.props.location) ? this.props.location : \"auto\";         // 45\n    var isTop = location == \"top\" || location == \"auto\" && h.getPlatform(\"android\"); // This will match Web too       // 46\n                                                                                                                      //\n    var classList = [\"global-nav\", \"center\", \"list-length-\" + Math.min(this.props.list.length, 5), isTop ? \"gnav-top\" : \"gnav-bottom\", this.props.animate ? \"animate\" : \"\", this.props.isVisible ? \"isVisible\" : \"isHidden\", this.props.allowLongLabels ? \"\" : \"even\", this.getTheme(), this.props.className || \"\"];\n                                                                                                                      //\n    return React.createElement(                                                                                       // 58\n      \"div\",                                                                                                          //\n      { className: \"gnav-spacer \" + (isTop && this.props.isVisible ? \"on\" : \"off\") },                                 //\n      React.createElement(                                                                                            //\n        \"nav\",                                                                                                        //\n        { className: classList.join(\" \"), id: this.props.id },                                                        //\n        this.props.list.map(function (item, n) {                                                                      //\n                                                                                                                      //\n          var isCur = n == curState || item.href == curPath;                                                          // 63\n          var itemClasses = [\"transition\", \"inline-block\", \"cursor\", \"menuItem\"];                                     // 64\n                                                                                                                      //\n          if (isCur) itemClasses.push(\"cur\");                                                                         // 66\n          if (item.uiClass) itemClasses.push(\"with-icon\");                                                            // 67\n          if (item.label) itemClasses.push(\"with-label\");                                                             // 68\n                                                                                                                      //\n          return React.createElement(                                                                                 // 70\n            RC.URL,                                                                                                   // 70\n            babelHelpers._extends({}, _.omit(item, [\"className\", \"onClick\"]), { className: itemClasses.join(\" \"), onClick: self.clickHandler.bind(null, n, item.onClick), key: n }),\n            item.uiClass ? React.createElement(RC.uiIcon, { uiClass: isCur && item.uiClassCur ? item.uiClassCur : item.uiClass, uiColor: isCur && item.uiColorCur ? item.uiColorCur : item.uiColor, uiSize: item.uiSize }) : null,\n            item.label ? React.createElement(                                                                         //\n              \"span\",                                                                                                 //\n              { className: \"fn-label ellipsis\" },                                                                     //\n              item.label                                                                                              //\n            ) : null                                                                                                  //\n          );                                                                                                          //\n        })                                                                                                            //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.GlobalNav.Help = {                                              // 81\n  Type: \"Unique/Canvas\",                                                                                              // 83\n  Themes: themes,                                                                                                     // 84\n  PropTypes: {                                                                                                        // 85\n    animate: \"Boolean\",                                                                                               // 86\n    isVisible: \"Boolean\",                                                                                             // 87\n    allowLongLabels: \"Boolean\",                                                                                       // 88\n    list: \"Array\"                                                                                                     // 89\n  },                                                                                                                  //\n  Description: \"Automatic navigation based on the device type (IOS or Android). Top for Android and bottom for IOS.\"  // 91\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/form/formElements.jsx                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nvar themes_form = [];                                                                                                 // 2\nRC.Form = React.createClass({                                                                                         // 3\n  displayName: \"Form\",                                                                                                //\n                                                                                                                      //\n  getFormData: function () {                                                                                          // 4\n    var formEl = React.findDOMNode(this.refs.rcForm);                                                                 // 5\n    var form = h.serializeForm(formEl);                                                                               // 6\n    return form;                                                                                                      // 7\n  },                                                                                                                  //\n  render: function () {                                                                                               // 9\n    return React.createElement(                                                                                       // 10\n      \"form\",                                                                                                         //\n      babelHelpers._extends({}, this.props, { ref: \"rcForm\" }),                                                       //\n      this.props.children                                                                                             //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <Input/> Form Element                                                                                              //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nvar themes_input = [\"stacked-label\", \"small-label\", \"overlay-light\", \"overlay-dark\"];                                 // 20\nRC.Input = React.createClass({                                                                                        // 21\n  displayName: \"Input\",                                                                                               //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 22\n  themeGroup: \"item\",                                                                                                 // 23\n  themes: themes_input,                                                                                               // 24\n                                                                                                                      //\n  propTypes: {                                                                                                        // 26\n    id: React.PropTypes.string,                                                                                       // 27\n    theme: React.PropTypes.string,                                                                                    // 28\n    value: React.PropTypes.string,                                                                                    // 29\n    name: React.PropTypes.string,                                                                                     // 30\n    placeholder: React.PropTypes.string,                                                                              // 31\n    className: React.PropTypes.string,                                                                                // 32\n    changeHandler: React.PropTypes.func,                                                                              // 33\n    label: React.PropTypes.string,                                                                                    // 34\n    labelColor: React.PropTypes.string,                                                                               // 35\n    error: React.PropTypes.bool,                                                                                      // 36\n    style: React.PropTypes.object,                                                                                    // 37\n    disabled: React.PropTypes.bool                                                                                    // 38\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 40\n    this.setState({ value: this.props.value || false });                                                              // 41\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 43\n    return {                                                                                                          // 44\n      value: false                                                                                                    // 45\n    };                                                                                                                //\n  },                                                                                                                  //\n  getValue: function () {                                                                                             // 48\n    var val = (this.state.value !== false ? this.state.value : this.props.value) || \"\";                               // 49\n    return h.ltrim(val);                                                                                              // 50\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 52\n    this.setState({ value: e.target.value });                                                                         // 53\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(e);                                          // 54\n  },                                                                                                                  //\n  render: function () {                                                                                               // 57\n                                                                                                                      //\n    var inputProps = _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"labelColor\"]);                            // 59\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\";                           // 60\n                                                                                                                      //\n    return React.createElement(                                                                                       // 62\n      \"label\",                                                                                                        //\n      { className: classes },                                                                                         //\n      this.props.label ? React.createElement(                                                                         //\n        \"span\",                                                                                                       //\n        { className: \"input-label\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n        this.props.label                                                                                              //\n      ) : null,                                                                                                       //\n      React.createElement(\"input\", babelHelpers._extends({}, inputProps, { type: this.props.type || \"text\", value: this.getValue(), onChange: this.changeHandler }))\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <Input range/> Form Element                                                                                        //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nRC.Range = React.createClass({                                                                                        // 73\n  displayName: \"Range\",                                                                                               //\n                                                                                                                      //\n  propTypes: {                                                                                                        // 74\n    id: React.PropTypes.string,                                                                                       // 75\n    name: React.PropTypes.string,                                                                                     // 76\n    className: React.PropTypes.string,                                                                                // 77\n    changeHandler: React.PropTypes.func,                                                                              // 78\n                                                                                                                      //\n    value: React.PropTypes.number,                                                                                    // 80\n    min: React.PropTypes.number,                                                                                      // 81\n    max: React.PropTypes.number,                                                                                      // 82\n                                                                                                                      //\n    error: React.PropTypes.bool,                                                                                      // 84\n    style: React.PropTypes.object,                                                                                    // 85\n    disabled: React.PropTypes.bool                                                                                    // 86\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 88\n    return {                                                                                                          // 89\n      value: false                                                                                                    // 90\n    };                                                                                                                //\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 93\n    this.setState({ value: this.props.value || false });                                                              // 94\n  },                                                                                                                  //\n  getValue: function () {                                                                                             // 96\n    return (this.state.value !== false ? this.state.value : this.props.value) || null;                                // 97\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 99\n    this.setState({ value: e.target.value });                                                                         // 100\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(e);                                          // 101\n  },                                                                                                                  //\n  render: function () {                                                                                               // 104\n    var _this = this;                                                                                                 //\n                                                                                                                      //\n    var ui = {};                                                                                                      // 106\n    if (this.props.uiClass) {                                                                                         // 107\n      (function () {                                                                                                  //\n        var self = _this;                                                                                             // 108\n        var uiKeys = [\"uiClass\", \"uiSize\", \"uiColor\"];                                                                // 109\n        ui = _.object(uiKeys, _.map(uiKeys, function (u) {                                                            // 110\n          if (_.isString(self.props[u])) return self.props[u].split(\",\");else return [];                              // 111\n        }));                                                                                                          //\n      })();                                                                                                           //\n    }                                                                                                                 //\n                                                                                                                      //\n    var classes = \"item range\" + (this.props.error ? \" has-error\" : \"\") + (h.checkColorClass(this.props.rangeColor) ? \" range-\" + this.props.rangeColor : \"\");\n                                                                                                                      //\n    return React.createElement(                                                                                       // 120\n      \"div\",                                                                                                          //\n      { className: classes },                                                                                         //\n      ui.uiClass && ui.uiClass[0] ? React.createElement(RC.uiIcon, { uiClass: ui.uiClass[0], uiSize: ui.uiSize[0], uiColor: ui.uiColor[0] }) : null,\n      React.createElement(\"input\", babelHelpers._extends({                                                            //\n        type: \"range\", onChange: this.changeHandler                                                                   // 123\n      }, _.omit(this.props, [\"changeHandler\", \"value\", \"type\"]), {                                                    //\n        value: this.getValue(),                                                                                       // 125\n        min: _.isNumber(this.props.min) ? this.props.min : 0,                                                         // 126\n        max: _.isNumber(this.props.max) ? this.props.max : 100                                                        // 127\n      })),                                                                                                            //\n      ui.uiClass && ui.uiClass[1] ? React.createElement(RC.uiIcon, { uiClass: ui.uiClass[1], uiSize: ui.uiSize[1], uiColor: ui.uiColor[1] }) : null\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <Input checkbox/> Form Element                                                                                     //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nvar themes_checkbox = [\"toggle\"];                                                                                     // 138\nRC.Checkbox = React.createClass({                                                                                     // 139\n  displayName: \"Checkbox\",                                                                                            //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 140\n  themeGroup: \"item\",                                                                                                 // 141\n  themes: themes_checkbox,                                                                                            // 142\n                                                                                                                      //\n  propTypes: {                                                                                                        // 144\n    id: React.PropTypes.string,                                                                                       // 145\n    theme: React.PropTypes.string,                                                                                    // 146\n    value: React.PropTypes.bool,                                                                                      // 147\n    name: React.PropTypes.string,                                                                                     // 148\n    className: React.PropTypes.string,                                                                                // 149\n                                                                                                                      //\n    error: React.PropTypes.bool,                                                                                      // 151\n    style: React.PropTypes.object,                                                                                    // 152\n    disabled: React.PropTypes.bool                                                                                    // 153\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 155\n    return {                                                                                                          // 156\n      value: this.props.value || false // Must be Boolean                                                             // 157\n    };                                                                                                                //\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 160\n    this.setState({ value: this.props.value || false });                                                              // 161\n  },                                                                                                                  //\n  getValue: function () {                                                                                             // 163\n    return _.isBoolean(this.state.value) ? this.state.value : this.props.value;                                       // 164\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 166\n    this.setState({ value: !this.state.value });                                                                      // 167\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(e);                                          // 168\n  },                                                                                                                  //\n  render: function () {                                                                                               // 171\n    var classes = this.getTheme() + (this.props.theme ? \"\" : \" item-checkbox\");                                       // 172\n    var input = React.createElement(\"input\", babelHelpers._extends({}, _.omit(this.props, [\"value\", \"checked\", \"type\"]), { type: \"checkbox\", onChange: function () {}, checked: this.getValue() }));\n    /**                                                                                                               //\n     * NOTE                                                                                                           //\n     * <div> is used instead of <label> to overcome Web/Mobile issues                                                 //\n     */                                                                                                               //\n    switch (this.props.theme) {                                                                                       // 178\n      case \"toggle\":                                                                                                  // 179\n        var checkbox = React.createElement(                                                                           // 180\n          \"div\",                                                                                                      //\n          { className: \"toggle\" + (h.checkColorClass(this.props.uiColor) ? \" toggle-\" + this.props.uiColor : \"\") },   //\n          input,                                                                                                      //\n          React.createElement(                                                                                        //\n            \"div\",                                                                                                    //\n            { className: \"track\" },                                                                                   //\n            React.createElement(\"div\", { className: \"handle\" })                                                       //\n          )                                                                                                           //\n        );                                                                                                            //\n        break;                                                                                                        // 184\n      default:                                                                                                        // 184\n        var checkbox = React.createElement(                                                                           // 186\n          \"span\",                                                                                                     //\n          { className: \"checkbox\" },                                                                                  //\n          input                                                                                                       //\n        );                                                                                                            //\n    }                                                                                                                 // 186\n                                                                                                                      //\n    return React.createElement(                                                                                       // 189\n      \"div\",                                                                                                          //\n      { className: classes, onClick: this.changeHandler },                                                            //\n      this.props.label,                                                                                               //\n      checkbox                                                                                                        //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <Input checkbox/> with Toggle, Form Element                                                                        //\n// @@@@@                                                                                                              //\n//                                                                                                                    //\n// RC.Checkbox = React.createClass({                                                                                  //\n//   propTypes: {                                                                                                     //\n//     id: React.PropTypes.string,                                                                                    //\n//     theme: React.PropTypes.string,                                                                                 //\n//     value: React.PropTypes.bool,                                                                                   //\n//     name: React.PropTypes.string,                                                                                  //\n//     className: React.PropTypes.string,                                                                             //\n//                                                                                                                    //\n//     error: React.PropTypes.bool,                                                                                   //\n//     style: React.PropTypes.object,                                                                                 //\n//     disabled: React.PropTypes.bool,                                                                                //\n//   },                                                                                                               //\n//   getInitialState(){                                                                                               //\n//     return {                                                                                                       //\n//       value: this.props.value || false // Must be Boolean                                                          //\n//     }                                                                                                              //\n//   },                                                                                                               //\n//   getValue(){                                                                                                      //\n//     return _.isBoolean(this.state.value) ? this.state.value : this.props.value                                     //\n//   },                                                                                                               //\n//   changeHandler: function(e) {                                                                                     //\n//     this.setState({value: !this.state.value})                                                                      //\n//     if (_.isFunction(this.props.changeHandler))                                                                    //\n//       this.props.changeHandler(e)                                                                                  //\n//   },                                                                                                               //\n//   render() {                                                                                                       //\n//     let inputProps = _.omit(this.props, [\"value\",\"checked\",\"type\"])                                                //\n//     var classes = \"item-checkbox \"+(this.props.className || \"\")                                                    //\n//     /**                                                                                                            //\n//      * NOTE                                                                                                        //\n//      * <div> is used instead of <label> to overcome Web/Mobile issues                                              //\n//      */                                                                                                            //\n//     return <div className={classes} onClick={this.changeHandler}>                                                  //\n//       <span className=\"checkbox\">                                                                                  //\n//         <input {... inputProps} type=\"checkbox\" onChange={function(){}} checked={this.getValue()} />               //\n//       </span>                                                                                                      //\n//       {this.props.label}                                                                                           //\n//     </div>                                                                                                         //\n//   }                                                                                                                //\n// })                                                                                                                 //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <Input radio/> Form Element                                                                                        //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nRC.RadioGroup = React.createClass({                                                                                   // 245\n  displayName: \"RadioGroup\",                                                                                          //\n                                                                                                                      //\n  propTypes: {                                                                                                        // 246\n    id: React.PropTypes.string,                                                                                       // 247\n    theme: React.PropTypes.string,                                                                                    // 248\n                                                                                                                      //\n    list: React.PropTypes.array,                                                                                      // 250\n    label: React.PropTypes.string,                                                                                    // 251\n    name: React.PropTypes.string,                                                                                     // 252\n    className: React.PropTypes.string,                                                                                // 253\n                                                                                                                      //\n    error: React.PropTypes.bool,                                                                                      // 255\n    style: React.PropTypes.object,                                                                                    // 256\n    disabled: React.PropTypes.bool                                                                                    // 257\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 259\n    var list = _.isArray(this.props.list) ? this.props.list : [];                                                     // 260\n    var self = this;                                                                                                  // 261\n                                                                                                                      //\n    return {                                                                                                          // 263\n      checked: list.map(function (c) {                                                                                // 264\n        return c.value && c.value == self.props.value ? true : false;                                                 // 265\n      })                                                                                                              //\n    };                                                                                                                //\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 269\n    var list = _.isArray(this.props.list) ? this.props.list : [];                                                     // 270\n    var self = this;                                                                                                  // 271\n    var checked = list.map(function (c) {                                                                             // 272\n      return c.value && c.value == self.props.value ? true : false;                                                   // 273\n    });                                                                                                               //\n    this.setState({ checked: checked });                                                                              // 275\n  },                                                                                                                  //\n  getValue: function (n) {                                                                                            // 277\n    var _this2 = this;                                                                                                //\n                                                                                                                      //\n    if (_.isUndefined(n)) {                                                                                           // 278\n      var realVal;                                                                                                    //\n                                                                                                                      //\n      var _ret2 = (function () {                                                                                      //\n        realVal = null;                                                                                               // 279\n                                                                                                                      //\n        var self = _this2;                                                                                            // 280\n        _.every(_this2.state.checked, function (c, nn) {                                                              // 281\n          if (c) realVal = self.props.list[nn].value;                                                                 // 282\n          return !c;                                                                                                  // 284\n        });                                                                                                           //\n        return {                                                                                                      // 286\n          v: realVal                                                                                                  //\n        }; //calphin                                                                                                  //\n      })();                                                                                                           //\n                                                                                                                      //\n      if (typeof _ret2 === \"object\") return _ret2.v;                                                                  //\n    }                                                                                                                 //\n    return this.state.checked[n];                                                                                     // 288\n  },                                                                                                                  //\n  changeHandler: function (n) {                                                                                       // 290\n    var checked = this.state.checked;                                                                                 // 291\n    this.setState({ checked: checked.map(function (c, nn) {                                                           // 292\n        return nn == n;                                                                                               // 293\n      }) });                                                                                                          //\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler();                                           // 295\n  },                                                                                                                  //\n  makeRadio: function (radio, n) {                                                                                    // 298\n    var checked = this.getValue(n);                                                                                   // 299\n    var classes = \"item item-radio \" + (radio.className || \"\");                                                       // 300\n    /**                                                                                                               //\n     * NOTE                                                                                                           //\n     * <div> is used instead of <label> to overcome Web/Mobile issues                                                 //\n     */                                                                                                               //\n    return React.createElement(                                                                                       // 305\n      \"div\",                                                                                                          //\n      { className: classes, key: n, onClick: this.changeHandler.bind(null, n) },                                      //\n      React.createElement(\"input\", babelHelpers._extends({}, _.omit(radio, [\"checked\", \"type\", \"label\"]), { type: \"radio\", onChange: function () {}, checked: checked })),\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"item-content\" },                                                                                //\n        radio.label                                                                                                   //\n      ),                                                                                                              //\n      React.createElement(RC.uiIcon, { uiClass: this.props.uiClass || \"check\", uiColor: this.props.uiColor, uiSize: this.props.uiSize, className: \"radio-fa\" })\n    );                                                                                                                //\n  },                                                                                                                  //\n  render: function () {                                                                                               // 311\n                                                                                                                      //\n    if (!this.props.list.length) return null;                                                                         // 313\n                                                                                                                      //\n    var self = this;                                                                                                  // 315\n    var radioGroup = this.props.name || h.random_string();                                                            // 316\n                                                                                                                      //\n    return React.createElement(                                                                                       // 318\n      \"div\",                                                                                                          //\n      null,                                                                                                           //\n      this.props.list.map(function (g, n) {                                                                           //\n        g.name = radioGroup;                                                                                          // 321\n        return self.makeRadio(g, n);                                                                                  // 322\n      })                                                                                                              //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// <textarea/> Form Element                                                                                           //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nvar themes_textarea = [\"stacked-label\", \"small-label\"];                                                               // 333\nRC.Textarea = React.createClass({                                                                                     // 334\n  displayName: \"Textarea\",                                                                                            //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 335\n  themeGroup: \"item\",                                                                                                 // 336\n  themeDefault: \"stacked-label\",                                                                                      // 337\n  themes: themes_textarea,                                                                                            // 338\n                                                                                                                      //\n  propTypes: {                                                                                                        // 340\n    id: React.PropTypes.string,                                                                                       // 341\n    theme: React.PropTypes.string,                                                                                    // 342\n    value: React.PropTypes.string,                                                                                    // 343\n    name: React.PropTypes.string,                                                                                     // 344\n    placeholder: React.PropTypes.string,                                                                              // 345\n    className: React.PropTypes.string,                                                                                // 346\n    changeHandler: React.PropTypes.func,                                                                              // 347\n    label: React.PropTypes.string,                                                                                    // 348\n    labelColor: React.PropTypes.string,                                                                               // 349\n    error: React.PropTypes.bool,                                                                                      // 350\n    style: React.PropTypes.object,                                                                                    // 351\n    disabled: React.PropTypes.bool                                                                                    // 352\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 354\n    return {                                                                                                          // 355\n      value: false                                                                                                    // 356\n    };                                                                                                                //\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 359\n    this.setState({ value: false });                                                                                  // 360\n  },                                                                                                                  //\n  getValue: function () {                                                                                             // 362\n    return (this.state.value !== false ? this.state.value : this.props.children) || \"\";                               // 363\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 365\n    this.setState({ value: e.target.value });                                                                         // 366\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(e);                                          // 367\n  },                                                                                                                  //\n  render: function () {                                                                                               // 370\n                                                                                                                      //\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\";                           // 372\n                                                                                                                      //\n    return React.createElement(                                                                                       // 374\n      \"label\",                                                                                                        //\n      { className: classes },                                                                                         //\n      this.props.label ? React.createElement(                                                                         //\n        \"span\",                                                                                                       //\n        { className: \"input-label\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n        this.props.label                                                                                              //\n      ) : null,                                                                                                       //\n      React.createElement(\"textarea\", babelHelpers._extends({}, _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"children\", \"labelColor\"]), { type: this.props.type || \"text\", value: this.getValue(), onChange: this.changeHandler }))\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nvar themes_button = [\"full\", \"overlay-light\", \"overlay-dark\", \"circle\"];                                              // 381\nRC.Button = React.createClass({                                                                                       // 382\n  displayName: \"Button\",                                                                                              //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 383\n  themeGroup: \"button\",                                                                                               // 384\n  themes: themes_button,                                                                                              // 385\n                                                                                                                      //\n  propTypes: {                                                                                                        // 387\n    id: React.PropTypes.string,                                                                                       // 388\n    theme: React.PropTypes.string,                                                                                    // 389\n    type: React.PropTypes.string,                                                                                     // 390\n    form: React.PropTypes.string,                                                                                     // 391\n    name: React.PropTypes.string,                                                                                     // 392\n    className: React.PropTypes.string,                                                                                // 393\n    href: React.PropTypes.string                                                                                      // 394\n                                                                                                                      //\n  },                                                                                                                  //\n  render: function () {                                                                                               // 397\n                                                                                                                      //\n    var classes = this.getTheme() + (this.props.buttonColor ? \" button-\" + this.props.buttonColor : \"\");              // 399\n    var themes = h.strToArray(this.props.theme);                                                                      // 400\n    var intersection = _.intersection([\"overlay-light\", \"overlay-dark\"], themes);                                     // 401\n    var button = React.createElement(                                                                                 // 402\n      \"button\",                                                                                                       //\n      babelHelpers._extends({}, this.props, { className: classes }),                                                  //\n      this.props.children                                                                                             //\n    );                                                                                                                //\n                                                                                                                      //\n    if (this.props.href) {                                                                                            // 407\n                                                                                                                      //\n      return React.createElement(                                                                                     // 409\n        \"a\",                                                                                                          //\n        babelHelpers._extends({}, this.props, { className: classes }),                                                //\n        this.props.children                                                                                           //\n      );                                                                                                              //\n    }                                                                                                                 //\n                                                                                                                      //\n    return intersection.length ? React.createElement(                                                                 // 415\n      \"div\",                                                                                                          //\n      { className: \"wrap-\" + intersection[0] + (this.props.active ? \" active\" : \"\") },                                //\n      button                                                                                                          //\n    ) : button;                                                                                                       //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nvar themes_select = [];                                                                                               // 421\nRC.Select = React.createClass({                                                                                       // 422\n  displayName: \"Select\",                                                                                              //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 423\n  themeGroup: \"item\",                                                                                                 // 424\n  themes: themes_select,                                                                                              // 425\n                                                                                                                      //\n  propTypes: {                                                                                                        // 427\n    theme: React.PropTypes.string,                                                                                    // 428\n    value: React.PropTypes.string,                                                                                    // 429\n    name: React.PropTypes.string,                                                                                     // 430\n    error: React.PropTypes.bool,                                                                                      // 431\n    label: React.PropTypes.string,                                                                                    // 432\n    labelColor: React.PropTypes.string                                                                                // 433\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 435\n    return {                                                                                                          // 436\n      value: false                                                                                                    // 437\n    };                                                                                                                //\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 440\n    this.setState({ value: false });                                                                                  // 441\n  },                                                                                                                  //\n  getValue: function () {                                                                                             // 443\n    return (this.state.value !== false ? this.state.value : this.props.value) || \"\";                                  // 444\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 446\n    this.setState({ value: e.target.value });                                                                         // 447\n    if (_.isFunction(this.props.changeHandler)) {                                                                     // 448\n      this.state.value = e.target.value; // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n      this.props.changeHandler(e);                                                                                    // 450\n    }                                                                                                                 //\n  },                                                                                                                  //\n  render: function () {                                                                                               // 453\n                                                                                                                      //\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\";               // 455\n                                                                                                                      //\n    return React.createElement(                                                                                       // 457\n      \"label\",                                                                                                        //\n      { className: classes },                                                                                         //\n      this.props.label ? React.createElement(                                                                         //\n        \"span\",                                                                                                       //\n        { className: \"input-label\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n        this.props.label                                                                                              //\n      ) : null,                                                                                                       //\n      React.createElement(                                                                                            //\n        \"select\",                                                                                                     //\n        babelHelpers._extends({}, _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"labelColor\"]), { onChange: this.changeHandler, value: this.getValue(), ref: \"select\" }),\n        this.props.options.map(function (o, n) {                                                                      //\n          if (_.isString(o)) o = { value: o };                                                                        // 462\n          o = _.isObject(o) && o.value ? o : { value: undefined };                                                    // 463\n          return React.createElement(                                                                                 // 464\n            \"option\",                                                                                                 //\n            { value: o.value, key: n },                                                                               //\n            o.text || o.value                                                                                         //\n          );                                                                                                          //\n        })                                                                                                            //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") {                                                                  // 473\n  RC.Form.Help = {                                                                                                    // 474\n    Type: \"Canvas\",                                                                                                   // 475\n    Themes: themes_form,                                                                                              // 476\n    PropTypes: \"TODO\",                                                                                                // 477\n    Description: \"Creates a <form> canvas with a useful getFormData() function. *Note: In order for getFormData() to work, all form items must have a \\\"name\\\" value.\",\n    Example: \"http://localhost:3000/forms/Form_Index\"                                                                 // 479\n  };                                                                                                                  //\n                                                                                                                      //\n  RC.Input.Help = {                                                                                                   // 482\n    Type: \"Item\",                                                                                                     // 483\n    Themes: themes_input,                                                                                             // 484\n    PropTypes: \"TODO\",                                                                                                // 485\n    Description: \"React helper for <input>.\",                                                                         // 486\n    Example: \"http://localhost:3000/forms/Form_Index\"                                                                 // 487\n  };                                                                                                                  //\n                                                                                                                      //\n  RC.Textarea.Help = {                                                                                                // 490\n    Type: \"Item\",                                                                                                     // 491\n    Themes: themes_textarea,                                                                                          // 492\n    PropTypes: \"TODO\",                                                                                                // 493\n    Description: \"React helper for <textarea>.\",                                                                      // 494\n    Example: \"http://localhost:3000/forms/Form_Index\",                                                                // 495\n    TODO: \"Add auto-resize\"                                                                                           // 496\n  };                                                                                                                  //\n}                                                                                                                     //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/form/formElements2.jsx                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**                                                                                                                   //\n * Created on 9/16/15.                                                                                                //\n */                                                                                                                   //\n{                                                                                                                     // 4\n                                                                                                                      //\n    var themes_select = [];                                                                                           // 6\n    RC.Select2 = React.createClass({                                                                                  // 7\n        displayName: \"Select2\",                                                                                       //\n                                                                                                                      //\n        mixins: [RC.Mixins.Theme],                                                                                    // 8\n        themeGroup: \"item\",                                                                                           // 9\n        themes: themes_select,                                                                                        // 10\n                                                                                                                      //\n        propTypes: {                                                                                                  // 12\n            theme: React.PropTypes.string,                                                                            // 13\n            value: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),                       // 14\n            name: React.PropTypes.string,                                                                             // 18\n            error: React.PropTypes.bool,                                                                              // 19\n            label: React.PropTypes.string,                                                                            // 20\n            labelColor: React.PropTypes.string                                                                        // 21\n        },                                                                                                            //\n        getInitialState: function () {                                                                                // 23\n            return {                                                                                                  // 24\n                value: false                                                                                          // 25\n            };                                                                                                        //\n        },                                                                                                            //\n                                                                                                                      //\n        //提供通过属性 render组件的接口                                                                                          //\n        componentWillReceiveProps: function (nextProps) {                                                             // 30\n            if (nextProps.value != this.state.value) {                                                                // 31\n                this.setState({ value: nextProps.value });                                                            // 32\n            }                                                                                                         //\n        },                                                                                                            //\n        reset: function () {                                                                                          // 35\n            this.setState({ value: false });                                                                          // 36\n        },                                                                                                            //\n        getValue: function () {                                                                                       // 38\n            return (this.state.value !== false ? this.state.value : this.props.value) || \"\";                          // 39\n        },                                                                                                            //\n        changeHandler: function (e) {                                                                                 // 41\n            this.setState({ value: e.target.value });                                                                 // 42\n            if (_.isFunction(this.props.changeHandler)) {                                                             // 43\n                this.state.value = e.target.value; // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n                this.props.changeHandler(e);                                                                          // 45\n            }                                                                                                         //\n        },                                                                                                            //\n        render: function () {                                                                                         // 48\n                                                                                                                      //\n            var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\";       // 50\n                                                                                                                      //\n            return React.createElement(                                                                               // 52\n                \"label\",                                                                                              //\n                { className: classes },                                                                               //\n                this.props.label ? React.createElement(                                                               //\n                    \"span\",                                                                                           //\n                    { className: \"input-label\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n                    this.props.label                                                                                  //\n                ) : null,                                                                                             //\n                React.createElement(                                                                                  //\n                    \"select\",                                                                                         //\n                    babelHelpers._extends({}, _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"labelColor\"]), { onChange: this.changeHandler, value: this.getValue(), ref: \"select\" }),\n                    this.props.options.map(function (o, n) {                                                          //\n                        if (_.isString(o)) o = { value: o };                                                          // 57\n                        o = _.isObject(o) && o.value ? o : { value: undefined };                                      // 58\n                        return React.createElement(                                                                   // 59\n                            \"option\",                                                                                 //\n                            { value: o.value, key: n },                                                               //\n                            o.text || o.value                                                                         //\n                        );                                                                                            //\n                    })                                                                                                //\n                )                                                                                                     //\n            );                                                                                                        //\n        }                                                                                                             //\n    });                                                                                                               //\n                                                                                                                      //\n    //////                                                                                                            //\n    RC.RadioGroup2 = React.createClass({                                                                              // 70\n        displayName: \"RadioGroup2\",                                                                                   //\n                                                                                                                      //\n        propTypes: {                                                                                                  // 71\n            id: React.PropTypes.string,                                                                               // 72\n            theme: React.PropTypes.string,                                                                            // 73\n                                                                                                                      //\n            list: React.PropTypes.array,                                                                              // 75\n            label: React.PropTypes.string,                                                                            // 76\n            name: React.PropTypes.string,                                                                             // 77\n            className: React.PropTypes.string,                                                                        // 78\n                                                                                                                      //\n            error: React.PropTypes.bool,                                                                              // 80\n            style: React.PropTypes.object,                                                                            // 81\n            disabled: React.PropTypes.bool                                                                            // 82\n        },                                                                                                            //\n        getInitialState: function () {                                                                                // 84\n            var list = _.isArray(this.props.list) ? this.props.list : [];                                             // 85\n            var self = this;                                                                                          // 86\n                                                                                                                      //\n            return {                                                                                                  // 88\n                checked: list.map(function (c) {                                                                      // 89\n                    return c.value && c.value == self.props.value ? true : false;                                     // 90\n                })                                                                                                    //\n            };                                                                                                        //\n        },                                                                                                            //\n        reset: function () {                                                                                          // 94\n            var list = _.isArray(this.props.list) ? this.props.list : [];                                             // 95\n            var self = this;                                                                                          // 96\n            var checked = list.map(function (c) {                                                                     // 97\n                return c.value && c.value == self.props.value ? true : false;                                         // 98\n            });                                                                                                       //\n            this.setState({ checked: checked });                                                                      // 100\n        },                                                                                                            //\n        getValue: function (n) {                                                                                      // 102\n            var _this = this;                                                                                         //\n                                                                                                                      //\n            if (_.isUndefined(n)) {                                                                                   // 103\n                var realVal;                                                                                          //\n                                                                                                                      //\n                (function () {                                                                                        //\n                    realVal = null;                                                                                   // 104\n                                                                                                                      //\n                    var self = _this;                                                                                 // 105\n                    _.every(_this.state.checked, function (c, nn) {                                                   // 106\n                        if (c) realVal = self.props.list[nn].value;                                                   // 107\n                        return !c;                                                                                    // 109\n                    });                                                                                               //\n                })();                                                                                                 //\n            }                                                                                                         //\n            return this.state.checked[n];                                                                             // 112\n        },                                                                                                            //\n        changeHandler: function (n) {                                                                                 // 114\n            var checked = this.state.checked;                                                                         // 115\n            this.setState({ checked: checked.map(function (c, nn) {                                                   // 116\n                    return nn == n;                                                                                   // 117\n                }) });                                                                                                //\n            if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(this.props.list[n]);                 // 119\n        },                                                                                                            //\n        makeRadio: function (radio, n) {                                                                              // 122\n            var checked = this.getValue(n);                                                                           // 123\n            var classes = \"item item-radio \" + (radio.className || \"\");                                               // 124\n            /**                                                                                                       //\n             * NOTE                                                                                                   //\n             * <div> is used instead of <label> to overcome Web/Mobile issues                                         //\n             */                                                                                                       //\n            return React.createElement(                                                                               // 129\n                \"div\",                                                                                                //\n                { className: classes, key: n, onClick: this.changeHandler.bind(null, n) },                            //\n                React.createElement(\"input\", babelHelpers._extends({}, _.omit(radio, [\"checked\", \"type\", \"label\"]), { type: \"radio\", onChange: function () {}, checked: checked })),\n                React.createElement(                                                                                  //\n                    \"div\",                                                                                            //\n                    { className: \"item-content\" },                                                                    //\n                    radio.label                                                                                       //\n                ),                                                                                                    //\n                React.createElement(RC.uiIcon, { uiClass: this.props.uiClass || \"check\", uiColor: this.props.uiColor, uiSize: this.props.uiSize, className: \"radio-fa\" })\n            );                                                                                                        //\n        },                                                                                                            //\n        render: function () {                                                                                         // 135\n                                                                                                                      //\n            if (!this.props.list.length) return null;                                                                 // 137\n                                                                                                                      //\n            var self = this;                                                                                          // 139\n            var radioGroup = this.props.name || h.random_string();                                                    // 140\n                                                                                                                      //\n            return React.createElement(                                                                               // 142\n                \"div\",                                                                                                //\n                null,                                                                                                 //\n                this.props.list.map(function (g, n) {                                                                 //\n                    g.name = radioGroup;                                                                              // 145\n                    return self.makeRadio(g, n);                                                                      // 146\n                })                                                                                                    //\n            );                                                                                                        //\n        }                                                                                                             //\n    });                                                                                                               //\n}                                                                                                                     //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/form/passwordInput.jsx                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar themes_input = [\"stacked-label\", \"small-label\", \"overlay-light\", \"overlay-dark\"];                                 // 1\nRC.PasswordInput = React.createClass({                                                                                // 2\n  displayName: \"PasswordInput\",                                                                                       //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 3\n  themeGroup: \"item\",                                                                                                 // 4\n  themes: themes_input,                                                                                               // 5\n                                                                                                                      //\n  propTypes: {                                                                                                        // 7\n    id: React.PropTypes.string,                                                                                       // 8\n    theme: React.PropTypes.string,                                                                                    // 9\n    value: React.PropTypes.string,                                                                                    // 10\n    name: React.PropTypes.string,                                                                                     // 11\n    placeholder: React.PropTypes.string,                                                                              // 12\n    className: React.PropTypes.string,                                                                                // 13\n    changeHandler: React.PropTypes.func,                                                                              // 14\n    label: React.PropTypes.string,                                                                                    // 15\n    labelColor: React.PropTypes.string,                                                                               // 16\n    error: React.PropTypes.bool,                                                                                      // 17\n    style: React.PropTypes.object,                                                                                    // 18\n    disabled: React.PropTypes.bool                                                                                    // 19\n  },                                                                                                                  //\n  reset: function () {                                                                                                // 21\n    this.setState({                                                                                                   // 22\n      value: this.props.value || false,                                                                               // 23\n      showPWGuide: false                                                                                              // 24\n    });                                                                                                               //\n  },                                                                                                                  //\n                                                                                                                      //\n  getInitialState: function () {                                                                                      // 28\n    return {                                                                                                          // 29\n      showPWGuide: false,                                                                                             // 30\n      value: false                                                                                                    // 31\n    };                                                                                                                //\n  },                                                                                                                  //\n                                                                                                                      //\n  getValue: function () {                                                                                             // 35\n    var val = (this.state.value !== false ? this.state.value : this.props.value) || \"\";                               // 36\n    return h.ltrim(val);                                                                                              // 37\n  },                                                                                                                  //\n  changeHandler: function (e) {                                                                                       // 39\n    this.setState({ value: e.target.value });                                                                         // 40\n    if (_.isFunction(this.props.changeHandler)) this.props.changeHandler(e);                                          // 41\n  },                                                                                                                  //\n  showPasswordGuide: function (e) {                                                                                   // 44\n    e.preventDefault();                                                                                               // 45\n    this.setState({ showPWGuide: true });                                                                             // 46\n  },                                                                                                                  //\n  showQuestionMark: function (e) {                                                                                    // 48\n    e.preventDefault();                                                                                               // 49\n    this.setState({ showPWGuide: false });                                                                            // 50\n  },                                                                                                                  //\n                                                                                                                      //\n  passwordGuide: function () {                                                                                        // 53\n    //if (this.state.showPWGuide) {                                                                                   //\n    //                                                                                                                //\n    //  return 'Password shoud have at least 8 characters, containing Capital Letters AND Numbers.'                   //\n    //                                                                                                                //\n    //                                                                                                                //\n    //} else                                                                                                          //\n    {                                                                                                                 // 60\n                                                                                                                      //\n      return React.createElement(                                                                                     // 62\n        \"span\",                                                                                                       //\n        { className: \"password-guide-wrap\" },                                                                         //\n        React.createElement(\"img\", { style: { margin: 0 },                                                            //\n          border: \"0\", src: \"/assets/help.png\", align: \"middle\", width: \"16\", height: \"16\" }),                        // 64\n        \"this.state.showPWGuide?\",                                                                                    //\n        React.createElement(                                                                                          //\n          \"span\",                                                                                                     //\n          { className: \"password-guide cal-text-wrap\" },                                                              //\n          \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\"                        //\n        ),                                                                                                            //\n        \":''\"                                                                                                         //\n      );                                                                                                              //\n    }                                                                                                                 //\n  },                                                                                                                  //\n                                                                                                                      //\n  render: function () {                                                                                               // 70\n                                                                                                                      //\n    // var passwordGuide = 'FORMAT?'                                                                                  //\n    // if (this.state.showPWGuide)                                                                                    //\n    //   passwordGuide = 'Password shoud have at least 8 characters, containing Capital Letters AND Numbers.'         //\n                                                                                                                      //\n    var inputProps = _.omit(this.props, [\"changeHandler\", \"value\", \"type\", \"labelColor\"]);                            // 76\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\";                           // 77\n                                                                                                                      //\n    return React.createElement(                                                                                       // 79\n      \"label\",                                                                                                        //\n      { className: classes },                                                                                         //\n      this.props.label ? React.createElement(                                                                         //\n        \"span\",                                                                                                       //\n        { onMouseOver: this.showPasswordGuide,                                                                        //\n          onMouseOut: this.showQuestionMark,                                                                          // 81\n          className: \"input-label inline-block\" + (h.checkColorClass(this.props.labelColor) ? \" colored \" + this.props.labelColor : \"\") },\n        this.props.label,                                                                                             //\n        this.passwordGuide()                                                                                          //\n      ) : null,                                                                                                       //\n      React.createElement(\"input\", babelHelpers._extends({}, inputProps, { type: this.props.type || \"text\", value: this.getValue(), onChange: this.changeHandler }))\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/headerNav/headerNav.jsx                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar themes = [\"regular\", \"opacity\", \"flat\"];                                                                          // 1\nRC.HeaderNav = React.createClass({                                                                                    // 2\n  displayName: \"HeaderNav\",                                                                                           //\n                                                                                                                      //\n  propTypes: {                                                                                                        // 3\n    id: React.PropTypes.string,                                                                                       // 4\n    className: React.PropTypes.string,                                                                                // 5\n    theme: React.PropTypes.string,                                                                                    // 6\n                                                                                                                      //\n    title: React.PropTypes.string,                                                                                    // 8\n    nav: React.PropTypes.array,                                                                                       // 9\n                                                                                                                      //\n    hideBackButton: React.PropTypes.bool,                                                                             // 11\n    hideLeftNavToggle: React.PropTypes.bool,                                                                          // 12\n    hideShoppingCartButton: React.PropTypes.bool                                                                      // 13\n                                                                                                                      //\n  },                                                                                                                  //\n                                                                                                                      //\n  getTheme: function (name) {                                                                                         // 17\n    var theme = _.contains(themes, name) ? name : \"regular\";                                                          // 18\n    return theme;                                                                                                     // 20\n  },                                                                                                                  //\n  clickHandler: function (home) {                                                                                     // 22\n    if (home) {                                                                                                       // 23\n      FlowRouter.BackButton = true;                                                                                   // 24\n      FlowRouter.go(\"/\");                                                                                             // 25\n    } else if (FlowRouter.LastRoute.length) {                                                                         //\n      FlowRouter.BackButton = true;                                                                                   // 27\n      FlowRouter.go(FlowRouter.LastRoute[FlowRouter.LastRoute.length - 1]);                                           // 28\n    }                                                                                                                 //\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 31\n    return { moreNav: false, init: _.isUndefined(this.props.init) ? true : this.props.init };                         // 32\n  },                                                                                                                  //\n  componentWillMount: function () {                                                                                   // 34\n    var self = this;                                                                                                  // 35\n    var allowThreshold = true;                                                                                        // 36\n                                                                                                                      //\n    document.addEventListener(\"click\", function (e) {                                                                 // 38\n                                                                                                                      //\n      Meteor.clearTimeout(self.timeout);                                                                              // 40\n      // Strange IOS JS error. keep the .length ?/: check in here                                                     //\n      var pStop = e.target.className.length ? e.target.className.indexOf(\"stopPropagate\") : -1;                       // 42\n      var pExit = e.target.className.length ? e.target.className.indexOf(\"exitPropagate\") : -1;                       // 43\n      var moreNavDom = React.findDOMNode(self.refs.moreNav);                                                          // 44\n                                                                                                                      //\n      if (e.target.tagName == \"HTML\") return; // This is an old-device fix, leave it alone. :: By Jason               // 46\n                                                                                                                      //\n      if (pStop < 0 && pExit < 0 && self.state.moreNav) {                                                             // 48\n        // Do Animation                                                                                               //\n        self.setState({ moreNav: false, init: false });                                                               // 50\n        self.timeout = Meteor.setTimeout(function () {                                                                // 51\n          self.setState({ moreNav: false, init: true });                                                              // 52\n        }, 300);                                                                                                      //\n      } else if (pExit >= 0) self.setState({ moreNav: false, init: true });else self.setState({ init: true });        //\n    });                                                                                                               //\n  },                                                                                                                  //\n  openMore: function () {                                                                                             // 60\n    this.setState({ moreNav: true, init: false });                                                                    // 61\n  },                                                                                                                  //\n  //////actions///////                                                                                                //\n                                                                                                                      //\n  //d打开leftNav                                                                                                        //\n  action_openLeftNav: function () {                                                                                   // 66\n                                                                                                                      //\n    console.log('dispatch: LEFT_NAV_OPEN');                                                                           // 68\n    Dispatcher.dispatch({ actionType: 'LEFT_NAV_OPEN' });                                                             // 69\n  },                                                                                                                  //\n                                                                                                                      //\n  timeout: null,                                                                                                      // 72\n  render: function () {                                                                                               // 73\n                                                                                                                      //\n    var logoRight = !(_.isArray(this.props.nav) && !_.isEmpty(this.props.nav));                                       // 75\n                                                                                                                      //\n    //if (FlowRouter.LastRoute.length)                                                                                //\n    //  var backButton = <span className=\"normal back\" onClick={this.clickHandler.bind(null,false)}>Back</span>       //\n    //else                                                                                                            //\n    //  var backButton = FlowRouter.current().path != \"/\" && !this.props.hideHome                                     //\n    //    ? <span className=\"normal back\" onClick={this.clickHandler.bind(null,true)}>Home</span>                     //\n    //    : null                                                                                                      //\n                                                                                                                      //\n    var backButton = null;                                                                                            // 85\n    if (!this.props.hideBackButton) {                                                                                 // 86\n      if (FlowRouter.LastRoute.length) {                                                                              // 87\n        backButton = React.createElement(                                                                             // 88\n          \"span\",                                                                                                     //\n          { className: \"normal back\", onClick: this.clickHandler.bind(null, false) },                                 //\n          React.createElement(RC.uiIcon, { uiClass: \"chevron-left\" })                                                 //\n        );                                                                                                            //\n      } else if (FlowRouter.current().path != \"/\" && !this.props.hideHome) {                                          //\n        backButton = React.createElement(                                                                             // 92\n          \"span\",                                                                                                     //\n          { className: \"normal back\", onClick: this.clickHandler.bind(null, true) },                                  //\n          React.createElement(RC.uiIcon, { uiClass: \"chevron-left\" })                                                 //\n        );                                                                                                            //\n      }                                                                                                               //\n    }                                                                                                                 //\n                                                                                                                      //\n    var leftNavToggle = null;                                                                                         // 97\n    //if (this.props.leftNavToggle) {                                                                                 //\n    if (!this.props.hideLeftNavToggle) {                                                                              // 99\n      leftNavToggle = React.createElement(                                                                            // 100\n        \"span\",                                                                                                       //\n        { className: \"normal navToggle\", onClick: this.action_openLeftNav },                                          //\n        React.createElement(RC.uiIcon, {                                                                              //\n          uiClass: \"bars\" })                                                                                          // 101\n      );                                                                                                              //\n    }                                                                                                                 //\n                                                                                                                      //\n    var shoppingCartButton = null;                                                                                    // 105\n    if (!this.props.hideShoppingCartButton) {                                                                         // 106\n      shoppingCartButton = React.createElement(                                                                       // 107\n        \"a\",                                                                                                          //\n        { className: \"normal shopping-cart-button\", href: \"/classEdit/billingAndPayment\" },                           //\n        this.props.shoppingCart && this.props.shoppingCart.items && this.props.shoppingCart.items.length,             //\n        React.createElement(RC.uiIcon, { uiClass: \"shopping-cart\" })                                                  //\n      );                                                                                                              //\n    }                                                                                                                 //\n                                                                                                                      //\n    var shoppingCartItems = '';                                                                                       // 115\n                                                                                                                      //\n    //}                                                                                                               //\n                                                                                                                      //\n    //if(!backButton){                                                                                                //\n    //  var leftNavToggle = this.props.leftNavToggle                                                                  //\n    //                                                                                                                //\n    //  if(leftNavToggle) backButton= <span className=\"normal navToggle\" onClick={this.action_openLeftNav}><RC.uiIcon uiClass=\"bars\"></RC.uiIcon></span>\n    //}                                                                                                               //\n                                                                                                                      //\n    var classList = [\"bg-nav\", \"nav-height transition\", this.getTheme(this.props.theme), this.props.title && this.props.title.length >= 9 ? \"long\" : \"short\"];\n                                                                                                                      //\n    return React.createElement(                                                                                       // 138\n      \"nav\",                                                                                                          //\n      { className: classList.join(\" \"), id: \"mobile-header\" },                                                        //\n      leftNavToggle,                                                                                                  //\n      backButton,                                                                                                     //\n      React.createElement(                                                                                            //\n        \"figure\",                                                                                                     //\n        { className: (logoRight && backButton ? \"\" : \"\") + \" logo nav-height boxed transition-medium\" },              //\n        this.props.title && !this.props.showLogo ? React.createElement(                                               //\n          \"h1\",                                                                                                       //\n          { className: \"ellipsis\" },                                                                                  //\n          \"Calphin\"                                                                                                   //\n        ) : React.createElement(\"img\", { src: \"/assets/logo.png\", className: \"transition-medium\", \"data-x\": \"auto\", ref: \"logo\" })\n      ),                                                                                                              //\n      logoRight ? { shoppingCartButton: shoppingCartButton } : React.createElement(                                   //\n        \"p\",                                                                                                          //\n        { className: \"more-button stopPropagate\", onClick: this.openMore },                                           //\n        React.createElement(\"span\", { className: \"stopPropagate\" })                                                   //\n      ),                                                                                                              //\n      logoRight ? null : React.createElement(                                                                         //\n        \"div\",                                                                                                        //\n        { className: \"stopPropagate more-nav \" + (this.state.moreNav ? \"corner-in\" : \"corner-out\"),                   //\n          style: this.state.init ? { display: \"none\" } : {}, ref: \"moreNav\" },                                        // 160\n        this.props.nav.map(function (item, n) {                                                                       //\n          return React.createElement(                                                                                 // 163\n            \"a\",                                                                                                      //\n            { href: item.href, key: n, className: \"exitPropagate\" },                                                  //\n            item.text                                                                                                 //\n          );                                                                                                          //\n        })                                                                                                            //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.HeaderNav.Help = {                                              // 172\n  Type: \"Unique/Canvas\",                                                                                              // 174\n  Themes: themes,                                                                                                     // 175\n  PropTypes: {                                                                                                        // 176\n    title: \"String (Shows title in the header navigation bar)\",                                                       // 177\n    nav: \"Array (List of links for the menu on right)\"                                                                // 178\n  },                                                                                                                  //\n  Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n};                                                                                                                    //\n/* 左侧  */ /* 中间  */ /* 右侧 */                                                                                          //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/leftNav/leftNav.jsx                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC.LeftNav = React.createClass({                                                                                      // 2\n  displayName: \"LeftNav\",                                                                                             //\n                                                                                                                      //\n  getInitialState: function () {                                                                                      // 3\n    return {                                                                                                          // 4\n      closing: false,                                                                                                 // 5\n      isOpen: this.props.openOnInit                                                                                   // 6\n    };                                                                                                                //\n  },                                                                                                                  //\n  open: function () {                                                                                                 // 9\n    if (!this.state.closing) this.setState({ isOpen: true });                                                         // 10\n  },                                                                                                                  //\n  close: function () {                                                                                                // 13\n    var self = this;                                                                                                  // 14\n    this.setState({ closing: true });                                                                                 // 15\n    Meteor.setTimeout(function () {                                                                                   // 16\n      self.setState({ isOpen: false, closing: false });                                                               // 17\n    }, 400);                                                                                                          //\n  },                                                                                                                  //\n  linkClickHandler: function (e) {                                                                                    // 20\n    if (e.target.href) this.close();                                                                                  // 21\n  },                                                                                                                  //\n  render: function () {                                                                                               // 24\n                                                                                                                      //\n    if (!this.state.isOpen) return null;                                                                              // 26\n                                                                                                                      //\n    return React.createElement(                                                                                       // 28\n      \"nav\",                                                                                                          //\n      { className: \"transition left-nav fixed-full \" + (this.state.closing ? \"out\" : \"in\") },                         //\n      React.createElement(\"div\", { className: \"back abs-full\", onClick: this.close }),                                //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"inner bg-white scroll\", onClick: this.linkClickHandler },                                       //\n        React.createElement(\"div\", { onClick: this.props.toggleNavFunc }),                                            //\n        React.createElement(RC.NavList, { list: this.props.navList, showCurrent: false })                             //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.LeftNav.Help = {                                                // 40\n  Type: \"Canvas\",                                                                                                     // 42\n  Description: \"This component is currently being re-written, please check back later.\"                               // 43\n};                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/list/list.jsx                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*                                                                                                                    //\nRC.List = React.createClass({                                                                                         //\n  getInitialState(){                                                                                                  //\n    return {                                                                                                          //\n      selected: null                                                                                                  //\n    }                                                                                                                 //\n  },                                                                                                                  //\n  getTheme(name){                                                                                                     //\n    let enableClick = _.isUndefined(this.props.enableClick) ? true : this.props.enableClick                           //\n    let theme = _.contains([\"regular\",\"nav-list\",\"nav-list dark\"], name)                                              //\n      ? name : \"regular\"                                                                                              //\n    return theme+\" \"+(this.props.className || \"\")+(enableClick ? \" click-enabled\" : \"\")                               //\n  },                                                                                                                  //\n  setSelectedState(n){                                                                                                //\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick)                                              //\n      this.setState({selected: n})                                                                                    //\n  },                                                                                                                  //\n  render() {                                                                                                          //\n                                                                                                                      //\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null                                           //\n                                                                                                                      //\n    let self = this                                                                                                   //\n    let curState = this.state.selected                                                                                //\n    let enableClick = this.props.enableClick || true                                                                  //\n                                                                                                                      //\n    return <ul className={\"rc-list \"+this.getTheme(this.props.theme)}>                                                //\n      {                                                                                                               //\n      this.props.list.map(function(item,n){                                                                           //\n                                                                                                                      //\n        let itemTitle = null                                                                                          //\n        let itemSubtitle = null                                                                                       //\n                                                                                                                      //\n        let cur = null                                                                                                //\n        let avatar = null                                                                                             //\n        let sub = null                                                                                                //\n                                                                                                                      //\n        let date = fw.getDateFromProps(item.date, item.dateFormat)                                                    //\n                                                                                                                      //\n        switch(item.type){                                                                                            //\n          case \"title\":                                                                                               //\n            cur = \"type-listTitle sub \"+(item.className || \"\")                                                        //\n            itemTitle = item.label                                                                                    //\n          break                                                                                                       //\n          default:                                                                                                    //\n            cur = \"transition listItem\"+(item.avatar || item.uiClass ? \" with-icon \" : \" \")+(n==curState ? \"cur \" : \"\")+(item.onClick || item.href || enableClick ? \"cursor \" : \"\")+(item.className || \"\")\n            avatar = <RC.Avatar src={item.avatar} theme=\"regular\" uiClass={item.uiClass} uiSize={item.uiSize>=0 ? item.uiSize : 1} uiColor={item.uiColor || \"white\"} />\n                                                                                                                      //\n            let itemTitle = item.title ? <h4 className=\"textTitle ellipsis\">{item.title}</h4> : null                  //\n            let itemSubtitle = item.subtitle || item.label                                                            //\n              ? <p className=\"subtitle smaller ellipsis\">{item.label ? <strong className=\"label inline-block\">{item.label}</strong> : null}{item.subtitle}</p>\n              : null                                                                                                  //\n                                                                                                                      //\n            sub = item.date ? <strong className=\"date sub\">{date}</strong> : null                                     //\n        }                                                                                                             //\n                                                                                                                      //\n        return <li className={cur} key={n} onClick={item.onClick}>                                                    //\n          {                                                                                                           //\n            item.href                                                                                                 //\n            ? <a href={item.href} onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</a>\n            : <span onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</span>       //\n          }                                                                                                           //\n        </li>                                                                                                         //\n      })                                                                                                              //\n      }                                                                                                               //\n    </ul>                                                                                                             //\n  }                                                                                                                   //\n})                                                                                                                    //\n*/                                                                                                                    //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n// @@@@@@@                                                                                                            //\n                                                                                                                      //\nvar themes = [\"inset\"];                                                                                               // 86\n                                                                                                                      //\nRC.List = React.createClass({                                                                                         // 88\n  displayName: \"List\",                                                                                                //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 89\n  themeGroup: \"list\",                                                                                                 // 90\n  themes: themes,                                                                                                     // 91\n  propTypes: {                                                                                                        // 92\n    list: React.PropTypes.array,                                                                                      // 93\n                                                                                                                      //\n    theme: React.PropTypes.string,                                                                                    // 95\n    id: React.PropTypes.string,                                                                                       // 96\n    className: React.PropTypes.string,                                                                                // 97\n    style: React.PropTypes.object                                                                                     // 98\n  },                                                                                                                  //\n  getInitialState: function () {                                                                                      // 100\n    return {                                                                                                          // 101\n      selected: null                                                                                                  // 102\n    };                                                                                                                //\n  },                                                                                                                  //\n  setSelectedState: function (n) {                                                                                    // 105\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick) this.setState({ selected: n });              // 106\n  },                                                                                                                  //\n  render: function () {                                                                                               // 109\n                                                                                                                      //\n    var list = !_.isArray(this.props.list) || !this.props.list.length ? [] : this.props.list;                         // 111\n    var self = this;                                                                                                  // 113\n    var curState = this.state.selected;                                                                               // 114\n    var enableClick = this.props.enableClick || true;                                                                 // 115\n                                                                                                                      //\n    return React.createElement(                                                                                       // 117\n      \"ul\",                                                                                                           //\n      { className: this.getTheme() },                                                                                 //\n      list.map(function (item, n) {                                                                                   //\n        var listProps = _.omit(item, [\"value\"]);                                                                      // 120\n        return React.createElement(                                                                                   // 121\n          RC.Item,                                                                                                    // 121\n          babelHelpers._extends({}, listProps, { tagName: listProps.tagName || \"li\", key: n }),                       //\n          item.value                                                                                                  //\n        );                                                                                                            //\n      }),                                                                                                             //\n      this.props.children                                                                                             //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") RC.List.Help = {                                                   // 131\n  Type: \"Canvas\",                                                                                                     // 133\n  Themes: themes,                                                                                                     // 134\n  PropTypes: {                                                                                                        // 135\n    list: \"Array\"                                                                                                     // 136\n  },                                                                                                                  //\n  Description: \"Similar to RC.Card, this is another flexible canvas component.\",                                      // 138\n  Example: \"/List/Index\"                                                                                              // 139\n};                                                                                                                    //\n                                                                                                                      //\n/*                                                                                                                    //\n        return <li className={cur} key={n} onClick={item.onClick}>                                                    //\n          {                                                                                                           //\n            item.href                                                                                                 //\n            ? <a href={item.href} onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</a>\n            : <span onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</span>       //\n          }                                                                                                           //\n        </li>                                                                                                         //\n*/                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/navList/navList.jsx                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC.NavList = React.createClass({                                                                                      // 2\n  displayName: \"NavList\",                                                                                             //\n                                                                                                                      //\n  getTheme: function (name) {                                                                                         // 3\n    var theme = _.contains([\"regular\", \"dark\"], name) ? name : \"regular\";                                             // 4\n    return theme + \" \" + (this.props.className || \"\");                                                                // 6\n  },                                                                                                                  //\n  render: function () {                                                                                               // 8\n                                                                                                                      //\n    var self = this;                                                                                                  // 10\n    var curPath = FlowRouter.current().path;                                                                          // 11\n    var showCurrent = _.isUndefined(this.props.showCurrent) ? true : this.props.showCurrent;                          // 12\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null;                                          // 13\n                                                                                                                      //\n    return React.createElement(                                                                                       // 15\n      \"ul\",                                                                                                           //\n      { className: \"unselect nav-list alt \" + this.getTheme(this.props.theme) },                                      //\n      this.props.list.map(function (item, n) {                                                                        //\n                                                                                                                      //\n        var itemRender = null;                                                                                        // 19\n        var cur = null;                                                                                               // 20\n        var uiIcon = null;                                                                                            // 21\n                                                                                                                      //\n        switch (item.type) {                                                                                          // 23\n          case \"title\":                                                                                               // 24\n            itemRender = React.createElement(                                                                         // 25\n              \"h4\",                                                                                                   //\n              { className: \"type-listTitle sub\" },                                                                    //\n              item.text                                                                                               //\n            );                                                                                                        //\n            break;                                                                                                    // 26\n          default:                                                                                                    // 27\n            cur = \"transition link\" + (item.uiClass ? \" with-icon\" : \"\") + (showCurrent && item.href == curPath ? \" cur\" : \"\");\n            uiIcon = React.createElement(RC.uiIcon, { uiClass: item.uiClass, uiSize: 0 });                            // 29\n            itemRender = item.href ? React.createElement(                                                             // 30\n              \"a\",                                                                                                    //\n              { href: item.href, className: \"block cursor\" },                                                         //\n              item.text                                                                                               //\n            ) : React.createElement(                                                                                  //\n              \"span\",                                                                                                 //\n              { onClick: item.onClick, className: \"block cursor\" },                                                   //\n              item.text                                                                                               //\n            );                                                                                                        //\n        }                                                                                                             // 32\n                                                                                                                      //\n        return React.createElement(                                                                                   // 35\n          \"li\",                                                                                                       //\n          { className: cur, key: n },                                                                                 //\n          uiIcon,                                                                                                     //\n          itemRender                                                                                                  //\n        );                                                                                                            //\n      })                                                                                                              //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/tabs/tabs.jsx                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\nRC.Tabs = React.createClass({                                                                                         // 2\n  displayName: \"Tabs\",                                                                                                //\n                                                                                                                      //\n  getInitialState: function () {                                                                                      // 3\n    return {                                                                                                          // 4\n      tab: this.props.tab || 0                                                                                        // 5\n    };                                                                                                                //\n  },                                                                                                                  //\n  switchTab: function (tab) {                                                                                         // 8\n    this.setState({ tab: tab });                                                                                      // 9\n  },                                                                                                                  //\n  getTheme: function (name) {                                                                                         // 11\n    var theme = _.contains([\"regular\", \"nav-tabs\"], name) ? name : \"regular\";                                         // 12\n    return theme;                                                                                                     // 14\n  },                                                                                                                  //\n  render: function () {                                                                                               // 16\n    var self = this;                                                                                                  // 17\n                                                                                                                      //\n    var tabs = !_.isArray(this.props.children) ? [this.props.children] : this.props.children;                         // 19\n    _.filter(tabs.map(function (t, n) {                                                                               // 20\n      if (t.type == \"div\" && (t.props.label || t.props.uiClass)) {                                                    // 21\n        return t;                                                                                                     // 22\n      } else if (t.type != \"div\") {                                                                                   //\n        console.warn(\"Tabs child was rejected because it was not a <div>\");                                           // 24\n        return undefined;                                                                                             // 25\n      } else {                                                                                                        //\n        console.warn(\"Tabs child was rejected because it does not have a label or uiClass\");                          // 27\n        return undefined;                                                                                             // 28\n      }                                                                                                               //\n    }), function (t) {                                                                                                //\n      return !_.isUndefined(t);                                                                                       // 31\n    });                                                                                                               //\n                                                                                                                      //\n    if (!tabs.length) return null;                                                                                    // 34\n                                                                                                                      //\n    var width = 1 / tabs.length * 100;                                                                                // 36\n    var tabStyle = { width: width + \"%\" };                                                                            // 37\n    var barStyle = { width: width + \"%\", left: width * this.state.tab + \"%\" };                                        // 38\n    var bodyStyle = { width: 100 * tabs.length + \"%\", marginLeft: -100 * this.state.tab + \"%\" };                      // 39\n                                                                                                                      //\n    return React.createElement(                                                                                       // 41\n      \"div\",                                                                                                          //\n      { className: \"tabs-root overflow \" + this.getTheme(this.props.theme), id: this.props.id },                      //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"tabs-nav clear unselect\" },                                                                     //\n        tabs.map(function (t, n) {                                                                                    //\n          return React.createElement(                                                                                 // 45\n            \"p\",                                                                                                      //\n            { className: \"cursor boxed\", key: n, style: tabStyle, onClick: self.switchTab.bind(null, n) },            //\n            React.createElement(RC.uiIcon, { uiSize: 0, uiClass: t.props.uiClass, uiColor: t.props.uiColor }),        //\n            t.props.label || \" \"                                                                                      //\n          );                                                                                                          //\n        }),                                                                                                           //\n        React.createElement(\"div\", { className: \"tabs-bar boxed transition\", style: barStyle })                       //\n      ),                                                                                                              //\n      React.createElement(                                                                                            //\n        \"div\",                                                                                                        //\n        { className: \"tabs-body clear transition \" + (this.props.className || \"\"), style: bodyStyle },                //\n        tabs.map(function (t, n) {                                                                                    //\n          return React.createElement(                                                                                 // 56\n            \"div\",                                                                                                    //\n            { className: \"tab-pane\", style: tabStyle, key: n },                                                       //\n            t.props.children                                                                                          //\n          );                                                                                                          //\n        })                                                                                                            //\n      )                                                                                                               //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/ihealth_framework-engine/RC/timeline/timeline.jsx                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// Timeline Canvas                                                                                                    //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nvar timelineThemes = [];                                                                                              // 6\nRC.Timeline = React.createClass({                                                                                     // 7\n  displayName: \"Timeline\",                                                                                            //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 8\n  themeGroup: \"timeline\",                                                                                             // 9\n  themes: timelineThemes,                                                                                             // 10\n                                                                                                                      //\n  propTypes: {                                                                                                        // 12\n    id: React.PropTypes.string,                                                                                       // 13\n    className: React.PropTypes.string,                                                                                // 14\n    theme: React.PropTypes.string,                                                                                    // 15\n                                                                                                                      //\n    lineColor: React.PropTypes.string,                                                                                // 17\n    dateFormat: React.PropTypes.string,                                                                               // 18\n    list: React.PropTypes.array,                                                                                      // 19\n                                                                                                                      //\n    title: React.PropTypes.string,                                                                                    // 21\n    dateFormat: React.PropTypes.string                                                                                // 22\n  },                                                                                                                  //\n                                                                                                                      //\n  render: function () {                                                                                               // 25\n                                                                                                                      //\n    var defaultFormat = this.props.dateFormat || \"MMM Do, YYYY\";                                                      // 27\n    var count = 0;                                                                                                    // 28\n                                                                                                                      //\n    if (!this.props.list) return React.createElement(                                                                 // 30\n      \"ul\",                                                                                                           //\n      babelHelpers._extends({}, this.props, { className: this.getTheme() + (h.checkColorClass(this.props.lineColor) ? \" timeline-\" + this.props.lineColor : \"\") }),\n      this.props.children                                                                                             //\n    );                                                                                                                //\n                                                                                                                      //\n    return React.createElement(                                                                                       // 35\n      \"ul\",                                                                                                           //\n      { className: \"timeline \" + this.getTheme(this.props.theme), id: this.props.id },                                //\n      this.props.list.map(function (item, n) {                                                                        //\n                                                                                                                      //\n        var odd_or_even = \"\"; // This is used for className, don't set it to null                                     // 39\n        var itemLabel = null;                                                                                         // 40\n        var itemRender = null;                                                                                        // 41\n                                                                                                                      //\n        var brand = [\"bg-brand\", \"bg-brand2\", \"bg-brand3\"];                                                           // 43\n        var brandClass = _.isNumber(item.brand) && brand[item.brand] ? brand[item.brand] : \"\";                        // 44\n        var uiIcon = React.createElement(                                                                             // 45\n          \"figure\",                                                                                                   //\n          { className: \"round \" + brandClass },                                                                       //\n          item.type == \"title\" ? React.createElement(RC.uiIcon, { uiClass: item.uiClass, uiSize: item.uiSize || 0, theme: \"tiny\" }) : null\n        );                                                                                                            //\n                                                                                                                      //\n        switch (item.type) {                                                                                          // 53\n          case \"title\":                                                                                               // 54\n            itemRender = React.createElement(                                                                         // 55\n              \"h4\",                                                                                                   //\n              { className: \"title sub\" },                                                                             //\n              fw.getDateFromProps(item.label, item.dateFormat, defaultFormat)                                         //\n            );                                                                                                        //\n            break;                                                                                                    // 58\n          case \"list-item\":                                                                                           // 58\n          default:                                                                                                    // 60\n            odd_or_even = count++ % 2 ? \" even\" : \" odd\";                                                             // 61\n            itemLabel = React.createElement(                                                                          // 62\n              \"strong\",                                                                                               //\n              { className: \"block label\" },                                                                           //\n              _.isDate(item.title) ? fw.getDateFromProps(item.title, item.dateFormat, defaultFormat) : item.title     //\n            );                                                                                                        //\n            item.type = \"listItem\";                                                                                   // 65\n            itemRender = item.href ? React.createElement(                                                             // 66\n              \"a\",                                                                                                    //\n              { className: \"block\", href: item.href },                                                                //\n              item.text                                                                                               //\n            ) : item.text;                                                                                            //\n        }                                                                                                             // 66\n                                                                                                                      //\n        return React.createElement(                                                                                   // 69\n          \"li\",                                                                                                       //\n          { className: \"type-\" + item.type + odd_or_even, key: n },                                                   //\n          React.createElement(                                                                                        //\n            \"div\",                                                                                                    //\n            { className: \"inner\" },                                                                                   //\n            uiIcon,                                                                                                   //\n            itemLabel,                                                                                                //\n            itemRender                                                                                                //\n          )                                                                                                           //\n        );                                                                                                            //\n      })                                                                                                              //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\n// @@@@@                                                                                                              //\n// Journal Item                                                                                                       //\n// @@@@@                                                                                                              //\n                                                                                                                      //\nvar journalThemes = [\"title\"];                                                                                        // 86\nRC.Journal = React.createClass({                                                                                      // 87\n  displayName: \"Journal\",                                                                                             //\n                                                                                                                      //\n  mixins: [RC.Mixins.Theme],                                                                                          // 88\n  themeGroup: \"journal\",                                                                                              // 89\n  themes: journalThemes,                                                                                              // 90\n                                                                                                                      //\n  propTypes: {                                                                                                        // 92\n    id: React.PropTypes.string,                                                                                       // 93\n    className: React.PropTypes.string,                                                                                // 94\n    theme: React.PropTypes.string,                                                                                    // 95\n                                                                                                                      //\n    title: React.PropTypes.string,                                                                                    // 97\n    dateFormat: React.PropTypes.string                                                                                // 98\n  },                                                                                                                  //\n                                                                                                                      //\n  render: function () {                                                                                               // 101\n                                                                                                                      //\n    // Format Setups                                                                                                  //\n    var dateFormat = this.props.dateFormat || \"MMM Do, YYYY\";                                                         // 104\n    var brand = this.props.uiBrand || \"brand\";                                                                        // 105\n    var classes = this.getTheme() + \" journal-\" + brand;                                                              // 106\n                                                                                                                      //\n    // Declarations                                                                                                   //\n    var title = _.isDate(this.props.title) ? fw.getDateFromProps(this.props.title, dateFormat) : this.props.title;    // 109\n    var content = null;                                                                                               // 110\n    var ui = null;                                                                                                    // 111\n                                                                                                                      //\n    switch (this.props.theme) {                                                                                       // 113\n      case \"title\":                                                                                                   // 114\n        // @@@@                                                                                                       //\n        // Title                                                                                                      //\n        // @@@@                                                                                                       //\n        if (this.props.uiClass) {                                                                                     // 118\n          var uiObject = _.pick(this.props, fw.uiKeysCircle);                                                         // 119\n          ui = React.createElement(RC.uiIcon, _.defaults(uiObject, { uiBrand: brand }));                              // 120\n        }                                                                                                             //\n        content = React.createElement(                                                                                // 122\n          \"strong\",                                                                                                   //\n          null,                                                                                                       //\n          title                                                                                                       //\n        );                                                                                                            //\n        break;                                                                                                        // 123\n      default:                                                                                                        // 124\n        // @@@@                                                                                                       //\n        // Default                                                                                                    //\n        // @@@@                                                                                                       //\n        content = React.createElement(                                                                                // 128\n          \"div\",                                                                                                      //\n          null,                                                                                                       //\n          React.createElement(                                                                                        //\n            \"strong\",                                                                                                 //\n            { className: \"block \" + brand },                                                                          //\n            title                                                                                                     //\n          ),                                                                                                          //\n          this.props.children                                                                                         //\n        );                                                                                                            //\n    }                                                                                                                 // 131\n                                                                                                                      //\n    return React.createElement(                                                                                       // 134\n      \"li\",                                                                                                           //\n      babelHelpers._extends({}, _.omit(this.props, [\"children\", \"dateFormat\", \"className\"]), { className: classes }),\n      ui,                                                                                                             //\n      content                                                                                                         //\n    );                                                                                                                //\n  }                                                                                                                   //\n});                                                                                                                   //\n                                                                                                                      //\nif (h.nk(Meteor.settings, \"public.env\") != \"live\") {                                                                  // 141\n  RC.Timeline.Help = {                                                                                                // 142\n    Type: \"canvas\",                                                                                                   // 143\n    Themes: timelineThemes,                                                                                           // 144\n    PropTypes: {                                                                                                      // 145\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',                                        // 146\n      lineColor: \"String, Hex, CSS\",                                                                                  // 147\n      list: \"Array (Optional)\"                                                                                        // 148\n    },                                                                                                                //\n    \"PropTypes for List\": {                                                                                           // 150\n      brand: \"Integer (0 to 2, chooses from one of the 3 theme colours) or Brand CSS\",                                // 151\n      type: 'Array, [\"title\", \"list-item\"] Defaults to list-item',                                                    // 152\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',                                        // 153\n      title: \"String\",                                                                                                // 154\n      href: \"String\"                                                                                                  // 155\n    },                                                                                                                //\n    Description: \"Created for documenting series of events. Especially useful for documenting times.\"                 // 157\n  };                                                                                                                  //\n  RC.Journal.Help = {                                                                                                 // 159\n    Type: \"Item\",                                                                                                     // 160\n    Themes: journalThemes,                                                                                            // 161\n    PropTypes: {                                                                                                      // 162\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',                                        // 163\n      uiBrand: \"Flexible\",                                                                                            // 164\n      title: \"String\"                                                                                                 // 165\n    },                                                                                                                //\n    Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n  };                                                                                                                  //\n}                                                                                                                     //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ihealth:framework-engine'] = {\n  RC: RC\n};\n\n})();\n","servePath":"/packages/ihealth_framework-engine.js","sourceMap":{"version":3,"sources":["/RC/framework.jsx","/RC/framework_helpers.jsx","/RC/card/card.jsx","/RC/item/item.jsx","/RC/chat/chatBubble.jsx","/RC/chat/chatTextarea.jsx","/RC/globalNav/globalNav.jsx","/RC/form/formElements.jsx","/RC/form/formElements2.jsx","/RC/form/passwordInput.jsx","/RC/headerNav/headerNav.jsx","/RC/leftNav/leftNav.jsx","/RC/list/list.jsx","/RC/navList/navList.jsx","/RC/tabs/tabs.jsx","/RC/timeline/timeline.jsx"],"names":[],"mappings":"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","file":"/packages/ihealth_framework-engine.js","sourcesContent":["\nRC = {}\n\nRC.NotFound = React.createClass({\n  render() {\n    return <div className=\"table bg-brand-light\">\n      <div className=\"inside center\">\n        <h4>Component Not Found</h4>\n      </div>\n    </div>\n  }\n})\n\nRC.Avatar = React.createClass({\n  render() {\n    if (!this.props.src && !this.props.uiClass) return null\n\n    return <figure className={\"avatar background round overflow\"+(this.props.src ? \"\" : \" none\")} style={this.props.src ? {backgroundImage: \"url(\"+this.props.src+\")\"} : {}}>\n        {!this.props.src ? <RC.uiIcon theme={this.props.theme} uiClass={this.props.uiClass} uiColor={this.props.uiColor} uiSize={this.props.uiSize} /> : null}\n      </figure>\n  }\n})\n\nRC.uiIcon = React.createClass({\n  propTypes: {\n    uiClass: React.PropTypes.string,\n    // uiSize: THIS IS FLEXIBLE\n    // uiBrand: THIS IS FLEXIBLE\n    uiColor: React.PropTypes.string,\n  },\n  render() {\n    if (!this.props.uiClass) return null\n\n    // Round to closest 5 decimals\n    // let uiOpacity = !this.props.uiOpacity ? 75 : Number(this.props.uiOpacity)*100\n    // uiOpacity = 5 * Math.round(uiOpacity/5)\n\n    var styles = {}\n    var brandNum = _.isNumber(this.props.uiBrand) ? this.props.uiBrand : (this.props.uiBrand || -1)\n    let sizeList = [\"\", \"fa-lg\", \"fa-2x\", \"fa-3x\", \"fa-4x\", \"fa-5x\"]\n    let brandList = [\"bg-brand\",\"bg-brand2\",\"bg-brand3\"]\n\n    // Brand\n    if (_.isString(brandNum) && _.contains([\"brand\",\"brand1\",\"brand2\",\"brand3\"], brandNum))\n      brandNum = {\n        brand: 0,\n        brand1: 0,\n        brand2: 1,\n        brand3: 2,\n      }[brandNum]\n\n    let classList = [\n      \"fa\",\n      \"fa-\"+this.props.uiClass.trim(),\n      (this.props.className || \"\")\n    ]\n\n    // Color\n    if (h.checkColorClass(this.props.uiColor))\n      classList.push(this.props.uiColor)\n    else if (this.props.uiColor)\n      styles.color = this.props.uiColor\n\n    // Size\n    if (_.isNumber(this.props.uiSize) && this.props.uiSize%1==0)\n      classList.push( sizeList[this.props.uiSize] || sizeList[1] )\n    else if (_.contains(sizeList, this.props.uiSize))\n      classList.push(this.props.uiSize)\n    else if (this.props.uiSize)\n      styles.fontSize = this.props.uiSize\n\n    let ui = <i className={classList.join(\" \")} style={styles} />\n    return brandNum>=0 ? <span className={\"fa-wrap \"+(brandList[brandNum] || brandList[0])}>{ui}</span> : ui\n  }\n})\n\nRC.VerticalAlign = React.createClass({\n  render() {\n    if (!this.props.children) return null\n    let style = this.props.height ? {height: this.props.height} : {}\n\n    return <div className=\"table\">\n      <div className={\"inside \"+(this.props.className || \"\")+(this.props.center ? \" center\" : \"\")} style={style}>\n        {this.props.children}\n      </div>\n    </div>\n  }\n})\n\nRC.URL = React.createClass({\n  render: function() {\n\n    let props = _.omit(this.props, [\"tagName\"])\n\n    if (props.href)\n      return <a {... props}>{props.children}</a>\n    else {\n      let keys = _.keys(props)\n      if (_.intersection(keys, [\"onClick\",\"onTouchTap\",\"onTouch\"]).length)\n        props.className = (props.className || \"\")+\" cursor\"\n\n      if (_.isString(props.tagName))\n        return React.createElement(this.props.tagName, props, props.children)\n\n      return <span {... props}>{props.children}</span>\n    }\n  }\n})\n\nRC.Animate = React.addons.CSSTransitionGroup\n\nRC.Mixins = {\n  // @@@@@\n  // Theme Mixins\n  Theme: {\n    getTheme(t){\n      var classList = []\n      var self = this\n      var themeList = h.strToArray( t || this.props.theme || this.themeDefault || \"regular\" )\n\n      if (_.isString(this.themeGroup))\n        classList.push(this.themeGroup)\n\n      if (_.isArray(this.themes) || t) {\n        _.map( _.intersection(self.themes, themeList), function(t){\n          classList.push( _.isString(self.themeGroup)\n            ? self.themeGroup+\"-\"+t\n            : t\n        )})\n      }\n\n      if (_.isString(this.props.className))\n        classList.push(this.props.className)\n\n      return classList.join(\" \")\n    },\n  },\n  // @@@@@\n  // Premade Mixins\n  Premade: {\n    makeAvatarItem(props){\n\n      if (_.isUndefined(props)) props = this.props\n      let keys = _.keys(props)\n\n      if (_.intersection(keys, [\"title\",\"subtitle\",\"avatar\",\"uiClass\"]).length) {\n        let uiKeys = [\"uiClass\",\"uiSize\",\"uiBrand\",\"uiColor\"]\n\n        if (props.avatar)\n          var avatar = <img src={props.avatar} />\n        else if (_.intersection(keys, uiKeys).length) {\n          let uiProps = fw.pickProps(props, uiKeys)\n          var avatar = <RC.uiIcon {...uiProps} />\n        }\n\n        return <RC.Item theme={props.avatar || props.uiClass ? \"avatar\" : null}>\n          {avatar}\n          {props.title ? <h2>{props.title}</h2> : null}\n          {props.subtitle ? <p>{props.subtitle}</p> : null}\n        </RC.Item>\n      }\n      return null\n    },\n  }\n}\n","\nfw = {\n  getDateFromProps(date, format, defaultFormat) {\n    if (!_.isDate(date)) return date\n\n    let dateFormat = format || defaultFormat || \"MM/DD/YY\"\n\n    if (_.isDate(date)) {\n      date = moment(date)\n      date = dateFormat==\"ago\" ? date.fromNow(true) : date.format(dateFormat)\n    }\n\n    return date\n  },\n  uniformChildren(unfilteredChildren, filter) {\n    if (!unfilteredChildren) return []\n    let children = !unfilteredChildren.map ? [unfilteredChildren] : unfilteredChildren\n\n    children = children.map( function(c) {\n      if (c.type!=\"div\" && _.isString(c))\n        c = <div>{c}</div>\n      return c\n    })\n\n    return _.filter(children.map( function(c,n){\n\n      if (_.isString(c.type)) {\n        return c\n      } else if (c.type.displayName) {\n        if (filter && filter!=c.type.displayName) {\n          console.warn(\"Child was rejected because it did not pass the name filter (\"+filter+\").\")\n          return undefined\n        }\n      }\n      else{\n          return c\n      }\n    }), function(c){\n      return !_.isUndefined(c)\n    })\n  },\n  uiKeys: [\"uiClass\",\"uiSize\",\"uiColor\"],\n  uiKeysCircle: [\"uiClass\",\"uiSize\",\"uiColor\",\"uiBrand\"],\n  omitProps(props, filterList) {\n    if (!_.isArray(filterList) || !filterList.length)\n      return props\n    return _.omit( props, filterList)\n  },\n  pickProps(props, filterList) {\n    if (!_.isArray(filterList) || !filterList.length)\n      return props\n    return _.pick( props, filterList)\n  }\n}\n","  \n// let themes = [\"regular\",\"no-edges\"]\nlet themes = []\n\nRC.Card = React.createClass({\n  mixins: [RC.Mixins.Theme, RC.Mixins.Premade],\n  themeGroup: \"card\",\n  themes: themes,\n  propTypes: {\n    title: React.PropTypes.string,\n    subtitle: React.PropTypes.string,\n    avatar: React.PropTypes.string,\n    uiClass: React.PropTypes.string,\n\n    theme: React.PropTypes.string,\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n  },\n\n  render(){\n    let header = this.makeAvatarItem()\n    let children = fw.uniformChildren(this.props.children, \"Item\")\n    if (!children.length && !header) return null\n\n    return <div className={this.getTheme()}>\n      {header}\n      {children}\n    </div>\n  },\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  RC.Card.Help = {\n    Type: \"Canvas\",\n    Themes: themes,\n    PropTypes: {\n      theme: \"String\",\n      avatar: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',\n      title: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',\n      subtitle: 'String (Use \"Item\", \"Avatar\", \"Subtitle\" props to auto-create a header.)',\n      uiClass: \"String (FontAwesome)\",\n      uiColor: \"String or HEX\",\n      uiBrand: \"Flexible\",\n      uiSize: \"Flexible\"\n    },\n    Description: \"Creates a card component. Similar to cards found in many Social Networking apps such as Facebook, Instagram, Twitter, or Pinterest, etc.\"\n  }\n","\nlet themes = [\"icon-left item-text-wrap\", \"text-wrap\", \"body\", \"divider\", \"avatar\", \"image\", \"tabs\", \"icon-left\", \"icon-right\", \"thumbnail-left\", \"thumbnail-right\"]\nRC.Item = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themes: themes,\n\n  propTypes: {\n    uiClass: React.PropTypes.string,\n    uiColor: React.PropTypes.string,\n    uiBrand: React.PropTypes.number,\n    // uiSize: IS FLEXIBLE\n\n    avatar: React.PropTypes.string,\n    title: React.PropTypes.string,\n    subtitle: React.PropTypes.string,\n    iconAlign: React.PropTypes.string,\n    note: React.PropTypes.string,\n\n    theme: React.PropTypes.string,\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n  },\n  render(){\n\n    let self = this\n    let uiKeys = [\"uiClass\",\"uiSize\",\"uiColor\"]\n    let themeList = h.strToArray(this.props.theme)\n\n    if (_.contains(themeList, \"tabs\")) {\n      let list = _.isArray(this.props.list) ? this.props.list : []\n      let iconAlign = _.contains([\"left\",\"right\"], this.props.iconAlign) ? this.props.iconAlign : \"left\"\n\n      // @@@@@\n      // Tabs @@\n      return <div className={\"item tabs tabs-icon-\"+iconAlign}>\n        {list.map( function(t,n){\n          let aProps = fw.omitProps(t, uiKeys)\n          var ui = null\n\n          if (_.intersection(_.keys(t), uiKeys).length) {\n            if (_.isUndefined(t.uiSize)) t.uiSize = \"1.75em\"\n            let uiProps = _.pick(t, uiKeys)\n            ui = <RC.uiIcon {...uiProps} />\n          }\n\n          return <RC.URL {...aProps} className=\"tab-item\" key={n}>\n            {ui && iconAlign==\"left\" ? ui : null}\n            {t.label}\n            {ui && iconAlign==\"right\" ? ui : null}\n          </RC.URL>\n        })}\n        </div>\n    }\n\n    // @@@@@\n    // Default @\n    var avatar = []\n    var title = null\n    var subtitle = null\n    var custTheme = null\n\n    let keys = _.keys(this.props)\n    let uiKeysAvatar = [\"uiClass\",\"uiSize\",\"uiBrand\",\"uiColor\"]\n\n    let aProps = _.omit(this.props, uiKeys.concat([\"label\",\"uiBrand\"]))\n\n    if (_.intersection([\"avatar\",\"icon-left\",\"icon-right\",\"thumbnail-left\",\"thumbnail-right\"], themeList).length) {\n\n      if (_.intersection([\"avatar\",\"thumbnail-left\",\"thumbnail-right\"], themeList).length) {\n        // @@@@@\n        // Avatar & Thumbnail\n        // @@@@@\n        if (_.intersection(keys, [\"title\",\"subtitle\",\"avatar\",\"uiClass\"]).length) {\n          if (this.props.avatar) {\n            avatar.push(<img src={this.props.avatar} />)\n            if (this.props.uiClass) {\n              custTheme = this.props.theme+\" icon-right\"\n              avatar.push(<RC.uiIcon {... fw.pickProps(this.props, uiKeys)} />)\n            }\n          } else if (this.props.uiClass) {\n            var uiProps = fw.pickProps(this.props, uiKeys.concat(\"uiBrand\"))\n            if (_.isUndefined(uiProps.uiBrand))\n              uiProps.uiBrand = 0\n            avatar.push(<RC.uiIcon {... uiProps} />)\n          }\n\n          if (this.props.title) title = <h2>{this.props.title}</h2>\n          if (this.props.subtitle) subtitle = <p>{this.props.subtitle}</p>\n        }\n      } else {\n        // @@@@@\n        // Icon Left, Right or Both\n        // @@@@@\n        if (_.intersection(_.keys(this.props), uiKeys).length) {\n          uiKeys.push(\"tagName\")\n          let uiLoop = _.object( uiKeys, _.map( uiKeys, function(u){\n            if (_.isString(self.props[u]))\n              return self.props[u].split(\",\")\n            else\n              return []\n          }))\n\n          _.map( uiLoop.uiClass, function(thisClass,n){\n            avatar.push(<RC.uiIcon {... {\n              uiClass: thisClass.trim(),\n              uiSize: _.isUndefined(uiLoop.uiSize[n]) ? \"1.75em\" : uiLoop.uiSize[n],\n              uiColor: uiLoop.uiColor[n] || \"\",\n              tagName: uiLoop.tagName[n] || \"div\",\n            }} />)\n          })\n        }\n\n        title = this.props.label || \"\"\n      }\n    }\n\n    if (avatar[1])\n      var trail = avatar[1]\n    else if (this.props.note)\n      var trail = <span className=\"item-note\">{this.props.note}</span>\n    else\n      var trail = null\n\n    return <RC.URL {... aProps} tagName={aProps.tagName || \"div\"} className={this.getTheme(custTheme)}>\n      {avatar[0]}\n      {title || subtitle ? <div>{title}{subtitle}</div> : null}\n      {this.props.children}\n      {trail}\n    </RC.URL>\n\n  },\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  RC.Item.Help = {\n    Type: \"Item\",\n    Themes: themes,\n    PropTypes: {\n      theme: \"String\",\n      uiClass: \"String\",\n      uiColor: \"String\",\n      uiSize: \"Flexible\",\n      uiBrand: \"Flexible\",\n\n      avatar: \"String (Used to auto-create Avatar Head Design)\",\n      title: \"String (Used to auto-create Avatar Head Design)\",\n      subtitle: \"String (Used to auto-create Avatar Head Design)\",\n\n      iconAlign: \"String (Used for \\\"tabs\\\" theme only)\",\n      note: \"String (Small text to the right)\",\n    },\n    Description: \"Use this component inside RC.Card or RC.List. This is a very versatile inner component with many themes and options.\",\n  }\n","\nRC.ChatBubble = React.createClass({\n  // getInitialState(){\n  //   return {\n  //     selected: null\n  //   }\n  // },\n  getTheme(name){\n    let theme = _.contains([\"regular\"], name)\n      ? name : \"regular\"\n    return theme\n  },\n  render() {\n    // let curState = this.state.selected // Currently unused\n    let classList = [\n      \"chat-bubble\",\n      this.props.className || \"\",\n      this.props.isUser ? \"to\" : \"from\",\n      this.props.firstOfGroup ? \"first\" : \"\",\n      this.getTheme(this.props.theme)\n    ]\n    let date = _.isDate(this.props.date) ? this.props.date : false\n\n    return <div className={classList.join(\" \")} id={this.props.id}>\n      {this.props.showDateBreak && date ? <div className=\"date-break\"><span className=\"inline-block\">{moment(date).format(\"dddd, MMM D, YYYY\")}</span></div> : null}\n      <div className=\"inner normal\" data-time={date ? moment(date).format(\"h:mm a\") : \"\"}>\n        {\n        !this.props.firstOfGroup || this.props.isUser ? null\n        : <div className=\"author alt-thick\">\n            <RC.Avatar src={this.props.avatar} uiClass={_.contains([\"male\",\"female\"], this.props.gender) ? this.props.gender : \"male\"} />\n            {this.props.name}\n          </div>\n        }\n        <p>{this.props.message}</p>\n      </div>\n    </div>\n  }\n})\n","\nRC.ChatTextArea = React.createClass({\n  getTheme(name){\n    let theme = _.contains([\"regular\",\"opacity\",\"flat\"], name)\n      ? name : \"regular\"\n    return theme\n  },\n  getInitialState() {\n    return {\n      selected: null\n    }\n  },\n  clickHandler(e) {\n    if (_.isFunction(this.props.onSubmit)) {\n      e.preventDefault()\n      this.props.onSubmit(this.refs.msg.getDOMNode().value)\n      this.refs.msg.getDOMNode().value = \"\"\n    }\n  },\n  keyHandler(e) {\n    if (e.which==13) this.clickHandler(e)\n  },\n  // getTheme(name){\n  //   let theme = _.contains([\"regular\",\"chat\"], name)\n  //     ? name : \"regular\"\n  //   return theme\n  // },\n  render() {\n\n    let classList = [\n      \"chat-textarea\",\n      this.getTheme(this.props.theme),\n      this.props.className || \"\",\n    ]\n\n    return <div id={this.props.id}>\n      <div className=\"chat-textarea-spacer\"/>\n      <div className={classList.join(\" \")}>\n        <textarea ref=\"msg\" value={this.props.value} name={this.props.name} placeholder={this.props.placeholder} onKeyDown={this.keyHandler}/>\n        <button onClick={this.clickHandler}><RC.uiIcon uiClass={this.props.uiClass || \"paper-plane\"} uiColor=\"white\" /></button>\n      </div>\n    </div>\n  }\n})\n","\nlet themes = [\"regular\", \"opacity\", \"flat\"]\nRC.GlobalNav = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"\",\n  themes: themes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    animate: React.PropTypes.bool,\n    isVisible: React.PropTypes.bool,\n    allowLongLabels: React.PropTypes.bool,\n    list: React.PropTypes.array,\n  },\n\n  getInitialState(){\n    return {\n      selected: null,\n    }\n  },\n  clickHandler(n, onClick){\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick)\n      this.setState({selected: n})\n\n    if (_.isFunction(onClick))\n      onClick()\n  },\n  render() {\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null\n\n    let self = this\n    let curState = this.state.selected\n    let curPath = FlowRouter.current().path\n\n    _.every(this.props.list, function(link){\n      let test = link.href==curPath\n      if (test)\n        curState = null\n      return !test\n    })\n\n    let location = _.contains([\"auto\",\"top\",\"bottom\"], this.props.location) ? this.props.location : \"auto\"\n    let isTop = location==\"top\" || (location==\"auto\" && h.getPlatform(\"android\")) // This will match Web too\n\n    var classList = [\n      \"global-nav\", \"center\", \"list-length-\"+Math.min(this.props.list.length, 5),\n      isTop ? \"gnav-top\" : \"gnav-bottom\",\n      this.props.animate ? \"animate\" : \"\",\n      this.props.isVisible ? \"isVisible\" : \"isHidden\",\n      this.props.allowLongLabels ? \"\" : \"even\",\n      this.getTheme(),\n      this.props.className || \"\",\n    ]\n\n    return <div className={\"gnav-spacer \"+(isTop && this.props.isVisible ? \"on\" : \"off\")}>\n      <nav className={classList.join(\" \")} id={this.props.id}>\n      {\n      this.props.list.map(function(item,n){\n\n        let isCur = n==curState || item.href==curPath\n        var itemClasses = [\"transition\",\"inline-block\",\"cursor\",\"menuItem\"]\n\n        if (isCur) itemClasses.push(\"cur\")\n        if (item.uiClass) itemClasses.push(\"with-icon\")\n        if (item.label) itemClasses.push(\"with-label\")\n\n        return <RC.URL {... _.omit(item,[\"className\",\"onClick\"])} className={itemClasses.join(\" \")} onClick={self.clickHandler.bind(null, n, item.onClick)} key={n}>\n          {item.uiClass ? <RC.uiIcon uiClass={isCur && item.uiClassCur ? item.uiClassCur : item.uiClass} uiColor={isCur && item.uiColorCur ? item.uiColorCur : item.uiColor} uiSize={item.uiSize} /> : null}\n          {item.label ? <span className=\"fn-label ellipsis\">{item.label}</span> : null}\n        </RC.URL>\n      })\n      }\n      </nav>\n    </div>\n  }\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  RC.GlobalNav.Help = {\n    Type: \"Unique/Canvas\",\n    Themes: themes,\n    PropTypes: {\n      animate: \"Boolean\",\n      isVisible: \"Boolean\",\n      allowLongLabels: \"Boolean\",\n      list: \"Array\",\n    },\n    Description: \"Automatic navigation based on the device type (IOS or Android). Top for Android and bottom for IOS.\"\n  }\n","\nlet themes_form = []\nRC.Form = React.createClass({\n  getFormData(){\n    var formEl = React.findDOMNode(this.refs.rcForm)\n    var form = h.serializeForm(formEl)\n    return form\n  },\n  render() {\n    return <form {...this.props} ref=\"rcForm\">\n      {this.props.children}\n    </form>\n  }\n})\n\n// @@@@@\n// <Input/> Form Element\n// @@@@@\n\nlet themes_input = [\"stacked-label\",\"small-label\",\"overlay-light\",\"overlay-dark\"]\nRC.Input = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themes: themes_input,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n    value: React.PropTypes.string,\n    name: React.PropTypes.string,\n    placeholder: React.PropTypes.string,\n    className: React.PropTypes.string,\n    changeHandler: React.PropTypes.func,\n    label: React.PropTypes.string,\n    labelColor: React.PropTypes.string,\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  reset(){\n    this.setState({ value: this.props.value || false })\n  },\n  getInitialState(){\n    return {\n      value: false\n    }\n  },\n  getValue(){\n    let val = (this.state.value!==false ? this.state.value : this.props.value) || \"\"\n    return h.ltrim(val)\n  },\n  changeHandler: function(e) {\n    this.setState({value: e.target.value})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler(e)\n  },\n  render() {\n\n    let inputProps = _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"labelColor\"])\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\"\n\n    return <label className={classes}>\n      {this.props.label ? <span className={\"input-label\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor : \"\")}>{this.props.label}</span> : null}\n      <input {... inputProps} type={this.props.type || \"text\"} value={this.getValue()} onChange={this.changeHandler} />\n    </label>\n  }\n})\n\n// @@@@@\n// <Input range/> Form Element\n// @@@@@\n\nRC.Range = React.createClass({\n  propTypes: {\n    id: React.PropTypes.string,\n    name: React.PropTypes.string,\n    className: React.PropTypes.string,\n    changeHandler: React.PropTypes.func,\n\n    value: React.PropTypes.number,\n    min: React.PropTypes.number,\n    max: React.PropTypes.number,\n\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  getInitialState(){\n    return {\n      value: false\n    }\n  },\n  reset(){\n    this.setState({ value: this.props.value || false })\n  },\n  getValue(){\n    return (this.state.value!==false ? this.state.value : this.props.value) || null\n  },\n  changeHandler: function(e) {\n    this.setState({value: e.target.value})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler(e)\n  },\n  render() {\n\n    var ui = {}\n    if (this.props.uiClass) {\n      let self = this\n      let uiKeys = [\"uiClass\",\"uiSize\",\"uiColor\"]\n      ui = _.object( uiKeys, _.map( uiKeys, function(u){\n        if (_.isString(self.props[u]))\n          return self.props[u].split(\",\")\n        else\n          return []\n      }))\n    }\n\n    let classes = \"item range\"+(this.props.error ? \" has-error\" : \"\")+(h.checkColorClass(this.props.rangeColor) ? \" range-\"+this.props.rangeColor : \"\")\n\n    return <div className={classes}>\n      {ui.uiClass && ui.uiClass[0] ? <RC.uiIcon uiClass={ui.uiClass[0]} uiSize={ui.uiSize[0]} uiColor={ui.uiColor[0]}/> : null}\n      <input\n        type=\"range\" onChange={this.changeHandler}\n        {... _.omit(this.props, [\"changeHandler\",\"value\",\"type\"])}\n        value={this.getValue()}\n        min={_.isNumber(this.props.min) ? this.props.min : 0}\n        max={_.isNumber(this.props.max) ? this.props.max : 100}\n      />\n    {ui.uiClass && ui.uiClass[1] ? <RC.uiIcon uiClass={ui.uiClass[1]} uiSize={ui.uiSize[1]} uiColor={ui.uiColor[1]}/> : null}\n    </div>\n  }\n})\n\n// @@@@@\n// <Input checkbox/> Form Element\n// @@@@@\n\nlet themes_checkbox = [\"toggle\"]\nRC.Checkbox = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themes: themes_checkbox,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n    value: React.PropTypes.bool,\n    name: React.PropTypes.string,\n    className: React.PropTypes.string,\n\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  getInitialState(){\n    return {\n      value: this.props.value || false // Must be Boolean\n    }\n  },\n  reset(){\n    this.setState({ value: this.props.value || false })\n  },\n  getValue(){\n    return _.isBoolean(this.state.value) ? this.state.value : this.props.value\n  },\n  changeHandler: function(e) {\n    this.setState({value: !this.state.value})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler(e)\n  },\n  render() {\n    var classes = this.getTheme() + (this.props.theme ? \"\" : \" item-checkbox\")\n    let input = <input {... _.omit(this.props, [\"value\",\"checked\",\"type\"])} type=\"checkbox\" onChange={function(){}} checked={this.getValue()} />\n    /**\n     * NOTE\n     * <div> is used instead of <label> to overcome Web/Mobile issues\n     */\n     switch(this.props.theme){\n       case \"toggle\":\n        var checkbox = <div className={\"toggle\"+(h.checkColorClass(this.props.uiColor) ? \" toggle-\"+this.props.uiColor : \"\")}>\n          {input}\n          <div className=\"track\"><div className=\"handle\"/></div>\n        </div>\n       break\n       default:\n        var checkbox = <span className=\"checkbox\">{input}</span>\n     }\n\n    return <div className={classes} onClick={this.changeHandler}>\n      {this.props.label}\n      {checkbox}\n    </div>\n  }\n})\n\n// @@@@@\n// <Input checkbox/> with Toggle, Form Element\n// @@@@@\n//\n// RC.Checkbox = React.createClass({\n//   propTypes: {\n//     id: React.PropTypes.string,\n//     theme: React.PropTypes.string,\n//     value: React.PropTypes.bool,\n//     name: React.PropTypes.string,\n//     className: React.PropTypes.string,\n//\n//     error: React.PropTypes.bool,\n//     style: React.PropTypes.object,\n//     disabled: React.PropTypes.bool,\n//   },\n//   getInitialState(){\n//     return {\n//       value: this.props.value || false // Must be Boolean\n//     }\n//   },\n//   getValue(){\n//     return _.isBoolean(this.state.value) ? this.state.value : this.props.value\n//   },\n//   changeHandler: function(e) {\n//     this.setState({value: !this.state.value})\n//     if (_.isFunction(this.props.changeHandler))\n//       this.props.changeHandler(e)\n//   },\n//   render() {\n//     let inputProps = _.omit(this.props, [\"value\",\"checked\",\"type\"])\n//     var classes = \"item-checkbox \"+(this.props.className || \"\")\n//     /**\n//      * NOTE\n//      * <div> is used instead of <label> to overcome Web/Mobile issues\n//      */\n//     return <div className={classes} onClick={this.changeHandler}>\n//       <span className=\"checkbox\">\n//         <input {... inputProps} type=\"checkbox\" onChange={function(){}} checked={this.getValue()} />\n//       </span>\n//       {this.props.label}\n//     </div>\n//   }\n// })\n\n// @@@@@\n// <Input radio/> Form Element\n// @@@@@\n\nRC.RadioGroup = React.createClass({\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    list: React.PropTypes.array,\n    label: React.PropTypes.string,\n    name: React.PropTypes.string,\n    className: React.PropTypes.string,\n\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  getInitialState(){\n    let list = _.isArray(this.props.list) ? this.props.list : []\n    let self = this\n\n    return {\n      checked: list.map( function(c){\n        return c.value && c.value==self.props.value ? true : false\n      })\n    }\n  },\n  reset(){\n    let list = _.isArray(this.props.list) ? this.props.list : []\n    let self = this\n    let checked = list.map( function(c){\n      return c.value && c.value==self.props.value ? true : false\n    })\n    this.setState({ checked: checked })\n  },\n  getValue(n){\n    if (_.isUndefined(n)) {\n      var realVal = null\n      let self = this\n      _.every(this.state.checked, function(c,nn){\n        if (c)\n          realVal = self.props.list[nn].value\n        return !c\n      })\n      return realVal  //calphin\n    }\n    return this.state.checked[n]\n  },\n  changeHandler: function(n) {\n    let checked = this.state.checked\n    this.setState({checked: checked.map(function(c,nn){\n      return nn==n\n    })})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler()\n  },\n  makeRadio(radio,n){\n    let checked = this.getValue(n)\n    let classes = \"item item-radio \"+(radio.className || \"\")\n    /**\n     * NOTE\n     * <div> is used instead of <label> to overcome Web/Mobile issues\n     */\n    return <div className={classes} key={n} onClick={this.changeHandler.bind(null,n)}>\n      <input {... _.omit(radio, [\"checked\",\"type\",\"label\"])} type=\"radio\" onChange={function(){}} checked={checked} />\n      <div className=\"item-content\">{radio.label}</div>\n      <RC.uiIcon uiClass={this.props.uiClass || \"check\"} uiColor={this.props.uiColor} uiSize={this.props.uiSize} className=\"radio-fa\" />\n    </div>\n  },\n  render() {\n\n    if (!this.props.list.length) return null\n\n    let self = this\n    let radioGroup = this.props.name || h.random_string()\n\n    return <div>\n      {\n      this.props.list.map(function(g,n){\n        g.name = radioGroup\n        return self.makeRadio(g,n)\n      })\n      }\n    </div>\n  }\n})\n\n// @@@@@\n// <textarea/> Form Element\n// @@@@@\n\nlet themes_textarea = [\"stacked-label\",\"small-label\"]\nRC.Textarea = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themeDefault: \"stacked-label\",\n  themes: themes_textarea,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n    value: React.PropTypes.string,\n    name: React.PropTypes.string,\n    placeholder: React.PropTypes.string,\n    className: React.PropTypes.string,\n    changeHandler: React.PropTypes.func,\n    label: React.PropTypes.string,\n    labelColor: React.PropTypes.string,\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  getInitialState(){\n    return {\n      value: false\n    }\n  },\n  reset(){\n    this.setState({ value: false })\n  },\n  getValue(){\n    return (this.state.value!==false ? this.state.value : this.props.children) || \"\"\n  },\n  changeHandler: function(e) {\n    this.setState({value: e.target.value})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler(e)\n  },\n  render() {\n\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\"\n\n    return <label className={classes}>\n      {this.props.label ? <span className={\"input-label\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor : \"\")}>{this.props.label}</span> : null}\n      <textarea {... _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"children\",\"labelColor\"])} type={this.props.type || \"text\"} value={this.getValue()} onChange={this.changeHandler} />\n    </label>\n  }\n})\n\nlet themes_button = [\"full\",\"overlay-light\",\"overlay-dark\",\"circle\"]\nRC.Button = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"button\",\n  themes: themes_button,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n    type: React.PropTypes.string,\n    form: React.PropTypes.string,\n    name: React.PropTypes.string,\n    className: React.PropTypes.string,\n    href: React.PropTypes.string,\n\n  },\n  render() {\n\n    var classes = this.getTheme() + (this.props.buttonColor ? \" button-\"+this.props.buttonColor : \"\")\n    let themes = h.strToArray(this.props.theme)\n    let intersection = _.intersection([\"overlay-light\",\"overlay-dark\"], themes)\n    let button = <button {... this.props} className={classes}>\n      {this.props.children}\n    </button>\n\n\n    if(this.props.href){\n\n      return <a {... this.props} className={classes}>\n        {this.props.children}\n      </a>\n    }\n\n\n    return intersection.length\n    ? <div className={\"wrap-\"+intersection[0]+(this.props.active ? \" active\" : \"\")}>{button}</div>\n    : button\n  }\n})\n\nlet themes_select = []\nRC.Select = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themes: themes_select,\n\n  propTypes: {\n    theme: React.PropTypes.string,\n    value: React.PropTypes.string,\n    name: React.PropTypes.string,\n    error: React.PropTypes.bool,\n    label: React.PropTypes.string,\n    labelColor: React.PropTypes.string,\n  },\n  getInitialState(){\n    return {\n      value: false\n    }\n  },\n  reset(){\n    this.setState({ value: false })\n  },\n  getValue(){\n    return (this.state.value!==false ? this.state.value : this.props.value) || \"\"\n  },\n  changeHandler: function(e) {\n    this.setState({value: e.target.value})\n    if (_.isFunction(this.props.changeHandler)) {\n      this.state.value = e.target.value // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n      this.props.changeHandler(e)\n    }\n  },\n  render() {\n\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\"\n\n    return <label className={classes}>\n      {this.props.label ? <span className={\"input-label\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor : \"\")}>{this.props.label}</span> : null}\n      <select {... _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"labelColor\"])} onChange={this.changeHandler} value={this.getValue()} ref=\"select\">\n        {\n        this.props.options.map(function(o,n){\n          if (_.isString(o)) o = { value: o }\n          o = _.isObject(o) && o.value ? o : { value: undefined }\n          return <option value={o.value} key={n}>{o.text || o.value}</option>\n        })\n        }\n      </select>\n    </label>\n  }\n})\n\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\") {\n  RC.Form.Help = {\n    Type: \"Canvas\",\n    Themes: themes_form,\n    PropTypes: \"TODO\",\n    Description: \"Creates a <form> canvas with a useful getFormData() function. *Note: In order for getFormData() to work, all form items must have a \\\"name\\\" value.\",\n    Example: \"http://localhost:3000/forms/Form_Index\"\n  }\n\n  RC.Input.Help = {\n    Type: \"Item\",\n    Themes: themes_input,\n    PropTypes: \"TODO\",\n    Description: \"React helper for <input>.\",\n    Example: \"http://localhost:3000/forms/Form_Index\"\n  }\n\n  RC.Textarea.Help = {\n    Type: \"Item\",\n    Themes: themes_textarea,\n    PropTypes: \"TODO\",\n    Description: \"React helper for <textarea>.\",\n    Example: \"http://localhost:3000/forms/Form_Index\",\n    TODO: \"Add auto-resize\"\n  }\n}\n","/**\n * Created on 9/16/15.\n */\n{\n\n    let themes_select = []\n    RC.Select2 = React.createClass({\n        mixins: [RC.Mixins.Theme],\n        themeGroup: \"item\",\n        themes: themes_select,\n\n        propTypes: {\n            theme: React.PropTypes.string,\n            value: React.PropTypes.oneOfType([\n                React.PropTypes.string,\n                React.PropTypes.number\n            ]),\n            name: React.PropTypes.string,\n            error: React.PropTypes.bool,\n            label: React.PropTypes.string,\n            labelColor: React.PropTypes.string,\n        },\n        getInitialState(){\n            return {\n                value: false\n            }\n        },\n\n        //提供通过属性 render组件的接口\n        componentWillReceiveProps(nextProps){\n            if(nextProps.value!=this.state.value){\n                this.setState({ value: nextProps.value })\n            }\n        },\n        reset(){\n            this.setState({ value: false })\n        },\n        getValue(){\n            return (this.state.value!==false ? this.state.value : this.props.value) || \"\"\n        },\n        changeHandler: function(e) {\n            this.setState({value: e.target.value})\n            if (_.isFunction(this.props.changeHandler)) {\n                this.state.value = e.target.value // This may seem unnecessary, but it's needed. Consult me if you need to know why.\n                this.props.changeHandler(e)\n            }\n        },\n        render() {\n\n            var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input item-select\"\n\n            return <label className={classes}>\n                {this.props.label ? <span className={\"input-label\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor : \"\")}>{this.props.label}</span> : null}\n                <select {... _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"labelColor\"])} onChange={this.changeHandler} value={this.getValue()} ref=\"select\">\n                    {\n                        this.props.options.map(function(o,n){\n                            if (_.isString(o)) o = { value: o }\n                            o = _.isObject(o) && o.value ? o : { value: undefined }\n                            return <option value={o.value} key={n}>{o.text || o.value}</option>\n                        })\n                    }\n                </select>\n            </label>\n        }\n    })\n\n\n\n    //////\n    RC.RadioGroup2 = React.createClass({\n        propTypes: {\n            id: React.PropTypes.string,\n            theme: React.PropTypes.string,\n\n            list: React.PropTypes.array,\n            label: React.PropTypes.string,\n            name: React.PropTypes.string,\n            className: React.PropTypes.string,\n\n            error: React.PropTypes.bool,\n            style: React.PropTypes.object,\n            disabled: React.PropTypes.bool,\n        },\n        getInitialState(){\n            let list = _.isArray(this.props.list) ? this.props.list : []\n            let self = this\n\n            return {\n                checked: list.map( function(c){\n                    return c.value && c.value==self.props.value ? true : false\n                })\n            }\n        },\n        reset(){\n            let list = _.isArray(this.props.list) ? this.props.list : []\n            let self = this\n            let checked = list.map( function(c){\n                return c.value && c.value==self.props.value ? true : false\n            })\n            this.setState({ checked: checked })\n        },\n        getValue(n){\n            if (_.isUndefined(n)) {\n                var realVal = null\n                let self = this\n                _.every(this.state.checked, function(c,nn){\n                    if (c)\n                        realVal = self.props.list[nn].value\n                    return !c\n                })\n            }\n            return this.state.checked[n]\n        },\n        changeHandler: function(n) {\n            let checked = this.state.checked\n            this.setState({checked: checked.map(function(c,nn){\n                return nn==n\n            })})\n            if (_.isFunction(this.props.changeHandler))\n                this.props.changeHandler(this.props.list[n])\n        },\n        makeRadio(radio,n){\n            let checked = this.getValue(n)\n            let classes = \"item item-radio \"+(radio.className || \"\")\n            /**\n             * NOTE\n             * <div> is used instead of <label> to overcome Web/Mobile issues\n             */\n            return <div className={classes} key={n} onClick={this.changeHandler.bind(null,n)}>\n                <input {... _.omit(radio, [\"checked\",\"type\",\"label\"])} type=\"radio\" onChange={function(){}} checked={checked} />\n                <div className=\"item-content\">{radio.label}</div>\n                <RC.uiIcon uiClass={this.props.uiClass || \"check\"} uiColor={this.props.uiColor} uiSize={this.props.uiSize} className=\"radio-fa\" />\n            </div>\n        },\n        render() {\n\n            if (!this.props.list.length) return null\n\n            let self = this\n            let radioGroup = this.props.name || h.random_string()\n\n            return <div>\n                {\n                    this.props.list.map(function(g,n){\n                        g.name = radioGroup\n                        return self.makeRadio(g,n)\n                    })\n                }\n            </div>\n        }\n    })\n\n\n\n}\n","let themes_input = [\"stacked-label\",\"small-label\",\"overlay-light\",\"overlay-dark\"]\nRC.PasswordInput = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"item\",\n  themes: themes_input,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    theme: React.PropTypes.string,\n    value: React.PropTypes.string,\n    name: React.PropTypes.string,\n    placeholder: React.PropTypes.string,\n    className: React.PropTypes.string,\n    changeHandler: React.PropTypes.func,\n    label: React.PropTypes.string,\n    labelColor: React.PropTypes.string,\n    error: React.PropTypes.bool,\n    style: React.PropTypes.object,\n    disabled: React.PropTypes.bool,\n  },\n  reset(){\n    this.setState({ \n      value: this.props.value || false,\n      showPWGuide: false\n    })\n  },\n\n  getInitialState(){\n    return {\n      showPWGuide: false,\n      value: false\n    }\n  },\n\n  getValue(){\n    let val = (this.state.value!==false ? this.state.value : this.props.value) || \"\"\n    return h.ltrim(val)\n  },\n  changeHandler: function(e) {\n    this.setState({value: e.target.value})\n    if (_.isFunction(this.props.changeHandler))\n      this.props.changeHandler(e)\n  },\n  showPasswordGuide(e){\n    e.preventDefault()\n    this.setState({showPWGuide: true});\n  },\n  showQuestionMark(e){\n    e.preventDefault()\n    this.setState({showPWGuide: false});\n  },\n\n  passwordGuide(){\n    //if (this.state.showPWGuide) {\n    //\n    //  return 'Password shoud have at least 8 characters, containing Capital Letters AND Numbers.'\n    //\n    //\n    //} else\n    {\n\n      return <span className=\"password-guide-wrap\">\n          <img   style={{margin:0}}\n               border=\"0\" src=\"/assets/help.png\" align=\"middle\" width=\"16\" height=\"16\"/>\n           this.state.showPWGuide?<span className=\"password-guide cal-text-wrap\">Password shoud have at least 8 characters, containing Capital Letters AND Numbers.</span>:''\n      </span>\n    }\n  },\n\n  render() {\n    \n    // var passwordGuide = 'FORMAT?'\n    // if (this.state.showPWGuide)\n    //   passwordGuide = 'Password shoud have at least 8 characters, containing Capital Letters AND Numbers.'\n\n    let inputProps = _.omit(this.props, [\"changeHandler\",\"value\",\"type\",\"labelColor\"])\n    var classes = this.getTheme() + (this.props.error ? \" has-error\" : \"\") + \" item-input\"\n\n    return <label className={classes}>\n      {this.props.label ? <span onMouseOver={this.showPasswordGuide}\n                                onMouseOut={this.showQuestionMark}\n                                className={\"input-label inline-block\"+(h.checkColorClass(this.props.labelColor) ? \" colored \"+this.props.labelColor\n                                : \"\")} >\n      {this.props.label}{this.passwordGuide()}\n\n      </span> : null}\n\n      <input {... inputProps} type={this.props.type || \"text\"} value={this.getValue()} onChange={this.changeHandler} />\n    </label>\n  }\n})","let themes = [\"regular\", \"opacity\", \"flat\"]\nRC.HeaderNav = React.createClass({\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    title: React.PropTypes.string,\n    nav: React.PropTypes.array,\n\n    hideBackButton:React.PropTypes.bool,\n    hideLeftNavToggle:React.PropTypes.bool,\n    hideShoppingCartButton:React.PropTypes.bool,\n\n  },\n\n  getTheme(name){\n    let theme = _.contains(themes, name)\n      ? name : \"regular\"\n    return theme\n  },\n  clickHandler(home) {\n    if (home) {\n      FlowRouter.BackButton = true\n      FlowRouter.go(\"/\")\n    } else if (FlowRouter.LastRoute.length) {\n      FlowRouter.BackButton = true\n      FlowRouter.go(FlowRouter.LastRoute[FlowRouter.LastRoute.length - 1])\n    }\n  },\n  getInitialState() {\n    return {moreNav: false, init: _.isUndefined(this.props.init) ? true : this.props.init}\n  },\n  componentWillMount() {\n    var self = this\n    var allowThreshold = true\n\n    document.addEventListener(\"click\", function (e) {\n\n      Meteor.clearTimeout(self.timeout)\n      // Strange IOS JS error. keep the .length ?/: check in here\n      let pStop = e.target.className.length ? e.target.className.indexOf(\"stopPropagate\") : -1\n      let pExit = e.target.className.length ? e.target.className.indexOf(\"exitPropagate\") : -1\n      let moreNavDom = React.findDOMNode(self.refs.moreNav)\n\n      if (e.target.tagName == \"HTML\") return // This is an old-device fix, leave it alone. :: By Jason\n\n      if (pStop < 0 && pExit < 0 && self.state.moreNav) {\n        // Do Animation\n        self.setState({moreNav: false, init: false})\n        self.timeout = Meteor.setTimeout(function () {\n          self.setState({moreNav: false, init: true})\n        }, 300)\n      } else if (pExit >= 0)\n        self.setState({moreNav: false, init: true})\n      else\n        self.setState({init: true})\n    })\n  },\n  openMore() {\n    this.setState({moreNav: true, init: false})\n  },\n  //////actions///////\n\n  //d打开leftNav\n  action_openLeftNav(){\n\n    console.log('dispatch: LEFT_NAV_OPEN');\n    Dispatcher.dispatch({actionType: 'LEFT_NAV_OPEN'})\n  },\n\n  timeout: null,\n  render() {\n\n    let logoRight = !(_.isArray(this.props.nav) && !_.isEmpty(this.props.nav))\n\n\n    //if (FlowRouter.LastRoute.length)\n    //  var backButton = <span className=\"normal back\" onClick={this.clickHandler.bind(null,false)}>Back</span>\n    //else\n    //  var backButton = FlowRouter.current().path != \"/\" && !this.props.hideHome\n    //    ? <span className=\"normal back\" onClick={this.clickHandler.bind(null,true)}>Home</span>\n    //    : null\n\n    var backButton = null;\n    if (!this.props.hideBackButton) {\n      if ((FlowRouter.LastRoute.length)) {\n        backButton = <span className=\"normal back\" onClick={this.clickHandler.bind(null,false)}>\n        <RC.uiIcon uiClass=\"chevron-left\"></RC.uiIcon></span>\n\n      }else if(FlowRouter.current().path != \"/\" && !this.props.hideHome){\n        backButton = <span className=\"normal back\" onClick={this.clickHandler.bind(null,true)}>\n        <RC.uiIcon uiClass=\"chevron-left\"></RC.uiIcon></span>\n      }\n    }\n\n    var leftNavToggle = null;\n    //if (this.props.leftNavToggle) {\n    if(!this.props.hideLeftNavToggle){\n      leftNavToggle = <span className=\"normal navToggle\" onClick={this.action_openLeftNav}><RC.uiIcon\n        uiClass=\"bars\"></RC.uiIcon></span>\n    }\n\n\n    var shoppingCartButton= null;\n    if(!this.props.hideShoppingCartButton){\n      shoppingCartButton =<a className=\"normal shopping-cart-button\" href=\"/classEdit/billingAndPayment\" >\n        {this.props.shoppingCart\n          && this.props.shoppingCart.items\n          && this.props.shoppingCart.items.length\n        }\n        <RC.uiIcon uiClass=\"shopping-cart\"></RC.uiIcon></a>\n    }\n\n    var shoppingCartItems = ''\n\n\n\n\n\n    //}\n\n\n    //if(!backButton){\n    //  var leftNavToggle = this.props.leftNavToggle\n    //\n    //  if(leftNavToggle) backButton= <span className=\"normal navToggle\" onClick={this.action_openLeftNav}><RC.uiIcon uiClass=\"bars\"></RC.uiIcon></span>\n    //}\n\n\n    let classList = [\n      \"bg-nav\",\n      \"nav-height transition\",\n      this.getTheme(this.props.theme),\n      this.props.title && this.props.title.length >= 9 ? \"long\" : \"short\",\n    ]\n\n    return <nav className={classList.join(\" \")} id=\"mobile-header\">\n\n\n      {/* 左侧  */}\n      {leftNavToggle}\n      {backButton}\n\n      {/* 中间  */}\n      <figure className={(logoRight && backButton ? \"\" : \"\")+\" logo nav-height boxed transition-medium\"}>\n        {this.props.title && !this.props.showLogo ? <h1 className=\"ellipsis\">Calphin</h1> :\n          <img src=\"/assets/logo.png\" className=\"transition-medium\" data-x=\"auto\" ref=\"logo\"/>}\n      </figure>\n\n      {/* 右侧 */}\n      {\n        logoRight ? {shoppingCartButton}\n          : <p className=\"more-button stopPropagate\" onClick={this.openMore}><span className=\"stopPropagate\"/>\n        </p>\n      }\n      {\n        logoRight ? null\n          : <div className={\"stopPropagate more-nav \"+(this.state.moreNav ? \"corner-in\" : \"corner-out\")}\n                 style={this.state.init ? {display: \"none\"} : {}} ref=\"moreNav\">\n          {\n            this.props.nav.map(function (item, n) {\n              return <a href={item.href} key={n} className=\"exitPropagate\">{item.text}</a>\n            })\n          }\n        </div>\n      }\n    </nav>\n  }\n})\n\nif (h.nk(Meteor.settings, \"public.env\") != \"live\")\n  RC.HeaderNav.Help = {\n    Type: \"Unique/Canvas\",\n    Themes: themes,\n    PropTypes: {\n      title: \"String (Shows title in the header navigation bar)\",\n      nav: \"Array (List of links for the menu on right)\"\n    },\n    Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n  }\n","\nRC.LeftNav = React.createClass({\n  getInitialState() {\n    return {\n      closing: false,\n      isOpen: this.props.openOnInit\n    }\n  },\n  open() {\n    if (!this.state.closing)\n      this.setState({isOpen: true})\n  },\n  close() {\n    let self = this\n    this.setState({closing: true})\n    Meteor.setTimeout(function(){\n      self.setState({isOpen: false, closing: false})\n    }, 400)\n  },\n  linkClickHandler(e) {\n    if (e.target.href)\n      this.close()\n  },\n  render() {\n\n    if (!this.state.isOpen) return null\n\n    return <nav className={\"transition left-nav fixed-full \"+(this.state.closing ? \"out\" : \"in\")}>\n      <div className=\"back abs-full\" onClick={this.close}/>\n\n      <div className=\"inner bg-white scroll\" onClick={this.linkClickHandler}>\n        <div onClick={this.props.toggleNavFunc}/>\n        <RC.NavList list={this.props.navList} showCurrent={false} />\n      </div>\n\n    </nav>\n  }\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  RC.LeftNav.Help = {\n    Type: \"Canvas\",\n    Description: \"This component is currently being re-written, please check back later.\"\n  }\n","/*\nRC.List = React.createClass({\n  getInitialState(){\n    return {\n      selected: null\n    }\n  },\n  getTheme(name){\n    let enableClick = _.isUndefined(this.props.enableClick) ? true : this.props.enableClick\n    let theme = _.contains([\"regular\",\"nav-list\",\"nav-list dark\"], name)\n      ? name : \"regular\"\n    return theme+\" \"+(this.props.className || \"\")+(enableClick ? \" click-enabled\" : \"\")\n  },\n  setSelectedState(n){\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick)\n      this.setState({selected: n})\n  },\n  render() {\n\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null\n\n    let self = this\n    let curState = this.state.selected\n    let enableClick = this.props.enableClick || true\n\n    return <ul className={\"rc-list \"+this.getTheme(this.props.theme)}>\n      {\n      this.props.list.map(function(item,n){\n\n        let itemTitle = null\n        let itemSubtitle = null\n\n        let cur = null\n        let avatar = null\n        let sub = null\n\n        let date = fw.getDateFromProps(item.date, item.dateFormat)\n\n        switch(item.type){\n          case \"title\":\n            cur = \"type-listTitle sub \"+(item.className || \"\")\n            itemTitle = item.label\n          break\n          default:\n            cur = \"transition listItem\"+(item.avatar || item.uiClass ? \" with-icon \" : \" \")+(n==curState ? \"cur \" : \"\")+(item.onClick || item.href || enableClick ? \"cursor \" : \"\")+(item.className || \"\")\n            avatar = <RC.Avatar src={item.avatar} theme=\"regular\" uiClass={item.uiClass} uiSize={item.uiSize>=0 ? item.uiSize : 1} uiColor={item.uiColor || \"white\"} />\n\n            let itemTitle = item.title ? <h4 className=\"textTitle ellipsis\">{item.title}</h4> : null\n            let itemSubtitle = item.subtitle || item.label\n              ? <p className=\"subtitle smaller ellipsis\">{item.label ? <strong className=\"label inline-block\">{item.label}</strong> : null}{item.subtitle}</p>\n              : null\n\n            sub = item.date ? <strong className=\"date sub\">{date}</strong> : null\n        }\n\n        return <li className={cur} key={n} onClick={item.onClick}>\n          {\n            item.href\n            ? <a href={item.href} onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</a>\n            : <span onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</span>\n          }\n        </li>\n      })\n      }\n    </ul>\n  }\n})\n*/\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n// @@@@@@@\n\nlet themes = [\"inset\"]\n\nRC.List = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"list\",\n  themes: themes,\n  propTypes: {\n    list: React.PropTypes.array,\n\n    theme: React.PropTypes.string,\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    style: React.PropTypes.object,\n  },\n  getInitialState(){\n    return {\n      selected: null\n    }\n  },\n  setSelectedState(n){\n    if (_.isUndefined(this.props.enableClick) || this.props.enableClick)\n      this.setState({selected: n})\n  },\n  render() {\n\n    let list = !_.isArray(this.props.list) || !this.props.list.length\n      ? [] : this.props.list\n    let self = this\n    let curState = this.state.selected\n    let enableClick = this.props.enableClick || true\n\n    return <ul className={this.getTheme()}>\n      {\n      list.map(function(item,n){\n        let listProps = _.omit(item, [\"value\"])\n        return <RC.Item {... listProps} tagName={listProps.tagName || \"li\"} key={n}>\n          {item.value}\n        </RC.Item>\n      })\n      }\n      {this.props.children}\n    </ul>\n  }\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\")\n  RC.List.Help = {\n    Type: \"Canvas\",\n    Themes: themes,\n    PropTypes: {\n      list: \"Array\"\n    },\n    Description: \"Similar to RC.Card, this is another flexible canvas component.\",\n    Example: \"/List/Index\"\n  }\n\n\n/*\n        return <li className={cur} key={n} onClick={item.onClick}>\n          {\n            item.href\n            ? <a href={item.href} onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</a>\n            : <span onClick={self.setSelectedState.bind(null, n)}>{sub}{avatar}{itemTitle}{itemSubtitle}</span>\n          }\n        </li>\n*/\n","\nRC.NavList = React.createClass({\n  getTheme(name){\n    let theme = _.contains([\"regular\",\"dark\"], name)\n      ? name : \"regular\"\n    return theme+\" \"+(this.props.className || \"\")\n  },\n  render() {\n\n    let self = this\n    let curPath = FlowRouter.current().path\n    let showCurrent = _.isUndefined(this.props.showCurrent) ? true : this.props.showCurrent\n    if (!_.isArray(this.props.list) || !this.props.list.length) return null\n\n    return <ul className={\"unselect nav-list alt \"+this.getTheme(this.props.theme)}>\n      {\n      this.props.list.map(function(item,n){\n\n        let itemRender = null\n        let cur = null\n        let uiIcon = null\n\n        switch(item.type){\n          case \"title\":\n            itemRender = <h4 className=\"type-listTitle sub\">{item.text}</h4>\n          break\n          default:\n            cur = \"transition link\"+(item.uiClass ? \" with-icon\" : \"\")+(showCurrent && item.href==curPath ? \" cur\" : \"\")\n            uiIcon = <RC.uiIcon uiClass={item.uiClass} uiSize={0} />\n            itemRender = item.href\n              ? <a href={item.href} className=\"block cursor\">{item.text}</a>\n              : <span onClick={item.onClick} className=\"block cursor\">{item.text}</span>\n        }\n\n        return <li className={cur} key={n}>{uiIcon}{itemRender}</li>\n      })\n      }\n    </ul>\n  },\n})\n","\nRC.Tabs = React.createClass({\n  getInitialState(){\n    return {\n      tab: this.props.tab || 0\n    }\n  },\n  switchTab(tab) {\n    this.setState({tab:tab})\n  },\n  getTheme(name){\n    let theme = _.contains([\"regular\",\"nav-tabs\"], name)\n      ? name : \"regular\"\n    return theme\n  },\n  render() {\n    let self = this\n\n    var tabs = !_.isArray(this.props.children) ? [this.props.children] : this.props.children\n    _.filter(tabs.map( function(t,n){\n      if (t.type==\"div\" && (t.props.label || t.props.uiClass)) {\n        return t\n      } else if (t.type!=\"div\") {\n        console.warn(\"Tabs child was rejected because it was not a <div>\")\n        return undefined\n      } else {\n        console.warn(\"Tabs child was rejected because it does not have a label or uiClass\")\n        return undefined\n      }\n    }), function(t){\n      return !_.isUndefined(t)\n    })\n\n    if (!tabs.length) return null\n\n    let width = 1/tabs.length*100\n    let tabStyle = {width: width+\"%\"}\n    let barStyle = {width: width+\"%\", left: width*this.state.tab+\"%\"}\n    let bodyStyle = {width: (100*tabs.length)+\"%\", marginLeft: (-100*this.state.tab)+\"%\"}\n\n    return <div className={\"tabs-root overflow \"+this.getTheme(this.props.theme)} id={this.props.id}>\n      <div className=\"tabs-nav clear unselect\">\n        {\n        tabs.map( function(t,n){\n          return <p className={\"cursor boxed\"} key={n} style={tabStyle} onClick={self.switchTab.bind(null,n)}>\n            {<RC.uiIcon uiSize={0} uiClass={t.props.uiClass} uiColor={t.props.uiColor} />}\n            {t.props.label || \"\\u00a0\"}\n          </p>\n        })\n        }\n        <div className=\"tabs-bar boxed transition\" style={barStyle} />\n      </div>\n      <div className={\"tabs-body clear transition \"+(this.props.className || \"\")} style={bodyStyle}>\n        {\n        tabs.map( function(t,n){\n          return <div className=\"tab-pane\" style={tabStyle} key={n}>\n            {t.props.children}\n          </div>\n        })\n        }\n      </div>\n    </div>\n  },\n})\n","\n// @@@@@\n// Timeline Canvas\n// @@@@@\n\nlet timelineThemes = []\nRC.Timeline = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"timeline\",\n  themes: timelineThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    lineColor: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n    list: React.PropTypes.array,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n  },\n\n  render() {\n\n    let defaultFormat = this.props.dateFormat || \"MMM Do, YYYY\"\n    let count = 0\n\n    if (!this.props.list)\n      return <ul {... this.props} className={this.getTheme()+(h.checkColorClass(this.props.lineColor) ? \" timeline-\"+this.props.lineColor : \"\")}>\n        {this.props.children}\n      </ul>\n\n    return <ul className={\"timeline \"+this.getTheme(this.props.theme)} id={this.props.id}>\n      {\n      this.props.list.map(function(item,n){\n\n        var odd_or_even = \"\" // This is used for className, don't set it to null\n        var itemLabel = null\n        var itemRender = null\n\n        let brand = [\"bg-brand\",\"bg-brand2\",\"bg-brand3\"]\n        let brandClass = _.isNumber(item.brand) && brand[item.brand] ? brand[item.brand] : \"\"\n        let uiIcon = <figure className={\"round \"+brandClass}>\n          {\n          item.type==\"title\"\n            ? <RC.uiIcon uiClass={item.uiClass} uiSize={item.uiSize || 0} theme=\"tiny\"/>\n            : null\n          }\n        </figure>\n\n        switch(item.type){\n          case \"title\":\n            itemRender = <h4 className=\"title sub\">\n              {fw.getDateFromProps(item.label, item.dateFormat, defaultFormat)}\n            </h4>\n          break\n          case \"list-item\":\n          default:\n            odd_or_even = count++%2 ? \" even\" : \" odd\"\n            itemLabel = <strong className=\"block label\">\n              {_.isDate(item.title) ? fw.getDateFromProps(item.title, item.dateFormat, defaultFormat) : item.title}\n            </strong>\n            item.type = \"listItem\"\n            itemRender = item.href ? <a className=\"block\" href={item.href}>{item.text}</a> : item.text\n        }\n\n        return <li className={\"type-\"+item.type+odd_or_even} key={n}>\n          <div className=\"inner\">\n            {uiIcon}\n            {itemLabel}\n            {itemRender}\n          </div>\n        </li>\n      })\n      }\n    </ul>\n  },\n})\n\n// @@@@@\n// Journal Item\n// @@@@@\n\nlet journalThemes = [\"title\"]\nRC.Journal = React.createClass({\n  mixins: [RC.Mixins.Theme],\n  themeGroup: \"journal\",\n  themes: journalThemes,\n\n  propTypes: {\n    id: React.PropTypes.string,\n    className: React.PropTypes.string,\n    theme: React.PropTypes.string,\n\n    title: React.PropTypes.string,\n    dateFormat: React.PropTypes.string,\n  },\n\n  render() {\n\n    // Format Setups\n    let dateFormat = this.props.dateFormat || \"MMM Do, YYYY\"\n    let brand = this.props.uiBrand || \"brand\"\n    let classes = this.getTheme()+\" journal-\"+brand\n\n    // Declarations\n    var title = _.isDate(this.props.title) ? fw.getDateFromProps(this.props.title, dateFormat) : this.props.title\n    var content = null\n    var ui = null\n\n    switch(this.props.theme){\n      case \"title\":\n        // @@@@\n        // Title\n        // @@@@\n        if (this.props.uiClass) {\n          var uiObject = _.pick(this.props, fw.uiKeysCircle)\n          ui = <RC.uiIcon {... _.defaults(uiObject,{ uiBrand: brand })} />\n        }\n        content = <strong>{title}</strong>\n      break\n      default:\n        // @@@@\n        // Default\n        // @@@@\n        content = <div>\n          <strong className={\"block \"+brand}>{title}</strong>\n          {this.props.children}\n        </div>\n    }\n\n    return <li {... _.omit(this.props, [\"children\",\"dateFormat\",\"className\"])} className={classes}>\n      {ui}\n      {content}\n    </li>\n  },\n})\n\nif (h.nk(Meteor.settings, \"public.env\")!=\"live\") {\n  RC.Timeline.Help = {\n    Type: \"canvas\",\n    Themes: timelineThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      lineColor: \"String, Hex, CSS\",\n      list: \"Array (Optional)\",\n    },\n    \"PropTypes for List\": {\n      brand: \"Integer (0 to 2, chooses from one of the 3 theme colours) or Brand CSS\",\n      type: 'Array, [\"title\", \"list-item\"] Defaults to list-item',\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      title: \"String\",\n      href: \"String\"\n    },\n    Description: \"Created for documenting series of events. Especially useful for documenting times.\"\n  }\n  RC.Journal.Help = {\n    Type: \"Item\",\n    Themes: journalThemes,\n    PropTypes: {\n      dateFormat: 'String (Defaults to \"MMM Do, YYYY\", use momentJS formats)',\n      uiBrand: \"Flexible\",\n      title: \"String\"\n    },\n    Description: \"Created for documenting snippets of information with dates and bullet points. Use this component with the <RC.Timeline /> component.\"\n  }\n}\n"]}}]