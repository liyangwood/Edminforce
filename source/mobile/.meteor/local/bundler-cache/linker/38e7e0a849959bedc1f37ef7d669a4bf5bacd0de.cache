[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar DevTools = Package['ihealth:dev-tools'].DevTools;\n\n/* Package-scope variables */\nvar DevicesStub, i, j, messages;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/ihealth_devices-stub/callback-simulator.js                                                 //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nDevicesStub = {};                                                                                      // 1\n                                                                                                       // 2\nvar levelFilter = 2                                                                                    // 3\nvar debugL = _.partial(DevTools.consoleWithLevels, levelFilter);                                       // 4\n                                                                                                       // 5\nDevicesStub.sendMessages = function(cb, messageSets) {                                                 // 6\n  if(messageSets) {                                                                                    // 7\n    debugL(4)(\"messageSets.length: \", messageSets.length)                                              // 8\n    debugL(5)(\"messageSets: \", messageSets)                                                            // 9\n    for(i=0; i < messageSets.length; i++) {(function(i) {                                              // 10\n      var messageSet = messageSets[i]                                                                  // 11\n      var messageDelay = messageSet.messageDelay                                                       // 12\n      var message = messageSet.message                                                                 // 13\n      var messageRepeat = messageSet.messageRepeat || 1                                                // 14\n      for(j=0; j < messageRepeat; j++) {                                                               // 15\n        (function(j) {                                                                                 // 16\n          Meteor.setTimeout(function() {                                                               // 17\n            debugL(4)(\"sending message \" + j + \": \" + message)                                         // 18\n            cb(JSON.stringify(message))                                                                // 19\n          } , (j+1) * messageDelay )                                                                   // 20\n        })(j)                                                                                          // 21\n      }                                                                                                // 22\n    })(i)                                                                                              // 23\n    }                                                                                                  // 24\n  }                                                                                                    // 25\n};                                                                                                     // 26\n                                                                                                       // 27\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/ihealth_devices-stub/bg-stub.js                                                            //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nvar debugLevel = 5                                                                                     // 1\nvar debugL = _.partial(DevTools.consoleWithLevels, debugLevel);                                        // 2\nvar sendMessages = DevicesStub.sendMessages;                                                           // 3\n                                                                                                       // 4\nvar fakeBatteryLevel = 77;                                                                             // 5\n                                                                                                       // 6\nDevicesStub.BG5 = {                                                                                    // 7\n  startDiscovery : function(mac, successCallback, errorCallback) {                                     // 8\n    debugL(3)('fake ' + 'startDiscovery');                                                             // 9\n                                                                                                       // 10\n    var messages = [                                                                                   // 11\n      { messageDelay: 1000,                                                                            // 12\n        message: {                                                                                     // 13\n          \"msg\" : \"discovery doing\",                                                                   // 14\n          \"address\" : \"8CDE52425C58\",                                                                  // 15\n          \"name\" : \"BG5\"                                                                               // 16\n        }},                                                                                            // 17\n      { messageDelay: 1500,                                                                            // 18\n        message: {                                                                                     // 19\n          \"HardwareVersion\" : \"1.0.0\",                                                                 // 20\n          \"ProtocolString\" : \"com.jiuan.BPV20\",                                                        // 21\n          \"name\" : \"BP5\",                                                                              // 22\n          \"ModelNumber\" : \"BP5 11070\",                                                                 // 23\n          \"address\" : \"8CDE521448F0\",                                                                  // 24\n          \"msg\" : \"discovery doing\",                                                                   // 25\n          \"FirmwareVersion\" : \"2.1.0\"                                                                  // 26\n        }}                                                                                             // 27\n    ]                                                                                                  // 28\n    sendMessages(successCallback, messages)                                                            // 29\n  },                                                                                                   // 30\n                                                                                                       // 31\n  stopDiscovery : function(mac, successCallback, errorCallback) {                                      // 32\n    debugL(3)('fake ' + 'stopDiscovery')                                                               // 33\n                                                                                                       // 34\n    var messages = [{ messageDelay: 100,                                                               // 35\n        message: {                                                                                     // 36\n      \"msg\" : \"discovery done\",                                                                        // 37\n      \"address\" : \"\"                                                                                   // 38\n    }                                                                                                  // 39\n    }]                                                                                                 // 40\n    sendMessages(successCallback, messages)                                                            // 41\n  },                                                                                                   // 42\n                                                                                                       // 43\n  startMeasure : function(mac, successCallback, errorCallback) {                                       // 44\n      debugL(3)('fake ' + 'startMeasure')                                                              // 45\n                                                                                                       // 46\n      var messageNormal = [                                                                            // 47\n        { messageDelay: 2000,                                                                          // 48\n            message: {                                                                                 // 49\n              \"msg\" : \"strip in\",                                                                      // 50\n              \"address\" : \"8CDE52425C58\"                                                               // 51\n            }                                                                                          // 52\n        },                                                                                             // 53\n        { messageDelay: 5000,                                                                          // 54\n          message: {                                                                                   // 55\n            \"msg\" : \"get blood\",                                                                       // 56\n            \"address\" : \"8CDE52425C58\"                                                                 // 57\n          }                                                                                            // 58\n        },                                                                                             // 59\n        { messageDelay: 10000,                                                                         // 60\n          message: {                                                                                   // 61\n            \"msg\" : \"value\",                                                                           // 62\n            \"address\" : \"8CDE52425C58\",                                                                // 63\n            \"value\" : 102                                                                              // 64\n          }                                                                                            // 65\n        }                                                                                              // 66\n      ]                                                                                                // 67\n                                                                                                       // 68\n      var messageForUsedStrip = [                                                                      // 69\n        { messageDelay: 2000,                                                                          // 70\n            message: {                                                                                 // 71\n              \"msg\" : \"strip in\",                                                                      // 72\n              \"address\" : \"8CDE52425C58\"                                                               // 73\n            }                                                                                          // 74\n        },                                                                                             // 75\n        { messageDelay: 5000,                                                                          // 76\n          message:       {                                                                             // 77\n                  \"msg\" : \"error\",                                                                     // 78\n                  \"errorID\" : 3                                                                        // 79\n                }                                                                                      // 80\n        }                                                                                              // 81\n      ]                                                                                                // 82\n                                                                                                       // 83\n      var messageForStripRemoved = [                                                                   // 84\n        { messageDelay: 2000,                                                                          // 85\n            message: {                                                                                 // 86\n              \"msg\" : \"strip in\",                                                                      // 87\n              \"address\" : \"8CDE52425C58\"                                                               // 88\n            }                                                                                          // 89\n        },                                                                                             // 90\n        { messageDelay: 5000,                                                                          // 91\n          message:{                                                                                    // 92\n            \"msg\" : \"error\",                                                                           // 93\n            \"errorID\" : 9                                                                              // 94\n          }                                                                                            // 95\n        }                                                                                              // 96\n      ]                                                                                                // 97\n                                                                                                       // 98\n      var scenario = Session.get(\"scenario\")                                                           // 99\n      switch (scenario) {                                                                              // 100\n        case \"used strip\":                                                                             // 101\n          messages = messageForUsedStrip;                                                              // 102\n          break;                                                                                       // 103\n        case \"strip removed\":                                                                          // 104\n          messages = messageForStripRemoved;                                                           // 105\n          break;                                                                                       // 106\n        default:                                                                                       // 107\n          messages = messageNormal;                                                                    // 108\n      }                                                                                                // 109\n      sendMessages(successCallback, messages)                                                          // 110\n  },                                                                                                   // 111\n                                                                                                       // 112\n  connectDevice : function(mac, successCallback, errorCallback) {                                      // 113\n    debugL(3)('fake ' + 'connectDevice');                                                              // 114\n                                                                                                       // 115\n    var messages = [{                                                                                  // 116\n      messageDelay: 1000,                                                                              // 117\n      message: {                                                                                       // 118\n        \"address\" : \"8CDE52425C58\",                                                                    // 119\n        \"msg\" : \"device connnected\",                                                                   // 120\n      }                                                                                                // 121\n    }]                                                                                                 // 122\n    sendMessages(successCallback, messages)                                                            // 123\n  },                                                                                                   // 124\n                                                                                                       // 125\n  // setUnit = function(mac, successCallback, errorCallback, type) {                                   // 126\n  //     cordova.exec(successCallback, errorCallback, \"BgManagerCordovaFake\", \"setUnit\", [mac, type]);\n  // },                                                                                                // 128\n                                                                                                       // 129\n  getBattery : function(mac, successCallback, errorCallback) {                                         // 130\n    debugL(3)('fake ' + 'getBattery')                                                                  // 131\n                                                                                                       // 132\n    successCallback(                                                                                   // 133\n      JSON.stringify (                                                                                 // 134\n        {                                                                                              // 135\n          msg: 'getBattery',                                                                           // 136\n          battery: fakeBatteryLevel                                                                    // 137\n        }                                                                                              // 138\n      )                                                                                                // 139\n    );                                                                                                 // 140\n  },                                                                                                   // 141\n  // save the bottle number of the test strips to the device for offline mode                          // 142\n  setBottleId : function(mac, successCallback, errorCallback, bottleId) {                              // 143\n    debugL(3)('fake ' + 'setBottleId');                                                                // 144\n                                                                                                       // 145\n    var messages = [{                                                                                  // 146\n      messageDelay: 1000,                                                                              // 147\n      message: {                                                                                       // 148\n        \"msg\" : \"setbottleid\",                                                                         // 149\n        \"address\" : \"8CDE52425C58\",                                                                    // 150\n        \"bottleid\" : 123456                                                                            // 151\n      }                                                                                                // 152\n    }]                                                                                                 // 153\n    sendMessages(successCallback, messages)                                                            // 154\n  },                                                                                                   // 155\n                                                                                                       // 156\n                                                                                                       // 157\n  // retrieve the bottle number of the test strips to the device for offline mode                      // 158\n  getBottleId : function(mac, successCallback, errorCallback) {                                        // 159\n    debugL(3)('fake ' + 'getBottleId');                                                                // 160\n                                                                                                       // 161\n    var messages = [{                                                                                  // 162\n      messageDelay: 1000,                                                                              // 163\n      message: {                                                                                       // 164\n      \"msg\" : \"getbottleid\",                                                                           // 165\n      \"address\" : \"8CDE52425C58\",                                                                      // 166\n      \"bottleid\" : 123456                                                                              // 167\n      }                                                                                                // 168\n    }]                                                                                                 // 169\n    sendMessages(successCallback, messages)                                                            // 170\n  },                                                                                                   // 171\n                                                                                                       // 172\n  // save the bottle details of the test strips to the device for offline mode                         // 173\n  setBottleMessage : function(mac, successCallback, errorCallback, qr, leftNum, time) {                // 174\n    debugL(3)('fake ' + 'setBottleMessage');                                                           // 175\n                                                                                                       // 176\n    var messages = [{                                                                                  // 177\n      messageDelay: 1000,                                                                              // 178\n      message: {                                                                                       // 179\n      \"msg\" : \"setBottleMessage\",                                                                      // 180\n      \"address\" : \"8CDE52425C58\",                                                                      // 181\n      \"bottleid\" : 123456,                                                                             // 182\n      \"qr\": \"02323C50435714322D1200A0404B6AACFE144D7A97E619011E250003158D\",                            // 183\n      \"leftNum\": 25,                                                                                   // 184\n      \"timeTs\": \"2015-09-03 00:00:00\"                                                                  // 185\n    }                                                                                                  // 186\n    }]                                                                                                 // 187\n    sendMessages(successCallback, messages)                                                            // 188\n  },                                                                                                   // 189\n                                                                                                       // 190\n  // retrieve the bottle details of the test strips to the device for offline mode                     // 191\n  getBottleMessage : function(mac, successCallback, errorCallback) {                                   // 192\n    debugL(3)('fake ' + 'getBottleMessage ');                                                          // 193\n                                                                                                       // 194\n    var messages = [{                                                                                  // 195\n      messageDelay: 1000,                                                                              // 196\n      message: {                                                                                       // 197\n      \"msg\" : \"getBottleMessage \",                                                                     // 198\n      \"address\" : \"8CDE52425C58\",                                                                      // 199\n      \"bottleid\" : 123456,                                                                             // 200\n      \"qr\": \"02323C50435714322D1200A0404B6AACFE144D7A97E619011E250003158D\",                            // 201\n      \"leftNum\": 25,                                                                                   // 202\n      \"timeTs\": \"2015-09-03 00:00:00\"                                                                  // 203\n    }                                                                                                  // 204\n    }]                                                                                                 // 205\n    sendMessages(successCallback, messages)                                                            // 206\n  },                                                                                                   // 207\n                                                                                                       // 208\n  getOfflineData : function(mac, successCallback, errorCallback) {                                     // 209\n    debugL(3)('fake ' + 'getOfflineData');                                                             // 210\n                                                                                                       // 211\n    var messages = [{                                                                                  // 212\n      messageDelay: 1000,                                                                              // 213\n      message: {                                                                                       // 214\n      \"msg\" : \"getOfflineData\",                                                                        // 215\n      \"address\" : \"8CDE52425C58\",                                                                      // 216\n      \"history\" : {                                                                                    // 217\n        \"ResultList\" : [                                                                               // 218\n          {                                                                                            // 219\n            \"Result\" : 190,                                                                            // 220\n            \"Date\" : \"2015-08-03 15:06:11\"                                                             // 221\n          }                                                                                            // 222\n        ]                                                                                              // 223\n      }                                                                                                // 224\n    }                                                                                                  // 225\n    }]                                                                                                 // 226\n    sendMessages(successCallback, messages)                                                            // 227\n  },                                                                                                   // 228\n                                                                                                       // 229\n  deleteOfflineData : function(mac, successCallback, errorCallback) {                                  // 230\n    debugL(3)('fake ' + 'getBottleId');                                                                // 231\n                                                                                                       // 232\n    var messages = [{                                                                                  // 233\n      messageDelay: 1000,                                                                              // 234\n      message: {                                                                                       // 235\n        \"msg\" : \"deleteOfflineData\",                                                                   // 236\n        \"address\" : \"8CDE52425C58\"                                                                     // 237\n      }                                                                                                // 238\n    }]                                                                                                 // 239\n    sendMessages(successCallback, messages)                                                            // 240\n  },                                                                                                   // 241\n                                                                                                       // 242\n  disConnectDevice : function(mac, successCallback, errorCallback) {                                   // 243\n    debugL(3)('fake ' + 'disConnectDevice');                                                           // 244\n                                                                                                       // 245\n    var messages = [{                                                                                  // 246\n      messageDelay: 1000,                                                                              // 247\n      message: {                                                                                       // 248\n      \"msg\" : \"disConnectDevice\",                                                                      // 249\n      \"address\" : \"8CDE52425C58\",                                                                      // 250\n      \"bottleid\" : 123456                                                                              // 251\n    }                                                                                                  // 252\n    }]                                                                                                 // 253\n    sendMessages(successCallback, messages)                                                            // 254\n  },                                                                                                   // 255\n                                                                                                       // 256\n  setDisconnectCallback : function(mac, successCallback, errorCallback) {                              // 257\n    debugL(3)('fake ' + 'setDisconnectCallback')                                                       // 258\n                                                                                                       // 259\n    var messages = [{                                                                                  // 260\n      messageDelay: 1000,                                                                              // 261\n      message: {                                                                                       // 262\n        \"msg\" : \"disconnect\",                                                                          // 263\n        \"mac\" : \"8CDE52425C58\",                                                                        // 264\n        \"address\" : \"8CDE52425C58\"                                                                     // 265\n      }                                                                                                // 266\n    }]                                                                                                 // 267\n                                                                                                       // 268\n    var disconnectTimer = Meteor.setInterval(function(){                                               // 269\n      if (Session.get(\"disconnect\")) {                                                                 // 270\n        sendMessages(successCallback, messages)                                                        // 271\n        Session.set(\"disconnect\", false)                                                               // 272\n        Meteor.clearInterval(disconnectTimer)                                                          // 273\n      }                                                                                                // 274\n    }, 2000)                                                                                           // 275\n  },                                                                                                   // 276\n  //                                                                                                   // 277\n  // holdLink : function(mac, successCallback, errorCallback) {                                        // 278\n  //     cordova.exec(successCallback, errorCallback, \"BgManagerCordovaFake\", \"holdLink\", [mac]);      // 279\n  // }                                                                                                 // 280\n}                                                                                                      // 281\n                                                                                                       // 282\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/ihealth_devices-stub/bp-stub.js                                                            //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nvar debugLevel = 5                                                                                     // 1\nvar debugL = _.partial(DevTools.consoleWithLevels, debugLevel);                                        // 2\nvar sendMessages = DevicesStub.sendMessages;                                                           // 3\n                                                                                                       // 4\nvar fakeBatteryLevel = 77;                                                                             // 5\n                                                                                                       // 6\nDevicesStub.BP = {                                                                                     // 7\n  startDiscovery: function(address, cbSuccess, cbFail) {                                               // 8\n    debugL(3)('fake ' + 'startDiscovery');                                                             // 9\n                                                                                                       // 10\n    var messages = [                                                                                   // 11\n      { messageDelay: 1000,                                                                            // 12\n        message: {                                                                                     // 13\n          \"HardwareVersion\" : \"1.0.0\",                                                                 // 14\n          \"ProtocolString\" : \"com.jiuan.BPV20\",                                                        // 15\n          \"name\" : \"BP5\",                                                                              // 16\n          \"ModelNumber\" : \"BP5 11070\",                                                                 // 17\n          \"address\" : \"8CDE521448F0\",                                                                  // 18\n          \"msg\" : \"discovery doing\",                                                                   // 19\n          \"FirmwareVersion\" : \"2.1.0\"                                                                  // 20\n        }                                                                                              // 21\n      },                                                                                               // 22\n      { messageDelay: 3000,                                                                            // 23\n        message: {                                                                                     // 24\n          \"HardwareVersion\" : \"1.0.0\",                                                                 // 25\n          \"ProtocolString\" : \"com.jiuan.BPV20\",                                                        // 26\n          \"name\" : \"BP5\",                                                                              // 27\n          \"ModelNumber\" : \"BP5 11070\",                                                                 // 28\n          \"address\" : \"8CDE521448F0\",                                                                  // 29\n          \"msg\" : \"discovery doing\",                                                                   // 30\n          \"FirmwareVersion\" : \"2.1.0\"                                                                  // 31\n        }                                                                                              // 32\n      }                                                                                                // 33\n    ]                                                                                                  // 34\n    sendMessages(cbSuccess, messages)                                                                  // 35\n  },                                                                                                   // 36\n  stopDiscovery: function(address, cbSuccess, cbFail) {                                                // 37\n    debugL(3)('fake ' + 'stopDiscovery')                                                               // 38\n                                                                                                       // 39\n    cbSuccess(                                                                                         // 40\n      JSON.stringify(                                                                                  // 41\n        {msg: 'fake return'}                                                                           // 42\n      )                                                                                                // 43\n    );                                                                                                 // 44\n  },                                                                                                   // 45\n  startMeasure: function(address, cbSuccess, cbFail) {                                                 // 46\n    debugL(3)('fake ' + 'startMeasure')                                                                // 47\n    var messageZero = [                                                                                // 48\n      { messageDelay: 500,                                                                             // 49\n        message: {                                                                                     // 50\n          \"msg\" : \"zero doing\",                                                                        // 51\n          \"address\" : \"8CDE521448F0\"                                                                   // 52\n        },                                                                                             // 53\n        messageRepeat: 5                                                                               // 54\n      },                                                                                               // 55\n      { messageDelay: 500,                                                                             // 56\n        message: {                                                                                     // 57\n          \"msg\" : \"zero done\",                                                                         // 58\n          \"address\" : \"8CDE521448F0\"                                                                   // 59\n        }                                                                                              // 60\n      },                                                                                               // 61\n      { messageDelay: 500,                                                                             // 62\n        message: {                                                                                     // 63\n          \"msg\" : \"measure doing\",                                                                     // 64\n          \"address\" : \"8CDE521448F0\",                                                                  // 65\n          \"pressure\" : 0                                                                               // 66\n        },                                                                                             // 67\n        messageRepeat: 5                                                                               // 68\n      }                                                                                                // 69\n    ];                                                                                                 // 70\n                                                                                                       // 71\n    var messageMeasuring = _.range(150).map(function(i) {                                              // 72\n      return { messageDelay: 50*i,                                                                     // 73\n        message: {                                                                                     // 74\n          \"pressure\" : i,                                                                              // 75\n          \"msg\" : \"measure doing\",                                                                     // 76\n          \"address\" : \"8CDE521448F0\",                                                                  // 77\n          \"wave\" : [                                                                                   // 78\n            (100*Math.sin((i+0)/150)),                                                                 // 79\n            (100*Math.sin((i+20)/150)),                                                                // 80\n            (100*Math.sin((i+40)/150)),                                                                // 81\n            (100*Math.sin((i+60)/150)),                                                                // 82\n            (100*Math.sin((i+80)/150)),                                                                // 83\n            (100*Math.sin((i+100)/150)),                                                               // 84\n            (100*Math.sin((i+120)/150)),                                                               // 85\n            (100*Math.sin((i+150)/150))                                                                // 86\n          ]                                                                                            // 87\n        }                                                                                              // 88\n      }                                                                                                // 89\n    });                                                                                                // 90\n                                                                                                       // 91\n    var messageResult = [                                                                              // 92\n      { messageDelay: 8000,                                                                            // 93\n        message: {                                                                                     // 94\n          \"lowpressure\" : 85,                                                                          // 95\n          \"address\" : \"8CDE521448F0\",                                                                  // 96\n          \"name\" : \"BP5\",                                                                              // 97\n          \"heartrate\" : 63,                                                                            // 98\n          \"pressure\" : 136,                                                                            // 99\n          \"msg\" : \"measure done\",                                                                      // 100\n          \"wave\" : [                                                                                   // 101\n            19,                                                                                        // 102\n            19,                                                                                        // 103\n            19,                                                                                        // 104\n            19,                                                                                        // 105\n            18,                                                                                        // 106\n            18,                                                                                        // 107\n            18,                                                                                        // 108\n            18                                                                                         // 109\n          ],                                                                                           // 110\n          \"highpressure\" : 115                                                                         // 111\n        }                                                                                              // 112\n      }                                                                                                // 113\n    ]                                                                                                  // 114\n                                                                                                       // 115\n    var messages = _.reduce([messageZero, messageMeasuring, messageResult], function(memo, nextVal) { return memo.concat(nextVal)}, []);\n                                                                                                       // 117\n    sendMessages(cbSuccess, messages)                                                                  // 118\n  },                                                                                                   // 119\n  stopMeasure: function(address, cbSuccess, cbFail) {                                                  // 120\n    debugL(3)('fake ' + 'stopMeasure')                                                                 // 121\n                                                                                                       // 122\n    cbSuccess(                                                                                         // 123\n      JSON.stringify(                                                                                  // 124\n        {msg: 'fake return'}                                                                           // 125\n      )                                                                                                // 126\n    );                                                                                                 // 127\n                                                                                                       // 128\n  },                                                                                                   // 129\n  connectDevice: function(address, cbSuccess, cbFail) {                                                // 130\n    debugL(3)('fake ' + 'connectDevice');                                                              // 131\n    cbSuccess(                                                                                         // 132\n      JSON.stringify(                                                                                  // 133\n        {msg: 'fake return'}                                                                           // 134\n      )                                                                                                // 135\n    );                                                                                                 // 136\n  },                                                                                                   // 137\n  enableOffline: function(address, cbSuccess, cbFail) {                                                // 138\n    debugL(3)('fake ' + 'enableOffline')                                                               // 139\n                                                                                                       // 140\n    cbSuccess(                                                                                         // 141\n      JSON.stringify(                                                                                  // 142\n        {msg: 'fake return'}                                                                           // 143\n      )                                                                                                // 144\n    );                                                                                                 // 145\n                                                                                                       // 146\n  },                                                                                                   // 147\n  disenableOffline: function(address, cbSuccess, cbFail) {                                             // 148\n                                                                                                       // 149\n    cbSuccess(                                                                                         // 150\n      JSON.stringify(                                                                                  // 151\n        {msg: 'fake return'}                                                                           // 152\n      )                                                                                                // 153\n    );                                                                                                 // 154\n                                                                                                       // 155\n    debugL(3)('fake ' + 'disenableOffline')                                                            // 156\n  },                                                                                                   // 157\n  getOfflineNum: function(address, cbSuccess, cbFail) {                                                // 158\n    debugL(3)('fake ' + 'getOfflineNum')                                                               // 159\n                                                                                                       // 160\n    cbSuccess(                                                                                         // 161\n      JSON.stringify(                                                                                  // 162\n        {msg: 'fake return'}                                                                           // 163\n      )                                                                                                // 164\n    );                                                                                                 // 165\n                                                                                                       // 166\n  },                                                                                                   // 167\n  getOfflineData: function(address, cbSuccess, cbFail) {                                               // 168\n    debugL(3)('fake ' + 'getOfflineData')                                                              // 169\n                                                                                                       // 170\n    cbSuccess(                                                                                         // 171\n      JSON.stringify(                                                                                  // 172\n        {msg: 'fake return'}                                                                           // 173\n      )                                                                                                // 174\n    );                                                                                                 // 175\n                                                                                                       // 176\n  },                                                                                                   // 177\n  getBattery: function(address, cbSuccess, cbFail) {                                                   // 178\n    debugL(3)('fake ' + 'getBattery')                                                                  // 179\n                                                                                                       // 180\n    cbSuccess(                                                                                         // 181\n      JSON.stringify (                                                                                 // 182\n        {                                                                                              // 183\n          msg: 'fake battery level for debug purposes',                                                // 184\n          batterLevel: fakeBatteryLevel                                                                // 185\n        }                                                                                              // 186\n      )                                                                                                // 187\n    );                                                                                                 // 188\n                                                                                                       // 189\n  },                                                                                                   // 190\n  isEnableOffline: function(address, cbSuccess, cbFail) {                                              // 191\n    debugL(3)('fake ' + 'isEnableOffline')                                                             // 192\n                                                                                                       // 193\n    cbSuccess(                                                                                         // 194\n      JSON.stringify(                                                                                  // 195\n        {msg: 'fake return'}                                                                           // 196\n      )                                                                                                // 197\n    );                                                                                                 // 198\n                                                                                                       // 199\n  },                                                                                                   // 200\n  disConnectDevice: function(address, cbSuccess, cbFail) {                                             // 201\n    debugL(3)('fake ' + 'disConnectDevice')                                                            // 202\n                                                                                                       // 203\n    cbSuccess(                                                                                         // 204\n      JSON.stringify(                                                                                  // 205\n        {msg: 'fake return'}                                                                           // 206\n      )                                                                                                // 207\n    );                                                                                                 // 208\n  },                                                                                                   // 209\n  setDisconnectCallback: function(address, cbSuccess, cbFail) {                                        // 210\n    debugL(3)('fake ' + 'setDisconnectCallback')                                                       // 211\n      var messages = [                                                                                 // 212\n        { messageDelay: 2 * 60000,                                                                     // 213\n          message: {                                                                                   // 214\n            \"name\" : \"BP5\",                                                                            // 215\n            \"address\" : \"8CDE521448F0\",                                                                // 216\n            \"msg\" : \"disconnected\",                                                                    // 217\n            \"details\" : \"fake disconnect after 2 minutes\"                                              // 218\n          }                                                                                            // 219\n        }                                                                                              // 220\n      ]                                                                                                // 221\n      sendMessages(cbSuccess, messages)                                                                // 222\n  },                                                                                                   // 223\n  confirmAngle: function(address, cbSuccess, cbFail) {                                                 // 224\n    debugL(3)('fake ' + 'confirmAngle')                                                                // 225\n                                                                                                       // 226\n    cbSuccess(                                                                                         // 227\n      JSON.stringify(                                                                                  // 228\n        {msg: 'fake return'}                                                                           // 229\n      )                                                                                                // 230\n    );                                                                                                 // 231\n                                                                                                       // 232\n  }                                                                                                    // 233\n}                                                                                                      // 234\n                                                                                                       // 235\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ihealth:devices-stub'] = {\n  DevicesStub: DevicesStub\n};\n\n})();\n","servePath":"/packages/ihealth_devices-stub.js","sourceMap":{"version":3,"sources":["/packages/ihealth_devices-stub/callback-simulator.js","/packages/ihealth_devices-stub/bg-stub.js","/packages/ihealth_devices-stub/bp-stub.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4G;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6G;;;;;;;;;;;;;;;;;;ACzfile":"/packages/ihealth_devices-stub.js","sourcesContent":["DevicesStub = {};\n\nvar levelFilter = 2\nvar debugL = _.partial(DevTools.consoleWithLevels, levelFilter);\n\nDevicesStub.sendMessages = function(cb, messageSets) {\n  if(messageSets) {\n    debugL(4)(\"messageSets.length: \", messageSets.length)\n    debugL(5)(\"messageSets: \", messageSets)\n    for(i=0; i < messageSets.length; i++) {(function(i) {\n      var messageSet = messageSets[i]\n      var messageDelay = messageSet.messageDelay\n      var message = messageSet.message\n      var messageRepeat = messageSet.messageRepeat || 1\n      for(j=0; j < messageRepeat; j++) {\n        (function(j) {\n          Meteor.setTimeout(function() {\n            debugL(4)(\"sending message \" + j + \": \" + message)\n            cb(JSON.stringify(message))\n          } , (j+1) * messageDelay )\n        })(j)\n      }\n    })(i)\n    }\n  }\n};\n","var debugLevel = 5\nvar debugL = _.partial(DevTools.consoleWithLevels, debugLevel);\nvar sendMessages = DevicesStub.sendMessages;\n\nvar fakeBatteryLevel = 77;\n\nDevicesStub.BG5 = {\n  startDiscovery : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'startDiscovery');\n\n    var messages = [\n      { messageDelay: 1000,\n        message: {\n          \"msg\" : \"discovery doing\",\n          \"address\" : \"8CDE52425C58\",\n          \"name\" : \"BG5\"\n        }},\n      { messageDelay: 1500,\n        message: {\n          \"HardwareVersion\" : \"1.0.0\",\n          \"ProtocolString\" : \"com.jiuan.BPV20\",\n          \"name\" : \"BP5\",\n          \"ModelNumber\" : \"BP5 11070\",\n          \"address\" : \"8CDE521448F0\",\n          \"msg\" : \"discovery doing\",\n          \"FirmwareVersion\" : \"2.1.0\"\n        }}\n    ]\n    sendMessages(successCallback, messages)\n  },\n\n  stopDiscovery : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'stopDiscovery')\n\n    var messages = [{ messageDelay: 100,\n        message: {\n      \"msg\" : \"discovery done\",\n      \"address\" : \"\"\n    }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  startMeasure : function(mac, successCallback, errorCallback) {\n      debugL(3)('fake ' + 'startMeasure')\n\n      var messageNormal = [\n        { messageDelay: 2000,\n            message: {\n              \"msg\" : \"strip in\",\n              \"address\" : \"8CDE52425C58\"\n            }\n        },\n        { messageDelay: 5000,\n          message: {\n            \"msg\" : \"get blood\",\n            \"address\" : \"8CDE52425C58\"\n          }\n        },\n        { messageDelay: 10000,\n          message: {\n            \"msg\" : \"value\",\n            \"address\" : \"8CDE52425C58\",\n            \"value\" : 102\n          }\n        }\n      ]\n\n      var messageForUsedStrip = [\n        { messageDelay: 2000,\n            message: {\n              \"msg\" : \"strip in\",\n              \"address\" : \"8CDE52425C58\"\n            }\n        },\n        { messageDelay: 5000,\n          message:       {\n                  \"msg\" : \"error\",\n                  \"errorID\" : 3\n                }\n        }\n      ]\n\n      var messageForStripRemoved = [\n        { messageDelay: 2000,\n            message: {\n              \"msg\" : \"strip in\",\n              \"address\" : \"8CDE52425C58\"\n            }\n        },\n        { messageDelay: 5000,\n          message:{\n            \"msg\" : \"error\",\n            \"errorID\" : 9\n          }\n        }\n      ]\n\n      var scenario = Session.get(\"scenario\")\n      switch (scenario) {\n        case \"used strip\":\n          messages = messageForUsedStrip;\n          break;\n        case \"strip removed\":\n          messages = messageForStripRemoved;\n          break;\n        default:\n          messages = messageNormal;\n      }\n      sendMessages(successCallback, messages)\n  },\n\n  connectDevice : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'connectDevice');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n        \"address\" : \"8CDE52425C58\",\n        \"msg\" : \"device connnected\",\n      }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  // setUnit = function(mac, successCallback, errorCallback, type) {\n  //     cordova.exec(successCallback, errorCallback, \"BgManagerCordovaFake\", \"setUnit\", [mac, type]);\n  // },\n\n  getBattery : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'getBattery')\n\n    successCallback(\n      JSON.stringify (\n        {\n          msg: 'getBattery',\n          battery: fakeBatteryLevel\n        }\n      )\n    );\n  },\n  // save the bottle number of the test strips to the device for offline mode\n  setBottleId : function(mac, successCallback, errorCallback, bottleId) {\n    debugL(3)('fake ' + 'setBottleId');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n        \"msg\" : \"setbottleid\",\n        \"address\" : \"8CDE52425C58\",\n        \"bottleid\" : 123456\n      }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n\n  // retrieve the bottle number of the test strips to the device for offline mode\n  getBottleId : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'getBottleId');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n      \"msg\" : \"getbottleid\",\n      \"address\" : \"8CDE52425C58\",\n      \"bottleid\" : 123456\n      }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  // save the bottle details of the test strips to the device for offline mode\n  setBottleMessage : function(mac, successCallback, errorCallback, qr, leftNum, time) {\n    debugL(3)('fake ' + 'setBottleMessage');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n      \"msg\" : \"setBottleMessage\",\n      \"address\" : \"8CDE52425C58\",\n      \"bottleid\" : 123456,\n      \"qr\": \"02323C50435714322D1200A0404B6AACFE144D7A97E619011E250003158D\",\n      \"leftNum\": 25,\n      \"timeTs\": \"2015-09-03 00:00:00\"\n    }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  // retrieve the bottle details of the test strips to the device for offline mode\n  getBottleMessage : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'getBottleMessage ');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n      \"msg\" : \"getBottleMessage \",\n      \"address\" : \"8CDE52425C58\",\n      \"bottleid\" : 123456,\n      \"qr\": \"02323C50435714322D1200A0404B6AACFE144D7A97E619011E250003158D\",\n      \"leftNum\": 25,\n      \"timeTs\": \"2015-09-03 00:00:00\"\n    }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  getOfflineData : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'getOfflineData');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n      \"msg\" : \"getOfflineData\",\n      \"address\" : \"8CDE52425C58\",\n      \"history\" : {\n        \"ResultList\" : [\n          {\n            \"Result\" : 190,\n            \"Date\" : \"2015-08-03 15:06:11\"\n          }\n        ]\n      }\n    }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  deleteOfflineData : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'getBottleId');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n        \"msg\" : \"deleteOfflineData\",\n        \"address\" : \"8CDE52425C58\"\n      }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  disConnectDevice : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'disConnectDevice');\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n      \"msg\" : \"disConnectDevice\",\n      \"address\" : \"8CDE52425C58\",\n      \"bottleid\" : 123456\n    }\n    }]\n    sendMessages(successCallback, messages)\n  },\n\n  setDisconnectCallback : function(mac, successCallback, errorCallback) {\n    debugL(3)('fake ' + 'setDisconnectCallback')\n\n    var messages = [{\n      messageDelay: 1000,\n      message: {\n        \"msg\" : \"disconnect\",\n        \"mac\" : \"8CDE52425C58\",\n        \"address\" : \"8CDE52425C58\"\n      }\n    }]\n\n    var disconnectTimer = Meteor.setInterval(function(){\n      if (Session.get(\"disconnect\")) {\n        sendMessages(successCallback, messages)\n        Session.set(\"disconnect\", false)\n        Meteor.clearInterval(disconnectTimer)\n      }\n    }, 2000)\n  },\n  //\n  // holdLink : function(mac, successCallback, errorCallback) {\n  //     cordova.exec(successCallback, errorCallback, \"BgManagerCordovaFake\", \"holdLink\", [mac]);\n  // }\n}\n","var debugLevel = 5\nvar debugL = _.partial(DevTools.consoleWithLevels, debugLevel);\nvar sendMessages = DevicesStub.sendMessages;\n\nvar fakeBatteryLevel = 77;\n\nDevicesStub.BP = {\n  startDiscovery: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'startDiscovery');\n\n    var messages = [\n      { messageDelay: 1000,\n        message: {\n          \"HardwareVersion\" : \"1.0.0\",\n          \"ProtocolString\" : \"com.jiuan.BPV20\",\n          \"name\" : \"BP5\",\n          \"ModelNumber\" : \"BP5 11070\",\n          \"address\" : \"8CDE521448F0\",\n          \"msg\" : \"discovery doing\",\n          \"FirmwareVersion\" : \"2.1.0\"\n        }\n      },\n      { messageDelay: 3000,\n        message: {\n          \"HardwareVersion\" : \"1.0.0\",\n          \"ProtocolString\" : \"com.jiuan.BPV20\",\n          \"name\" : \"BP5\",\n          \"ModelNumber\" : \"BP5 11070\",\n          \"address\" : \"8CDE521448F0\",\n          \"msg\" : \"discovery doing\",\n          \"FirmwareVersion\" : \"2.1.0\"\n        }\n      }\n    ]\n    sendMessages(cbSuccess, messages)\n  },\n  stopDiscovery: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'stopDiscovery')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n  },\n  startMeasure: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'startMeasure')\n    var messageZero = [\n      { messageDelay: 500,\n        message: {\n          \"msg\" : \"zero doing\",\n          \"address\" : \"8CDE521448F0\"\n        },\n        messageRepeat: 5\n      },\n      { messageDelay: 500,\n        message: {\n          \"msg\" : \"zero done\",\n          \"address\" : \"8CDE521448F0\"\n        }\n      },\n      { messageDelay: 500,\n        message: {\n          \"msg\" : \"measure doing\",\n          \"address\" : \"8CDE521448F0\",\n          \"pressure\" : 0\n        },\n        messageRepeat: 5\n      }\n    ];\n\n    var messageMeasuring = _.range(150).map(function(i) {\n      return { messageDelay: 50*i,\n        message: {\n          \"pressure\" : i,\n          \"msg\" : \"measure doing\",\n          \"address\" : \"8CDE521448F0\",\n          \"wave\" : [\n            (100*Math.sin((i+0)/150)),\n            (100*Math.sin((i+20)/150)),\n            (100*Math.sin((i+40)/150)),\n            (100*Math.sin((i+60)/150)),\n            (100*Math.sin((i+80)/150)),\n            (100*Math.sin((i+100)/150)),\n            (100*Math.sin((i+120)/150)),\n            (100*Math.sin((i+150)/150))\n          ]\n        }\n      }\n    });\n\n    var messageResult = [\n      { messageDelay: 8000,\n        message: {\n          \"lowpressure\" : 85,\n          \"address\" : \"8CDE521448F0\",\n          \"name\" : \"BP5\",\n          \"heartrate\" : 63,\n          \"pressure\" : 136,\n          \"msg\" : \"measure done\",\n          \"wave\" : [\n            19,\n            19,\n            19,\n            19,\n            18,\n            18,\n            18,\n            18\n          ],\n          \"highpressure\" : 115\n        }\n      }\n    ]\n\n    var messages = _.reduce([messageZero, messageMeasuring, messageResult], function(memo, nextVal) { return memo.concat(nextVal)}, []);\n\n    sendMessages(cbSuccess, messages)\n  },\n  stopMeasure: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'stopMeasure')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  },\n  connectDevice: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'connectDevice');\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n  },\n  enableOffline: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'enableOffline')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  },\n  disenableOffline: function(address, cbSuccess, cbFail) {\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n    debugL(3)('fake ' + 'disenableOffline')\n  },\n  getOfflineNum: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'getOfflineNum')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  },\n  getOfflineData: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'getOfflineData')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  },\n  getBattery: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'getBattery')\n\n    cbSuccess(\n      JSON.stringify (\n        {\n          msg: 'fake battery level for debug purposes',\n          batterLevel: fakeBatteryLevel\n        }\n      )\n    );\n\n  },\n  isEnableOffline: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'isEnableOffline')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  },\n  disConnectDevice: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'disConnectDevice')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n  },\n  setDisconnectCallback: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'setDisconnectCallback')\n      var messages = [\n        { messageDelay: 2 * 60000,\n          message: {\n            \"name\" : \"BP5\",\n            \"address\" : \"8CDE521448F0\",\n            \"msg\" : \"disconnected\",\n            \"details\" : \"fake disconnect after 2 minutes\"\n          }\n        }\n      ]\n      sendMessages(cbSuccess, messages)\n  },\n  confirmAngle: function(address, cbSuccess, cbFail) {\n    debugL(3)('fake ' + 'confirmAngle')\n\n    cbSuccess(\n      JSON.stringify(\n        {msg: 'fake return'}\n      )\n    );\n\n  }\n}\n"]}}]