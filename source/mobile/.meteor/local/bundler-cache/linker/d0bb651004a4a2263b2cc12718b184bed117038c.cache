[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar CollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nvar h = Package['ihealth:utils'].h;\nvar IH = Package['ihealth:utils'].IH;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar Accounts = Package['accounts-base'].Accounts;\nvar AccountsServer = Package['accounts-base'].AccountsServer;\nvar Roles = Package['alanning:roles'].Roles;\nvar FlowRouter = Package['kadira:flow-router'].FlowRouter;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar _ = Package.underscore._;\nvar moment = Package['momentjs:moment'].moment;\nvar FastRender = Package['meteorhacks:fast-render'].FastRender;\nvar React = Package['react-runtime'].React;\nvar ReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nvar babelHelpers = Package['babel-runtime'].babelHelpers;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/ihealth_users/lib/schemas.js                             //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n                                                                     // 1\nSimpleSchema.extendOptions({                                         // 2\n  editable: Match.Optional(Boolean),                                 // 3\n  editableBy: Match.Optional([String])                               // 4\n})                                                                   // 5\n                                                                     // 6\nIH.Schema.Address = new SimpleSchema({                               // 7\n  street: {                                                          // 8\n    type: String,                                                    // 9\n    max: 100                                                         // 10\n  },                                                                 // 11\n  city: {                                                            // 12\n    type: String,                                                    // 13\n    max: 50                                                          // 14\n  },                                                                 // 15\n  state: {                                                           // 16\n    type: String,                                                    // 17\n    regEx: /^A[LKSZRAEP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY]$/\n  },                                                                 // 19\n  zip: {                                                             // 20\n    type: String,                                                    // 21\n    regEx: /^[0-9]{5}$/                                              // 22\n  }                                                                  // 23\n});                                                                  // 24\n                                                                     // 25\nIH.Schema.UserBasic = new SimpleSchema({                             // 26\n  name: {                                                            // 27\n    type: String,                                                    // 28\n    optional: false,                                                 // 29\n    editable: true,                                                  // 30\n    editableBy: [\"admin\", \"doctor\"]                                  // 31\n  },                                                                 // 32\n  tel: {                                                             // 33\n    type: Number,                                                    // 34\n    optional: false,                                                 // 35\n    editable: true,                                                  // 36\n    editableBy: [\"admin\", \"doctor\", \"patient\"]                       // 37\n  },                                                                 // 38\n  address: {                                                         // 39\n    type: IH.Schema.Address,                                         // 40\n    optional: true,                                                  // 41\n    editable: true,                                                  // 42\n    editableBy: [\"admin\", \"doctor\", \"patient\"]                       // 43\n  }                                                                  // 44\n});                                                                  // 45\n                                                                     // 46\nIH.Schema.UserDoctor = new SimpleSchema({                            // 47\n  verified: {                                                        // 48\n    type: Boolean,                                                   // 49\n    optional: false,                                                 // 50\n    editable: false,                                                 // 51\n    editableBy: [\"admin\"],                                           // 52\n    autoValue: function() {}                                         // 53\n  },                                                                 // 54\n  title: {                                                           // 55\n    type: String,                                                    // 56\n    optional: true,                                                  // 57\n    editable: true,                                                  // 58\n    editableBy: [\"admin\", \"doctor\"]                                  // 59\n  },                                                                 // 60\n  specialties: {                                                     // 61\n    type: [String],                                                  // 62\n    optional: true,                                                  // 63\n    editable: true,                                                  // 64\n    editableBy: [\"admin\", \"doctor\"]                                  // 65\n  },                                                                 // 66\n  languages: {                                                       // 67\n    type: [String],                                                  // 68\n    optional: true,                                                  // 69\n    editable: true,                                                  // 70\n    editableBy: [\"admin\", \"doctor\"]                                  // 71\n  },                                                                 // 72\n  rating: {                                                          // 73\n    type: Number,                                                    // 74\n    optional: true,                                                  // 75\n    decimal: true,                                                   // 76\n    editable: false,                                                 // 77\n    editableBy: [\"admin\"]                                            // 78\n  },                                                                 // 79\n  patients: {                                                        // 80\n    type: Object,                                                    // 81\n    optional: true,                                                  // 82\n    editable: false,                                                 // 83\n    editableBy: [\"admin\", \"doctor\"]                                  // 84\n  }                                                                  // 85\n}, \"patients.regular\", {                                             // 86\n  type: [String],                                                    // 87\n  optional: true                                                     // 88\n}, \"patients.vip\", {                                                 // 89\n  type: [String],                                                    // 90\n  optional: true                                                     // 91\n});                                                                  // 92\n                                                                     // 93\nIH.Schema.UserPatient = new SimpleSchema({                           // 94\n  DOB: {                                                             // 95\n    type: Date,                                                      // 96\n    optional: true,                                                  // 97\n    editable: true                                                   // 98\n  },                                                                 // 99\n  height: {                                                          // 100\n    type: Number,                                                    // 101\n    decimal: true,                                                   // 102\n    optional: true,                                                  // 103\n    editable: true                                                   // 104\n  },                                                                 // 105\n  weight: {                                                          // 106\n    type: Number,                                                    // 107\n    decimal: true,                                                   // 108\n    optional: true,                                                  // 109\n    editable: true                                                   // 110\n  },                                                                 // 111\n  doctors: {                                                         // 112\n    type: [String],                                                  // 113\n    optional: true,                                                  // 114\n    editableBy: [\"admin\", \"doctor\"]                                  // 115\n  },                                                                 // 116\n  devices: {                                                         // 117\n    type: Object,                                                    // 118\n    optional: true,                                                  // 119\n    blackbox: true                                                   // 120\n  }                                                                  // 121\n});                                                                  // 122\n                                                                     // 123\nIH.Schema.iHealth = new SimpleSchema({                               // 124\n  basic: {                                                           // 125\n    type: IH.Schema.UserBasic,                                       // 126\n    optional: true                                                   // 127\n  },                                                                 // 128\n  doctor: {                                                          // 129\n    type: IH.Schema.UserDoctor,                                      // 130\n    optional: true                                                   // 131\n  },                                                                 // 132\n  patient: {                                                         // 133\n    type: IH.Schema.UserPatient,                                     // 134\n    optional: true                                                   // 135\n  }                                                                  // 136\n});                                                                  // 137\n                                                                     // 138\nIH.Schema.Users = new SimpleSchema({                                 // 139\n  createdAt: {                                                       // 140\n    type: Date,                                                      // 141\n    optional: true,                                                  // 142\n  },                                                                 // 143\n  updatedAt: {                                                       // 144\n    type: Date,                                                      // 145\n    optional: true,                                                  // 146\n    autoValue: function(){                                           // 147\n      if (this.isUpdate)                                             // 148\n        return new Date()                                            // 149\n      else                                                           // 150\n        this.unset()                                                 // 151\n    }                                                                // 152\n  },                                                                 // 153\n  username: {                                                        // 154\n    type: String,                                                    // 155\n    optional: true                                                   // 156\n  },                                                                 // 157\n  emails: {                                                          // 158\n    type: [Object],                                                  // 159\n    optional: true                                                   // 160\n  },                                                                 // 161\n  \"emails.$.address\": {                                              // 162\n    type: String,                                                    // 163\n    regEx: SimpleSchema.RegEx.Email,                                 // 164\n    optional: true                                                   // 165\n  },                                                                 // 166\n  \"emails.$.verified\": {                                             // 167\n    type: Boolean,                                                   // 168\n    optional: true                                                   // 169\n  },                                                                 // 170\n  roles: {                                                           // 171\n    type: [String],                                                  // 172\n    allowedValues: [\"admin\", \"doctor\", \"patient\"],                   // 173\n    optional: true                                                   // 174\n  },                                                                 // 175\n  profile: {                                                         // 176\n    type: Object,                                                    // 177\n    optional: true,                                                  // 178\n    blackbox: true                                                   // 179\n  },                                                                 // 180\n  ihealth: {                                                         // 181\n    type: IH.Schema.iHealth,                                         // 182\n    optional: true                                                   // 183\n  },                                                                 // 184\n  services: {                                                        // 185\n    type: Object,                                                    // 186\n    optional: true,                                                  // 187\n    blackbox: true                                                   // 188\n  }                                                                  // 189\n})                                                                   // 190\n                                                                     // 191\nMeteor.users.attachSchema(IH.Schema.Users)                           // 192\n                                                                     // 193\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/ihealth_users/lib/server/createUser.js                   //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n/*                                                                   // 1\n  *Server-only*                                                      // 2\n  Tentative hooks:                                                   // 3\n    send verification emails?                                        // 4\n */                                                                  // 5\nvar setupUser;                                                       // 6\n                                                                     // 7\nAccounts.onCreateUser(function(options, user) {                      // 8\n  user = IH.Callbacks.Run(\"onCreateUser\", user, options);            // 9\n  return user;                                                       // 10\n});                                                                  // 11\n                                                                     // 12\n                                                                     // 13\n/*                                                                   // 14\n  setupUser:                                                         // 15\n    doctor: only set iHealth.doctor                                  // 16\n    patient: only set iHealth.patient                                // 17\n */                                                                  // 18\n                                                                     // 19\nsetupUser = function(user, options) {                                // 20\n  var userObj;                                                       // 21\n  userObj = {                                                        // 22\n    profile: options.profile || (options.profile = {})               // 23\n  };                                                                 // 24\n  _.extend(user, userObj);                                           // 25\n  return user;                                                       // 26\n};                                                                   // 27\n                                                                     // 28\nIH.Callbacks.Add(\"onCreateUser\", setupUser);                         // 29\n                                                                     // 30\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ihealth:users'] = {};\n\n})();\n","servePath":"/packages/ihealth_users.js","sourceMap":{"version":3,"sources":["/packages/ihealth_users/lib/schemas.js","/packages/ihealth_users/lib/server/createUser.js"],"names":[],"mappingshMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E","file":"/packages/ihealth_users.js","sourcesContent":["\nSimpleSchema.extendOptions({\n  editable: Match.Optional(Boolean),\n  editableBy: Match.Optional([String])\n})\n\nIH.Schema.Address = new SimpleSchema({\n  street: {\n    type: String,\n    max: 100\n  },\n  city: {\n    type: String,\n    max: 50\n  },\n  state: {\n    type: String,\n    regEx: /^A[LKSZRAEP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY]$/\n  },\n  zip: {\n    type: String,\n    regEx: /^[0-9]{5}$/\n  }\n});\n\nIH.Schema.UserBasic = new SimpleSchema({\n  name: {\n    type: String,\n    optional: false,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\"]\n  },\n  tel: {\n    type: Number,\n    optional: false,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\", \"patient\"]\n  },\n  address: {\n    type: IH.Schema.Address,\n    optional: true,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\", \"patient\"]\n  }\n});\n\nIH.Schema.UserDoctor = new SimpleSchema({\n  verified: {\n    type: Boolean,\n    optional: false,\n    editable: false,\n    editableBy: [\"admin\"],\n    autoValue: function() {}\n  },\n  title: {\n    type: String,\n    optional: true,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\"]\n  },\n  specialties: {\n    type: [String],\n    optional: true,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\"]\n  },\n  languages: {\n    type: [String],\n    optional: true,\n    editable: true,\n    editableBy: [\"admin\", \"doctor\"]\n  },\n  rating: {\n    type: Number,\n    optional: true,\n    decimal: true,\n    editable: false,\n    editableBy: [\"admin\"]\n  },\n  patients: {\n    type: Object,\n    optional: true,\n    editable: false,\n    editableBy: [\"admin\", \"doctor\"]\n  }\n}, \"patients.regular\", {\n  type: [String],\n  optional: true\n}, \"patients.vip\", {\n  type: [String],\n  optional: true\n});\n\nIH.Schema.UserPatient = new SimpleSchema({\n  DOB: {\n    type: Date,\n    optional: true,\n    editable: true\n  },\n  height: {\n    type: Number,\n    decimal: true,\n    optional: true,\n    editable: true\n  },\n  weight: {\n    type: Number,\n    decimal: true,\n    optional: true,\n    editable: true\n  },\n  doctors: {\n    type: [String],\n    optional: true,\n    editableBy: [\"admin\", \"doctor\"]\n  },\n  devices: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\nIH.Schema.iHealth = new SimpleSchema({\n  basic: {\n    type: IH.Schema.UserBasic,\n    optional: true\n  },\n  doctor: {\n    type: IH.Schema.UserDoctor,\n    optional: true\n  },\n  patient: {\n    type: IH.Schema.UserPatient,\n    optional: true\n  }\n});\n\nIH.Schema.Users = new SimpleSchema({\n  createdAt: {\n    type: Date,\n    optional: true,\n  },\n  updatedAt: {\n    type: Date,\n    optional: true,\n    autoValue: function(){\n      if (this.isUpdate)\n        return new Date()\n      else\n        this.unset()\n    }\n  },\n  username: {\n    type: String,\n    optional: true\n  },\n  emails: {\n    type: [Object],\n    optional: true\n  },\n  \"emails.$.address\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email,\n    optional: true\n  },\n  \"emails.$.verified\": {\n    type: Boolean,\n    optional: true\n  },\n  roles: {\n    type: [String],\n    allowedValues: [\"admin\", \"doctor\", \"patient\"],\n    optional: true\n  },\n  profile: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  ihealth: {\n    type: IH.Schema.iHealth,\n    optional: true\n  },\n  services: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n})\n\nMeteor.users.attachSchema(IH.Schema.Users)\n","/*\n  *Server-only*\n  Tentative hooks:\n    send verification emails?\n */\nvar setupUser;\n\nAccounts.onCreateUser(function(options, user) {\n  user = IH.Callbacks.Run(\"onCreateUser\", user, options);\n  return user;\n});\n\n\n/*\n  setupUser:\n    doctor: only set iHealth.doctor\n    patient: only set iHealth.patient\n */\n\nsetupUser = function(user, options) {\n  var userObj;\n  userObj = {\n    profile: options.profile || (options.profile = {})\n  };\n  _.extend(user, userObj);\n  return user;\n};\n\nIH.Callbacks.Add(\"onCreateUser\", setupUser);\n"]}}]