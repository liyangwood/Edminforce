[{"type":"js","data":"/* Imports for global scope */\n\nMeteor = Package.meteor.Meteor;\n_ = Package.underscore._;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nLog = Package.logging.Log;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAutoupdate = Package.autoupdate.Autoupdate;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nReactLayout = Package['kadira:react-layout'].ReactLayout;\nDispatcher = Package['meteorflux:dispatcher'].Dispatcher;\nDevTools = Package['ihealth:dev-tools'].DevTools;\nDevicesStub = Package['ihealth:devices-stub'].DevicesStub;\nApp = Package['cal:globals'].App;\nCal = Package['cal:globals'].Cal;\nDB = Package['cal:globals'].DB;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nImmutable = Package['cal:immutable'].Immutable;\nSyncedCron = Package['percolate:synced-cron'].SyncedCron;\nSpacebars = Package.spacebars.Spacebars;\nFake = Package['anti:fake'].Fake;\nshoppingCart = Package['cal:cart'].shoppingCart;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nh = Package['ihealth:utils'].h;\nIH = Package['ihealth:utils'].IH;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nMeteorFlux = Package['meteorflux:namespace'].MeteorFlux;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nRoles = Package['alanning:roles'].Roles;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nmoment = Package['momentjs:moment'].moment;\nFastRender = Package['meteorhacks:fast-render'].FastRender;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){// Variable Declarations\n//Schema = {} // Schemas\n//App = {} // Main App\n\nif (!Meteor.settings) Meteor.settings = {}\nif (!Meteor.settings.public) Meteor.settings.public = {}\nif (!Meteor.settings.public.appName) Meteor.settings.public.appName = \"Calphin\"\nif (!Meteor.settings.public.appDesc) Meteor.settings.public.appDesc = \"Calphin App\"\n\n\n\n\n\nMeteor.startup( function() {\n  /**\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   * NOT Cordova Bootstrap\n   * Only used for dev/testing\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (!Meteor.isCordova) {\n\n  }\n\n  /**\n  * # # # # # # # # # # # # # # # # # # # # # # # #\n   * Server Bootstrap\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (Meteor.isServer) {\n    // Server Bootstrap\n  }\n})\n\n}).call(this);\n","servePath":"/lib/boot/boot.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/lib/boot/boot.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/boot/boot.js","sourcesContent":["// Variable Declarations\n//Schema = {} // Schemas\n//App = {} // Main App\n\nif (!Meteor.settings) Meteor.settings = {}\nif (!Meteor.settings.public) Meteor.settings.public = {}\nif (!Meteor.settings.public.appName) Meteor.settings.public.appName = \"Calphin\"\nif (!Meteor.settings.public.appDesc) Meteor.settings.public.appDesc = \"Calphin App\"\n\n\n\n\n\nMeteor.startup( function() {\n  /**\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   * NOT Cordova Bootstrap\n   * Only used for dev/testing\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (!Meteor.isCordova) {\n\n  }\n\n  /**\n  * # # # # # # # # # # # # # # # # # # # # # # # #\n   * Server Bootstrap\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (Meteor.isServer) {\n    // Server Bootstrap\n  }\n})\n"]}},{"type":"js","data":"(function(){/*\n * Created on Oct. 9\n * Helper functions for accounts and authentication related problems.\n */\n\nApp.checkPassword=function(str){\n\t// should have at least one capital letter\n\tvar containCapitalLetter = /[A-Z]/.test(str);\n\t// should be at least one numerical number\n\tvar containNumber = /[0-9]/.test(str);\n\t// should be at least 8 characters\n\tvar longEnough = str.length >= 8;\n\treturn (containNumber && containCapitalLetter && longEnough);\n}\n}).call(this);\n","servePath":"/lib/account.helper.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/lib/account.helper.js"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/lib/account.helper.js","sourcesContent":["/*\n * Created on Oct. 9\n * Helper functions for accounts and authentication related problems.\n */\n\nApp.checkPassword=function(str){\n\t// should have at least one capital letter\n\tvar containCapitalLetter = /[A-Z]/.test(str);\n\t// should be at least one numerical number\n\tvar containNumber = /[0-9]/.test(str);\n\t// should be at least 8 characters\n\tvar longEnough = str.length >= 8;\n\treturn (containNumber && containCapitalLetter && longEnough);\n}"]}},{"type":"js","data":"(function(){/**\n * Created on 9/17/15.\n */\n\n\nMeteor.startup(function () {\n\n    if(Meteor.isClient){\n        Meteor.subscribe(\"appInfo\");\n\n        Tracker.autorun(function () {\n\n            App.info = DB.App.findOne()\n        })\n    }else{\n        App.info = DB.App.findOne()\n    }\n\n\n})\n\n\n}).call(this);\n","servePath":"/lib/app.db.config.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/lib/app.db.config.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/app.db.config.js","sourcesContent":["/**\n * Created on 9/17/15.\n */\n\n\nMeteor.startup(function () {\n\n    if(Meteor.isClient){\n        Meteor.subscribe(\"appInfo\");\n\n        Tracker.autorun(function () {\n\n            App.info = DB.App.findOne()\n        })\n    }else{\n        App.info = DB.App.findOne()\n    }\n\n\n})\n\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/16/15.\n */\nApp.Config = App.Config || {};\n\nApp.Config.classLevels = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    \"ELT III\",\n    \"ELT II\",\n    \"ELT I\",\n\n    \"MST III\",\n    \"MST II\",\n    \"MST I\",\n\n    \"CHL III\",\n    \"CHL II\",\n    \"CHL I\",\n\n    \"RCR III\",\n    \"RCR II\",\n    \"RCR I\",\n\n    \"SPR III\",\n    \"SPR II\",\n    \"SPR I\",\n\n    \"GLD III\",\n    \"GLD II\",\n    \"GLD I\",\n\n    \"CRL III\",\n    \"CRL II\",\n    \"CRL I\",\n\n    \"BUB III\",\n    \"BUB II\",\n    \"BUB I\"\n]\n\nApp.Config.classLevelsNUM = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    \"ELT3\",\n    \"ELT2\",\n    \"ELT1\",\n\n    \"MST3\",\n    \"MST2\",\n    \"MST1\",\n\n    \"CHL3\",\n    \"CHL2\",\n    \"CHL1\",\n\n    \"RCR3\",\n    \"RCR2\",\n    \"RCR1\",\n\n    \"SPR3\",\n    \"SPR2\",\n    \"SPR1\",\n\n    \"GLD3\",\n    \"GLD2\",\n    \"GLD2\",\n\n    \"CRL3\",\n    \"CRL3\",\n    \"CRL1\",\n\n    \"BUB3\",\n    \"BUB2\",\n    \"BUB1\"\n]\n\nApp.Config.classEVALLevels = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    {label:\"ELT\",value:'ELT1'},\n    {label:\"MST\",value:'MST1'},\n    {label:\"CHL\",value:'CHL1'},\n    {label:\"RCR\",value:'RCR1'},\n    {label:\"SPR\",value:'SPR1'},\n    {label:\"GLD\",value:'GLD2'},\n    {label:\"CRL\",value:'CRL1'},\n    {label:\"BUB\",value:'BUB1'}\n]\n\n\nApp.Config.week = {\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: \"Thurday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n    7: \"Sunday\"\n}\n\n}).call(this);\n","servePath":"/lib/class.level.config.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/lib/class.level.config.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/class.level.config.js","sourcesContent":["/**\n * Created on 9/16/15.\n */\nApp.Config = App.Config || {};\n\nApp.Config.classLevels = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    \"ELT III\",\n    \"ELT II\",\n    \"ELT I\",\n\n    \"MST III\",\n    \"MST II\",\n    \"MST I\",\n\n    \"CHL III\",\n    \"CHL II\",\n    \"CHL I\",\n\n    \"RCR III\",\n    \"RCR II\",\n    \"RCR I\",\n\n    \"SPR III\",\n    \"SPR II\",\n    \"SPR I\",\n\n    \"GLD III\",\n    \"GLD II\",\n    \"GLD I\",\n\n    \"CRL III\",\n    \"CRL II\",\n    \"CRL I\",\n\n    \"BUB III\",\n    \"BUB II\",\n    \"BUB I\"\n]\n\nApp.Config.classLevelsNUM = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    \"ELT3\",\n    \"ELT2\",\n    \"ELT1\",\n\n    \"MST3\",\n    \"MST2\",\n    \"MST1\",\n\n    \"CHL3\",\n    \"CHL2\",\n    \"CHL1\",\n\n    \"RCR3\",\n    \"RCR2\",\n    \"RCR1\",\n\n    \"SPR3\",\n    \"SPR2\",\n    \"SPR1\",\n\n    \"GLD3\",\n    \"GLD2\",\n    \"GLD2\",\n\n    \"CRL3\",\n    \"CRL3\",\n    \"CRL1\",\n\n    \"BUB3\",\n    \"BUB2\",\n    \"BUB1\"\n]\n\nApp.Config.classEVALLevels = [ //‰ªéÈ´òÂà∞Â∫ï ÂêçÂ≠ó\n    {label:\"ELT\",value:'ELT1'},\n    {label:\"MST\",value:'MST1'},\n    {label:\"CHL\",value:'CHL1'},\n    {label:\"RCR\",value:'RCR1'},\n    {label:\"SPR\",value:'SPR1'},\n    {label:\"GLD\",value:'GLD2'},\n    {label:\"CRL\",value:'CRL1'},\n    {label:\"BUB\",value:'BUB1'}\n]\n\n\nApp.Config.week = {\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: \"Thurday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n    7: \"Sunday\"\n}\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/14/15.\n */\n\n//\"hh:mm:ss\" 'hh:mm'\n//Êç¢ÁÆó‰∏∫‰ª•ÊØ´Áßí‰∏∫Âçï‰ΩçÁöÑÊï¥Êï∞\nApp.time2num=function(str){\n    var t=str.split(':')\n    var h = parseInt(t[0],10)\n    var m= parseInt(t[1],10)\n    var s= parseInt(t[2],10)||0\n    return h*3600*1000 + m*60*1000 + s*1000;\n}\n\nApp.num2time=function(num, second){\n    var h= Math.floor(num/(3600*1000))\n\n    var h_mod = (num % (3600*1000))\n    var m =Math.floor(h_mod/(60*1000))\n    var s = h_mod % (60*1000)\n\n    //todo format  5:3=> 05:03\n    return h+':'+m+(second?(':'+s):'')\n}\nApp.getNextClassLevel=function(level){\n\n    var levels=App.Config.classLevelsNUM\n    var cIndex =levels.indexOf(level)\n\n    if(cIndex == -1)\n        console.error('getNextClassLevel for '+level +' not exist')\n\n    //var nIndex = Math.min(cIndex+1, (levels.length-1))\n    var nIndex = Math.max(cIndex-1, 0)\n\n    console.log('getNextClassLevel', level, levels[nIndex])\n\n    return levels[nIndex]\n\n}\n}).call(this);\n","servePath":"/lib/utils.function.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/lib/utils.function.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/lib/utils.function.js","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n//\"hh:mm:ss\" 'hh:mm'\n//Êç¢ÁÆó‰∏∫‰ª•ÊØ´Áßí‰∏∫Âçï‰ΩçÁöÑÊï¥Êï∞\nApp.time2num=function(str){\n    var t=str.split(':')\n    var h = parseInt(t[0],10)\n    var m= parseInt(t[1],10)\n    var s= parseInt(t[2],10)||0\n    return h*3600*1000 + m*60*1000 + s*1000;\n}\n\nApp.num2time=function(num, second){\n    var h= Math.floor(num/(3600*1000))\n\n    var h_mod = (num % (3600*1000))\n    var m =Math.floor(h_mod/(60*1000))\n    var s = h_mod % (60*1000)\n\n    //todo format  5:3=> 05:03\n    return h+':'+m+(second?(':'+s):'')\n}\nApp.getNextClassLevel=function(level){\n\n    var levels=App.Config.classLevelsNUM\n    var cIndex =levels.indexOf(level)\n\n    if(cIndex == -1)\n        console.error('getNextClassLevel for '+level +' not exist')\n\n    //var nIndex = Math.min(cIndex+1, (levels.length-1))\n    var nIndex = Math.max(cIndex-1, 0)\n\n    console.log('getNextClassLevel', level, levels[nIndex])\n\n    return levels[nIndex]\n\n}"]}},{"type":"js","data":"(function(){/*\n*\n* Refer to https://github.com/aldeed/meteor-collection2\n* Attach a Schema to Meteor.users\n*\n* */\n\n\n//Accounts = new Mongo.Collection('accounts');\n\n/*\n name: \"Joe Schmoe\",\n phone: \"+1 555 555 5555\",\n address: \"Somewhere, San Jose, CA 95134\",\n location: \"Dublin\" or \"Fremont\",\n */\n\nDB.Schema.AccountProfile = new SimpleSchema({\n    name: {\n        type: String,\n        optional: true\n    },\n    phone: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    location: {\n        type: String,\n        optional: true\n    }\n});\n\nDB.Schema.Account = new SimpleSchema({\n\n    username: {\n        type: String,\n        optional: true\n    },\n    emails: {\n        type: Array\n    },\n\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n\n    //name: {\n    //    type: String\n    //},\n\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n\n    // !!!Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n\n    role: {\n        type: String,\n        optional: true    //todo change to false\n    },\n\n    profile: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n\n\n    credits: {\n        type: Number,\n        optional: true\n    },\n\n    alterContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    emergencyContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    optInCheck: {\n        type: Boolean,\n        optional: true\n    },\n    swimmers: {\n        type: [String],\n        optional: true\n\n    }\n});\n\n\n//Accounts.attachSchema(App.Schema.Account)\n\nMeteor.users.attachSchema(DB.Schema.Account);\n}).call(this);\n","servePath":"/both/collections/Accounts.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/Accounts.js"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C","file":"/both/collections/Accounts.js","sourcesContent":["/*\n*\n* Refer to https://github.com/aldeed/meteor-collection2\n* Attach a Schema to Meteor.users\n*\n* */\n\n\n//Accounts = new Mongo.Collection('accounts');\n\n/*\n name: \"Joe Schmoe\",\n phone: \"+1 555 555 5555\",\n address: \"Somewhere, San Jose, CA 95134\",\n location: \"Dublin\" or \"Fremont\",\n */\n\nDB.Schema.AccountProfile = new SimpleSchema({\n    name: {\n        type: String,\n        optional: true\n    },\n    phone: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    location: {\n        type: String,\n        optional: true\n    }\n});\n\nDB.Schema.Account = new SimpleSchema({\n\n    username: {\n        type: String,\n        optional: true\n    },\n    emails: {\n        type: Array\n    },\n\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n\n    //name: {\n    //    type: String\n    //},\n\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n\n    // !!!Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n\n    role: {\n        type: String,\n        optional: true    //todo change to false\n    },\n\n    profile: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n\n\n    credits: {\n        type: Number,\n        optional: true\n    },\n\n    alterContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    emergencyContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    optInCheck: {\n        type: Boolean,\n        optional: true\n    },\n    swimmers: {\n        type: [String],\n        optional: true\n\n    }\n});\n\n\n//Accounts.attachSchema(App.Schema.Account)\n\nMeteor.users.attachSchema(DB.Schema.Account);"]}},{"type":"js","data":"(function(){/**\n * Created on 9/12/15.\n */\n\n//Â≠òÂÇ®ÂÖ®Â±ÄÊÄßÁöÑÈÖçÁΩÆ‰ø°ÊÅØ\n\nDB.App = new Mongo.Collection('app');\n\n\nDB.Schema.App = new SimpleSchema(\n    {\n        status: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n        setting: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n\n\n        sessionNow:{//Ê≠£Âú®ËøõË°åÁöÑsession\n            type: String,\n            optional: true\n        },\n        sessionRegister:{//Ê≥®ÂÜåÁöÑsession\n            type: String,\n            optional: true\n        },\n        openRegister:{\n            type: Boolean,\n            optional: true\n        },\n        //for test  ÂΩìÂâçÊ≥®ÂÜåÈò∂ÊÆµ  1 2 3 4\n        registerStage:{\n            type: Number,\n            optional: true\n        }\n\n    });\n\n\nDB.App.attachSchema(DB.Schema.App)\n\n\n}).call(this);\n","servePath":"/both/collections/App.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/App.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/App.js","sourcesContent":["/**\n * Created on 9/12/15.\n */\n\n//Â≠òÂÇ®ÂÖ®Â±ÄÊÄßÁöÑÈÖçÁΩÆ‰ø°ÊÅØ\n\nDB.App = new Mongo.Collection('app');\n\n\nDB.Schema.App = new SimpleSchema(\n    {\n        status: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n        setting: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n\n\n        sessionNow:{//Ê≠£Âú®ËøõË°åÁöÑsession\n            type: String,\n            optional: true\n        },\n        sessionRegister:{//Ê≥®ÂÜåÁöÑsession\n            type: String,\n            optional: true\n        },\n        openRegister:{\n            type: Boolean,\n            optional: true\n        },\n        //for test  ÂΩìÂâçÊ≥®ÂÜåÈò∂ÊÆµ  1 2 3 4\n        registerStage:{\n            type: Number,\n            optional: true\n        }\n\n    });\n\n\nDB.App.attachSchema(DB.Schema.App)\n\n"]}},{"type":"js","data":"(function(){\nDB.ClassesRegister = new Mongo.Collection('classesRegister');\n\n\n\nDB.Schema.ClassesRegister = new SimpleSchema({\n    /*\n    *  classIdÁ°ÆÂÆöÂêésessionIdÂ∞±Á°ÆÂÆö‰∫Ü„ÄÇ\n    *  Ê∑ªÂä†Ëøô‰∏™Â≠óÊÆµÂèØ‰ª•Áî®‰æøÊü•ËØ¢swimmerÂú®ÂΩìÂâçsessionÊòØÂê¶ÊúâËØæ\n    * */\n    sessionId: {\n        type: String\n    },\n    //Êñπ‰æøÊü•ËØ¢\n    accountId: {\n        type: String,\n        optional: true\n    },\n    \n    //Êñπ‰æøÊü•ËØ¢  Âõ†‰∏∫Ê≥®ÂÜålevel Âπ∂‰∏çËÉΩÊ†πÊçÆswimmerÊàñËÄÖ classÁöÑ‰ø°ÊÅØÂæóÂá∫!!!\n    // ‰∏Ä‰∏™classÊúâÂ§ö‰∏™level\n    // ÂØπ‰∫éÊñ∞Áî®Êà∑returnbackÁî®Êà∑swimmerÁöÑlevelÂèØËÉΩÂíåÊ≥®ÂÜåÁöÑlevel‰∏ÄËá¥\n    // ÂØπ‰∫éÊ≠£Âú®Ê∏∏ÁöÑÁî®Êà∑ Ê≥®ÂÜåÁöÑlevelÊØîswimmerÁöÑlevel È´ò‰∏Ä‰∏™Á≠âÁ∫ß\n    classLevel:{\n        type: String,\n        optional: true\n    },\n    classId: {\n        type: String\n    },\n    swimmerId: {\n        type: String\n    },\n    cartId:{\n        type: String  //Âç≥‰ΩøÂêéÂè∞Áõ¥Êé•Ê≥®ÂÜå‰πü‰ºö‰∫ßÁîü cart\n    },\n\n    timestamp: {//todo change to lastModified\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate || this.isInsert || this.isUpsert) {\n                return new Date();\n            }\n        },\n        optional: true\n    },\n    registerTime:{ //‰ªéË¥≠Áâ©ËΩ¶Ëé∑Âèñ\n        type: Date,\n        optional: true\n    },\n\n    //ÂèØËÉΩÊòØnormal canceling Êàñchanging\n    status: {\n        type: String,\n        //optional: true,\n        allowedValues:['normal','canceling','changing'],\n        defaultValue:'normal'\n    },\n    //Âú® cancelÂíåchange classÊó∂Ê†áËÆ∞\n    carted:{\n        //type: [DB.Schema.ClassesShoppingCart],\n        type: [String], //Â≠òÂÇ®cancelÂíåchangeÁ±ªÂûãÁöÑË¥≠Áâ©ËΩ¶id\n        optional: true,\n        blackbox: true\n    }\n\n\n});\n\nDB.ClassesRegister.attachSchema(DB.Schema.ClassesRegister)\n}).call(this);\n","servePath":"/both/collections/ClassesRegister.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/ClassesRegister.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D","file":"/both/collections/ClassesRegister.js","sourcesContent":["\nDB.ClassesRegister = new Mongo.Collection('classesRegister');\n\n\n\nDB.Schema.ClassesRegister = new SimpleSchema({\n    /*\n    *  classIdÁ°ÆÂÆöÂêésessionIdÂ∞±Á°ÆÂÆö‰∫Ü„ÄÇ\n    *  Ê∑ªÂä†Ëøô‰∏™Â≠óÊÆµÂèØ‰ª•Áî®‰æøÊü•ËØ¢swimmerÂú®ÂΩìÂâçsessionÊòØÂê¶ÊúâËØæ\n    * */\n    sessionId: {\n        type: String\n    },\n    //Êñπ‰æøÊü•ËØ¢\n    accountId: {\n        type: String,\n        optional: true\n    },\n    \n    //Êñπ‰æøÊü•ËØ¢  Âõ†‰∏∫Ê≥®ÂÜålevel Âπ∂‰∏çËÉΩÊ†πÊçÆswimmerÊàñËÄÖ classÁöÑ‰ø°ÊÅØÂæóÂá∫!!!\n    // ‰∏Ä‰∏™classÊúâÂ§ö‰∏™level\n    // ÂØπ‰∫éÊñ∞Áî®Êà∑returnbackÁî®Êà∑swimmerÁöÑlevelÂèØËÉΩÂíåÊ≥®ÂÜåÁöÑlevel‰∏ÄËá¥\n    // ÂØπ‰∫éÊ≠£Âú®Ê∏∏ÁöÑÁî®Êà∑ Ê≥®ÂÜåÁöÑlevelÊØîswimmerÁöÑlevel È´ò‰∏Ä‰∏™Á≠âÁ∫ß\n    classLevel:{\n        type: String,\n        optional: true\n    },\n    classId: {\n        type: String\n    },\n    swimmerId: {\n        type: String\n    },\n    cartId:{\n        type: String  //Âç≥‰ΩøÂêéÂè∞Áõ¥Êé•Ê≥®ÂÜå‰πü‰ºö‰∫ßÁîü cart\n    },\n\n    timestamp: {//todo change to lastModified\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate || this.isInsert || this.isUpsert) {\n                return new Date();\n            }\n        },\n        optional: true\n    },\n    registerTime:{ //‰ªéË¥≠Áâ©ËΩ¶Ëé∑Âèñ\n        type: Date,\n        optional: true\n    },\n\n    //ÂèØËÉΩÊòØnormal canceling Êàñchanging\n    status: {\n        type: String,\n        //optional: true,\n        allowedValues:['normal','canceling','changing'],\n        defaultValue:'normal'\n    },\n    //Âú® cancelÂíåchange classÊó∂Ê†áËÆ∞\n    carted:{\n        //type: [DB.Schema.ClassesShoppingCart],\n        type: [String], //Â≠òÂÇ®cancelÂíåchangeÁ±ªÂûãÁöÑË¥≠Áâ©ËΩ¶id\n        optional: true,\n        blackbox: true\n    }\n\n\n});\n\nDB.ClassesRegister.attachSchema(DB.Schema.ClassesRegister)"]}},{"type":"js","data":"(function(){DB.Sessions = new Mongo.Collection('sessions');\n\n\nDB.Schema.Sessions = new SimpleSchema(\n    {\n        name: {\n            type: String,\n            optional: true\n        },\n        registerStartDate: { //Ê≥®ÂÜåÂºÄÂßãÊó∂Èó¥\n            type: Date\n        },\n        startDate: {   //sessionÂºÄÂßãÊó∂Èó¥\n            type: Date\n        }\n    });\n\n\nDB.Sessions.attachSchema(DB.Schema.Sessions)\n\n}).call(this);\n","servePath":"/both/collections/Sessions.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/Sessions.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/Sessions.js","sourcesContent":["DB.Sessions = new Mongo.Collection('sessions');\n\n\nDB.Schema.Sessions = new SimpleSchema(\n    {\n        name: {\n            type: String,\n            optional: true\n        },\n        registerStartDate: { //Ê≥®ÂÜåÂºÄÂßãÊó∂Èó¥\n            type: Date\n        },\n        startDate: {   //sessionÂºÄÂßãÊó∂Èó¥\n            type: Date\n        }\n    });\n\n\nDB.Sessions.attachSchema(DB.Schema.Sessions)\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/13/15.\n */\n\n/*\n *\n * Êó†ÊïàË¥≠Áâ©ËΩ¶ÈúÄË¶ÅÂÆöÊó∂ÊâßË°åÁöÑÁ®ãÂ∫èËøõË°åÊ∏ÖÁ©∫\n *\n * */\nDB.ShoppingCart = new Mongo.Collection('shoppingCart');\n\n\nDB.ShoppingCart.attachSchema(new SimpleSchema({\n\n    accountId: {\n        type: String\n    },\n    sessionId:{\n        type: String,\n        optional: true //todo remove\n    },\n\n    /*\n     *\n         active\n         pending\n         checking\n         applied\n         done\n\n         expiring\n         expired\n\n         canceling\n         canceled\n\n     *\n     * */\n    status: {\n        type: String\n    },\n\n    /*\n    * Ë¥≠Áâ©ËΩ¶Ê∑ªÂä†Á±ªÂûãÔºåcancel ÔºåchangeÁã¨Á´ã‰∫éregisterÂè¶Âª∫Ë¥≠Áâ©ËΩ¶ Êñπ‰æø‰∫ãÂä°‰∏≠ÊÅ¢Â§çÈÄªËæëÁöÑÂÆûÁé∞\n    * Âê¶Âàô‰∏Ä‰∏™‰∏≠Êñ≠‰∫épendingÊó∂Ë¥≠Áâ©ËΩ¶‰∏≠Ëã•ÂêåÊó∂Â≠òÂú®‰∏âÁßçÈ°πÁõÆ ‰ºöÂ¢ûÂä†ÊÅ¢Â§çÊâßË°åÊàñÂõûÊªöÁöÑÂ§çÊùÇÊÄß\n    * */\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    },\n\n    lastModified: {   //Áî®‰∫éËÆ°ÁÆóË∂ÖÊó∂ Ê∏ÖÁ©∫Ë¥≠Áâ©ËΩ¶\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate) {\n                return new Date();\n            }\n            if (this.isUpsert) {\n                return new Date();\n            }\n            if (this.isInsert) {\n                return new Date();\n            }\n        }\n    },\n    appliedTime:{//ÂÆåÊàê‰∫§Êòì ËÆæÁΩÆappliedÁöÑÊó∂Èó¥\n        type: Date,\n        optional: true\n    },\n    /*\n     *\n     * ‰∏§ÁßçÁ±ªÂûãÁöÑË∂ÖÊó∂Êó∂Èó¥‰∏ç‰∏ÄÊ†∑\n     *\n     * pay-in-store  24h\n     * pay-now   15 minutes\n     * */\n    checkoutType: {\n        type: String,\n        optional: true  //add default value?\n    },\n\n\n    /*\n        Ê∑ªÂä†classÊàñÂèñÊ∂àclass\n        {\n        type=='add'\n        sessionId   //todo remove\n        swimmerId classId, quantity\n        swimmer class1 class2 class3\n        }\n\n        change class\n        {\n            type=='change'\n            sessionId, swimmerId,\n            fromClass, toClass\n        }\n\n        isBookTheSameTime //Ê†áËÆ∞Ë¥≠Áâ©È°πÊòØÂê¶ÊòØÈÄöËøábookthesametimeÊ∑ªÂä†\n\n    * */\n    //\n    items: {\n        type: [Object],\n        optional: true,\n        blackbox: true\n    }\n\n}))\n}).call(this);\n","servePath":"/both/collections/ShoppingCart.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/ShoppingCart.js"],"names":[],"mappings":"efile":"/both/collections/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/13/15.\n */\n\n/*\n *\n * Êó†ÊïàË¥≠Áâ©ËΩ¶ÈúÄË¶ÅÂÆöÊó∂ÊâßË°åÁöÑÁ®ãÂ∫èËøõË°åÊ∏ÖÁ©∫\n *\n * */\nDB.ShoppingCart = new Mongo.Collection('shoppingCart');\n\n\nDB.ShoppingCart.attachSchema(new SimpleSchema({\n\n    accountId: {\n        type: String\n    },\n    sessionId:{\n        type: String,\n        optional: true //todo remove\n    },\n\n    /*\n     *\n         active\n         pending\n         checking\n         applied\n         done\n\n         expiring\n         expired\n\n         canceling\n         canceled\n\n     *\n     * */\n    status: {\n        type: String\n    },\n\n    /*\n    * Ë¥≠Áâ©ËΩ¶Ê∑ªÂä†Á±ªÂûãÔºåcancel ÔºåchangeÁã¨Á´ã‰∫éregisterÂè¶Âª∫Ë¥≠Áâ©ËΩ¶ Êñπ‰æø‰∫ãÂä°‰∏≠ÊÅ¢Â§çÈÄªËæëÁöÑÂÆûÁé∞\n    * Âê¶Âàô‰∏Ä‰∏™‰∏≠Êñ≠‰∫épendingÊó∂Ë¥≠Áâ©ËΩ¶‰∏≠Ëã•ÂêåÊó∂Â≠òÂú®‰∏âÁßçÈ°πÁõÆ ‰ºöÂ¢ûÂä†ÊÅ¢Â§çÊâßË°åÊàñÂõûÊªöÁöÑÂ§çÊùÇÊÄß\n    * */\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    },\n\n    lastModified: {   //Áî®‰∫éËÆ°ÁÆóË∂ÖÊó∂ Ê∏ÖÁ©∫Ë¥≠Áâ©ËΩ¶\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate) {\n                return new Date();\n            }\n            if (this.isUpsert) {\n                return new Date();\n            }\n            if (this.isInsert) {\n                return new Date();\n            }\n        }\n    },\n    appliedTime:{//ÂÆåÊàê‰∫§Êòì ËÆæÁΩÆappliedÁöÑÊó∂Èó¥\n        type: Date,\n        optional: true\n    },\n    /*\n     *\n     * ‰∏§ÁßçÁ±ªÂûãÁöÑË∂ÖÊó∂Êó∂Èó¥‰∏ç‰∏ÄÊ†∑\n     *\n     * pay-in-store  24h\n     * pay-now   15 minutes\n     * */\n    checkoutType: {\n        type: String,\n        optional: true  //add default value?\n    },\n\n\n    /*\n        Ê∑ªÂä†classÊàñÂèñÊ∂àclass\n        {\n        type=='add'\n        sessionId   //todo remove\n        swimmerId classId, quantity\n        swimmer class1 class2 class3\n        }\n\n        change class\n        {\n            type=='change'\n            sessionId, swimmerId,\n            fromClass, toClass\n        }\n\n        isBookTheSameTime //Ê†áËÆ∞Ë¥≠Áâ©È°πÊòØÂê¶ÊòØÈÄöËøábookthesametimeÊ∑ªÂä†\n\n    * */\n    //\n    items: {\n        type: [Object],\n        optional: true,\n        blackbox: true\n    }\n\n}))"]}},{"type":"js","data":"(function(){\n\nDB.Swimmers = new Mongo.Collection('swimmers');\n\n\nDB.Schema.Swimmers = new SimpleSchema({\n    name: {\n        type: String\n\n    },\n    //ÊâÄÂ±ûaccount\n    accountId: {\n        type: String\n    },\n\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['male', 'female'],\n        optional: true\n    },\n    age: {\n        type: Number,\n        optional: true\n    },\n    allergy:{\n        type: String,\n        optional: true\n    },\n\n    location: {\n        type: String,\n    },\n    level:{\n        type: String\n    },\n    waiveFormAgreed: {\n        type: Boolean,\n        optional: true\n    },\n    paymentStatus: {\n        type: Boolean,\n        optional: true\n    },\n    meetingDate:{\n        type: Date,\n        optional: true\n    },\n    registerAt:{\n        type: Date,\n        optional: true\n    },\n    classes:{\n        type: [String],  //ÔΩõclass ids  Ôºåregister dateÔΩù?\n        optional: true\n    }\n\n\n});\n\n\nDB.Swimmers.attachSchema(DB.Schema.Swimmers)\n\n}).call(this);\n","servePath":"/both/collections/Swimmers.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/Swimmers.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/Swimmers.js","sourcesContent":["\n\nDB.Swimmers = new Mongo.Collection('swimmers');\n\n\nDB.Schema.Swimmers = new SimpleSchema({\n    name: {\n        type: String\n\n    },\n    //ÊâÄÂ±ûaccount\n    accountId: {\n        type: String\n    },\n\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['male', 'female'],\n        optional: true\n    },\n    age: {\n        type: Number,\n        optional: true\n    },\n    allergy:{\n        type: String,\n        optional: true\n    },\n\n    location: {\n        type: String,\n    },\n    level:{\n        type: String\n    },\n    waiveFormAgreed: {\n        type: Boolean,\n        optional: true\n    },\n    paymentStatus: {\n        type: Boolean,\n        optional: true\n    },\n    meetingDate:{\n        type: Date,\n        optional: true\n    },\n    registerAt:{\n        type: Date,\n        optional: true\n    },\n    classes:{\n        type: [String],  //ÔΩõclass ids  Ôºåregister dateÔΩù?\n        optional: true\n    }\n\n\n});\n\n\nDB.Swimmers.attachSchema(DB.Schema.Swimmers)\n"]}},{"type":"js","data":"(function(){/**\n * Created on 10/2/15.\n */\n\nDB.WaitingList = new Mongo.Collection('waitingList');\n\n\nDB.WaitingList.attachSchema(new SimpleSchema(\n    {\n\n        swimmerId: {\n            type: String\n        },\n        classId: {\n            type: String\n        },\n\n        //sessionId  accountIdÊòØ‰∏∫‰∫ÜÊñπ‰æøÊü•ËØ¢\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        accountId: {\n            type: String,\n            optional: true\n        },\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n\n}).call(this);\n","servePath":"/both/collections/WaitingList.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/WaitingList.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/WaitingList.js","sourcesContent":["/**\n * Created on 10/2/15.\n */\n\nDB.WaitingList = new Mongo.Collection('waitingList');\n\n\nDB.WaitingList.attachSchema(new SimpleSchema(\n    {\n\n        swimmerId: {\n            type: String\n        },\n        classId: {\n            type: String\n        },\n\n        //sessionId  accountIdÊòØ‰∏∫‰∫ÜÊñπ‰æøÊü•ËØ¢\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        accountId: {\n            type: String,\n            optional: true\n        },\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n"]}},{"type":"js","data":"(function(){/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver = new Mongo.Collection('waiver');\n\nDB.Waiver.attachSchema(new SimpleSchema(\n    {\n\n        accountId: {\n            type: String,\n        },\n        //sessionId  accountIdÊòØ‰∏∫‰∫ÜÊñπ‰æøÊü•ËØ¢\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        swimmers: {\n            type: [String]\n        },\n\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n}).call(this);\n","servePath":"/both/collections/Waiver.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/Waiver.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O","file":"/both/collections/Waiver.js","sourcesContent":["/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver = new Mongo.Collection('waiver');\n\nDB.Waiver.attachSchema(new SimpleSchema(\n    {\n\n        accountId: {\n            type: String,\n        },\n        //sessionId  accountIdÊòØ‰∏∫‰∫ÜÊñπ‰æøÊü•ËØ¢\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        swimmers: {\n            type: [String]\n        },\n\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))"]}},{"type":"js","data":"(function(){\nDB.Classes = new Mongo.Collection('classes');\n\n\n\nDB.Schema.ClassesShoppingCart= new SimpleSchema({\n\n    cartId: {\n        type: String,\n        optional: true\n    },\n    swimmerId:{\n        type: String,\n        optional: true\n    },\n    quantity:{\n        type: Number\n    },\n    timestamp: {\n        type: Date\n    },\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    }\n});\n\n\n\nDB.Schema.Classes = new SimpleSchema({\n    name: {\n        type: String\n    },\n    //ÊâÄÂ±ûÁöÑsession\n    sessionId:{\n        type: String\n    },\n\n    //todo delete\n    level:  {\n      type: String,\n      optional: true\n    },\n\n    // ‰∏Ä‰∏™classÂåÖÂê´Â§ö‰∏™level\n    levels:  {\n      type: [String],\n      optional: true\n    },\n\n    //classÁöÑÊó∂Èó¥ÂÆö‰πâ ÊØèÂë®‰ªÖ‰∏ÄÊ¨°Ôºü\n    //Âë®Âá†  1-7\n    day:{\n        type: Number\n    },\n\n    startTime: {\n        type: Number\n    },\n    endTime: {\n        type: Number\n    },\n    price:  {\n        type: Number\n    },\n\n    carted:{\n        type: [DB.Schema.ClassesShoppingCart],\n        optional: true\n    },\n\n    seatsTotal:{\n        type: Number\n    },\n    seatsRemain:{\n        type: Number\n    },\n    students:{\n        type: [String],  //students ids\n        optional: true\n    },\n\n    ///////////////////////////////////////////////\n    startDate: {\n        type: Date,\n        optional: true\n    },\n    endDate: {\n        type: Date,\n        optional: true\n    },\n\n    duration: {\n        type: Number,\n        optional: true\n    },\n    frequency:{\n        type: String,\n        optional: true\n    },\n    type: {\n        type: String,\n        optional: true\n    },\n    coachId: {\n        type: String,\n        optional: true\n    },\n    coachName: {\n        type: String,\n        optional: true\n\n    }\n});\n\n\nDB.Classes.attachSchema(DB.Schema.Classes)\n}).call(this);\n","servePath":"/both/collections/classes.js","sourceMap":{"version":3,"sources":["meteor://üíªapp/both/collections/classes.js"],"names":[],"mappingsfile":"/both/collections/classes.js","sourcesContent":["\nDB.Classes = new Mongo.Collection('classes');\n\n\n\nDB.Schema.ClassesShoppingCart= new SimpleSchema({\n\n    cartId: {\n        type: String,\n        optional: true\n    },\n    swimmerId:{\n        type: String,\n        optional: true\n    },\n    quantity:{\n        type: Number\n    },\n    timestamp: {\n        type: Date\n    },\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    }\n});\n\n\n\nDB.Schema.Classes = new SimpleSchema({\n    name: {\n        type: String\n    },\n    //ÊâÄÂ±ûÁöÑsession\n    sessionId:{\n        type: String\n    },\n\n    //todo delete\n    level:  {\n      type: String,\n      optional: true\n    },\n\n    // ‰∏Ä‰∏™classÂåÖÂê´Â§ö‰∏™level\n    levels:  {\n      type: [String],\n      optional: true\n    },\n\n    //classÁöÑÊó∂Èó¥ÂÆö‰πâ ÊØèÂë®‰ªÖ‰∏ÄÊ¨°Ôºü\n    //Âë®Âá†  1-7\n    day:{\n        type: Number\n    },\n\n    startTime: {\n        type: Number\n    },\n    endTime: {\n        type: Number\n    },\n    price:  {\n        type: Number\n    },\n\n    carted:{\n        type: [DB.Schema.ClassesShoppingCart],\n        optional: true\n    },\n\n    seatsTotal:{\n        type: Number\n    },\n    seatsRemain:{\n        type: Number\n    },\n    students:{\n        type: [String],  //students ids\n        optional: true\n    },\n\n    ///////////////////////////////////////////////\n    startDate: {\n        type: Date,\n        optional: true\n    },\n    endDate: {\n        type: Date,\n        optional: true\n    },\n\n    duration: {\n        type: Number,\n        optional: true\n    },\n    frequency:{\n        type: String,\n        optional: true\n    },\n    type: {\n        type: String,\n        optional: true\n    },\n    coachId: {\n        type: String,\n        optional: true\n    },\n    coachName: {\n        type: String,\n        optional: true\n\n    }\n});\n\n\nDB.Classes.attachSchema(DB.Schema.Classes)"]}},{"type":"js","data":"(function(){Meteor.methods({\n  CheckEmail:function(email){\n  \tconsole.log(email);\n    if (Accounts.findUserByEmail(email)) {\n      console.log(\"Email Found\");\n      return true;\n    } else {\n      console.log(\"Email Not Found\");\n      return false;\n    } \n  },\n  SetUserName:function(userId, userName){\n    console.log(userId, userName);\n    return(Accounts.setUsername(userId, userName));\n  },\n  SetAlternateContact: function(userId, aContact){\n    console.log(userId, aContact);\n    Meteor.users.update(userId, { $set: { alterContact: aContact} });\n  },\n  SetEmergencyContact: function(userId, eContact){\n    console.log(userId, eContact);\n    Meteor.users.update(userId, { $set: { emergencyContact: eContact} });\n  },\n  SetOptIn: function(userId, isOptIn){\n    console.log(userId, isOptIn, \"Toggle Opt In\");\n    Meteor.users.update(userId, { $set: { optInCheck: isOptIn} });\n  },\n\n});\n}).call(this);\n","servePath":"/server/methods/AccountManagement.js","sourceMap":{"version":3,"sources":["/server/methods/AccountManagement.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/methods/AccountManagement.js","sourcesContent":["Meteor.methods({\n  CheckEmail:function(email){\n  \tconsole.log(email);\n    if (Accounts.findUserByEmail(email)) {\n      console.log(\"Email Found\");\n      return true;\n    } else {\n      console.log(\"Email Not Found\");\n      return false;\n    } \n  },\n  SetUserName:function(userId, userName){\n    console.log(userId, userName);\n    return(Accounts.setUsername(userId, userName));\n  },\n  SetAlternateContact: function(userId, aContact){\n    console.log(userId, aContact);\n    Meteor.users.update(userId, { $set: { alterContact: aContact} });\n  },\n  SetEmergencyContact: function(userId, eContact){\n    console.log(userId, eContact);\n    Meteor.users.update(userId, { $set: { emergencyContact: eContact} });\n  },\n  SetOptIn: function(userId, isOptIn){\n    console.log(userId, isOptIn, \"Toggle Opt In\");\n    Meteor.users.update(userId, { $set: { optInCheck: isOptIn} });\n  },\n\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 10/2/15.\n */\n\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n\n        add_waiting_list: function (swimmerId, classId) {\n\n            if (!this.userId) {\n                throw new Meteor.Error(500, 'add_waiting_list: need login');\n            }\n\n            //upinsert?\n            var result = DB.WaitingList.insert({\n                swimmerId: swimmerId,\n                classId: classId,\n\n                accountId: this.userId,\n                sessionId: App.info.sessionRegister\n            })\n\n            if (!result) {\n                throw new Meteor.Error(500, 'add_waiting_list error');\n            }\n\n\n        }\n\n\n    })\n\n\n})\n}).call(this);\n","servePath":"/server/methods/AddWaitingList.js","sourceMap":{"version":3,"sources":["/server/methods/AddWaitingList.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/server/methods/AddWaitingList.js","sourcesContent":["/**\n * Created on 10/2/15.\n */\n\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n\n        add_waiting_list: function (swimmerId, classId) {\n\n            if (!this.userId) {\n                throw new Meteor.Error(500, 'add_waiting_list: need login');\n            }\n\n            //upinsert?\n            var result = DB.WaitingList.insert({\n                swimmerId: swimmerId,\n                classId: classId,\n\n                accountId: this.userId,\n                sessionId: App.info.sessionRegister\n            })\n\n            if (!result) {\n                throw new Meteor.Error(500, 'add_waiting_list error');\n            }\n\n\n        }\n\n\n    })\n\n\n})"]}},{"type":"js","data":"(function(){/**\n * Created on 9/18/15.\n */\n\n//\"Not permitted. Untrusted code may only update documents by ID\"\n//So define special update methods\n//refer http://stackoverflow.com/questions/15464507/understanding-not-permitted-untrusted-code-may-only-update-documents-by-id-m\n\n\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n        //active\n        add_class_to_cart: shoppingCart.add_class_to_cart,\n        add_preference_to_cart: shoppingCart.add_preference_to_cart,\n\n        delete_class_from_cart:shoppingCart.delete_class_from_cart,\n        change_preference_in_cart:shoppingCart.change_preference_in_cart,\n\n\n        //Ê∏ÖÈô§‰∏çÂÆåÊï¥Ë¥≠Áâ©È°π\n        clear_uncompleted_item_in_cart:shoppingCart.clear_uncompleted_item_in_cart,\n\n        //active => checking\n        move_to_checking: shoppingCart.move_to_checking,\n\n        //checking => applied\n        move_to_applied: shoppingCart.move_to_applied,\n\n        //applied=>done\n        move_to_done:shoppingCart.move_to_done,\n\n\n        //////can only called from server//////\n        //this.connection==null\n        cron_move_applied_to_done:shoppingCart.cron_move_applied_to_done,\n        cron_expiring:shoppingCart.cron_expiring,\n\n\n        ///cancel class\n        cancel_class:function(swimmerId,classId){\n            //check if has been cancel\n\n            var item = DB.ClassesRegister.findOne({\n                swimmerId:swimmerId,\n                classId:classId\n            })\n            if(!item){\n                throw new Meteor.Error(500, 'swimmerId don not have that class');\n\n            }else if(item.status=='canceling'){\n                throw new Meteor.Error(500, 'class is already canceling process');\n\n            }\n\n            shoppingCart.cancel_add_class_to_cart(swimmerId,classId)\n        },\n\n\n        ///change class\n\n        change_class:function(swimmerId, fromClassId, toClassId){\n\n            //todo check ÈÄªËæëÊèêÂá∫Êù•\n            shoppingCart.change_class(\n                swimmerId,\n                fromClassId,\n                toClassId\n            )\n        }\n\n\n    })\n\n\n})\n\n}).call(this);\n","servePath":"/server/methods/ShoppingCart.js","sourceMap":{"version":3,"sources":["/server/methods/ShoppingCart.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/methods/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/18/15.\n */\n\n//\"Not permitted. Untrusted code may only update documents by ID\"\n//So define special update methods\n//refer http://stackoverflow.com/questions/15464507/understanding-not-permitted-untrusted-code-may-only-update-documents-by-id-m\n\n\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n        //active\n        add_class_to_cart: shoppingCart.add_class_to_cart,\n        add_preference_to_cart: shoppingCart.add_preference_to_cart,\n\n        delete_class_from_cart:shoppingCart.delete_class_from_cart,\n        change_preference_in_cart:shoppingCart.change_preference_in_cart,\n\n\n        //Ê∏ÖÈô§‰∏çÂÆåÊï¥Ë¥≠Áâ©È°π\n        clear_uncompleted_item_in_cart:shoppingCart.clear_uncompleted_item_in_cart,\n\n        //active => checking\n        move_to_checking: shoppingCart.move_to_checking,\n\n        //checking => applied\n        move_to_applied: shoppingCart.move_to_applied,\n\n        //applied=>done\n        move_to_done:shoppingCart.move_to_done,\n\n\n        //////can only called from server//////\n        //this.connection==null\n        cron_move_applied_to_done:shoppingCart.cron_move_applied_to_done,\n        cron_expiring:shoppingCart.cron_expiring,\n\n\n        ///cancel class\n        cancel_class:function(swimmerId,classId){\n            //check if has been cancel\n\n            var item = DB.ClassesRegister.findOne({\n                swimmerId:swimmerId,\n                classId:classId\n            })\n            if(!item){\n                throw new Meteor.Error(500, 'swimmerId don not have that class');\n\n            }else if(item.status=='canceling'){\n                throw new Meteor.Error(500, 'class is already canceling process');\n\n            }\n\n            shoppingCart.cancel_add_class_to_cart(swimmerId,classId)\n        },\n\n\n        ///change class\n\n        change_class:function(swimmerId, fromClassId, toClassId){\n\n            //todo check ÈÄªËæëÊèêÂá∫Êù•\n            shoppingCart.change_class(\n                swimmerId,\n                fromClassId,\n                toClassId\n            )\n        }\n\n\n    })\n\n\n})\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/30/15.\n */\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n            //this is an anti partern\n            //ÂØºËá¥ RangeError: Maximum call stack size exceeded todo check\n            getAccountSwimmersClasses: function () {\n\n                var accountId= this.userId\n\n                if(!accountId) return{}\n\n\n                //console.log(accountId)\n                return accountId;\n\n\n                var swimmers = DB.Swimmers.find({\n                    accountId:accountId\n                })\n\n\n                var swimmerIds = swimmers.map(function(v){\n                    return v._id\n                })\n\n\n                var classesRegister= DB.ClassesRegister.find({\n                        swimmerId:{$in:swimmerIds}\n                    }\n                )\n\n\n                var classIds= classesRegister.map(function(v){\n                    return v.classId\n                })\n                classIds= _.uniq(classIds)\n\n                var classes =DB.Classes.find({\n                    _id:{$in:classIds}\n                })\n\n                var classesMap = {}\n                classes.forEach(function(v){\n                    classesMap[v._id]=v\n                })\n\n\n\n                var swimmerClasses={}\n\n                classesRegister.forEach(function(v){\n                    if(!swimmerClasses[v.swimmerId]){\n                        swimmerClasses[v.swimmerId]=[]\n                    }\n\n                    swimmerClasses[v.swimmerId].push(v)\n\n                })\n\n\n\n\n                return{\n                    swimmers:swimmers,\n                    classes:classes,\n                    classesMap:classesMap,\n                    swimmerClasses:swimmerClasses\n                }\n\n\n            }\n        }\n    )\n\n\n})\n}).call(this);\n","servePath":"/server/methods/common.js","sourceMap":{"version":3,"sources":["/server/methods/common.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/server/methods/common.js","sourcesContent":["/**\n * Created on 9/30/15.\n */\n\nMeteor.startup(function () {\n\n    Meteor.methods({\n\n            //this is an anti partern\n            //ÂØºËá¥ RangeError: Maximum call stack size exceeded todo check\n            getAccountSwimmersClasses: function () {\n\n                var accountId= this.userId\n\n                if(!accountId) return{}\n\n\n                //console.log(accountId)\n                return accountId;\n\n\n                var swimmers = DB.Swimmers.find({\n                    accountId:accountId\n                })\n\n\n                var swimmerIds = swimmers.map(function(v){\n                    return v._id\n                })\n\n\n                var classesRegister= DB.ClassesRegister.find({\n                        swimmerId:{$in:swimmerIds}\n                    }\n                )\n\n\n                var classIds= classesRegister.map(function(v){\n                    return v.classId\n                })\n                classIds= _.uniq(classIds)\n\n                var classes =DB.Classes.find({\n                    _id:{$in:classIds}\n                })\n\n                var classesMap = {}\n                classes.forEach(function(v){\n                    classesMap[v._id]=v\n                })\n\n\n\n                var swimmerClasses={}\n\n                classesRegister.forEach(function(v){\n                    if(!swimmerClasses[v.swimmerId]){\n                        swimmerClasses[v.swimmerId]=[]\n                    }\n\n                    swimmerClasses[v.swimmerId].push(v)\n\n                })\n\n\n\n\n                return{\n                    swimmers:swimmers,\n                    classes:classes,\n                    classesMap:classesMap,\n                    swimmerClasses:swimmerClasses\n                }\n\n\n            }\n        }\n    )\n\n\n})"]}},{"type":"js","data":"(function(){/**\n * Created on 9/16/15.\n */\n\n\n//Todo add real logic\nDB.ShoppingCart.allow({\n\n    insert: function (userId, doc) {\n        return true;\n    },\n    update: function (userId, doc, fields, modifier) {\n\n        return true;\n    },\n    remove: function (userId, doc) {\n\n        return true;\n    }\n});\n}).call(this);\n","servePath":"/server/permissions/ShoppingCart.js","sourceMap":{"version":3,"sources":["/server/permissions/ShoppingCart.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/permissions/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/16/15.\n */\n\n\n//Todo add real logic\nDB.ShoppingCart.allow({\n\n    insert: function (userId, doc) {\n        return true;\n    },\n    update: function (userId, doc, fields, modifier) {\n\n        return true;\n    },\n    remove: function (userId, doc) {\n\n        return true;\n    }\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 9/27/15.\n */\n\n\nDB.Swimmers.allow({\n\n    insert: function (userId, doc) {\n\n        return userId;\n    }\n\n})\n}).call(this);\n","servePath":"/server/permissions/Swimmers.js","sourceMap":{"version":3,"sources":["/server/permissions/Swimmers.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/server/permissions/Swimmers.js","sourcesContent":["/**\n * Created on 9/27/15.\n */\n\n\nDB.Swimmers.allow({\n\n    insert: function (userId, doc) {\n\n        return userId;\n    }\n\n})"]}},{"type":"js","data":"(function(){/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver.allow({\n\n    insert: function (userId, doc) {\n\n        return userId;\n    }\n\n})\n}).call(this);\n","servePath":"/server/permissions/Waiver.js","sourceMap":{"version":3,"sources":["/server/permissions/Waiver.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/server/permissions/Waiver.js","sourcesContent":["/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver.allow({\n\n    insert: function (userId, doc) {\n\n        return userId;\n    }\n\n})"]}},{"type":"js","data":"(function(){/**\n * Created on 9/16/15.\n */\n\n\n//Todo add real logic\nDB.ClassesRegister.allow({\n    insert: function (userId, doc) {\n        return true;\n    },\n    update: function (userId, doc, fields, modifier) {\n\n        return true;\n    },\n    remove: function (userId, doc) {\n\n        return true;\n    }\n});\n}).call(this);\n","servePath":"/server/permissions/classesRegister.js","sourceMap":{"version":3,"sources":["/server/permissions/classesRegister.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/permissions/classesRegister.js","sourcesContent":["/**\n * Created on 9/16/15.\n */\n\n\n//Todo add real logic\nDB.ClassesRegister.allow({\n    insert: function (userId, doc) {\n        return true;\n    },\n    update: function (userId, doc, fields, modifier) {\n\n        return true;\n    },\n    remove: function (userId, doc) {\n\n        return true;\n    }\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 9/18/15.\n */\n\n//just for test\nMeteor.publish(\"accountShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        accountId: this.userId\n    });\n});\n\nMeteor.publish(\"activeShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        status: 'active',\n        type:'register',\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}, // 15ÂàÜ‰ª•ÂÜÖÁöÑ todo save time as config\n        accountId: this.userId\n    });\n});\n\n\nMeteor.publish(\"historyShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        status: 'done',\n        type:'register',\n        accountId: this.userId\n    });\n});\n\n//todo delete\nMeteor.publish(\"nowShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        type:'register',\n        status: {\n            $in: ['active', 'checking','applied']\n        },\n        accountId: this.userId\n    });\n});\n\n\nMeteor.publish(\"checkingShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n\n        $and: [\n            {\n                type:'register',\n                status: 'checking',\n                accountId: this.userId\n            },\n            {\n\n                \"$or\": [\n                    {\n                        checkoutType: 'pay-now',\n                        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}\n\n                    }, {\n                        checkoutType: 'pay-in-store',\n                        lastModified: {$gt: new Date(+new Date() - 24 * 60 * 60 * 1000)}\n\n                    }]\n            }\n        ]\n\n    });\n});\n\n\nMeteor.publish(\"allRegisterShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        type:'register',\n        //status: {\n        //    $in: ['checking']\n        //}\n    });\n});\n\n\n}).call(this);\n","servePath":"/server/publish/ShoppingCart.js","sourceMap":{"version":3,"sources":["/server/publish/ShoppingCart.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/publish/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/18/15.\n */\n\n//just for test\nMeteor.publish(\"accountShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        accountId: this.userId\n    });\n});\n\nMeteor.publish(\"activeShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        status: 'active',\n        type:'register',\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}, // 15ÂàÜ‰ª•ÂÜÖÁöÑ todo save time as config\n        accountId: this.userId\n    });\n});\n\n\nMeteor.publish(\"historyShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        status: 'done',\n        type:'register',\n        accountId: this.userId\n    });\n});\n\n//todo delete\nMeteor.publish(\"nowShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        type:'register',\n        status: {\n            $in: ['active', 'checking','applied']\n        },\n        accountId: this.userId\n    });\n});\n\n\nMeteor.publish(\"checkingShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n\n        $and: [\n            {\n                type:'register',\n                status: 'checking',\n                accountId: this.userId\n            },\n            {\n\n                \"$or\": [\n                    {\n                        checkoutType: 'pay-now',\n                        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}\n\n                    }, {\n                        checkoutType: 'pay-in-store',\n                        lastModified: {$gt: new Date(+new Date() - 24 * 60 * 60 * 1000)}\n\n                    }]\n            }\n        ]\n\n    });\n});\n\n\nMeteor.publish(\"allRegisterShoppingCart\", function () {\n    return DB.ShoppingCart.find({\n        type:'register',\n        //status: {\n        //    $in: ['checking']\n        //}\n    });\n});\n\n"]}},{"type":"js","data":"(function(){!function () {\n\n\n    var extraFileds = {\n        'profile': 1,\n        //'role': 1,\n        //'credits': 1,\n        'alterContact': 1,\n        'emergencyContact': 1,\n        // 'optInCheck': 1Ôºå\n        //'swimmers': 1\n    };\n\n    //todo remove\n    Meteor.publish(\"accounts\", function () {\n        return Meteor.users.find();\n    });\n\n\n    //publish account detail\n    Meteor.publish(\"accountCurrent\", function () {\n        var accountId = this.userId\n        return Meteor.users.find({_id: accountId}, {fields: extraFileds});\n    });\n\n\n    /*\n     * publish  [account detail] and [swimmers detail] and  [classes detail]\n     *\n     * publishÂçï‰∏™account‰∏ãÁöÑÊâÄÊúâswimmer ‰ª•ÂèäÊØè‰∏™swimmerÊâÄÈÄâËØæÁ®ãÁöÑËØ¶ÁªÜ‰ø°ÊÅØ\n     *\n     * */\n    //Meteor.publishComposite('accountWithSwimmersAndClasses', function(accountId) {\n    //    return {\n    //        find: function() {\n    //            return Meteor.users.find({_id:accountId}, {fields: extraFileds});\n    //        },\n    //        children: [\n    //            {\n    //                find: function(account) {  //ÊâÄÊúâswimmers\n    //\n    //                    console.log(account)\n    //\n    //                    return DB.Swimmers.find(\n    //                        { accountId: account._id });\n    //                },\n    //                children: [\n    //                    {\n    //                        find: function(swimmers, account) {//swimmersÂØπÂ∫îÁöÑclass\n    //\n    //                            console.log(swimmers)\n    //                            return DB.Classes.find(\n    //                                {\n    //                                    _id: { $in:swimmers.classes }\n    //\n    //                                });\n    //                        },\n    //                        children:[  //for test\n    //                            {\n    //                                find:function(classes, swimmers, account){\n    //\n    //                                    console.log(classes)\n    //\n    //                                }\n    //                            }\n    //\n    //                        ]\n    //                    }\n    //                ]\n    //            }\n    //        ]\n    //    }\n    //});\n    //\n\n    Meteor.publishComposite('accountWithSwimmersAndClasses', function () {\n\n        var accountId = this.userId\n\n        return {\n            find: function () {\n                return Meteor.users.find({_id: accountId}, {fields: extraFileds});\n            },\n            children: [\n                {\n                    find: function (account) {  //ÊâÄÊúâswimmers\n\n                        //console.log(account)\n\n                        return DB.Swimmers.find(\n                            {accountId: account._id});\n                    },\n                    children: [\n                        {\n                            find: function (swimmer, account) {//swimmersÂØπÂ∫îÁöÑclass id\n\n                                //console.log(swimmer)\n                                return DB.ClassesRegister.find(\n                                    {\n                                        swimmerId: swimmer._id\n\n                                    });\n                            },\n                            children: [\n                                {\n                                    find: function (classesRegister, swimmer, account) {//classÂØπÂ∫îÁöÑËØ¶ÁªÜ‰ø°ÊÅØ\n\n                                        //console.log(classesRegister)\n\n                                        return DB.Classes.find(\n                                            {\n                                                _id: classesRegister.classId\n\n                                            });\n                                    },\n                                    children: [\n                                        {\n                                            find: function (classDetail, classesRegister, swimmer, account) {//just for test\n\n                                                //console.log(classDetail)\n\n                                            }\n                                        }\n                                    ]\n\n\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    });\n\n\n}();\n\n\n\n\n\n\n\n}).call(this);\n","servePath":"/server/publish/accounts.js","sourceMap":{"version":3,"sources":["/server/publish/accounts.js"],"names":[],"mappings":"yfile":"/server/publish/accounts.js","sourcesContent":["!function () {\n\n\n    var extraFileds = {\n        'profile': 1,\n        //'role': 1,\n        //'credits': 1,\n        'alterContact': 1,\n        'emergencyContact': 1,\n        // 'optInCheck': 1Ôºå\n        //'swimmers': 1\n    };\n\n    //todo remove\n    Meteor.publish(\"accounts\", function () {\n        return Meteor.users.find();\n    });\n\n\n    //publish account detail\n    Meteor.publish(\"accountCurrent\", function () {\n        var accountId = this.userId\n        return Meteor.users.find({_id: accountId}, {fields: extraFileds});\n    });\n\n\n    /*\n     * publish  [account detail] and [swimmers detail] and  [classes detail]\n     *\n     * publishÂçï‰∏™account‰∏ãÁöÑÊâÄÊúâswimmer ‰ª•ÂèäÊØè‰∏™swimmerÊâÄÈÄâËØæÁ®ãÁöÑËØ¶ÁªÜ‰ø°ÊÅØ\n     *\n     * */\n    //Meteor.publishComposite('accountWithSwimmersAndClasses', function(accountId) {\n    //    return {\n    //        find: function() {\n    //            return Meteor.users.find({_id:accountId}, {fields: extraFileds});\n    //        },\n    //        children: [\n    //            {\n    //                find: function(account) {  //ÊâÄÊúâswimmers\n    //\n    //                    console.log(account)\n    //\n    //                    return DB.Swimmers.find(\n    //                        { accountId: account._id });\n    //                },\n    //                children: [\n    //                    {\n    //                        find: function(swimmers, account) {//swimmersÂØπÂ∫îÁöÑclass\n    //\n    //                            console.log(swimmers)\n    //                            return DB.Classes.find(\n    //                                {\n    //                                    _id: { $in:swimmers.classes }\n    //\n    //                                });\n    //                        },\n    //                        children:[  //for test\n    //                            {\n    //                                find:function(classes, swimmers, account){\n    //\n    //                                    console.log(classes)\n    //\n    //                                }\n    //                            }\n    //\n    //                        ]\n    //                    }\n    //                ]\n    //            }\n    //        ]\n    //    }\n    //});\n    //\n\n    Meteor.publishComposite('accountWithSwimmersAndClasses', function () {\n\n        var accountId = this.userId\n\n        return {\n            find: function () {\n                return Meteor.users.find({_id: accountId}, {fields: extraFileds});\n            },\n            children: [\n                {\n                    find: function (account) {  //ÊâÄÊúâswimmers\n\n                        //console.log(account)\n\n                        return DB.Swimmers.find(\n                            {accountId: account._id});\n                    },\n                    children: [\n                        {\n                            find: function (swimmer, account) {//swimmersÂØπÂ∫îÁöÑclass id\n\n                                //console.log(swimmer)\n                                return DB.ClassesRegister.find(\n                                    {\n                                        swimmerId: swimmer._id\n\n                                    });\n                            },\n                            children: [\n                                {\n                                    find: function (classesRegister, swimmer, account) {//classÂØπÂ∫îÁöÑËØ¶ÁªÜ‰ø°ÊÅØ\n\n                                        //console.log(classesRegister)\n\n                                        return DB.Classes.find(\n                                            {\n                                                _id: classesRegister.classId\n\n                                            });\n                                    },\n                                    children: [\n                                        {\n                                            find: function (classDetail, classesRegister, swimmer, account) {//just for test\n\n                                                //console.log(classDetail)\n\n                                            }\n                                        }\n                                    ]\n\n\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    });\n\n\n}();\n\n\n\n\n\n\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/15/15.\n */\n\n\nMeteor.publish(\"appInfo\", function () {\n    return DB.App.find();\n});\n}).call(this);\n","servePath":"/server/publish/app.js","sourceMap":{"version":3,"sources":["/server/publish/app.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/publish/app.js","sourcesContent":["/**\n * Created on 9/15/15.\n */\n\n\nMeteor.publish(\"appInfo\", function () {\n    return DB.App.find();\n});"]}},{"type":"js","data":"(function(){}).call(this);\n","servePath":"/server/publish/class.edit.js","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/server/publish/class.edit.js"}},{"type":"js","data":"(function(){\nMeteor.publish(\"classes\", function () {\n    return DB.Classes.find();\n});\n\n\nMeteor.publish(\"class\", function (id) {\n    return DB.Classes.find({_id: id});\n});\n}).call(this);\n","servePath":"/server/publish/classes.js","sourceMap":{"version":3,"sources":["/server/publish/classes.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/publish/classes.js","sourcesContent":["\nMeteor.publish(\"classes\", function () {\n    return DB.Classes.find();\n});\n\n\nMeteor.publish(\"class\", function (id) {\n    return DB.Classes.find({_id: id});\n});"]}},{"type":"js","data":"(function(){\n\nMeteor.publish(\"registerInfoBySwimmerId\", function (swimmerId) {\n    return DB.ClassesRegister.find({swimmerId: swimmerId});\n});\n\nMeteor.publish(\"registerInfoBySwimmerIds\", function (swimmers) {\n    return DB.ClassesRegister.find({swimmerId: {$in:swimmers}});\n});\n\nMeteor.publish(\"registerInfoByAccountId\", function (accountId) {\n    return DB.ClassesRegister.find({accountId: accountId});\n});\n\n\n\n//account==>swimmer==>classes\n\n\n}).call(this);\n","servePath":"/server/publish/classesRegister.js","sourceMap":{"version":3,"sources":["/server/publish/classesRegister.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/publish/classesRegister.js","sourcesContent":["\n\nMeteor.publish(\"registerInfoBySwimmerId\", function (swimmerId) {\n    return DB.ClassesRegister.find({swimmerId: swimmerId});\n});\n\nMeteor.publish(\"registerInfoBySwimmerIds\", function (swimmers) {\n    return DB.ClassesRegister.find({swimmerId: {$in:swimmers}});\n});\n\nMeteor.publish(\"registerInfoByAccountId\", function (accountId) {\n    return DB.ClassesRegister.find({accountId: accountId});\n});\n\n\n\n//account==>swimmer==>classes\n\n"]}},{"type":"js","data":"(function(){Meteor.publish(\"sessions\", function () {\n    return DB.Sessions.find();\n});\n}).call(this);\n","servePath":"/server/publish/sessions.js","sourceMap":{"version":3,"sources":["/server/publish/sessions.js"],"names":[],"mappings":"yBAAA;AACA;AACA,G","file":"/server/publish/sessions.js","sourcesContent":["Meteor.publish(\"sessions\", function () {\n    return DB.Sessions.find();\n});"]}},{"type":"js","data":"(function(){\n\nMeteor.publish(\"swimmers\", function () {\n    return DB.Swimmers.find();\n});\n\n\nMeteor.publish(\"swimmersByAccountId\", function (accountId) {\n    return DB.Swimmers.find({accountId:accountId});\n});\n\nMeteor.publish(\"swimmer\", function (swimmerId) {//\n    //Ê†πÊçÆËßíËâ≤Âà§Êñ≠ Ëã•ÊòØaccount‰ªÖÂèØÁúãÂà∞Ëá™Â∑±ÁöÑswimmer\n    //Ëã•ÊòØÁÆ°ÁêÜÂëòÂàôÊó†Ê≠§ÈôêÂà∂\n    return DB.Swimmers.find({_id:swimmerId});\n});\n\n\n}).call(this);\n","servePath":"/server/publish/swimmers.js","sourceMap":{"version":3,"sources":["/server/publish/swimmers.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/publish/swimmers.js","sourcesContent":["\n\nMeteor.publish(\"swimmers\", function () {\n    return DB.Swimmers.find();\n});\n\n\nMeteor.publish(\"swimmersByAccountId\", function (accountId) {\n    return DB.Swimmers.find({accountId:accountId});\n});\n\nMeteor.publish(\"swimmer\", function (swimmerId) {//\n    //Ê†πÊçÆËßíËâ≤Âà§Êñ≠ Ëã•ÊòØaccount‰ªÖÂèØÁúãÂà∞Ëá™Â∑±ÁöÑswimmer\n    //Ëã•ÊòØÁÆ°ÁêÜÂëòÂàôÊó†Ê≠§ÈôêÂà∂\n    return DB.Swimmers.find({_id:swimmerId});\n});\n\n"]}},{"type":"js","data":"(function(){!function(){\n\n\n    /*\n     * By default the server publishes username, emails, and profile (writable by user)\n     * */\n    var extraFileds = {\n        'profile':1,\n        'role':1,\n        'credits':1,\n        'alterContact':1,\n        'emergencyContact':1,\n        'swimmers': 1\n    };\n\n    ///////////////////////////////////////////////////////////////\n    //for testing\n    Meteor.publish(\"account1\", function () {\n        return Meteor.users.find({_id:'account1'}, {fields: extraFileds});\n    });\n    Meteor.publish(\"account2\", function () {\n        return Meteor.users.find({_id:'account2'}, {fields: extraFileds});\n    });\n    Meteor.publish(\"account100\", function () {\n        return Meteor.users.find({_id:'account100'}, {fields: extraFileds});\n    });\n\n    //swimmers\n\n\n\n    //classes\n\n\n}()\n}).call(this);\n","servePath":"/server/publish/test.js","sourceMap":{"version":3,"sources":["/server/publish/test.js"],"names":[],"mappings":"wBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/publish/test.js","sourcesContent":["!function(){\n\n\n    /*\n     * By default the server publishes username, emails, and profile (writable by user)\n     * */\n    var extraFileds = {\n        'profile':1,\n        'role':1,\n        'credits':1,\n        'alterContact':1,\n        'emergencyContact':1,\n        'swimmers': 1\n    };\n\n    ///////////////////////////////////////////////////////////////\n    //for testing\n    Meteor.publish(\"account1\", function () {\n        return Meteor.users.find({_id:'account1'}, {fields: extraFileds});\n    });\n    Meteor.publish(\"account2\", function () {\n        return Meteor.users.find({_id:'account2'}, {fields: extraFileds});\n    });\n    Meteor.publish(\"account100\", function () {\n        return Meteor.users.find({_id:'account100'}, {fields: extraFileds});\n    });\n\n    //swimmers\n\n\n\n    //classes\n\n\n}()"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n    Meteor.users.remove()\n\n\n    var accountsData = [\n        {_id: 'jliu@gmail.com', 'email': 'jliu@gmail.com', name: 'Alice Wu',location:'Fremont'},\n        {_id: 'jbhe@gmail.com', email: 'jbhe@gmail.com', name: 'Joe He',location:'Dublin'},\n        {_id: 'jandmfear@gmail.com', email: 'jandmfear@gmail.com', name: 'Josh Fear',location:'Fremont'},\n        {_id: 'dave_IrisRojan@gmail.com', email: 'dave_IrisRojan@gmail.com', name: 'David Rojan',location:'Dublin'}\n    ]\n\n    if (Meteor.users.find({}).count() === 0) {\n\n        accountsData.forEach(function (item, i, a) {\n            Meteor.users.insert({\n                _id: item._id,\n                emails: [\n                    {\n                        address: item.email,\n                        verified: false\n                    }\n                ],\n                profile: {\n                    name: item.name,\n                    location:item.location\n                },\n                role: 'role1',\n\n                //password\n                services: {\n                    \"password\": {//calphin\n                        \"bcrypt\": \"$2a$10$JxR7RAR6uHArlUx0CowVxO1nPUZIWSuS4Qxp/Cm9LNC73KzjQzjSm\"\n                    }\n                }\n            });\n\n        })\n\n    }\n\n\n    //if (Meteor.users.find({}).count() === 0) {\n    //\n    //    _(2).times(function (n) {\n    //\n    //        Meteor.users.insert({\n    //            _id: 'account' + (n + 1),\n    //            emails: [\n    //                {\n    //                    address: 'account_' + (n + 1) + '@gmail.com',\n    //                    verified: false\n    //                }\n    //            ],\n    //            profile: {\n    //                name: Fake.word()\n    //            },\n    //            role: 'role1'\n    //        });\n    //\n    //    });\n    //\n    //    Meteor.users.insert({  //account100 ÂàùÂßãÊó†swimmer\n    //        _id: 'account100',\n    //        emails: [\n    //            {\n    //                address: 'account_100@gmail.com',\n    //                verified: false\n    //            }\n    //        ],\n    //        profile: {\n    //            name: Fake.word()\n    //        }\n    //    });\n    //\n    //}\n});\n}).call(this);\n","servePath":"/server/seeds/account.js","sourceMap":{"version":3,"sources":["/server/seeds/account.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/seeds/account.js","sourcesContent":["Meteor.startup(function () {\n    Meteor.users.remove()\n\n\n    var accountsData = [\n        {_id: 'jliu@gmail.com', 'email': 'jliu@gmail.com', name: 'Alice Wu',location:'Fremont'},\n        {_id: 'jbhe@gmail.com', email: 'jbhe@gmail.com', name: 'Joe He',location:'Dublin'},\n        {_id: 'jandmfear@gmail.com', email: 'jandmfear@gmail.com', name: 'Josh Fear',location:'Fremont'},\n        {_id: 'dave_IrisRojan@gmail.com', email: 'dave_IrisRojan@gmail.com', name: 'David Rojan',location:'Dublin'}\n    ]\n\n    if (Meteor.users.find({}).count() === 0) {\n\n        accountsData.forEach(function (item, i, a) {\n            Meteor.users.insert({\n                _id: item._id,\n                emails: [\n                    {\n                        address: item.email,\n                        verified: false\n                    }\n                ],\n                profile: {\n                    name: item.name,\n                    location:item.location\n                },\n                role: 'role1',\n\n                //password\n                services: {\n                    \"password\": {//calphin\n                        \"bcrypt\": \"$2a$10$JxR7RAR6uHArlUx0CowVxO1nPUZIWSuS4Qxp/Cm9LNC73KzjQzjSm\"\n                    }\n                }\n            });\n\n        })\n\n    }\n\n\n    //if (Meteor.users.find({}).count() === 0) {\n    //\n    //    _(2).times(function (n) {\n    //\n    //        Meteor.users.insert({\n    //            _id: 'account' + (n + 1),\n    //            emails: [\n    //                {\n    //                    address: 'account_' + (n + 1) + '@gmail.com',\n    //                    verified: false\n    //                }\n    //            ],\n    //            profile: {\n    //                name: Fake.word()\n    //            },\n    //            role: 'role1'\n    //        });\n    //\n    //    });\n    //\n    //    Meteor.users.insert({  //account100 ÂàùÂßãÊó†swimmer\n    //        _id: 'account100',\n    //        emails: [\n    //            {\n    //                address: 'account_100@gmail.com',\n    //                verified: false\n    //            }\n    //        ],\n    //        profile: {\n    //            name: Fake.word()\n    //        }\n    //    });\n    //\n    //}\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 9/14/15.\n */\n\nMeteor.startup(function () {\n    DB.App.remove();\n\n    if (DB.App.find({}).count() === 0) {\n\n        DB.App.insert({\n            sessionNow: 'testSession2',\n            sessionRegister:'testSession3',\n            openRegister:true,\n\n\n            registerStage:1\n        })\n    }\n});\n}).call(this);\n","servePath":"/server/seeds/app.js","sourceMap":{"version":3,"sources":["/server/seeds/app.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/seeds/app.js","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\nMeteor.startup(function () {\n    DB.App.remove();\n\n    if (DB.App.find({}).count() === 0) {\n\n        DB.App.insert({\n            sessionNow: 'testSession2',\n            sessionRegister:'testSession3',\n            openRegister:true,\n\n\n            registerStage:1\n        })\n    }\n});"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n\tAccounts.emailTemplates.resetPassword.text = function (user, url) {\n\t    url = url.replace('#/', '');\n\t    return \" To reset your password, simply click the link below:\\n\\n\"\n\t       + url;\n  \t};\n  \tprocess.env.MAIL_URL = 'smtp://postmaster@sandbox581a4fe7e1b54295be84ebc6ec8d93ea.mailgun.org:f242abd434c83aa5ca5e17d83dbd4bd1@smtp.mailgun.org:587/'\n});\n\n}).call(this);\n","servePath":"/server/seeds/auth.js","sourceMap":{"version":3,"sources":["/server/seeds/auth.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/server/seeds/auth.js","sourcesContent":["Meteor.startup(function () {\n\tAccounts.emailTemplates.resetPassword.text = function (user, url) {\n\t    url = url.replace('#/', '');\n\t    return \" To reset your password, simply click the link below:\\n\\n\"\n\t       + url;\n  \t};\n  \tprocess.env.MAIL_URL = 'smtp://postmaster@sandbox581a4fe7e1b54295be84ebc6ec8d93ea.mailgun.org:f242abd434c83aa5ca5e17d83dbd4bd1@smtp.mailgun.org:587/'\n});\n"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n\n    DB.ClassesRegister.remove();\n\n    /*\n    * ‰∏ÄÂÖ±ÂàÜ‰∏â‰∏™session\n      session1 Â∑≤ËøáÂéª\n      ÂΩìÂâçÊ≠£Â§Ñ‰∫ésession2‰∏îÂ∑≤ÂÖ≥Èó≠Ê≥®ÂÜå\n      ÂºÄÊîæÊ≥®ÂÜåÁöÑÊòØ session3\n    *\n    * */\n\n    var classRegisterData=[\n\n\n        ////history\n        {\n            classId:'testSession1-MON3',\n            swimmerId:'jandmfear@gmail.com_Mia-Fear',\n            sessionId: 'testSession1',\n            accountId:'jandmfear@gmail.com'\n        },\n\n\n        /////////////////session2//////////////////////////////////////\n        //jliu@gmail.com\n        {\n            classId:'testSession2-MON14',\n            swimmerId:'jliu@gmail.com_Allen-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n        {\n            classId:'testSession2-WED14',\n            swimmerId:'jliu@gmail.com_Allen-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n        {\n            classId:'testSession2-MON17',\n            swimmerId:'jliu@gmail.com_Lily-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n\n        //jbhe@gmail.com\n        {\n            classId:'testSession2-MON17',\n            swimmerId:'jbhe@gmail.com_Angle-He',\n            sessionId: 'testSession2',\n            accountId:'jbhe@gmail.com'\n        },\n        {\n            classId:'testSession2-MON15',\n            swimmerId:'jbhe@gmail.com_Mattew-He',\n            sessionId: 'testSession2',\n            accountId:'jbhe@gmail.com'\n        },\n\n\n        //dave_IrisRojan@gmail.com\n        {\n            classId:'testSession2-MON19',\n            swimmerId:'dave_IrisRojan@gmail.com_Arush-Rojan',\n            sessionId: 'testSession2',\n            accountId:'dave_IrisRojan@gmail.com'\n\n        }\n    ];\n\n    if (DB.ClassesRegister.find({}).count() === 0) {\n        classRegisterData.forEach(function(item){\n\n            DB.ClassesRegister.insert({\n                classId: item.classId,\n                swimmerId: item.swimmerId,\n                accountId:item.accountId,\n                sessionId: item.sessionId,\n                cartId:'test_cart_1',\n\n                registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1*30))) //‰∏Ä‰∏™ÊúàÂâç\n            });\n\n        })\n    }\n\n        /*\n        *\n        * Ê≠§Ë°®‰ªÖÂ≠òÂÇ®Â∑≤Ê≥®ÂÜåÊàêÂäü(ÊîØ‰ªòËøá)ÁöÑÊï∞ÊçÆ\n        * */\n\n    if (DB.ClassesRegister.find({}).count() === 0) {\n\n        //\n        //DB.ClassesRegister.insert({\n        //    classId: 'class1',\n        //    swimmerId: 'swimmer1',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_1',\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1)))\n        //\n        //});\n        //DB.ClassesRegister.insert({\n        //    classId: 'class2',\n        //    swimmerId: 'swimmer1',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_1',\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * ( 1)))\n        //\n        //});\n        //\n        //DB.ClassesRegister.insert({\n        //    classId: 'class1',\n        //    swimmerId: 'swimmer2',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_2',\n        //\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (7)))\n        //\n        //});\n        //DB.ClassesRegister.insert({\n        //    classId: 'class2',\n        //    swimmerId: 'swimmer2',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_2',\n        //\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * ( 7)))\n        //\n        //});\n\n    }\n});\n}).call(this);\n","servePath":"/server/seeds/classRegister.js","sourceMap":{"version":3,"sources":["/server/seeds/classRegister.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/seeds/classRegister.js","sourcesContent":["Meteor.startup(function () {\n\n    DB.ClassesRegister.remove();\n\n    /*\n    * ‰∏ÄÂÖ±ÂàÜ‰∏â‰∏™session\n      session1 Â∑≤ËøáÂéª\n      ÂΩìÂâçÊ≠£Â§Ñ‰∫ésession2‰∏îÂ∑≤ÂÖ≥Èó≠Ê≥®ÂÜå\n      ÂºÄÊîæÊ≥®ÂÜåÁöÑÊòØ session3\n    *\n    * */\n\n    var classRegisterData=[\n\n\n        ////history\n        {\n            classId:'testSession1-MON3',\n            swimmerId:'jandmfear@gmail.com_Mia-Fear',\n            sessionId: 'testSession1',\n            accountId:'jandmfear@gmail.com'\n        },\n\n\n        /////////////////session2//////////////////////////////////////\n        //jliu@gmail.com\n        {\n            classId:'testSession2-MON14',\n            swimmerId:'jliu@gmail.com_Allen-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n        {\n            classId:'testSession2-WED14',\n            swimmerId:'jliu@gmail.com_Allen-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n        {\n            classId:'testSession2-MON17',\n            swimmerId:'jliu@gmail.com_Lily-Liu',\n            sessionId: 'testSession2',\n            accountId:'jliu@gmail.com'\n        },\n\n        //jbhe@gmail.com\n        {\n            classId:'testSession2-MON17',\n            swimmerId:'jbhe@gmail.com_Angle-He',\n            sessionId: 'testSession2',\n            accountId:'jbhe@gmail.com'\n        },\n        {\n            classId:'testSession2-MON15',\n            swimmerId:'jbhe@gmail.com_Mattew-He',\n            sessionId: 'testSession2',\n            accountId:'jbhe@gmail.com'\n        },\n\n\n        //dave_IrisRojan@gmail.com\n        {\n            classId:'testSession2-MON19',\n            swimmerId:'dave_IrisRojan@gmail.com_Arush-Rojan',\n            sessionId: 'testSession2',\n            accountId:'dave_IrisRojan@gmail.com'\n\n        }\n    ];\n\n    if (DB.ClassesRegister.find({}).count() === 0) {\n        classRegisterData.forEach(function(item){\n\n            DB.ClassesRegister.insert({\n                classId: item.classId,\n                swimmerId: item.swimmerId,\n                accountId:item.accountId,\n                sessionId: item.sessionId,\n                cartId:'test_cart_1',\n\n                registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1*30))) //‰∏Ä‰∏™ÊúàÂâç\n            });\n\n        })\n    }\n\n        /*\n        *\n        * Ê≠§Ë°®‰ªÖÂ≠òÂÇ®Â∑≤Ê≥®ÂÜåÊàêÂäü(ÊîØ‰ªòËøá)ÁöÑÊï∞ÊçÆ\n        * */\n\n    if (DB.ClassesRegister.find({}).count() === 0) {\n\n        //\n        //DB.ClassesRegister.insert({\n        //    classId: 'class1',\n        //    swimmerId: 'swimmer1',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_1',\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1)))\n        //\n        //});\n        //DB.ClassesRegister.insert({\n        //    classId: 'class2',\n        //    swimmerId: 'swimmer1',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_1',\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * ( 1)))\n        //\n        //});\n        //\n        //DB.ClassesRegister.insert({\n        //    classId: 'class1',\n        //    swimmerId: 'swimmer2',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_2',\n        //\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (7)))\n        //\n        //});\n        //DB.ClassesRegister.insert({\n        //    classId: 'class2',\n        //    swimmerId: 'swimmer2',\n        //    accountId:'account1',\n        //    sessionId: 'testSession2',\n        //    cartId:'test_cart_2',\n        //\n        //\n        //    registerDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * ( 7)))\n        //\n        //});\n\n    }\n});"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n  DB.Classes.remove()\n\n  if (DB.Classes.find({}).count() === 0) {\n\n    //////////////////////////////////\n    //ÊûÑÈÄ†session1ÁöÑclassÊï∞ÊçÆ\n\n    //DB.Classes.insert({\n    //    _id:  'class1',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class1',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('9:10'),\n    //    endTime:App.time2num('11:00'),\n    //\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: ['swimmer1','swimmer2']   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id: 'class2',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class2',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('14:10'),\n    //    endTime:App.time2num('16:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: ['swimmer1','swimmer2']\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id:  'class3',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class3',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('15:10'),\n    //    endTime:App.time2num('17:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n\n\n    ////////////////////////////////////////////\n    //ÊûÑÈÄ†session2ÁöÑclassÊï∞ÊçÆ\n    //session2 ÂíåsessionÁöÑclass‰∏ÄÊ†∑Êó∂ÊâçÂèØ‰ª•bookTheSameTime\n\n    //DB.Classes.insert({\n    //    _id:  'testSession2class1',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class1',\n    //\n    //    level: 'BUB III',\n    //    day:1,\n    //    startTime:App.time2num('9:10'),\n    //    endTime:App.time2num('11:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id: 'testSession2class2',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class2',\n    //\n    //    level: 'BUB III',\n    //    day:2,\n    //    startTime:App.time2num('14:10'),\n    //    endTime:App.time2num('16:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id:  'testSession2class3',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class3',\n    //\n    //    level: 'BUB III',\n    //    day:3,\n    //    startTime:App.time2num('15:10'),\n    //    endTime:App.time2num('17:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n\n    //var times=[\"10:00\",\"11:00\",\"13:00\",\"15:00\",\"17:00\"]\n    //var days=[1,2,3,4,5,6,7]\n    //var times = [\"15:00\"]\n    //var days = [1, 3]\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession1',\n    //        sessionId: 'testSession1',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        price: 100,\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n    //\n    //\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession2',\n    //        sessionId: 'testSession2',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        startDate: new Date(),\n    //        endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //        frequency: \"2/week\",\n    //        type: 'ss',\n    //        availableSeats: 10,\n    //        price: 100,\n    //        students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n    //\n    //\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession3',\n    //        sessionId: 'testSession3',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        startDate: new Date(),\n    //        endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //        frequency: \"2/week\",\n    //        type: 'ss',\n    //        availableSeats: 10,\n    //        price: 100,\n    //        students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n\n\n    //////////////////////////////////////////////\n    var classesDataArr = [\n\n      ///////////////////////‰ª•ÂâçÁöÑsession//////////////////\n      ['MON1', 'testSession1', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession1', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession1', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession1', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession1', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession1', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession1', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession1', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession1', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession1', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///////////////////////Ê≠£Âú®ËøõË°åÁöÑsession//////////////////\n      /////Âë®‰∏Ä\n      ['MON1', 'testSession2', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession2', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession2', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession2', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession2', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession2', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession2', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession2', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession2', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession2', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///Âë®‰∫å\n      ['TUE1', 'testSession2', 2, [\"BUB1\"], \"15:00\", \"15:30\", \"TUE-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['TUE2', 'testSession2', 2, [\"BUB1\"], \"15:30\", \"16:00pm\", \"TUE-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['TUE3', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"TUE-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['TUE4', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"TUE-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['TUE5', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"TUE-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['TUE6', 'testSession2', 2, [\"CRL1\"], \"16:00\", \"16:30\", \"TUE-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['TUE7', 'testSession2', 2, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"TUE-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['TUE8', 'testSession2', 2, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"TUE-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['TUE9', 'testSession2', 2, [\"GLD1\"], \"16:00\", \"16:45pm\", \"TUE-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['TUE10', 'testSession2', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"TUE-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['TUE11', 'testSession2', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"TUE-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['TUE12', 'testSession2', 2, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"TUE-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['TUE13', 'testSession2', 2, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"TUE-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['TUE14', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"TUE-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['TUE15', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"TUE-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['TUE16', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"TUE-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['TUE17', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"TUE-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['TUE18', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"TUE-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['TUE19', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"TUE-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ['WED1', 'testSession2', 3, [\"BUB1\"], \"15:00\", \"15:30\", \"WED-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['WED2', 'testSession2', 3, [\"BUB1\"], \"15:30\", \"16:00pm\", \"WED-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['WED3', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"WED-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['WED4', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"WED-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['WED5', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"WED-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['WED6', 'testSession2', 3, [\"CRL1\"], \"16:00\", \"16:30\", \"WED-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['WED7', 'testSession2', 3, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"WED-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['WED8', 'testSession2', 3, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"WED-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['WED9', 'testSession2', 3, [\"GLD1\"], \"16:00\", \"16:45pm\", \"WED-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['WED10', 'testSession2',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"WED-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['WED11', 'testSession2', 3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"WED-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['WED12', 'testSession2', 3, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"WED-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['WED13', 'testSession2', 3, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"WED-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['WED14', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"WED-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['WED15', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"WED-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['WED16', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"WED-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['WED17', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"WED-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['WED18', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"WED-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['WED19', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"WED-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n\n      ///////////////////////////Â∞ÜË¶ÅÊ≥®ÂÜåÁöÑsession///////////////////////////////\n      /////Âë®‰∏Ä\n      ['MON1', 'testSession3', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession3', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession3', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession3', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession3', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession3', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession3', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession3', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession3', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession3', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///Âë®‰∫å\n      ['TUE1', 'testSession3', 2, [\"BUB1\"], \"15:00\", \"15:30\", \"TUE-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['TUE2', 'testSession3', 2, [\"BUB1\"], \"15:30\", \"16:00pm\", \"TUE-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['TUE3', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"TUE-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['TUE4', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"TUE-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['TUE5', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"TUE-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['TUE6', 'testSession3', 2, [\"CRL1\"], \"16:00\", \"16:30\", \"TUE-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['TUE7', 'testSession3', 2, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"TUE-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['TUE8', 'testSession3', 2, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"TUE-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['TUE9', 'testSession3', 2, [\"GLD1\"], \"16:00\", \"16:45pm\", \"TUE-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['TUE10', 'testSession3',2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"TUE-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['TUE11', 'testSession3', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"TUE-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['TUE12', 'testSession3', 2, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"TUE-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['TUE13', 'testSession3', 2, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"TUE-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['TUE14', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"TUE-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['TUE15', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"TUE-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['TUE16', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"TUE-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['TUE17', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"TUE-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['TUE18', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"TUE-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['TUE19', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"TUE-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n\n      ///Âë®‰∫å\n      ['WED1', 'testSession3',3, [\"BUB1\"], \"15:00\", \"15:30\", \"WED-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['WED2', 'testSession3', 3, [\"BUB1\"], \"15:30\", \"16:00pm\", \"WED-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['WED3', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"WED-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['WED4', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"WED-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['WED5', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"WED-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['WED6', 'testSession3', 3, [\"CRL1\"], \"16:00\", \"16:30\", \"WED-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['WED7', 'testSession3', 3, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"WED-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['WED8', 'testSession3', 3, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"WED-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['WED9', 'testSession3', 3, [\"GLD1\"], \"16:00\", \"16:45pm\", \"WED-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['WED10', 'testSession3',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"WED-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['WED11', 'testSession3',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"WED-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['WED12', 'testSession3', 3, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"WED-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['WED13', 'testSession3', 3, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"WED-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['WED14', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"WED-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['WED15', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"WED-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['WED16', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"WED-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['WED17', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"WED-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['WED18', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"WED-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['WED19', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"WED-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n    ]\n\n\n\n    classesDataArr.forEach(function (item) {\n      DB.Classes.insert({\n        _id: item[1] +'-'+ item[0],\n        sessionId: item[1],\n        name: item[6],\n        levels: item[3],\n        day: item[2],\n        startTime: App.time2num(item[4]),\n        endTime: App.time2num(item[5]),\n\n        price: 100,\n        seatsTotal: 10,\n        seatsRemain: 10\n\n      })\n\n    })\n\n\n\n  }\n});\n}).call(this);\n","servePath":"/server/seeds/classes.js","sourceMap":{"version":3,"sources":["/server/seeds/classes.js"],"names":[],"mappings":"yfile":"/server/seeds/classes.js","sourcesContent":["Meteor.startup(function () {\n  DB.Classes.remove()\n\n  if (DB.Classes.find({}).count() === 0) {\n\n    //////////////////////////////////\n    //ÊûÑÈÄ†session1ÁöÑclassÊï∞ÊçÆ\n\n    //DB.Classes.insert({\n    //    _id:  'class1',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class1',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('9:10'),\n    //    endTime:App.time2num('11:00'),\n    //\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: ['swimmer1','swimmer2']   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id: 'class2',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class2',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('14:10'),\n    //    endTime:App.time2num('16:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: ['swimmer1','swimmer2']\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id:  'class3',\n    //    sessionId: 'testSession2',\n    //    name: '' + 'class3',\n    //\n    //    level: 'BUB I',\n    //    day:1,\n    //    startTime:App.time2num('15:10'),\n    //    endTime:App.time2num('17:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n\n\n    ////////////////////////////////////////////\n    //ÊûÑÈÄ†session2ÁöÑclassÊï∞ÊçÆ\n    //session2 ÂíåsessionÁöÑclass‰∏ÄÊ†∑Êó∂ÊâçÂèØ‰ª•bookTheSameTime\n\n    //DB.Classes.insert({\n    //    _id:  'testSession2class1',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class1',\n    //\n    //    level: 'BUB III',\n    //    day:1,\n    //    startTime:App.time2num('9:10'),\n    //    endTime:App.time2num('11:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id: 'testSession2class2',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class2',\n    //\n    //    level: 'BUB III',\n    //    day:2,\n    //    startTime:App.time2num('14:10'),\n    //    endTime:App.time2num('16:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []\n    //});\n    //\n    //DB.Classes.insert({\n    //    _id:  'testSession2class3',\n    //    sessionId: 'testSession2',\n    //    name: 'testSession2' + 'class3',\n    //\n    //    level: 'BUB III',\n    //    day:3,\n    //    startTime:App.time2num('15:10'),\n    //    endTime:App.time2num('17:00'),\n    //\n    //    seatsTotal:10,\n    //    seatsRemain:10,\n    //\n    //    startDate: new Date(),\n    //    endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //    frequency: \"2/week\",\n    //    type: 'ss',\n    //    availableSeats: 10,\n    //    price: 100,\n    //    students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //});\n\n    //var times=[\"10:00\",\"11:00\",\"13:00\",\"15:00\",\"17:00\"]\n    //var days=[1,2,3,4,5,6,7]\n    //var times = [\"15:00\"]\n    //var days = [1, 3]\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession1',\n    //        sessionId: 'testSession1',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        price: 100,\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n    //\n    //\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession2',\n    //        sessionId: 'testSession2',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        startDate: new Date(),\n    //        endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //        frequency: \"2/week\",\n    //        type: 'ss',\n    //        availableSeats: 10,\n    //        price: 100,\n    //        students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n    //\n    //\n    //App.Config.classLevels.forEach(function (level, i, o) {\n    //  days.forEach(function (day, i, o) {\n    //    times.forEach(function (time, i, o) {\n    //      DB.Classes.insert({\n    //        _id: day + \"_\" + level + \"_\" + time.replace(':', \"_\") + '_testSession3',\n    //        sessionId: 'testSession3',\n    //        name: day + \"_\" + level + \"_\" + time,\n    //\n    //        level: level,\n    //        day: day,\n    //        startTime: App.time2num(time),\n    //        endTime: App.time2num(time) + 30 * 60 * 1000,  //30minutes\n    //\n    //        seatsTotal: 10,\n    //        seatsRemain: 10,\n    //\n    //        startDate: new Date(),\n    //        endDate: new Date(+new Date() + (1000 * 60 * 60 * 24 * 90  )),//90Â§©ÂêéÁªìÊùü\n    //        frequency: \"2/week\",\n    //        type: 'ss',\n    //        availableSeats: 10,\n    //        price: 100,\n    //        students: []   //swimmer1Â∑≤ÈÄâ‚Äòclass1‚Äô\n    //      });\n    //\n    //    })\n    //  })\n    //\n    //})\n\n\n    //////////////////////////////////////////////\n    var classesDataArr = [\n\n      ///////////////////////‰ª•ÂâçÁöÑsession//////////////////\n      ['MON1', 'testSession1', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession1', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession1', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession1', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession1', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession1', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession1', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession1', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession1', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession1', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession1', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession1', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession1', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///////////////////////Ê≠£Âú®ËøõË°åÁöÑsession//////////////////\n      /////Âë®‰∏Ä\n      ['MON1', 'testSession2', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession2', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession2', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession2', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession2', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession2', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession2', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession2', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession2', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession2', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession2', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession2', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession2', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///Âë®‰∫å\n      ['TUE1', 'testSession2', 2, [\"BUB1\"], \"15:00\", \"15:30\", \"TUE-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['TUE2', 'testSession2', 2, [\"BUB1\"], \"15:30\", \"16:00pm\", \"TUE-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['TUE3', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"TUE-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['TUE4', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"TUE-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['TUE5', 'testSession2', 2, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"TUE-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['TUE6', 'testSession2', 2, [\"CRL1\"], \"16:00\", \"16:30\", \"TUE-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['TUE7', 'testSession2', 2, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"TUE-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['TUE8', 'testSession2', 2, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"TUE-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['TUE9', 'testSession2', 2, [\"GLD1\"], \"16:00\", \"16:45pm\", \"TUE-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['TUE10', 'testSession2', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"TUE-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['TUE11', 'testSession2', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"TUE-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['TUE12', 'testSession2', 2, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"TUE-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['TUE13', 'testSession2', 2, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"TUE-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['TUE14', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"TUE-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['TUE15', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"TUE-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['TUE16', 'testSession2', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"TUE-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['TUE17', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"TUE-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['TUE18', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"TUE-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['TUE19', 'testSession2', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"TUE-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ['WED1', 'testSession2', 3, [\"BUB1\"], \"15:00\", \"15:30\", \"WED-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['WED2', 'testSession2', 3, [\"BUB1\"], \"15:30\", \"16:00pm\", \"WED-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['WED3', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"WED-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['WED4', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"WED-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['WED5', 'testSession2', 3, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"WED-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['WED6', 'testSession2', 3, [\"CRL1\"], \"16:00\", \"16:30\", \"WED-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['WED7', 'testSession2', 3, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"WED-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['WED8', 'testSession2', 3, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"WED-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['WED9', 'testSession2', 3, [\"GLD1\"], \"16:00\", \"16:45pm\", \"WED-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['WED10', 'testSession2',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"WED-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['WED11', 'testSession2', 3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"WED-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['WED12', 'testSession2', 3, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"WED-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['WED13', 'testSession2', 3, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"WED-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['WED14', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"WED-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['WED15', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"WED-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['WED16', 'testSession2', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"WED-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['WED17', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"WED-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['WED18', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"WED-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['WED19', 'testSession2', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"WED-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n\n      ///////////////////////////Â∞ÜË¶ÅÊ≥®ÂÜåÁöÑsession///////////////////////////////\n      /////Âë®‰∏Ä\n      ['MON1', 'testSession3', 1, [\"BUB1\"], \"15:00\", \"15:30\", \"MON-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['MON2', 'testSession3', 1, [\"BUB1\"], \"15:30\", \"16:00pm\", \"MON-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['MON3', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"MON-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['MON4', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"MON-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['MON5', 'testSession3', 1, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"MON-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['MON6', 'testSession3', 1, [\"CRL1\"], \"16:00\", \"16:30\", \"MON-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['MON7', 'testSession3', 1, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"MON-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['MON8', 'testSession3', 1, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"MON-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['MON9', 'testSession3', 1, [\"GLD1\"], \"16:00\", \"16:45pm\", \"MON-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['MON10', 'testSession3', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"MON-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['MON11', 'testSession3', 1, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"MON-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['MON12', 'testSession3', 1, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"MON-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['MON13', 'testSession3', 1, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"MON-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['MON14', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"MON-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['MON15', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"MON-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['MON16', 'testSession3', 1, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"MON-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['MON17', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"MON-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['MON18', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"MON-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['MON19', 'testSession3', 1, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"MON-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n      ///Âë®‰∫å\n      ['TUE1', 'testSession3', 2, [\"BUB1\"], \"15:00\", \"15:30\", \"TUE-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['TUE2', 'testSession3', 2, [\"BUB1\"], \"15:30\", \"16:00pm\", \"TUE-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['TUE3', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"TUE-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['TUE4', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"TUE-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['TUE5', 'testSession3', 2, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"TUE-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['TUE6', 'testSession3', 2, [\"CRL1\"], \"16:00\", \"16:30\", \"TUE-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['TUE7', 'testSession3', 2, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"TUE-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['TUE8', 'testSession3', 2, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"TUE-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['TUE9', 'testSession3', 2, [\"GLD1\"], \"16:00\", \"16:45pm\", \"TUE-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['TUE10', 'testSession3',2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"TUE-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['TUE11', 'testSession3', 2, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"TUE-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['TUE12', 'testSession3', 2, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"TUE-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['TUE13', 'testSession3', 2, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"TUE-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['TUE14', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"TUE-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['TUE15', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"TUE-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['TUE16', 'testSession3', 2, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"TUE-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['TUE17', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"TUE-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['TUE18', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"TUE-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['TUE19', 'testSession3', 2, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"TUE-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n\n      ///Âë®‰∫å\n      ['WED1', 'testSession3',3, [\"BUB1\"], \"15:00\", \"15:30\", \"WED-BUB1 3:00-3:30pm\", \"Betsy\", \"S\"],\n      ['WED2', 'testSession3', 3, [\"BUB1\"], \"15:30\", \"16:00pm\", \"WED-BUB1 3:30-4:00pm\", \"Betsy\", \"S\"],\n      ['WED3', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"15:00\", \"15:30\", \"WED-BUB 2,3 3:00-3:30pm\", \"Gabriela\", \"S\"],\n      ['WED4', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"15:30\", \"4:00\", \"WED-BUB 2, 3 3:30-4:00pm\", \"Gabriela\", \"S\"],\n      ['WED5', 'testSession3', 3, [\"BUB2\", \"BUB3\"], \"16:00\", \"16:30\", \"WED-BUB 2, 3 4:00-4:30pm\", \"Charlie\", \"S\"],\n      ['WED6', 'testSession3', 3, [\"CRL1\"], \"16:00\", \"16:30\", \"WED-CRL1 4:00-4:30pm\", \"Leslie\", \"S\"],\n      ['WED7', 'testSession3', 3, [\"CRL2\", \"CRL3\"], \"16:00\", \"16:30\", \"WED-CRL 2, 3 4:00-4:30pm\", \"Erica\", \"S\"],\n      ['WED8', 'testSession3', 3, [\"CRL2\", \"CRL3\"], \"16:45\", \"17:15\", \"WED-CRL 2, 3 4:45-5:15pm\", \"Erica\", \"S\"],\n      ['WED9', 'testSession3', 3, [\"GLD1\"], \"16:00\", \"16:45pm\", \"WED-GLD1 4:00-4:45pm\", \"Drishtee\", \"L\"],\n      ['WED10', 'testSession3',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"16:00\", \"16:45\", \"WED-GLD1,2,3 4:00-4:45pm\", \"Betsy\", \"L\"],\n      ['WED11', 'testSession3',3, [\"GLD1\",\"GLD2\",\"GLD3\"], \"19:15\", \"20:00\", \"WED-GLD1,2,3 7:15-8:00pm\", \"Gabriela\", \"L\"],\n      ['WED12', 'testSession3', 3, [\"GLD2\", \"GLD3\"], \"17:30\", \"18:15\", \"WED-GLD 2, 3 5:30-6:15pm\", \"Charlie\", \"L\"],\n      ['WED13', 'testSession3', 3, [\"GLD2\", \"GLD3\"], \"18:30\", \"19:15\", \"WED-GLD 2, 3 6:30-7:15pm\", \"Charlie\", \"L\"],\n      ['WED14', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"15:45\", \"16:45\", \"WED-SPR/RCR 3:45-4:45pm\", \"Nicholas\", \"L\"],\n      ['WED15', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"17:00\", \"18:00\", \"WED-SPR/RCR 5:00-6:00pm\", \"Nicholas\", \"L\"],\n      ['WED16', 'testSession3', 3, [\"SPR1\", \"SPR2\", \"SPR3\", \"RCR1\", \"RCR2\", \"RCR3\"], \"18:00\", \"19:00\", \"WED-SPR/RCR 6:00-7:00pm\", \"Nicholas\", \"L\"],\n      ['WED17', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"15:45\", \"16:45\", \"WED-CHL/MST 3:45-4:45pm\", \"Jimmy\", \"L\"],\n      ['WED18', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"17:00\", \"18:00\", \"WED-CHL/MST 5:00-6:00pm\", \"Jimmy\", \"L\"],\n      ['WED19', 'testSession3', 3, [\"CHL1\", \"CHL2\", \"CHL3\", \"MST1\", \"MST2\", \"MST3\"], \"18:00\", \"19:00\", \"WED-CHL/MST 6:00-7:00pm\", \"Jimmy\", \"L\"],\n\n    ]\n\n\n\n    classesDataArr.forEach(function (item) {\n      DB.Classes.insert({\n        _id: item[1] +'-'+ item[0],\n        sessionId: item[1],\n        name: item[6],\n        levels: item[3],\n        day: item[2],\n        startTime: App.time2num(item[4]),\n        endTime: App.time2num(item[5]),\n\n        price: 100,\n        seatsTotal: 10,\n        seatsRemain: 10\n\n      })\n\n    })\n\n\n\n  }\n});"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n    DB.Sessions.remove();\n\n\n    if (DB.Sessions.find({}).count() === 0) {\n\n\n        //ÂΩìÂâçsession\n        DB.Sessions.insert({\n            _id: 'testSession1' ,\n            name: 'testSession1',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (150 * 7 + 1))),\n            startDate:new Date(+new Date() - (1000 * 60 * 60 * 24 * (120 * 7 + 1))),\n\n        });\n\n\n        //////////session coming\n        //Êò®Â§©ÂºÄÂßãÊ≥®ÂÜå ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨1Èò∂ÊÆµ bookTheSameTime\n        //session ÂºÄÂßãÊó∂Èó¥ÂÆö‰πâ‰∏∫ 4Âë®Âç≥28Â§©‰πãÂêé\n        DB.Sessions.insert({\n            _id: 'testSession2' ,\n            name: 'testSession2',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (0 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (0 * 7 + 1-28)))\n\n\n        });\n\n        //7Â§©ÂâçÂºÄÂßãÊ≥®ÂÜå ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨2Èò∂ÊÆµ\n        DB.Sessions.insert({\n            _id: 'testSession3' ,\n            name: 'testSession3',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1 * 7 + 1-28)))\n\n        });\n\n        //ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨3Èò∂ÊÆµ\n        DB.Sessions.insert({\n            _id: 'testSession4' ,\n            name: 'testSession4',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (2 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (2 * 7 + 1-28)))\n\n\n        });\n\n        //ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨4Èò∂ÊÆµ  ÂÖ®Èù¢ÂºÄÊîæ\n        DB.Sessions.insert({\n            _id: 'testSession5' ,\n            name: 'testSession5',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (3 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (3 * 7 + 1-28))),\n\n\n        });\n    }\n});\n}).call(this);\n","servePath":"/server/seeds/sessions.js","sourceMap":{"version":3,"sources":["/server/seeds/sessions.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/seeds/sessions.js","sourcesContent":["Meteor.startup(function () {\n    DB.Sessions.remove();\n\n\n    if (DB.Sessions.find({}).count() === 0) {\n\n\n        //ÂΩìÂâçsession\n        DB.Sessions.insert({\n            _id: 'testSession1' ,\n            name: 'testSession1',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (150 * 7 + 1))),\n            startDate:new Date(+new Date() - (1000 * 60 * 60 * 24 * (120 * 7 + 1))),\n\n        });\n\n\n        //////////session coming\n        //Êò®Â§©ÂºÄÂßãÊ≥®ÂÜå ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨1Èò∂ÊÆµ bookTheSameTime\n        //session ÂºÄÂßãÊó∂Èó¥ÂÆö‰πâ‰∏∫ 4Âë®Âç≥28Â§©‰πãÂêé\n        DB.Sessions.insert({\n            _id: 'testSession2' ,\n            name: 'testSession2',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (0 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (0 * 7 + 1-28)))\n\n\n        });\n\n        //7Â§©ÂâçÂºÄÂßãÊ≥®ÂÜå ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨2Èò∂ÊÆµ\n        DB.Sessions.insert({\n            _id: 'testSession3' ,\n            name: 'testSession3',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (1 * 7 + 1-28)))\n\n        });\n\n        //ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨3Èò∂ÊÆµ\n        DB.Sessions.insert({\n            _id: 'testSession4' ,\n            name: 'testSession4',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (2 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (2 * 7 + 1-28)))\n\n\n        });\n\n        //ÁõÆÂâçÂ§Ñ‰∫éÁ¨¨4Èò∂ÊÆµ  ÂÖ®Èù¢ÂºÄÊîæ\n        DB.Sessions.insert({\n            _id: 'testSession5' ,\n            name: 'testSession5',\n            // Ê®°Êãü4‰∏™‰∏çÂêåÁöÑÊ≥®ÂÜåÊó∂Èó¥\n            registerStartDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (3 * 7 + 1))),\n            startDate: new Date(+new Date() - (1000 * 60 * 60 * 24 * (3 * 7 + 1-28))),\n\n\n        });\n    }\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 9/23/15.\n */\n\nMeteor.startup(function () {\n    DB.ShoppingCart.remove();\n\n    if (DB.ShoppingCart.find({}).count() === 0) {\n\n        DB.ShoppingCart.insert({\n            _id:'test_cart_1',\n            sessionId:'testSession2',\n            accountId:'account1',\n            status:'done',\n            lastModified:new Date(),\n            checkoutType:'pay-now',\n\n            items:[\n                {\n                    type:'add',\n                    swimmerId:'swimmer1',\n                    classId:'class1',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n                {\n                    type:'add',\n                    swimmerId:'swimmer1',\n                    classId:'class2',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                }\n            ]\n        })\n\n\n        DB.ShoppingCart.insert({\n            _id:'test_cart_2',\n            sessionId:'testSession2',\n            accountId:'account1',\n            status:'done',\n            lastModified:new Date(),\n            checkoutType:'pay-now',\n\n            items:[\n                {\n                    type:'add',\n                    swimmerId:'swimmer2',\n                    classId:'class1',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n                {\n                    type:'add',\n                    swimmerId:'swimmer2',\n                    classId:'class2',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n            ]\n        })\n\n\n\n    }\n});\n}).call(this);\n","servePath":"/server/seeds/shoppingCarts.js","sourceMap":{"version":3,"sources":["/server/seeds/shoppingCarts.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/server/seeds/shoppingCarts.js","sourcesContent":["/**\n * Created on 9/23/15.\n */\n\nMeteor.startup(function () {\n    DB.ShoppingCart.remove();\n\n    if (DB.ShoppingCart.find({}).count() === 0) {\n\n        DB.ShoppingCart.insert({\n            _id:'test_cart_1',\n            sessionId:'testSession2',\n            accountId:'account1',\n            status:'done',\n            lastModified:new Date(),\n            checkoutType:'pay-now',\n\n            items:[\n                {\n                    type:'add',\n                    swimmerId:'swimmer1',\n                    classId:'class1',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n                {\n                    type:'add',\n                    swimmerId:'swimmer1',\n                    classId:'class2',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                }\n            ]\n        })\n\n\n        DB.ShoppingCart.insert({\n            _id:'test_cart_2',\n            sessionId:'testSession2',\n            accountId:'account1',\n            status:'done',\n            lastModified:new Date(),\n            checkoutType:'pay-now',\n\n            items:[\n                {\n                    type:'add',\n                    swimmerId:'swimmer2',\n                    classId:'class1',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n                {\n                    type:'add',\n                    swimmerId:'swimmer2',\n                    classId:'class2',\n                    quantity:1,\n                    swimmer:{},\n                    class1:{},\n                    class2:{},\n                    class3:{}\n\n                },\n            ]\n        })\n\n\n\n    }\n});"]}},{"type":"js","data":"(function(){Meteor.startup(function () {\n    DB.Swimmers.remove()\n\n\n    var swimmersData=[\n\n        //====\n        {Student_Name:'Allen Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"SPR1\",Gender:'M',DOB:'8/3/06','Status':\"\" ,\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Allen-Liu'\n        },\n        {Student_Name:'Daniel Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"CRL1\",Gender:'M',DOB:'4/13/09','Status':'',\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Daniel-Liu'\n        },\n        {Student_Name:'Lily Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"CHL2\",Gender:'F',DOB:'4/8/03','Status':\"\",\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Lily-Liu'\n        },\n\n        //========\n        {Student_Name:'Angle He',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jbhe@gmail.com',Class_Level:\"MST1\",Gender:'',DOB:'','Status':\"\",\n            accountId:'jbhe@gmail.com',location:'Dublin',\n            _id:'jbhe@gmail.com_Angle-He'\n        },\n        {Student_Name:'Mattew He',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jbhe@gmail.com',Class_Level:\"RCR3\",Gender:'',DOB:'','Status':'',\n            accountId:'jbhe@gmail.com',location:'Dublin',\n            _id:'jbhe@gmail.com_Mattew-He'\n        },\n\n        //=========\n        {Student_Name:'Mia Fear',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jandmfear@gmail.com',Class_Level:\"BUB3\",Gender:'',DOB:'','Status':'',\n            accountId:'jandmfear@gmail.com',location:'Fremont',\n            _id:'jandmfear@gmail.com_Mia-Fear'\n        },\n        {Student_Name:'David Fear',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jandmfear@gmail.com',Class_Level:\"SPR3\",Gender:'',DOB:'','Status':'',\n            accountId:'jandmfear@gmail.com',location:'Fremont',\n            _id:'jandmfear@gmail.com_David-Fear'\n        },\n\n        //==========\n        {Student_Name:'Arush Rojan',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'dave_IrisRojan@gmail.com',Class_Level:\"CRL1\",Gender:'',DOB:'','Status':'',\n            accountId:'dave_IrisRojan@gmail.com',location:'Dublin',\n            _id:'dave_IrisRojan@gmail.com_Arush-Rojan'\n        }\n\n    ]\n\n    if (DB.Swimmers.find({}).count() === 0) {\n        swimmersData.forEach(function(item){\n            DB.Swimmers.insert({  //account1 Á¨¨1‰∏™Â≠©Â≠ê\n                _id:item._id,\n                name: item.Student_Name,\n                accountId: item.accountId,\n                location:item.location,\n                level:item.Class_Level\n\n            });\n        })\n    }\n\n    /*\n        * todo swimmers\n        *\n        * ÂéªÂπ¥Êä•ËøáÂêçÁöÑ\n        * swimmerÁöÑ‰∫≤ÊàöÔºå‰ΩÜÊú™Êä•ËøáÂêç\n        * Ê≠£Âú®ÂèÇÂä†ÁöÑ\n        *\n        * */\n    //if (DB.Swimmers.find({}).count() === 0) {\n    //\n    //    DB.Swimmers.insert({  //account1 Á¨¨1‰∏™Â≠©Â≠ê\n    //        _id:'swimmer1',//swimmer1\n    //        name: 'swimmer1',\n    //        accountId: 'account1',\n    //        location:'Fremont',\n    //        level:'BUB I'\n    //\n    //    });\n    //\n    //    DB.Swimmers.insert({  //account1 Á¨¨2‰∏™Â≠©Â≠ê\n    //        _id:'swimmer2',// swimmer2\n    //        name: 'swimmer2',\n    //        accountId: 'account1',\n    //        location:'Fremont',\n    //        level:'BUB I'\n    //\n    //    });\n    //\n    //    //account2 Êúâ‰∏§‰∏™Â≠©Â≠ê\n    //    _(2).times(function(n){\n    //        DB.Swimmers.insert({\n    //            _id:'swimmer'+(2+n+1), //swimmer3 swimmer4\n    //            name: 'swimmer'+(2+n+1),\n    //            accountId: 'account2',\n    //            location:'Fremont',\n    //            level:'BUB III'\n    //\n    //        });\n    //    });\n    //}\n\n});\n}).call(this);\n","servePath":"/server/seeds/swimmer.js","sourceMap":{"version":3,"sources":["/server/seeds/swimmer.js"],"names":[],"mappings":"yfile":"/server/seeds/swimmer.js","sourcesContent":["Meteor.startup(function () {\n    DB.Swimmers.remove()\n\n\n    var swimmersData=[\n\n        //====\n        {Student_Name:'Allen Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"SPR1\",Gender:'M',DOB:'8/3/06','Status':\"\" ,\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Allen-Liu'\n        },\n        {Student_Name:'Daniel Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"CRL1\",Gender:'M',DOB:'4/13/09','Status':'',\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Daniel-Liu'\n        },\n        {Student_Name:'Lily Liu',Primary_Guardia:'John Liu',Secondary_Guardia:'Alice Wu',Primary_Phon:'510-234-5678',\n            Email:'jliu@gmail.com',Class_Level:\"CHL2\",Gender:'F',DOB:'4/8/03','Status':\"\",\n            accountId:'jliu@gmail.com',location:'Fremont',\n            _id:'jliu@gmail.com_Lily-Liu'\n        },\n\n        //========\n        {Student_Name:'Angle He',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jbhe@gmail.com',Class_Level:\"MST1\",Gender:'',DOB:'','Status':\"\",\n            accountId:'jbhe@gmail.com',location:'Dublin',\n            _id:'jbhe@gmail.com_Angle-He'\n        },\n        {Student_Name:'Mattew He',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jbhe@gmail.com',Class_Level:\"RCR3\",Gender:'',DOB:'','Status':'',\n            accountId:'jbhe@gmail.com',location:'Dublin',\n            _id:'jbhe@gmail.com_Mattew-He'\n        },\n\n        //=========\n        {Student_Name:'Mia Fear',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jandmfear@gmail.com',Class_Level:\"BUB3\",Gender:'',DOB:'','Status':'',\n            accountId:'jandmfear@gmail.com',location:'Fremont',\n            _id:'jandmfear@gmail.com_Mia-Fear'\n        },\n        {Student_Name:'David Fear',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'jandmfear@gmail.com',Class_Level:\"SPR3\",Gender:'',DOB:'','Status':'',\n            accountId:'jandmfear@gmail.com',location:'Fremont',\n            _id:'jandmfear@gmail.com_David-Fear'\n        },\n\n        //==========\n        {Student_Name:'Arush Rojan',Primary_Guardia:'',Secondary_Guardia:'',Primary_Phon:'',\n            Email:'dave_IrisRojan@gmail.com',Class_Level:\"CRL1\",Gender:'',DOB:'','Status':'',\n            accountId:'dave_IrisRojan@gmail.com',location:'Dublin',\n            _id:'dave_IrisRojan@gmail.com_Arush-Rojan'\n        }\n\n    ]\n\n    if (DB.Swimmers.find({}).count() === 0) {\n        swimmersData.forEach(function(item){\n            DB.Swimmers.insert({  //account1 Á¨¨1‰∏™Â≠©Â≠ê\n                _id:item._id,\n                name: item.Student_Name,\n                accountId: item.accountId,\n                location:item.location,\n                level:item.Class_Level\n\n            });\n        })\n    }\n\n    /*\n        * todo swimmers\n        *\n        * ÂéªÂπ¥Êä•ËøáÂêçÁöÑ\n        * swimmerÁöÑ‰∫≤ÊàöÔºå‰ΩÜÊú™Êä•ËøáÂêç\n        * Ê≠£Âú®ÂèÇÂä†ÁöÑ\n        *\n        * */\n    //if (DB.Swimmers.find({}).count() === 0) {\n    //\n    //    DB.Swimmers.insert({  //account1 Á¨¨1‰∏™Â≠©Â≠ê\n    //        _id:'swimmer1',//swimmer1\n    //        name: 'swimmer1',\n    //        accountId: 'account1',\n    //        location:'Fremont',\n    //        level:'BUB I'\n    //\n    //    });\n    //\n    //    DB.Swimmers.insert({  //account1 Á¨¨2‰∏™Â≠©Â≠ê\n    //        _id:'swimmer2',// swimmer2\n    //        name: 'swimmer2',\n    //        accountId: 'account1',\n    //        location:'Fremont',\n    //        level:'BUB I'\n    //\n    //    });\n    //\n    //    //account2 Êúâ‰∏§‰∏™Â≠©Â≠ê\n    //    _(2).times(function(n){\n    //        DB.Swimmers.insert({\n    //            _id:'swimmer'+(2+n+1), //swimmer3 swimmer4\n    //            name: 'swimmer'+(2+n+1),\n    //            accountId: 'account2',\n    //            location:'Fremont',\n    //            level:'BUB III'\n    //\n    //        });\n    //    });\n    //}\n\n});"]}},{"type":"js","data":"(function(){/**\n * Created on 9/20/15.\n */\n\n\n\n//Todo using linux crontab for performance reason?\nMeteor.startup(function () {\n\n    //Ê†áËÆ∞ËøáÊúüË¥≠Áâ©ËΩ¶\n    function changeStaus() {\n\n        //ËÆæÁΩÆactive‰∏∫ expired\n        DB.ShoppingCart.update({\n            // 15ÂàÜ‰ª•ÂÜÖÁöÑ todo save time as config value\n            lastModified: {$lt: new Date(+new Date() - 15 * 60 * 1000)},\n            status: 'active'\n        }, {\n            $set: {\n                status: 'expiring'\n            }\n        }, {\n            multi: true\n        });\n    }\n\n    //expiring Ë¥≠Áâ©ËΩ¶ÁöÑÂ§ÑÁêÜ  Á°Æ‰øùÊ≠§ËøáÁ®ãÂèçÂ§çÊâßË°åÁªìÊûú‰∏çÂèò\n    function clearShoppingCart() {\n\n        var carts = DB.ShoppingCart.find({\n            status: 'expiring'\n        })\n\n        //ÊÅ¢Â§çclassÂèØÁî®Êï∞Èáè\n        carts.forEach(function (cart, i, a) {\n\n            var item = cart.items //Ëé∑ÂèñË¥≠Áâ©ËΩ¶ÁöÑË¥≠Áâ©È°π\n\n\n            var result;\n            var hasError = false;\n            cart.items.forEach(function (item, i_items, a_items) {\n\n\n                ///////////////ÊÅ¢Â§çÈÄªËæë///////////////////////\n\n                if (cart.type == 'change') {//changeËØæÁ®ã\n\n\n                } else {//Â¢ûÂä†ËØæÁ®ã  ÂèñÊ∂àËØæÁ®ã\n\n                    //todo more test.  maybe $elemMatch is necessary\n                    result = DB.Classes.update({\n                        _id: item.classId,\n\n                        'carted.swimmerId': item.swimmerId,\n                        'carted.cart_id': cart['id'],\n                        'carted.qty': item['quantity']\n\n                    }, {\n                        '$inc': {seatsRemain: item.quantity},\n                        '$pull': {\n                            'carted': {'cartId': cart['id']}\n                        }\n                    })\n\n                    if (!result) {\n                        hasError = true;  //ÊúâÈ°πÁõÆÊú™ÊàêÂäüÊÅ¢Â§ç\n                    }\n                }\n\n            })\n\n\n            //Ë¥≠Áâ©ËΩ¶ÊâÄÊúâÈ°πÁõÆÁöÜÊÅ¢Â§çÂÆåÊØï\n            if (!hasError) {\n\n                DB.ShoppingCart.update({\n                    _id: cart._id\n                }, {\n                    $set: {\n                        status: 'expired'\n                    }\n                });\n            }\n\n        })\n\n        //Ê∏ÖÈô§ËøáÊúüË¥≠Áâ©ËΩ¶\n        //DB.ShoppingCart.remove({\n        //    status:'expired'\n        //})\n\n    }\n\n\n    //http://docs.mongodb.org/ecosystem/use-cases/inventory-management/\n    //Ê∏ÖÈô§ÊâÄÂØπÂ∫îË¥≠Áâ©ËΩ¶Â∑≤‰∏çÂ≠òÂú®ÁöÑclass register\n    //case  Ë¥≠Áâ©ËΩ¶expired ÂÖàÂà†Èô§Ê≥®ÂÜå‰ø°ÊÅØ ÂÜçÂà†Èô§Ë¥≠Áâ©ËΩ¶\n    //case classÊ≥®ÂÜå‰ø°ÊÅØÂ≠òÂú® ÂØπÂ∫îË¥≠Áâ©ËΩ¶‰∏çÂ≠òÂú®\n    //todo check all case\n    SyncedCron.add({\n        name: 'Clear Shopping Cart',\n        schedule: function (parser) {\n\n            return parser.text('every 15 minutes');\n            //return parser.text('every 10 seconds');\n\n        },\n        job: function () {\n            changeStaus()\n            clearShoppingCart()\n\n        }\n    });\n\n\n    SyncedCron.start()\n\n})\n\n\n\n\n}).call(this);\n","servePath":"/server/cron/main.js","sourceMap":{"version":3,"sources":["/server/cron/main.js"],"names":[],"mappings":"efile":"/server/cron/main.js","sourcesContent":["/**\n * Created on 9/20/15.\n */\n\n\n\n//Todo using linux crontab for performance reason?\nMeteor.startup(function () {\n\n    //Ê†áËÆ∞ËøáÊúüË¥≠Áâ©ËΩ¶\n    function changeStaus() {\n\n        //ËÆæÁΩÆactive‰∏∫ expired\n        DB.ShoppingCart.update({\n            // 15ÂàÜ‰ª•ÂÜÖÁöÑ todo save time as config value\n            lastModified: {$lt: new Date(+new Date() - 15 * 60 * 1000)},\n            status: 'active'\n        }, {\n            $set: {\n                status: 'expiring'\n            }\n        }, {\n            multi: true\n        });\n    }\n\n    //expiring Ë¥≠Áâ©ËΩ¶ÁöÑÂ§ÑÁêÜ  Á°Æ‰øùÊ≠§ËøáÁ®ãÂèçÂ§çÊâßË°åÁªìÊûú‰∏çÂèò\n    function clearShoppingCart() {\n\n        var carts = DB.ShoppingCart.find({\n            status: 'expiring'\n        })\n\n        //ÊÅ¢Â§çclassÂèØÁî®Êï∞Èáè\n        carts.forEach(function (cart, i, a) {\n\n            var item = cart.items //Ëé∑ÂèñË¥≠Áâ©ËΩ¶ÁöÑË¥≠Áâ©È°π\n\n\n            var result;\n            var hasError = false;\n            cart.items.forEach(function (item, i_items, a_items) {\n\n\n                ///////////////ÊÅ¢Â§çÈÄªËæë///////////////////////\n\n                if (cart.type == 'change') {//changeËØæÁ®ã\n\n\n                } else {//Â¢ûÂä†ËØæÁ®ã  ÂèñÊ∂àËØæÁ®ã\n\n                    //todo more test.  maybe $elemMatch is necessary\n                    result = DB.Classes.update({\n                        _id: item.classId,\n\n                        'carted.swimmerId': item.swimmerId,\n                        'carted.cart_id': cart['id'],\n                        'carted.qty': item['quantity']\n\n                    }, {\n                        '$inc': {seatsRemain: item.quantity},\n                        '$pull': {\n                            'carted': {'cartId': cart['id']}\n                        }\n                    })\n\n                    if (!result) {\n                        hasError = true;  //ÊúâÈ°πÁõÆÊú™ÊàêÂäüÊÅ¢Â§ç\n                    }\n                }\n\n            })\n\n\n            //Ë¥≠Áâ©ËΩ¶ÊâÄÊúâÈ°πÁõÆÁöÜÊÅ¢Â§çÂÆåÊØï\n            if (!hasError) {\n\n                DB.ShoppingCart.update({\n                    _id: cart._id\n                }, {\n                    $set: {\n                        status: 'expired'\n                    }\n                });\n            }\n\n        })\n\n        //Ê∏ÖÈô§ËøáÊúüË¥≠Áâ©ËΩ¶\n        //DB.ShoppingCart.remove({\n        //    status:'expired'\n        //})\n\n    }\n\n\n    //http://docs.mongodb.org/ecosystem/use-cases/inventory-management/\n    //Ê∏ÖÈô§ÊâÄÂØπÂ∫îË¥≠Áâ©ËΩ¶Â∑≤‰∏çÂ≠òÂú®ÁöÑclass register\n    //case  Ë¥≠Áâ©ËΩ¶expired ÂÖàÂà†Èô§Ê≥®ÂÜå‰ø°ÊÅØ ÂÜçÂà†Èô§Ë¥≠Áâ©ËΩ¶\n    //case classÊ≥®ÂÜå‰ø°ÊÅØÂ≠òÂú® ÂØπÂ∫îË¥≠Áâ©ËΩ¶‰∏çÂ≠òÂú®\n    //todo check all case\n    SyncedCron.add({\n        name: 'Clear Shopping Cart',\n        schedule: function (parser) {\n\n            return parser.text('every 15 minutes');\n            //return parser.text('every 10 seconds');\n\n        },\n        job: function () {\n            changeStaus()\n            clearShoppingCart()\n\n        }\n    });\n\n\n    SyncedCron.start()\n\n})\n\n\n\n"]}}]