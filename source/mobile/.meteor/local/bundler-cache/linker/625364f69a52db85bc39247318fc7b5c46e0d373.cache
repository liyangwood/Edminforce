[{"type":"js","data":"/* Imports for global scope */\n\nMeteor = Package.meteor.Meteor;\n_ = Package.underscore._;\nSession = Package.session.Session;\nWebApp = Package.webapp.WebApp;\nLog = Package.logging.Log;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDDP = Package['ddp-client'].DDP;\nMongo = Package.mongo.Mongo;\ncheck = Package.check.check;\nMatch = Package.check.Match;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReload = Package.reload.Reload;\nAutoupdate = Package.autoupdate.Autoupdate;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nReactLayout = Package['kadira:react-layout'].ReactLayout;\nRC = Package['ihealth:framework-mobile'].RC;\nDispatcher = Package['meteorflux:dispatcher'].Dispatcher;\nDevTools = Package['ihealth:dev-tools'].DevTools;\nDevicesStub = Package['ihealth:devices-stub'].DevicesStub;\niHealthBG5 = Package['ihealth:bg5'].iHealthBG5;\niHealthBP5 = Package['ihealth:bp5'].iHealthBP5;\nApp = Package['cal:globals'].App;\nCal = Package['cal:globals'].Cal;\nDB = Package['cal:globals'].DB;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nDependency = Package['meteorflux:reactive-dependency'].Dependency;\nImmutable = Package['cal:immutable'].Immutable;\nSpacebars = Package.spacebars.Spacebars;\nFake = Package['anti:fake'].Fake;\nCookie = Package['mrt:cookies'].Cookie;\nReact = Package['react-runtime'].React;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nDefaultRoutes = Package['ihealth:utils'].DefaultRoutes;\nh = Package['ihealth:utils'].h;\nIH = Package['ihealth:utils'].IH;\nFastClick = Package.fastclick.FastClick;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nMeteorFlux = Package['meteorflux:namespace'].MeteorFlux;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nRoles = Package['alanning:roles'].Roles;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nmoment = Package['momentjs:moment'].moment;\nFastRender = Package['meteorhacks:fast-render'].FastRender;\n__init_fast_render = Package['meteorhacks:fast-render'].__init_fast_render;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/mixins/windowUnload.jsx                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/17/15.                                                //\n */                                                                    //\n                                                                       //\nCal.Mixins.windowUnload = {                                            // 5\n    componentDidMount: function () {                                   // 6\n        if (this.onUnload) {                                           // 7\n            window.addEventListener(\"unload\", this.onUnload);          // 8\n        }                                                              //\n        if (this.onBeforeUnload) {                                     // 10\n            window.addEventListener(\"beforeunload\", this.onBeforeUnload);\n        }                                                              //\n    },                                                                 //\n                                                                       //\n    componentWillUnmount: function () {                                // 15\n        if (this.onUnload) {                                           // 16\n            window.removeEventListener(\"unload\", this.onUnload);       // 17\n        }                                                              //\n        if (this.onBeforeUnload) {                                     // 19\n            window.removeEventListener(\"beforeunload\", this.onBeforeUnload);\n        }                                                              //\n    }                                                                  //\n                                                                       //\n};                                                                     //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/mixins/windowUnload.jsx","sourceMap":{"version":3,"sources":["/client/lib/mixins/windowUnload.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,MAAM,CAAC,YAAY,GAAC;AACpB,qBAAiB,EAAE,YAAW;AAC1B,YAAI,IAAI,CAAC,QAAQ,EAAE;AACf,kBAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACpD;AACD,YAAI,IAAI,CAAC,cAAc,EAAE;AACrB,kBAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAChE;KACJ;;AAED,wBAAoB,EAAE,YAAW;AAC7B,YAAI,IAAI,CAAC,QAAQ,EAAE;AACf,kBAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvD;AACD,YAAI,IAAI,CAAC,cAAc,EAAE;AACrB,kBAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACnE;KACJ;;CAEJ,wE","file":"/client/lib/mixins/windowUnload.jsx","sourcesContent":["/**\n * Created on 10/17/15.\n */\n\nCal.Mixins.windowUnload={\n    componentDidMount: function() {\n        if (this.onUnload) {\n            window.addEventListener(\"unload\", this.onUnload);\n        }\n        if (this.onBeforeUnload) {\n            window.addEventListener(\"beforeunload\", this.onBeforeUnload);\n        }\n    },\n\n    componentWillUnmount: function() {\n        if (this.onUnload) {\n            window.removeEventListener(\"unload\", this.onUnload);\n        }\n        if (this.onBeforeUnload) {\n            window.removeEventListener(\"beforeunload\", this.onBeforeUnload);\n        }\n    }\n\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/account.jsx                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/26/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n                                                                       //\n    var AccountRoute = FlowRouter.group({                              // 7\n        prefix: '/account',                                            // 8\n        triggersEnter: [function (context) {}],                        // 9\n        triggersExit: [function () {}]                                 // 12\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/', {                                          // 19\n        //name: \"account\",                                             //\n        action: function (p) {                                         // 21\n            App.routeHandler(p, {                                      // 22\n                pageTitle: \"Management\",                               // 23\n                headerNav: null,                                       // 24\n                bodyTmpl: React.createElement(Cal.AccountManagement, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/AddSwimmer', {                                // 30\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 32\n            App.routeHandler(p, {                                      // 33\n                pageTitle: \"AddSwimmer\",                               // 34\n                headerNav: null,                                       // 35\n                bodyTmpl: React.createElement(Cal.AccountAddSwimmer, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/EvalLevel', {                                 // 41\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 43\n            App.routeHandler(p, {                                      // 44\n                pageTitle: \"EvalLevel\",                                // 45\n                headerNav: null,                                       // 46\n                bodyTmpl: React.createElement(Cal.AccountEvalSwimmerLevel, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/SwimmerProfile/:swimmerId', {                 // 52\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 54\n            App.routeHandler(p, {                                      // 55\n                pageTitle: \"SwimmerProfile\",                           // 56\n                headerNav: null,                                       // 57\n                bodyTmpl: React.createElement(Cal.AccountSwimmerProfile, { swimmerId: p.swimmerId })\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/ResetPassword', {                             // 63\n        action: function (p) {                                         // 64\n            debugger;                                                  // 65\n            var pageTitle = \"Reset Password\";                          // 66\n            var dynamicRoute = {                                       // 67\n                pageTitle: pageTitle, // This is for header title      // 68\n                metaTitle: pageTitle, // This is for meta title        // 69\n                showGlobalNav: true,                                   // 70\n                headerNav: null,                                       // 71\n                hideBackButton: true,                                  // 72\n                hideLeftNavToggle: true,                               // 73\n                hideShoppingCartButton: true,                          // 74\n                bodyTmpl: React.createElement(Cal.ResetPasswordUser, null)\n            };                                                         //\n            App.routeHandler(p, dynamicRoute);                         // 77\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/ResetUserName', {                             // 81\n        action: function (p) {                                         // 82\n            debugger;                                                  // 83\n            var pageTitle = \"Reset Password\";                          // 84\n            var dynamicRoute = {                                       // 85\n                pageTitle: pageTitle, // This is for header title      // 86\n                metaTitle: pageTitle, // This is for meta title        // 87\n                showGlobalNav: true,                                   // 88\n                headerNav: null,                                       // 89\n                hideBackButton: true,                                  // 90\n                hideLeftNavToggle: true,                               // 91\n                hideShoppingCartButton: true,                          // 92\n                bodyTmpl: React.createElement(Cal.ResetUserName, null)\n            };                                                         //\n            App.routeHandler(p, dynamicRoute);                         // 95\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/alternateContact', {                          // 99\n        action: function (p) {                                         // 100\n            debugger;                                                  // 101\n            var pageTitle = \"Reset Password\";                          // 102\n            var dynamicRoute = {                                       // 103\n                pageTitle: pageTitle, // This is for header title      // 104\n                metaTitle: pageTitle, // This is for meta title        // 105\n                showGlobalNav: true,                                   // 106\n                headerNav: null,                                       // 107\n                hideBackButton: true,                                  // 108\n                hideLeftNavToggle: true,                               // 109\n                hideShoppingCartButton: true,                          // 110\n                bodyTmpl: React.createElement(Cal.ChangeAlternateContact, null)\n            };                                                         //\n            App.routeHandler(p, dynamicRoute);                         // 113\n        }                                                              //\n    });                                                                //\n                                                                       //\n    AccountRoute.route('/emergencyContact', {                          // 117\n        action: function (p) {                                         // 118\n            debugger;                                                  // 119\n            var pageTitle = \"Reset Password\";                          // 120\n            var dynamicRoute = {                                       // 121\n                pageTitle: pageTitle, // This is for header title      // 122\n                metaTitle: pageTitle, // This is for meta title        // 123\n                showGlobalNav: true,                                   // 124\n                headerNav: null,                                       // 125\n                hideBackButton: true,                                  // 126\n                hideLeftNavToggle: true,                               // 127\n                hideShoppingCartButton: true,                          // 128\n                bodyTmpl: React.createElement(Cal.ChangeEmergencyContact, null)\n            };                                                         //\n            App.routeHandler(p, dynamicRoute);                         // 131\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/account.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/account.jsx"],"names":[],"mappings":"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","file":"/client/lib/router/account.jsx","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\n{\n\n    let AccountRoute = FlowRouter.group({\n        prefix: '/account',\n        triggersEnter: [function(context){\n\n        }],\n        triggersExit: [function(){\n\n        }]\n    });\n\n\n\n    AccountRoute.route('/', {\n        //name: \"account\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Management\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountManagement/>\n            })\n        }\n    })\n\n    AccountRoute.route('/AddSwimmer', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"AddSwimmer\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountAddSwimmer/>\n            })\n        }\n    })\n\n    AccountRoute.route('/EvalLevel', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"EvalLevel\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountEvalSwimmerLevel/>\n            })\n        }\n    })\n\n    AccountRoute.route('/SwimmerProfile/:swimmerId', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"SwimmerProfile\",\n                headerNav: null,\n                bodyTmpl: <Cal.AccountSwimmerProfile swimmerId = {p.swimmerId}/>\n            })\n        }\n    })\n\n    AccountRoute.route('/ResetPassword', {\n        action: function(p){\n            debugger\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ResetPasswordUser/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/ResetUserName', {\n        action: function(p){\n            debugger\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ResetUserName/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/alternateContact', {\n        action: function(p){\n            debugger\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ChangeAlternateContact/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n\n    AccountRoute.route('/emergencyContact', {\n        action: function(p){\n            debugger\n            let pageTitle = \"Reset Password\"\n            var dynamicRoute = {\n                pageTitle: pageTitle, // This is for header title\n                metaTitle: pageTitle, // This is for meta title\n                showGlobalNav: true,\n                headerNav: null,\n                hideBackButton: true,\n                hideLeftNavToggle: true,\n                hideShoppingCartButton: true,\n                bodyTmpl: <Cal.ChangeEmergencyContact/>\n            }\n            App.routeHandler(p, dynamicRoute)\n        }\n    })\n}\n\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/auth.jsx                                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nDefaultRoutes.route('/auth', {                                         // 1\n  name: \"auth\",                                                        // 2\n  action: function (p) {                                               // 3\n                                                                       //\n    var dynamicRoute = {                                               // 5\n      pageTitle: \"Login Demonstration\", // This is for header title    // 6\n      showGlobalNav: false,                                            // 7\n      headerNav: null,                                                 // 8\n      hideBackButton: true,                                            // 9\n      leftNavToggle: true                                              // 10\n                                                                       //\n    };                                                                 //\n    if (Cal[\"Auth\"]) dynamicRoute.bodyTmpl = React.createElement(Cal[\"Auth\"]);\n    App.routeHandler(p, dynamicRoute);                                 // 15\n  }                                                                    //\n});                                                                    //\n                                                                       //\nDefaultRoutes.route('/login', {                                        // 19\n  name: \"Log In\",                                                      // 20\n  action: function (p) {                                               // 21\n    var pageTitle = \"Log In\";                                          // 22\n    var dynamicRoute = {                                               // 23\n      pageTitle: pageTitle, // This is for header title                // 24\n      metaTitle: pageTitle, // This is for meta title                  // 25\n      showGlobalNav: false,                                            // 26\n      headerNav: null,                                                 // 27\n      hideBackButton: true,                                            // 28\n      hideLeftNavToggle: true,                                         // 29\n      hideShoppingCartButton: true                                     // 30\n    };                                                                 //\n    dynamicRoute.bodyTmpl = React.createElement(Cal[\"Login\"]);         // 32\n    App.routeHandler(p, dynamicRoute);                                 // 33\n  }                                                                    //\n});                                                                    //\n                                                                       //\nDefaultRoutes.route('/reset-password/:userToken', {                    // 37\n  action: function (p) {                                               // 38\n    console.log(\"userToken is:\", p.userToken);                         // 39\n    var dynamicRoute = {                                               // 40\n      pageTitle: \"Reset-Password\",                                     // 41\n      headerNav: null,                                                 // 42\n      hideBackButton: true,                                            // 43\n      showGlobalNav: false,                                            // 44\n      bodyTmpl: React.createElement(Cal.ResetPasswordEmail, { userToken: p.userToken, themes: \"overlay-dark\", bgColor: \"brand-light\" }, null)\n    };                                                                 //\n    App.routeHandler(p, dynamicRoute);                                 // 47\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/auth.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/auth.jsx"],"names":[],"mappings":";;;;;;;;AAAA,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE;AAC3B,MAAI,EAAE,MAAM;AACZ,QAAM,EAAE,UAAS,CAAC,EAAE;;AAElB,QAAI,YAAY,GAAG;AACf,eAAS,EAAE,qBAAqB;AAChC,mBAAa,EAAE,KAAK;AACpB,eAAS,EAAE,IAAI;AACf,oBAAc,EAAC,IAAI;AACnB,mBAAa,EAAC,IAAI;;KAEnB;AACD,QAAI,GAAG,CAAC,MAAM,CAAC,EACb,YAAY,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1D,OAAG,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC;GAClC;CACF,CAAC;;AAEJ,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC5B,MAAI,EAAE,QAAQ;AACd,QAAM,EAAE,UAAS,CAAC,EAAE;AAClB,QAAI,SAAS,GAAG,QAAQ;AACxB,QAAI,YAAY,GAAG;AACf,eAAS,EAAE,SAAS;AACpB,eAAS,EAAE,SAAS;AACpB,mBAAa,EAAE,KAAK;AACpB,eAAS,EAAE,IAAI;AACf,oBAAc,EAAE,IAAI;AACpB,uBAAiB,EAAE,IAAI;AACvB,4BAAsB,EAAE,IAAI;KAC7B;AACD,gBAAY,CAAC,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACzD,OAAG,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC;GAClC;CACF,CAAC;;AAEJ,aAAa,CAAC,KAAK,CAAC,4BAA4B,EAAE;AAChD,QAAM,EAAE,UAAS,CAAC,EAAE;AAClB,WAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC;AACzC,QAAI,YAAY,GAAG;AACjB,eAAS,EAAE,gBAAgB;AAC3B,eAAS,EAAE,IAAI;AACf,oBAAc,EAAC,IAAI;AACnB,mBAAa,EAAE,KAAK;AACpB,cAAQ,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,aAAa,EAAC,EAAC,IAAI,CAAC;KACrI;AACD,OAAG,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC;GAClC;CACF,CAAC,CAAC,sE","file":"/client/lib/router/auth.jsx","sourcesContent":["DefaultRoutes.route('/auth', {\n  name: \"auth\",\n  action: function(p) {\n\n    var dynamicRoute = {\n        pageTitle: \"Login Demonstration\", // This is for header title\n        showGlobalNav: false,\n        headerNav: null,\n        hideBackButton:true,\n        leftNavToggle:true\n\n      }\n      if (Cal[\"Auth\"])\n        dynamicRoute.bodyTmpl = React.createElement(Cal[\"Auth\"])\n      App.routeHandler(p, dynamicRoute)\n    }\n  })\n\nDefaultRoutes.route('/login', {\n  name: \"Log In\",\n  action: function(p) {\n    let pageTitle = \"Log In\"\n    var dynamicRoute = {\n        pageTitle: pageTitle, // This is for header title\n        metaTitle: pageTitle, // This is for meta title\n        showGlobalNav: false,\n        headerNav: null,\n        hideBackButton: true,\n        hideLeftNavToggle: true,\n        hideShoppingCartButton: true,\n      }\n      dynamicRoute.bodyTmpl = React.createElement(Cal[\"Login\"])\n      App.routeHandler(p, dynamicRoute)\n    }\n  })\n\nDefaultRoutes.route('/reset-password/:userToken', {\n  action: function(p) {\n    console.log(\"userToken is:\", p.userToken)\n    var dynamicRoute = {\n      pageTitle: \"Reset-Password\",\n      headerNav: null,\n      hideBackButton:true,\n      showGlobalNav: false,\n      bodyTmpl: React.createElement(Cal.ResetPasswordEmail, {userToken: p.userToken, themes: \"overlay-dark\", bgColor: \"brand-light\"},null)\n    }\n    App.routeHandler(p, dynamicRoute)\n  }\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/class.edit.jsx                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n{                                                                      // 2\n                                                                       //\n    var ClassEditRoute = FlowRouter.group({                            // 4\n        prefix: '/classEdit',                                          // 5\n        triggersEnter: [function (context) {}],                        // 6\n        triggersExit: [function () {}]                                 // 9\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/swimmerList', {                             // 15\n        //name: \"swimmerList\",                                         //\n        action: function (p) {                                         // 17\n            App.routeHandler(p, {                                      // 18\n                pageTitle: \"Your Swimmers\",                            // 19\n                showGlobalNav: false,                                  // 20\n                headerNav: null,                                       // 21\n                bodyTmpl: React.createElement(Cal.CESwimmerListPage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/SwimmerRegisteredClass', {                  // 27\n        //name: \"home\",                                                //\n        action: function (p, query) {                                  // 29\n            App.routeHandler(p, {                                      // 30\n                pageTitle: \"Registered Class\",                         // 31\n                showGlobalNav: false,                                  // 32\n                headerNav: null,                                       // 33\n                bodyTmpl: React.createElement(Cal.SwimmerRegisteredClassPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/billingAndPayment', {                       // 40\n        //name: \"CEBillingAndPayment\",                                 //\n        action: function (p) {                                         // 42\n            App.routeHandler(p, {                                      // 43\n                pageTitle: \"CEBillingAndPayment\",                      // 44\n                showGlobalNav: false,                                  // 45\n                headerNav: null,                                       // 46\n                bodyTmpl: React.createElement(Cal.CEBillingAndPayment, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ////////////////////////////////////////                           //\n                                                                       //\n    ClassEditRoute.route('/operationBoard', {                          // 54\n        //name: \"home\",                                                //\n        action: function (p, query) {                                  // 56\n            App.routeHandler(p, {                                      // 57\n                pageTitle: \"Class Operation\",                          // 58\n                showGlobalNav: false,                                  // 59\n                headerNav: null,                                       // 60\n                bodyTmpl: React.createElement(Cal.ClassOperationBoardPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassEditRoute.route('/change', {                                  // 65\n        //name: \"home\",                                                //\n        action: function (p, query) {                                  // 67\n            App.routeHandler(p, {                                      // 68\n                pageTitle: \"Class Operation\",                          // 69\n                showGlobalNav: false,                                  // 70\n                headerNav: null,                                       // 71\n                bodyTmpl: React.createElement(Cal.ChangeClassPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n            Dispatcher.dispatch({ actionType: \"GOTO_ChangeClassPage\" });\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/cancel', {                                  // 80\n        //name: \"home\",                                                //\n        action: function (p, query) {                                  // 82\n            App.routeHandler(p, {                                      // 83\n                pageTitle: \"Class Operation\",                          // 84\n                showGlobalNav: false,                                  // 85\n                headerNav: null,                                       // 86\n                bodyTmpl: React.createElement(Cal.CECancelClassPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassEditRoute.route('/CancelClassConfirmPage', {                  // 91\n        //name: \"home\",                                                //\n        action: function (p, query) {                                  // 93\n            App.routeHandler(p, {                                      // 94\n                pageTitle: \"CancelClassConfirmPage\",                   // 95\n                showGlobalNav: false,                                  // 96\n                headerNav: null,                                       // 97\n                bodyTmpl: React.createElement(Cal.CECancelClassConfirmPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/ChangeClassBillingPage', {                  // 103\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 105\n            App.routeHandler(p, {                                      // 106\n                pageTitle: \"Class Operation\",                          // 107\n                showGlobalNav: false,                                  // 108\n                headerNav: null,                                       // 109\n                bodyTmpl: React.createElement(Cal.ChangeClassBillingPage, p)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassEditRoute.route('/sheduleMeeting', {                          // 115\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 117\n            App.routeHandler(p, {                                      // 118\n                pageTitle: \"Class Operation\",                          // 119\n                showGlobalNav: false,                                  // 120\n                headerNav: null,                                       // 121\n                bodyTmpl: React.createElement(Cal.SheduleMeetingPage, p)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassEditRoute.route('/writeComment', {                            // 126\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 128\n            App.routeHandler(p, {                                      // 129\n                pageTitle: \"Class Operation\",                          // 130\n                showGlobalNav: false,                                  // 131\n                headerNav: null,                                       // 132\n                bodyTmpl: React.createElement(Cal.WriteComment, p)     // 133\n            });                                                        //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/class.edit.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/class.edit.jsx"],"names":[],"mappings":"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","file":"/client/lib/router/class.edit.jsx","sourcesContent":["\n{\n\n    let ClassEditRoute = FlowRouter.group({\n        prefix: '/classEdit',\n        triggersEnter: [function(context){\n\n        }],\n        triggersExit: [function(){\n\n        }]\n    });\n\n\n    ClassEditRoute.route('/swimmerList', {\n        //name: \"swimmerList\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Your Swimmers\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CESwimmerListPage/>\n            })\n        }\n    })\n\n    ClassEditRoute.route('/SwimmerRegisteredClass', {\n        //name: \"home\",\n        action: function (p,query) {\n            App.routeHandler(p, {\n                pageTitle: \"Registered Class\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.SwimmerRegisteredClassPage {...p} {...query} />\n            })\n        }\n    })\n\n\n    ClassEditRoute.route('/billingAndPayment', {\n        //name: \"CEBillingAndPayment\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"CEBillingAndPayment\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CEBillingAndPayment/>\n            })\n        }\n    })\n\n    ////////////////////////////////////////\n\n    ClassEditRoute.route('/operationBoard', {\n        //name: \"home\",\n        action: function (p,query) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.ClassOperationBoardPage {...p} {...query} />\n            })\n        }\n    })\n    ClassEditRoute.route('/change', {\n        //name: \"home\",\n        action: function (p , query) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.ChangeClassPage {...p} {...query} />\n            })\n            Dispatcher.dispatch({actionType: \"GOTO_ChangeClassPage\"});\n\n        }\n    })\n\n\n    ClassEditRoute.route('/cancel', {\n        //name: \"home\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CECancelClassPage {...p} {...query} />\n            })\n        }\n    })\n    ClassEditRoute.route('/CancelClassConfirmPage', {\n        //name: \"home\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"CancelClassConfirmPage\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CECancelClassConfirmPage {...p}  {...query}/>\n            })\n        }\n    })\n\n    ClassEditRoute.route('/ChangeClassBillingPage', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.ChangeClassBillingPage {...p}  />\n            })\n        }\n    })\n\n    ClassEditRoute.route('/sheduleMeeting', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.SheduleMeetingPage {...p}  />\n            })\n        }\n    })\n    ClassEditRoute.route('/writeComment', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Class Operation\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.WriteComment {...p}  />\n            })\n        }\n    })\n\n\n\n\n\n}\n\n\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/class.register.jsx                                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n//为简化期间 layout逻辑不单独分出一个store ，根据需要添加dispatch 消息                        //\n                                                                       //\n{                                                                      // 7\n                                                                       //\n    var ClassRegisterRoute = FlowRouter.group({                        // 9\n        prefix: '/classRegister',                                      // 10\n        triggersEnter: [function (context) {}],                        // 11\n        triggersExit: [function () {}]                                 // 14\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/registraionInfoPage', {                 // 20\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 22\n            App.routeHandler(p, {                                      // 23\n                pageTitle: \"Registration\",                             // 24\n                showGlobalNav: false,                                  // 25\n                headerNav: null,                                       // 26\n                bodyTmpl: React.createElement(Cal.CRRegistraionInfoPage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/register', {                            // 32\n        //name: \"home\",                                                //\n        action: function (p) {                                         // 34\n            App.routeHandler(p, {                                      // 35\n                pageTitle: \"Register Class\",                           // 36\n                showGlobalNav: false,                                  // 37\n                headerNav: null,                                       // 38\n                bodyTmpl: React.createElement(Cal.CRClassRegisterViewControl, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/SelectClass', {                         // 45\n        //name: \"SelectClass\",                                         //\n        action: function (p) {                                         // 47\n            App.routeHandler(p, {                                      // 48\n                pageTitle: \"Select Class\",                             // 49\n                showGlobalNav: false,                                  // 50\n                headerNav: null,                                       // 51\n                bodyTmpl: React.createElement(Cal.CRSelectClassPage, null)\n            });                                                        //\n                                                                       //\n            //Dispatcher.dispatch({actionType: \"GOTO_CRSelectClassPage\"});\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/SelectClassReady', {                    // 60\n        //name: \"SelectClassReady\",                                    //\n        action: function (p, query) {                                  // 62\n            App.routeHandler(p, {                                      // 63\n                pageTitle: \"SelectClassReady\",                         // 64\n                showGlobalNav: false,                                  // 65\n                headerNav: null,                                       // 66\n                bodyTmpl: React.createElement(Cal.CRSelectClassReadyPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/SelectClassEdit', {                     // 72\n        action: function (p, query) {                                  // 73\n            App.routeHandler(p, {                                      // 74\n                pageTitle: \"SelectClassEdit\",                          // 75\n                showGlobalNav: false,                                  // 76\n                headerNav: null,                                       // 77\n                bodyTmpl: React.createElement(Cal.CRSelectClassEditPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/RegBillingPage', {                      // 84\n        //name: \"CRRegBillingPage\",                                    //\n        action: function (p) {                                         // 86\n            App.routeHandler(p, {                                      // 87\n                pageTitle: \"CRRegBillingPage\",                         // 88\n                showGlobalNav: false,                                  // 89\n                headerNav: null,                                       // 90\n                bodyTmpl: React.createElement(Cal.CRRegBillingPage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassRegisterRoute.route('/paymentOptionsPage', {                  // 95\n        //name: \"CRPaymentOptionsPage\",                                //\n        action: function (p) {                                         // 97\n            App.routeHandler(p, {                                      // 98\n                pageTitle: \"CRPaymentOptionsPage\",                     // 99\n                showGlobalNav: false,                                  // 100\n                headerNav: null,                                       // 101\n                bodyTmpl: React.createElement(Cal.CRPaymentOptionsPage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassRegisterRoute.route('/paymentInstoreConfirm', {               // 106\n        //name: \"CRPaymentInstoreConfirm\",                             //\n        action: function (p) {                                         // 108\n            App.routeHandler(p, {                                      // 109\n                pageTitle: \"CRPaymentInstoreConfirm\",                  // 110\n                showGlobalNav: false,                                  // 111\n                headerNav: null,                                       // 112\n                bodyTmpl: React.createElement(Cal.CRPaymentInstoreConfirm, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/AddWaitingList', {                      // 119\n        //name: \"AddWaitingList\",                                      //\n        action: function (p, query) {                                  // 121\n            App.routeHandler(p, {                                      // 122\n                pageTitle: \"AddWaitingList\",                           // 123\n                showGlobalNav: false,                                  // 124\n                headerNav: null,                                       // 125\n                bodyTmpl: React.createElement(Cal.CRAddWaitingListPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n    ClassRegisterRoute.route('/AddWaitingListConfirm', {               // 130\n        //name: \"AddWaitingList\",                                      //\n        action: function (p) {                                         // 132\n            App.routeHandler(p, {                                      // 133\n                pageTitle: \"AddWaitingListConfirm\",                    // 134\n                showGlobalNav: false,                                  // 135\n                headerNav: null,                                       // 136\n                bodyTmpl: React.createElement(Cal.AddWaitingListConfirmPage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/BookTheSameTimePage', {                 // 143\n        //name: \"CRBookTheSameTimePage\",                               //\n        action: function (p) {                                         // 145\n            App.routeHandler(p, {                                      // 146\n                pageTitle: \"CRBookTheSameTimePage\",                    // 147\n                showGlobalNav: false,                                  // 148\n                headerNav: null,                                       // 149\n                bodyTmpl: React.createElement(Cal.CRBookTheSameTimePage, null)\n            });                                                        //\n            //用于初始化                                                    //\n            //Dispatcher.dispatch({actionType: \"GOTO_CRBookTheSameTimePage\"});\n        }                                                              //\n    });                                                                //\n    ClassRegisterRoute.route('/BookTheSameTimeSelectClassReady', {     // 157\n        //name: \"CRBookTheSameTimePage\",                               //\n        action: function (p, query) {                                  // 159\n            App.routeHandler(p, {                                      // 160\n                pageTitle: \"BookTheSameTimeSelectClassReady\",          // 161\n                showGlobalNav: false,                                  // 162\n                headerNav: null,                                       // 163\n                bodyTmpl: React.createElement(Cal.CRBookTheSameTimeSelectClassReadyPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    ClassRegisterRoute.route('/waiver', {                              // 170\n        //name: \"CRBookTheSameTimePage\",                               //\n        action: function (p, query) {                                  // 172\n            App.routeHandler(p, {                                      // 173\n                pageTitle: \"CRAgreementWaiverPage\",                    // 174\n                showGlobalNav: false,                                  // 175\n                headerNav: null,                                       // 176\n                bodyTmpl: React.createElement(Cal.CRAgreementWaiverPage, babelHelpers._extends({}, p, query))\n            });                                                        //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/class.register.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/class.register.jsx"],"names":[],"mappings":"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","file":"/client/lib/router/class.register.jsx","sourcesContent":["/**\n * Created on 9/14/15.\n */\n//为简化期间 layout逻辑不单独分出一个store ，根据需要添加dispatch 消息\n\n\n{\n\n    let ClassRegisterRoute = FlowRouter.group({\n        prefix: '/classRegister',\n        triggersEnter: [function (context) {\n\n        }],\n        triggersExit: [function () {\n\n        }]\n    });\n\n\n    ClassRegisterRoute.route('/registraionInfoPage', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Registration\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRRegistraionInfoPage/>\n            })\n        }\n    })\n\n    ClassRegisterRoute.route('/register', {\n        //name: \"home\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Register Class\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRClassRegisterViewControl/>\n            })\n        }\n    })\n\n\n    ClassRegisterRoute.route('/SelectClass', {\n        //name: \"SelectClass\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"Select Class\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRSelectClassPage/>\n            })\n\n            //Dispatcher.dispatch({actionType: \"GOTO_CRSelectClassPage\"});\n\n        }\n    })\n\n    ClassRegisterRoute.route('/SelectClassReady', {\n        //name: \"SelectClassReady\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"SelectClassReady\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRSelectClassReadyPage {...p} {...query} />\n            })\n        }\n    })\n\n    ClassRegisterRoute.route('/SelectClassEdit', {\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"SelectClassEdit\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRSelectClassEditPage {...p} {...query} />\n            })\n        }\n    })\n\n\n    ClassRegisterRoute.route('/RegBillingPage', {\n        //name: \"CRRegBillingPage\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"CRRegBillingPage\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRRegBillingPage/>\n            })\n        }\n    })\n    ClassRegisterRoute.route('/paymentOptionsPage', {\n        //name: \"CRPaymentOptionsPage\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"CRPaymentOptionsPage\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRPaymentOptionsPage/>\n            })\n        }\n    })\n    ClassRegisterRoute.route('/paymentInstoreConfirm', {\n        //name: \"CRPaymentInstoreConfirm\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"CRPaymentInstoreConfirm\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRPaymentInstoreConfirm/>\n            })\n        }\n    })\n\n\n    ClassRegisterRoute.route('/AddWaitingList', {\n        //name: \"AddWaitingList\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"AddWaitingList\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRAddWaitingListPage {...p} {...query} />\n            })\n        }\n    })\n    ClassRegisterRoute.route('/AddWaitingListConfirm', {\n        //name: \"AddWaitingList\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"AddWaitingListConfirm\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.AddWaitingListConfirmPage/>\n            })\n        }\n    })\n\n\n    ClassRegisterRoute.route('/BookTheSameTimePage', {\n        //name: \"CRBookTheSameTimePage\",\n        action: function (p) {\n            App.routeHandler(p, {\n                pageTitle: \"CRBookTheSameTimePage\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRBookTheSameTimePage/>\n            })\n            //用于初始化\n            //Dispatcher.dispatch({actionType: \"GOTO_CRBookTheSameTimePage\"});\n\n        }\n    })\n    ClassRegisterRoute.route('/BookTheSameTimeSelectClassReady', {\n        //name: \"CRBookTheSameTimePage\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"BookTheSameTimeSelectClassReady\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRBookTheSameTimeSelectClassReadyPage {...p} {...query}/>\n            })\n\n        }\n    })\n\n    ClassRegisterRoute.route('/waiver', {\n        //name: \"CRBookTheSameTimePage\",\n        action: function (p, query) {\n            App.routeHandler(p, {\n                pageTitle: \"CRAgreementWaiverPage\",\n                showGlobalNav: false,\n                headerNav: null,\n                bodyTmpl: <Cal.CRAgreementWaiverPage {...p} {...query}/>\n            })\n\n        }\n    })\n\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/common.jsx                                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Client Routes                                                       //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    //global router control                                            //\n                                                                       //\n    FlowRouter.LastRoute = [];                                         // 9\n    var savedRoute = null;                                             // 10\n                                                                       //\n    //define global triggers for test                                  //\n    FlowRouter.triggers.enter([function (context) {                    // 13\n        //console.log('Router enter: path='+context.path,' name= '+FlowRouter.getRouteName())\n                                                                       //\n        //hack 从注册页跳过来 todo 系统处理url history                            //\n        if (savedRoute == '/login') {                                  // 17\n            savedRoute = '/';                                          // 18\n        }                                                              //\n                                                                       //\n        if (!FlowRouter.BackButton && savedRoute) FlowRouter.LastRoute.push(savedRoute);else if (FlowRouter.BackButton) FlowRouter.LastRoute.pop();\n                                                                       //\n        FlowRouter.BackButton = false;                                 // 27\n        //calphin logic                                                //\n        if (!(Meteor.loggingIn() || Meteor.userId())) {                // 29\n            //Todo hard code; should使用name ;等待 name path最终确定           //\n            if (context.path.indexOf(\"reset-password\") > -1) {         // 31\n                /*                                                     //\n                 * This is for resetting password via email.           //\n                 * User will click on an URL contianing 'reset-password'.\n                 * At that time, user is not logged in, but he has the token to reset password\n                 * So, we send him to reset password page, instead of the login page.\n                 * Todo: make sure that the token is provided in the link, if not, we should still\n                 * direct user to login page.                          //\n                 */                                                    //\n                FlowRouter.go(context.path);                           // 40\n            } else if (context.path != '/login') {                     //\n                //用于登陆后回调  登陆应该以dispatch message方式                     //\n                Session.set('redirectAfterLogin', context.path);       // 43\n                //var redirectAfterLogin =Session.get('redirectAfterLogin')\n                //if(redirectAfterLogin && 'redirectAfterLogin不是login page时'){\n                //    FlowRouter.go(redirectAfterLogin)                //\n                //}else{                                               //\n                //    //to verify                                      //\n                //    FlowRouter.go('/')                               //\n                //}                                                    //\n                FlowRouter.go('/login');                               // 51\n            }                                                          //\n        }                                                              //\n    }]);                                                               //\n                                                                       //\n    FlowRouter.triggers.exit([function (context) {                     // 59\n        //console.log('Router exit: path='+context.path,' name= '+FlowRouter.getRouteName())\n                                                                       //\n        savedRoute = FlowRouter.current().path;                        // 62\n        window.scrollTo(0, 0);                                         // 63\n    }]);                                                               //\n}                                                                      //\n                                                                       //\n// Home Route                                                          //\nDefaultRoutes.route('/', {                                             // 75\n    name: \"home\",                                                      // 76\n    action: function (p) {                                             // 77\n        App.routeHandler(p, {                                          // 78\n            pageTitle: \"Home\",                                         // 79\n            headerNav: null,                                           // 80\n            leftNavToggle: true, //左侧导航触发按钮                            // 81\n            bodyTmpl: React.createElement(Cal.Home, null),             // 82\n                                                                       //\n            hideBackButton: true,                                      // 84\n            leftNavToggle: true                                        // 85\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n                                                                       //\nDefaultRoutes.route('/ContactInfoPage', {                              // 90\n    name: \"ContactInfoPage\",                                           // 91\n    action: function (p) {                                             // 92\n        App.routeHandler(p, {                                          // 93\n            pageTitle: \"ContactInfoPage\",                              // 94\n            headerNav: null,                                           // 95\n            leftNavToggle: true, //左侧导航触发按钮                            // 96\n            bodyTmpl: React.createElement(Cal.ContactInfoPage, null)   // 97\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/common.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/common.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;;AAGI,cAAU,CAAC,SAAS,GAAG,EAAE;AACzB,QAAI,UAAU,GAAG,IAAI;;;AAGrB,cAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAS,OAAO,EAAC;;;;AAIxC,YAAG,UAAU,IAAI,QAAQ,EAAC;AACtB,sBAAU,GAAE,GAAG;SAClB;;AAGD,YAAI,CAAC,UAAU,CAAC,UAAU,IAAI,UAAU,EACpC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,MACpC,IAAI,UAAU,CAAC,UAAU,EAC1B,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE;;AAE9B,kBAAU,CAAC,UAAU,GAAG,KAAK;;AAE7B,YAAI,EAAE,MAAM,CAAC,SAAS,EAAE,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;;AAE1C,gBAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,EAAC;;;;;;;;;AAS5C,0BAAU,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;aAC9B,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;;AAEjC,uBAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC,IAAI,CAAC;;;;;;;;AAQ/C,0BAAU,CAAC,EAAE,CAAC,QAAQ,CAAC;aAC1B;SACJ;KAEJ,CAAC,CAAC,CAAC;;AAIJ,cAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAS,OAAO,EAAC;;;AAGvC,kBAAU,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI;AACtC,cAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;KACvB,CAAC,CAAC,CAAC;CAIP;;;AAOD,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE;AACrB,QAAI,EAAE,MAAM;AACZ,UAAM,EAAE,UAAU,CAAC,EAAE;AACjB,WAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,qBAAS,EAAE,MAAM;AACjB,qBAAS,EAAE,IAAI;AACf,yBAAa,EAAC,IAAI;AAClB,oBAAQ,EAAE,oBAAC,GAAG,CAAC,IAAI,OAAE;;AAErB,0BAAc,EAAC,IAAI;AACnB,yBAAa,EAAC,IAAI;SACrB,CAAC;KACL;CACJ,CAAC;;AAEF,aAAa,CAAC,KAAK,CAAC,kBAAkB,EAAE;AACpC,QAAI,EAAE,iBAAiB;AACvB,UAAM,EAAE,UAAU,CAAC,EAAE;AACjB,WAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,qBAAS,EAAE,iBAAiB;AAC5B,qBAAS,EAAE,IAAI;AACf,yBAAa,EAAC,IAAI;AAClB,oBAAQ,EAAE,oBAAC,GAAG,CAAC,eAAe,OAAE;SACnC,CAAC;KACL;CACJ,CAAC,uE","file":"/client/lib/router/common.jsx","sourcesContent":["/**\n * Client Routes\n */\n\n\n{\n    //global router control\n\n    FlowRouter.LastRoute = []\n    var savedRoute = null\n\n    //define global triggers for test\n    FlowRouter.triggers.enter([function(context){\n        //console.log('Router enter: path='+context.path,' name= '+FlowRouter.getRouteName())\n\n        //hack 从注册页跳过来 todo 系统处理url history\n        if(savedRoute == '/login'){\n            savedRoute ='/'\n        }\n\n\n        if (!FlowRouter.BackButton && savedRoute)\n            FlowRouter.LastRoute.push(savedRoute)\n        else if (FlowRouter.BackButton)\n            FlowRouter.LastRoute.pop()\n\n        FlowRouter.BackButton = false\n        //calphin logic\n        if (!(Meteor.loggingIn() || Meteor.userId())) {\n            //Todo hard code; should使用name ;等待 name path最终确定\n            if (context.path.indexOf(\"reset-password\") > -1){\n                /* \n                 * This is for resetting password via email.\n                 * User will click on an URL contianing 'reset-password'.\n                 * At that time, user is not logged in, but he has the token to reset password\n                 * So, we send him to reset password page, instead of the login page.\n                 * Todo: make sure that the token is provided in the link, if not, we should still\n                 * direct user to login page.\n                 */\n                FlowRouter.go(context.path)\n            } else if (context.path != '/login') {\n                //用于登陆后回调  登陆应该以dispatch message方式\n                Session.set('redirectAfterLogin', context.path)\n                //var redirectAfterLogin =Session.get('redirectAfterLogin')\n                //if(redirectAfterLogin && 'redirectAfterLogin不是login page时'){\n                //    FlowRouter.go(redirectAfterLogin)\n                //}else{\n                //    //to verify\n                //    FlowRouter.go('/')\n                //}\n                FlowRouter.go('/login')\n            }\n        }\n\n    }]);\n\n\n\n    FlowRouter.triggers.exit([function(context){\n        //console.log('Router exit: path='+context.path,' name= '+FlowRouter.getRouteName())\n\n        savedRoute = FlowRouter.current().path\n        window.scrollTo(0,0)\n    }]);\n\n\n\n}\n\n\n\n\n\n// Home Route\nDefaultRoutes.route('/', {\n    name: \"home\",\n    action: function (p) {\n        App.routeHandler(p, {\n            pageTitle: \"Home\",\n            headerNav: null,\n            leftNavToggle:true, //左侧导航触发按钮\n            bodyTmpl: <Cal.Home/>,\n\n            hideBackButton:true,\n            leftNavToggle:true\n        })\n    }\n})\n\nDefaultRoutes.route('/ContactInfoPage', {\n    name: \"ContactInfoPage\",\n    action: function (p) {\n        App.routeHandler(p, {\n            pageTitle: \"ContactInfoPage\",\n            headerNav: null,\n            leftNavToggle:true, //左侧导航触发按钮\n            bodyTmpl: <Cal.ContactInfoPage/>\n        })\n    }\n})\n\n\n\n\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/test.admin.jsx                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/4/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    var TestAdminRoute = FlowRouter.group({                            // 6\n        prefix: '/testAdmin',                                          // 7\n        triggersEnter: [function (context) {}],                        // 8\n        triggersExit: [function () {}]                                 // 11\n    });                                                                //\n                                                                       //\n    TestAdminRoute.route(\"/\", {                                        // 17\n        action: function (p) {                                         // 18\n            App.routeHandler(p, {                                      // 19\n                pageTitle: \"TestAdmin\",                                // 20\n                headerNav: null,                                       // 21\n                hideBackButton: true,                                  // 22\n                layout: Cal.TestAdminLayout,                           // 23\n                bodyTmpl: React.createElement(Cal.TestAdmin, null)     // 24\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    TestAdminRoute.route(\"/registerStage\", {                           // 29\n        action: function (p) {                                         // 30\n            App.routeHandler(p, {                                      // 31\n                pageTitle: \"TestAdmin\",                                // 32\n                headerNav: null,                                       // 33\n                layout: Cal.TestAdminLayout,                           // 34\n                bodyTmpl: React.createElement(Cal.TestAdminRegisterStage, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n                                                                       //\n    TestAdminRoute.route(\"/billing\", {                                 // 40\n        action: function (p) {                                         // 41\n            App.routeHandler(p, {                                      // 42\n                pageTitle: \"Billing\",                                  // 43\n                headerNav: null,                                       // 44\n                layout: Cal.TestAdminLayout,                           // 45\n                bodyTmpl: React.createElement(Cal.TestAdminBilling, null)\n            });                                                        //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/test.admin.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/test.admin.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA;AACI,QAAI,cAAc,GAAG,UAAU,CAAC,KAAK,CAAC;AAClC,cAAM,EAAE,YAAY;AACpB,qBAAa,EAAE,CAAC,UAAU,OAAO,EAAE,EAElC,CAAC;AACF,oBAAY,EAAE,CAAC,YAAY,EAE1B,CAAC;KACL,CAAC,CAAC;;AAGH,kBAAc,CAAC,KAAK,CAAC,GAAG,EAAE;AACtB,cAAM,EAAE,UAAS,CAAC,EAAE;AAChB,eAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,yBAAS,EAAE,WAAW;AACtB,yBAAS,EAAE,IAAI;AACf,8BAAc,EAAC,IAAI;AACnB,sBAAM,EAAC,GAAG,CAAC,eAAe;AAC1B,wBAAQ,EAAE,oBAAC,GAAG,CAAC,SAAS,OAAE;aAC7B,CAAC;SACL;KACJ,CAAC,CAAC;;AAEH,kBAAc,CAAC,KAAK,CAAC,gBAAgB,EAAE;AACnC,cAAM,EAAE,UAAS,CAAC,EAAE;AAChB,eAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,yBAAS,EAAE,WAAW;AACtB,yBAAS,EAAE,IAAI;AACf,sBAAM,EAAC,GAAG,CAAC,eAAe;AAC1B,wBAAQ,EAAE,oBAAC,GAAG,CAAC,sBAAsB,OAAE;aAC1C,CAAC;SACL;KACJ,CAAC,CAAC;;AAEH,kBAAc,CAAC,KAAK,CAAC,UAAU,EAAE;AAC7B,cAAM,EAAE,UAAS,CAAC,EAAE;AAChB,eAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,yBAAS,EAAE,SAAS;AACpB,yBAAS,EAAE,IAAI;AACf,sBAAM,EAAC,GAAG,CAAC,eAAe;AAC1B,wBAAQ,EAAE,oBAAC,GAAG,CAAC,gBAAgB,OAAG;aACrC,CAAC;SACL;KACJ,CAAC,CAAC;CAGN,wE","file":"/client/lib/router/test.admin.jsx","sourcesContent":["/**\n * Created on 10/4/15.\n */\n\n{\n    let TestAdminRoute = FlowRouter.group({\n        prefix: '/testAdmin',\n        triggersEnter: [function (context) {\n\n        }],\n        triggersExit: [function () {\n\n        }]\n    });\n\n\n    TestAdminRoute.route(\"/\", {\n        action: function(p) {\n            App.routeHandler(p, {\n                pageTitle: \"TestAdmin\",\n                headerNav: null,\n                hideBackButton:true,\n                layout:Cal.TestAdminLayout,\n                bodyTmpl: <Cal.TestAdmin/>\n            })\n        }\n    });\n\n    TestAdminRoute.route(\"/registerStage\", {\n        action: function(p) {\n            App.routeHandler(p, {\n                pageTitle: \"TestAdmin\",\n                headerNav: null,\n                layout:Cal.TestAdminLayout,\n                bodyTmpl: <Cal.TestAdminRegisterStage/>\n            })\n        }\n    });\n\n    TestAdminRoute.route(\"/billing\", {\n        action: function(p) {\n            App.routeHandler(p, {\n                pageTitle: \"Billing\",\n                headerNav: null,\n                layout:Cal.TestAdminLayout,\n                bodyTmpl: <Cal.TestAdminBilling />\n            })\n        }\n    });\n\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/test.jsx                                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n                                                                       //\nDefaultRoutes.route('/test', {                                         // 3\n    name: \"home\",                                                      // 4\n    action: function (p) {                                             // 5\n        App.routeHandler(p, {                                          // 6\n            pageTitle: \"Test\",                                         // 7\n            headerNav: null,                                           // 8\n            bodyTmpl: React.createElement(Cal.Test, null)              // 9\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n                                                                       //\n//layout test                                                          //\nFlowRouter.route(\"/test2\", {                                           // 15\n    action: function () {                                              // 16\n        ReactLayout.render(Cal.TestLayout, {                           // 17\n            content: React.createElement(Cal.Test, null)               // 18\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/test.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/test.jsx"],"names":[],"mappings":";;;;;;;;;;AAEA,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE;AACzB,QAAI,EAAE,MAAM;AACZ,UAAM,EAAE,UAAU,CAAC,EAAE;AACjB,WAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AAChB,qBAAS,EAAE,MAAM;AACjB,qBAAS,EAAE,IAAI;AACf,oBAAQ,EAAE,oBAAC,GAAG,CAAC,IAAI,OAAE;SACxB,CAAC;KACL;CACJ,CAAC;;;AAGF,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE;AACvB,UAAM,EAAE,YAAW;AACf,mBAAW,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;AAC/B,mBAAO,EAAE,oBAAC,GAAG,CAAC,IAAI,OAAE;SACvB,CAAC,CAAC;KACN;CACJ,CAAC,CAAC,sE","file":"/client/lib/router/test.jsx","sourcesContent":["\n\nDefaultRoutes.route('/test', {\n    name: \"home\",\n    action: function (p) {\n        App.routeHandler(p, {\n            pageTitle: \"Test\",\n            headerNav: null,\n            bodyTmpl: <Cal.Test/>\n        })\n    }\n})\n\n//layout test\nFlowRouter.route(\"/test2\", {\n    action: function() {\n        ReactLayout.render(Cal.TestLayout, {\n            content: <Cal.Test/>\n        });\n    }\n});\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/lib/router/utils.jsx                                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n                                                                       //\n// Route Handler Function for every Route                              //\n                                                                       //\nApp.routeHandler = function (p, args) {                                // 5\n    var defs = {                                                       // 6\n        // Meta                                                        //\n        metaTitle: Meteor.settings[\"public\"].appName,                  // 8\n        metaDesc: Meteor.settings[\"public\"].appDesc,                   // 9\n                                                                       //\n        // Route                                                       //\n        layout: Cal.Main,                                              // 12\n        pageTitle: \"Unknown\",                                          // 13\n        showGlobalNav: false,                                          // 14\n        globalNav: null,                                               // 15\n        globalNavLocation: \"auto\",                                     // 16\n        headerNav: null,                                               // 17\n        bodyTmpl: React.createElement(RC.NotFound, null)               // 18\n    };                                                                 //\n    if (_.isObject(args)) _.defaults(args, defs);else args = defs;     // 20\n                                                                       //\n    document.title = args.metaTitle;                                   // 22\n    document.description = args.metaDesc;                              // 23\n                                                                       //\n    ReactLayout.render(args.layout, {                                  // 25\n        title: args.pageTitle,                                         // 26\n        showGlobalNav: args.showGlobalNav,                             // 27\n        globalNav: args.globalNav,                                     // 28\n        globalNavLocation: args.globalNavLocation,                     // 29\n        headerNav: args.headerNav,                                     // 30\n        leftNavToggle: args.leftNavToggle,                             // 31\n                                                                       //\n        hideBackButton: args.hideBackButton,                           // 33\n        hideLeftNavToggle: args.hideLeftNavToggle,                     // 34\n        hideShoppingCartButton: args.hideShoppingCartButton,           // 35\n                                                                       //\n        body: args.bodyTmpl                                            // 37\n    });                                                                //\n};                                                                     //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/lib/router/utils.jsx","sourceMap":{"version":3,"sources":["/client/lib/router/utils.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,IAAI,EAAE;AAClC,QAAI,IAAI,GAAG;;AAEP,iBAAS,EAAE,MAAM,CAAC,QAAQ,UAAO,CAAC,OAAO;AACzC,gBAAQ,EAAE,MAAM,CAAC,QAAQ,UAAO,CAAC,OAAO;;;AAGxC,cAAM,EAAE,GAAG,CAAC,IAAI;AAChB,iBAAS,EAAE,SAAS;AACpB,qBAAa,EAAE,KAAK;AACpB,iBAAS,EAAE,IAAI;AACf,yBAAiB,EAAE,MAAM;AACzB,iBAAS,EAAE,IAAI;AACf,gBAAQ,EAAE,oBAAC,EAAE,CAAC,QAAQ,OAAE;KAC3B;AACD,QAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,KAAM,IAAI,GAAG,IAAI,CAAC;;AAE/D,YAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS;AAC/B,YAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ;;AAEpC,eAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;AAC5B,aAAK,EAAE,IAAI,CAAC,SAAS;AACrB,qBAAa,EAAE,IAAI,CAAC,aAAa;AACjC,iBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,yBAAiB,EAAE,IAAI,CAAC,iBAAiB;AACzC,iBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,qBAAa,EAAC,IAAI,CAAC,aAAa;;AAEhC,sBAAc,EAAC,IAAI,CAAC,cAAc;AAClC,yBAAiB,EAAC,IAAI,CAAC,iBAAiB;AACxC,8BAAsB,EAAC,IAAI,CAAC,sBAAsB;;AAElD,YAAI,EAAE,IAAI,CAAC,QAAQ;KACtB,CAAC;CACL,wE","file":"/client/lib/router/utils.jsx","sourcesContent":["\n\n// Route Handler Function for every Route\n\nApp.routeHandler = function (p, args) {\n    let defs = {\n        // Meta\n        metaTitle: Meteor.settings.public.appName,\n        metaDesc: Meteor.settings.public.appDesc,\n\n        // Route\n        layout: Cal.Main,\n        pageTitle: \"Unknown\",\n        showGlobalNav: false,\n        globalNav: null,\n        globalNavLocation: \"auto\",\n        headerNav: null,\n        bodyTmpl: <RC.NotFound/>\n    }\n    if (_.isObject(args)) _.defaults(args, defs); else args = defs;\n\n    document.title = args.metaTitle\n    document.description = args.metaDesc\n\n    ReactLayout.render(args.layout, {\n        title: args.pageTitle,\n        showGlobalNav: args.showGlobalNav,\n        globalNav: args.globalNav,\n        globalNavLocation: args.globalNavLocation,\n        headerNav: args.headerNav,\n        leftNavToggle:args.leftNavToggle,\n\n        hideBackButton:args.hideBackButton,\n        hideLeftNavToggle:args.hideLeftNavToggle,\n        hideShoppingCartButton:args.hideShoppingCartButton,\n\n        body: args.bodyTmpl\n    })\n}\n\n"]}},{"type":"js","data":"(function(){/**\n * Created by Jeffreyfan on 10/10/15.\n */\n\n\n//一轮选择中 class重复检测\nApp.currentClass_in_selectedClasses=function(currentClass,selectedClasses){\n    var classItem;\n    for(var i=1;i<=3; i++){\n        classItem = selectedClasses.get('class'+i)\n        if(classItem && classItem._id == currentClass._id){\n            return true\n        }\n    }\n    return false;\n}\n\nApp.class_in_shoppingCart=function(classItem, shoppingCart){\n    var shoppingCartItems = (shoppingCart && shoppingCart.items)||[]\n\n    var exist= _.some(shoppingCartItems,function(cartItem){\n        return cartItem.classId == classItem._id\n               && cartItem.class1\n               && cartItem.class2  //三个preference填写完整才算\n               && cartItem.class3\n    })\n\n    return exist;\n\n}\n}).call(this);\n","servePath":"/client/lib/utils/selectClass.js","sourceMap":{"version":3,"sources":["/client/lib/utils/selectClass.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/client/lib/utils/selectClass.js","sourcesContent":["/**\n * Created by Jeffreyfan on 10/10/15.\n */\n\n\n//一轮选择中 class重复检测\nApp.currentClass_in_selectedClasses=function(currentClass,selectedClasses){\n    var classItem;\n    for(var i=1;i<=3; i++){\n        classItem = selectedClasses.get('class'+i)\n        if(classItem && classItem._id == currentClass._id){\n            return true\n        }\n    }\n    return false;\n}\n\nApp.class_in_shoppingCart=function(classItem, shoppingCart){\n    var shoppingCartItems = (shoppingCart && shoppingCart.items)||[]\n\n    var exist= _.some(shoppingCartItems,function(cartItem){\n        return cartItem.classId == classItem._id\n               && cartItem.class1\n               && cartItem.class2  //三个preference填写完整才算\n               && cartItem.class3\n    })\n\n    return exist;\n\n}"]}},{"type":"js","data":"(function(){// Variable Declarations\n//Schema = {} // Schemas\n//App = {} // Main App\n\nif (!Meteor.settings) Meteor.settings = {}\nif (!Meteor.settings.public) Meteor.settings.public = {}\nif (!Meteor.settings.public.appName) Meteor.settings.public.appName = \"Calphin\"\nif (!Meteor.settings.public.appDesc) Meteor.settings.public.appDesc = \"Calphin App\"\n\n\n\n\n\nMeteor.startup( function() {\n  /**\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   * NOT Cordova Bootstrap\n   * Only used for dev/testing\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (!Meteor.isCordova) {\n\n  }\n\n  /**\n  * # # # # # # # # # # # # # # # # # # # # # # # #\n   * Server Bootstrap\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (Meteor.isServer) {\n    // Server Bootstrap\n  }\n})\n\n}).call(this);\n","servePath":"/lib/boot/boot.js","sourceMap":{"version":3,"sources":["/lib/boot/boot.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/boot/boot.js","sourcesContent":["// Variable Declarations\n//Schema = {} // Schemas\n//App = {} // Main App\n\nif (!Meteor.settings) Meteor.settings = {}\nif (!Meteor.settings.public) Meteor.settings.public = {}\nif (!Meteor.settings.public.appName) Meteor.settings.public.appName = \"Calphin\"\nif (!Meteor.settings.public.appDesc) Meteor.settings.public.appDesc = \"Calphin App\"\n\n\n\n\n\nMeteor.startup( function() {\n  /**\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   * NOT Cordova Bootstrap\n   * Only used for dev/testing\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (!Meteor.isCordova) {\n\n  }\n\n  /**\n  * # # # # # # # # # # # # # # # # # # # # # # # #\n   * Server Bootstrap\n   * # # # # # # # # # # # # # # # # # # # # # # # #\n   */\n  if (Meteor.isServer) {\n    // Server Bootstrap\n  }\n})\n"]}},{"type":"js","data":"(function(){/*\n * Created on Oct. 9\n * Helper functions for accounts and authentication related problems.\n */\n\nApp.checkPassword=function(str){\n\t// should have at least one capital letter\n\tvar containCapitalLetter = /[A-Z]/.test(str);\n\t// should be at least one numerical number\n\tvar containNumber = /[0-9]/.test(str);\n\t// should be at least 8 characters\n\tvar longEnough = str.length >= 8;\n\treturn (containNumber && containCapitalLetter && longEnough);\n}\n}).call(this);\n","servePath":"/lib/account.helper.js","sourceMap":{"version":3,"sources":["/lib/account.helper.js"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/lib/account.helper.js","sourcesContent":["/*\n * Created on Oct. 9\n * Helper functions for accounts and authentication related problems.\n */\n\nApp.checkPassword=function(str){\n\t// should have at least one capital letter\n\tvar containCapitalLetter = /[A-Z]/.test(str);\n\t// should be at least one numerical number\n\tvar containNumber = /[0-9]/.test(str);\n\t// should be at least 8 characters\n\tvar longEnough = str.length >= 8;\n\treturn (containNumber && containCapitalLetter && longEnough);\n}"]}},{"type":"js","data":"(function(){/**\n * Created on 9/17/15.\n */\n\n\nMeteor.startup(function () {\n\n    if(Meteor.isClient){\n        Meteor.subscribe(\"appInfo\");\n\n        Tracker.autorun(function () {\n\n            App.info = DB.App.findOne()\n        })\n    }else{\n        App.info = DB.App.findOne()\n    }\n\n\n})\n\n\n}).call(this);\n","servePath":"/lib/app.db.config.js","sourceMap":{"version":3,"sources":["/lib/app.db.config.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/app.db.config.js","sourcesContent":["/**\n * Created on 9/17/15.\n */\n\n\nMeteor.startup(function () {\n\n    if(Meteor.isClient){\n        Meteor.subscribe(\"appInfo\");\n\n        Tracker.autorun(function () {\n\n            App.info = DB.App.findOne()\n        })\n    }else{\n        App.info = DB.App.findOne()\n    }\n\n\n})\n\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/16/15.\n */\nApp.Config = App.Config || {};\n\nApp.Config.classLevels = [ //从高到底 名字\n    \"ELT III\",\n    \"ELT II\",\n    \"ELT I\",\n\n    \"MST III\",\n    \"MST II\",\n    \"MST I\",\n\n    \"CHL III\",\n    \"CHL II\",\n    \"CHL I\",\n\n    \"RCR III\",\n    \"RCR II\",\n    \"RCR I\",\n\n    \"SPR III\",\n    \"SPR II\",\n    \"SPR I\",\n\n    \"GLD III\",\n    \"GLD II\",\n    \"GLD I\",\n\n    \"CRL III\",\n    \"CRL II\",\n    \"CRL I\",\n\n    \"BUB III\",\n    \"BUB II\",\n    \"BUB I\"\n]\n\nApp.Config.classLevelsNUM = [ //从高到底 名字\n    \"ELT3\",\n    \"ELT2\",\n    \"ELT1\",\n\n    \"MST3\",\n    \"MST2\",\n    \"MST1\",\n\n    \"CHL3\",\n    \"CHL2\",\n    \"CHL1\",\n\n    \"RCR3\",\n    \"RCR2\",\n    \"RCR1\",\n\n    \"SPR3\",\n    \"SPR2\",\n    \"SPR1\",\n\n    \"GLD3\",\n    \"GLD2\",\n    \"GLD2\",\n\n    \"CRL3\",\n    \"CRL3\",\n    \"CRL1\",\n\n    \"BUB3\",\n    \"BUB2\",\n    \"BUB1\"\n]\n\nApp.Config.classEVALLevels = [ //从高到底 名字\n    {label:\"ELT\",value:'ELT1'},\n    {label:\"MST\",value:'MST1'},\n    {label:\"CHL\",value:'CHL1'},\n    {label:\"RCR\",value:'RCR1'},\n    {label:\"SPR\",value:'SPR1'},\n    {label:\"GLD\",value:'GLD2'},\n    {label:\"CRL\",value:'CRL1'},\n    {label:\"BUB\",value:'BUB1'}\n]\n\n\nApp.Config.week = {\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: \"Thurday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n    7: \"Sunday\"\n}\n\n}).call(this);\n","servePath":"/lib/class.level.config.js","sourceMap":{"version":3,"sources":["/lib/class.level.config.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/class.level.config.js","sourcesContent":["/**\n * Created on 9/16/15.\n */\nApp.Config = App.Config || {};\n\nApp.Config.classLevels = [ //从高到底 名字\n    \"ELT III\",\n    \"ELT II\",\n    \"ELT I\",\n\n    \"MST III\",\n    \"MST II\",\n    \"MST I\",\n\n    \"CHL III\",\n    \"CHL II\",\n    \"CHL I\",\n\n    \"RCR III\",\n    \"RCR II\",\n    \"RCR I\",\n\n    \"SPR III\",\n    \"SPR II\",\n    \"SPR I\",\n\n    \"GLD III\",\n    \"GLD II\",\n    \"GLD I\",\n\n    \"CRL III\",\n    \"CRL II\",\n    \"CRL I\",\n\n    \"BUB III\",\n    \"BUB II\",\n    \"BUB I\"\n]\n\nApp.Config.classLevelsNUM = [ //从高到底 名字\n    \"ELT3\",\n    \"ELT2\",\n    \"ELT1\",\n\n    \"MST3\",\n    \"MST2\",\n    \"MST1\",\n\n    \"CHL3\",\n    \"CHL2\",\n    \"CHL1\",\n\n    \"RCR3\",\n    \"RCR2\",\n    \"RCR1\",\n\n    \"SPR3\",\n    \"SPR2\",\n    \"SPR1\",\n\n    \"GLD3\",\n    \"GLD2\",\n    \"GLD2\",\n\n    \"CRL3\",\n    \"CRL3\",\n    \"CRL1\",\n\n    \"BUB3\",\n    \"BUB2\",\n    \"BUB1\"\n]\n\nApp.Config.classEVALLevels = [ //从高到底 名字\n    {label:\"ELT\",value:'ELT1'},\n    {label:\"MST\",value:'MST1'},\n    {label:\"CHL\",value:'CHL1'},\n    {label:\"RCR\",value:'RCR1'},\n    {label:\"SPR\",value:'SPR1'},\n    {label:\"GLD\",value:'GLD2'},\n    {label:\"CRL\",value:'CRL1'},\n    {label:\"BUB\",value:'BUB1'}\n]\n\n\nApp.Config.week = {\n    1: 'Monday',\n    2: 'Tuesday',\n    3: 'Wednesday',\n    4: \"Thurday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n    7: \"Sunday\"\n}\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/14/15.\n */\n\n//\"hh:mm:ss\" 'hh:mm'\n//换算为以毫秒为单位的整数\nApp.time2num=function(str){\n    var t=str.split(':')\n    var h = parseInt(t[0],10)\n    var m= parseInt(t[1],10)\n    var s= parseInt(t[2],10)||0\n    return h*3600*1000 + m*60*1000 + s*1000;\n}\n\nApp.num2time=function(num, second){\n    var h= Math.floor(num/(3600*1000))\n\n    var h_mod = (num % (3600*1000))\n    var m =Math.floor(h_mod/(60*1000))\n    var s = h_mod % (60*1000)\n\n    //todo format  5:3=> 05:03\n    return h+':'+m+(second?(':'+s):'')\n}\nApp.getNextClassLevel=function(level){\n\n    var levels=App.Config.classLevelsNUM\n    var cIndex =levels.indexOf(level)\n\n    if(cIndex == -1)\n        console.error('getNextClassLevel for '+level +' not exist')\n\n    //var nIndex = Math.min(cIndex+1, (levels.length-1))\n    var nIndex = Math.max(cIndex-1, 0)\n\n    console.log('getNextClassLevel', level, levels[nIndex])\n\n    return levels[nIndex]\n\n}\n}).call(this);\n","servePath":"/lib/utils.function.js","sourceMap":{"version":3,"sources":["/lib/utils.function.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/lib/utils.function.js","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n//\"hh:mm:ss\" 'hh:mm'\n//换算为以毫秒为单位的整数\nApp.time2num=function(str){\n    var t=str.split(':')\n    var h = parseInt(t[0],10)\n    var m= parseInt(t[1],10)\n    var s= parseInt(t[2],10)||0\n    return h*3600*1000 + m*60*1000 + s*1000;\n}\n\nApp.num2time=function(num, second){\n    var h= Math.floor(num/(3600*1000))\n\n    var h_mod = (num % (3600*1000))\n    var m =Math.floor(h_mod/(60*1000))\n    var s = h_mod % (60*1000)\n\n    //todo format  5:3=> 05:03\n    return h+':'+m+(second?(':'+s):'')\n}\nApp.getNextClassLevel=function(level){\n\n    var levels=App.Config.classLevelsNUM\n    var cIndex =levels.indexOf(level)\n\n    if(cIndex == -1)\n        console.error('getNextClassLevel for '+level +' not exist')\n\n    //var nIndex = Math.min(cIndex+1, (levels.length-1))\n    var nIndex = Math.max(cIndex-1, 0)\n\n    console.log('getNextClassLevel', level, levels[nIndex])\n\n    return levels[nIndex]\n\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/addWaitingList/AddWaitingListConfirmPage. //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/2/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    (function () {                                                     //\n        var PageStore = undefined;                                     // 6\n        Dependency.autorun(function () {                               // 7\n            PageStore = Dependency.get('classRegister.AddWaitingList.store');\n        });                                                            //\n                                                                       //\n        Cal.AddWaitingListConfirmPage = React.createClass({            // 11\n            displayName: \"AddWaitingListConfirmPage\",                  //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 13\n            getMeteorData: function () {                               // 14\n                return {                                               // 15\n                    currentSwimmer: PageStore.currentSwimmer.get(),    // 16\n                    currentClass: PageStore.currentClass.get()         // 17\n                };                                                     //\n            },                                                         //\n            ok: function () {},                                        // 20\n                                                                       //\n            render: function () {                                      // 25\n                return React.createElement(                            // 26\n                    \"div\",                                             //\n                    { className: \"padding\" },                          //\n                    React.createElement(                               //\n                        RC.Card,                                       // 30\n                        { title: \"Your Waiting List Info\" },           //\n                        React.createElement(                           //\n                            \"p\",                                       //\n                            { className: \"padding\" },                  //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                this.data.currentSwimmer && this.data.currentSwimmer.name\n                            ),                                         //\n                            \"has been added on the waiting list for Level:\",\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                this.data.currentClass && this.data.currentClass.level\n                            ),                                         //\n                            \"and Time:\",                               //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                this.data.currentClass && App.num2time(this.data.currentClass.startTime),\n                                \"-\",                                   //\n                                this.data.currentClass && App.num2time(this.data.currentClass.endTime)\n                            )                                          //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"p\",                                       //\n                            { className: \"padding\" },                  //\n                            \" We will call you once a space is possible\"\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.URL,                                        // 50\n                        { href: \"/\" },                                 //\n                        React.createElement(                           //\n                            RC.Button,                                 // 51\n                            { name: \"button\", theme: \"full\", buttonColor: \"brand\" },\n                            \"OK\"                                       //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/addWaitingList/AddWaitingListConfirmPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/addWaitingList/AddWaitingListConfirmPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA;;AACI,YAAI,SAAS,aAAC;AACd,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,qBAAS,GAAG,UAAU,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;SACpE,CAAC,CAAC;;AAEH,WAAG,CAAC,yBAAyB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE9C,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;AACZ,uBAAO;AACH,kCAAc,EAAC,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE;AAC7C,gCAAY,EAAC,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE;iBAC5C;aACJ;AACD,cAAE,cAAE,EAGH;;AAED,kBAAM,cAAG;AACL,uBAAO;;sBAAK,SAAS,EAAC,SAAS;oBAI3B;AAAC,0BAAE,CAAC,IAAI;0BAAC,KAAK,EAAC,wBAAwB;wBACnC;;8BAAG,SAAS,EAAC,SAAS;4BAClB;;;gCAAI,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI;6BAAK;;4BAGlE;;;gCAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK;6BAAK;;4BAI/D;;;gCAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;;gCAC3E,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;6BAAK;yBAC5E;wBAGJ;;8BAAG,SAAS,EAAC,SAAS;;yBAA+C;qBAE/D;oBAIV;AAAC,0BAAE,CAAC,GAAG;0BAAC,IAAI,EAAC,GAAG;wBACZ;AAAC,8BAAE,CAAC,MAAM;8BAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;yBAE7C;qBACP;iBAGP;aACT;SACJ,CAAC;;CACL,wE","file":"/client/app/class.register/addWaitingList/AddWaitingListConfirmPage.jsx","sourcesContent":["/**\n * Created on 10/2/15.\n */\n\n{\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.AddWaitingList.store');\n    });\n\n    Cal.AddWaitingListConfirmPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            return {\n                currentSwimmer:PageStore.currentSwimmer.get(),\n                currentClass:PageStore.currentClass.get()\n            }\n        },\n        ok(){\n\n\n        },\n\n        render() {\n            return <div className=\"padding\">\n\n\n\n                <RC.Card title=\"Your Waiting List Info\" >\n                    <p className=\"padding\">\n                        <b>{this.data.currentSwimmer && this.data.currentSwimmer.name}</b>\n                         has been added on the waiting list\n                         for Level:\n                        <b>{this.data.currentClass && this.data.currentClass.level}</b>\n\n                         and Time:\n\n                        <b>{this.data.currentClass && App.num2time(this.data.currentClass.startTime)}-\n                        {this.data.currentClass && App.num2time(this.data.currentClass.endTime)}</b>\n                    </p>\n\n\n                    <p className=\"padding\"> We will call you once a space is possible</p>\n\n                </RC.Card>\n\n\n\n                <RC.URL href=\"/\">\n                    <RC.Button name=\"button\" theme=\"full\" buttonColor=\"brand\">\n                        OK\n                    </RC.Button>\n                </RC.URL>\n\n\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/addWaitingList/AddWaitingListPage.Store.j //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/2/15.                                                 //\n */                                                                    //\n                                                                       //\n/**                                                                    //\n * Created on 9/15/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 10\n    //let ShoppingCart;                                                //\n    //Dependency.autorun(function () {                                 //\n    //    ShoppingCart = Dependency.get('classRegister.ShoppingCart.model');\n    //});                                                              //\n                                                                       //\n    Dependency.add('classRegister.AddWaitingList.store', new function () {\n                                                                       //\n        var self = this;                                               // 19\n                                                                       //\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care                                          //\n        self.getSwimmers = function () {                               // 24\n            return DB.Swimmers.find({ accountId: Meteor.userId() });   // 25\n        };                                                             //\n                                                                       //\n        self.props = new ReactiveVar();                                // 28\n                                                                       //\n        //////////////////////////////////////////////////////         //\n        ///////////////////selection info                              //\n        // should reset after add to                                   //\n        //选中的swimmer                                                   //\n        self.currentSwimmer = new ReactiveVar();                       // 34\n        //当前的level                                                     //\n        self.currentLevel = new ReactiveVar();                         // 36\n        //选中的day                                                       //\n        self.currentDay = new ReactiveVar();                           // 38\n        self.currentTime = new ReactiveVar();                          // 39\n        self.currentClass = new ReactiveVar();                         // 40\n                                                                       //\n        //可选days 依赖于 当前的currentLevel                                   //\n        self.avaiableDays = new ReactiveVar([]);                       // 44\n        //可选时间   依赖于 当前选中的currentDay                                   //\n        self.avaiableTimes = new ReactiveVar([]);                      // 46\n                                                                       //\n        var undefinedSelectValueOption = { text: '', value: '' };      // 50\n        var undefinedSelectValue = '';                                 // 51\n                                                                       //\n        //暂存购物车ID 后端会验证其有效性                                            //\n                                                                       //\n        function resetDateAndTime() {                                  // 57\n            self.currentDay.set(undefinedSelectValue);                 // 58\n            self.currentTime.set(undefinedSelectValue);                // 59\n        }                                                              //\n                                                                       //\n        self.tokenId = Dispatcher.register(function (payload) {        // 63\n            switch (payload.actionType) {                              // 64\n                                                                       //\n                case \"CRAddWaitingListPage_PROPS_INIT\":                // 66\n                    //get props                                        //\n                    {                                                  // 67\n                                                                       //\n                        self.props.set(payload.props);                 // 69\n                                                                       //\n                        self.currentDay.set();                         // 71\n                        self.currentTime.set();                        // 72\n                        self.currentClass.set();                       // 73\n                                                                       //\n                        break;                                         // 76\n                    }                                                  //\n                                                                       //\n                case \"CRAddWaitingListPage_SWIMMER_CHANGE\":            // 77\n                    //选择swimmer  level可能会变                             //\n                    {                                                  // 80\n                        var swimmer = payload.swimmer;                 // 81\n                                                                       //\n                        self.currentSwimmer.set(swimmer);              // 83\n                        //self.currentLevel.set(App.getNextClassLevel(swimmer.level))//todo\n                                                                       //\n                        self.currentDay.set();                         // 86\n                        self.currentTime.set();                        // 87\n                                                                       //\n                        debugger;                                      // 89\n                                                                       //\n                        break;                                         // 91\n                    }                                                  //\n                case \"CRAddWaitingListPage_DAY_CHANGE\":                // 93\n                    //选择day                                            //\n                    {                                                  // 94\n                        debugger;                                      // 95\n                                                                       //\n                        self.currentDay.set(payload.day);              // 97\n                        break;                                         // 98\n                    }                                                  //\n                                                                       //\n                case \"CRAddWaitingListPage_TIME_CHANGE\":               // 101\n                    //选择time  确定一个class                                //\n                    {                                                  // 102\n                        debugger;                                      // 103\n                        self.currentTime.set(payload.time);            // 104\n                        break;                                         // 105\n                    }                                                  //\n                                                                       //\n                case \"CRAddWaitingListPage_CLASS_SELECT\":              // 109\n                    //select确定                                         //\n                    {                                                  // 110\n                        debugger;                                      // 111\n                                                                       //\n                        var currentSwimmer = self.currentSwimmer.get();\n                        var currentClass = self.currentClass.get();    // 114\n                                                                       //\n                        Meteor.call('add_waiting_list', currentSwimmer._id, currentClass._id, function (err, result) {\n                            if (err) {                                 // 118\n                                console.error(err);                    // 119\n                                return;                                // 120\n                            }                                          //\n                                                                       //\n                            FlowRouter.go('/classRegister/AddWaitingListConfirm');\n                        });                                            //\n                                                                       //\n                        break;                                         // 126\n                    }                                                  //\n                                                                       //\n                case \"GOTO_CRAddWaitingListPage\":                      // 127\n                    {                                                  // 130\n                        //清空上一轮的选择                                     //\n                                                                       //\n                        self.currentDay.set(undefinedSelectValue);     // 133\n                        self.currentTime.set(undefinedSelectValue);    // 134\n                        self.currentClass.set(null);                   // 135\n                        //self.currentStep.set(1)                      //\n                        //self.avaiableDays //依赖于 当前的currentLevel      //\n                        //self.avaiableTimes //依赖于 当前选中的currentDay     //\n                                                                       //\n                        self.selectedClasses.set(Immutable.Map());     // 140\n                    }                                                  //\n                                                                       //\n            }                                                          // 143\n        });                                                            //\n                                                                       //\n        /*                                                             //\n         *                                                             //\n         * ********************* wait for ******************           //\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *                                                             //\n         * */                                                          //\n                                                                       //\n        Meteor.startup(function () {                                   // 156\n                                                                       //\n            Tracker.autorun(function (compution) {                     // 159\n                var props = self.props.get();                          // 160\n                                                                       //\n                if (!props) return;                                    // 162\n                console.log('autorun props', props);                   // 163\n                                                                       //\n                var currentSwimmer = DB.Swimmers.findOne({             // 166\n                    _id: props.swimmerId                               // 167\n                });                                                    //\n                                                                       //\n                var currentLevel = props.classLevel;                   // 170\n                                                                       //\n                self.currentSwimmer.set(currentSwimmer);               // 172\n                self.currentLevel.set(currentLevel);                   // 173\n            });                                                        //\n                                                                       //\n            //days depend on level of swimmer                          //\n            Tracker.autorun(function () {                              // 180\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 182\n                if (!App.info) return;                                 // 183\n                                                                       //\n                var level = self.currentLevel.get();                   // 186\n                                                                       //\n                //Tracker.nonreactive(function () {                    //\n                                                                       //\n                //todo  计算可用数目报名数                                      //\n                var classes = DB.Classes.find({                        // 191\n                    sessionId: App.info && App.info.sessionRegister, //level session\n                    levels: level,                                     // 193\n                    seatsRemain: { $lte: 0 }                           // 194\n                }).fetch();                                            //\n                                                                       //\n                //debugger                                             //\n                classes = _.uniq(classes, function (item, key, a) {    // 198\n                    return item.day;                                   // 199\n                });                                                    //\n                                                                       //\n                var days = classes.map(function (v, n) {               // 202\n                    return { text: App.Config.week[v.day], value: v.day };\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption);              // 207\n                                                                       //\n                self.avaiableDays.set(days);                           // 209\n                                                                       //\n                //设置默认值                                                //\n                //if (days.length) {                                   //\n                //    self.currentDay.set(days[0].value)               //\n                //}                                                    //\n                                                                       //\n                //});                                                  //\n            });                                                        //\n                                                                       //\n            /// time depend on day                                     //\n            Tracker.autorun(function () {                              // 223\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 225\n                if (!App.info) return;                                 // 226\n                                                                       //\n                var currentDay = self.currentDay.get();                // 228\n                                                                       //\n                var level;                                             // 230\n                Tracker.nonreactive(function () {                      // 231\n                    level = self.currentLevel.get();                   // 232\n                });                                                    //\n                                                                       //\n                var classes = DB.Classes.find({                        // 235\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 237\n                    day: currentDay,                                   // 238\n                    seatsRemain: { $lte: 0 }                           // 239\n                                                                       //\n                }).fetch();                                            //\n                                                                       //\n                var times = classes.map(function (v, n) {              // 243\n                    return {                                           // 244\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime                             // 246\n                    };                                                 //\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption);             // 251\n                                                                       //\n                self.avaiableTimes.set(times);                         // 253\n                                                                       //\n                //初始化time                                              //\n                //if (times.length) {                                  //\n                //    self.currentTime.set(times[0].value)             //\n                //}                                                    //\n            });                                                        //\n                                                                       //\n            //time确定后class就确定了                                         //\n            //level + day+ time  确定一个class                             //\n            Tracker.autorun(function () {                              // 268\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 270\n                if (!App.info) return;                                 // 271\n                                                                       //\n                var time = self.currentTime.get();                     // 273\n                                                                       //\n                var level = undefined;                                 // 276\n                var day = undefined;                                   // 277\n                Tracker.nonreactive(function () {                      // 278\n                    level = self.currentLevel.get();                   // 279\n                    day = self.currentDay.get();                       // 280\n                });                                                    //\n                                                                       //\n                var theClass = DB.Classes.find({                       // 283\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 285\n                    day: day,                                          // 286\n                    startTime: time,                                   // 287\n                    seatsRemain: { $lte: 0 }                           // 288\n                                                                       //\n                }).fetch();                                            //\n                                                                       //\n                if (theClass[0]) {                                     // 292\n                    self.currentClass.set(theClass[0]);                // 293\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //初始化swimmer and level                                     //\n            //Tracker.autorun(function () {                            //\n            //    //if(!DB.Swimmers) return;                           //\n            //                                                         //\n            //    var swimmers = self.getSwimmers().fetch()            //\n            //    if (swimmers.length) {                               //\n            //        self.currentSwimmer.set(swimmers[0])             //\n            //        self.currentLevel.set(App.getNextClassLevel(swimmers[0].level))\n            //    }                                                    //\n            //                                                         //\n            //})                                                       //\n        });                                                            //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/addWaitingList/AddWaitingListPage.Store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/addWaitingList/AddWaitingListPage.Store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/addWaitingList/AddWaitingListPage.Store.jsx","sourcesContent":["/**\n * Created on 10/2/15.\n */\n\n/**\n * Created on 9/15/15.\n */\n\n\n{\n    //let ShoppingCart;\n    //Dependency.autorun(function () {\n    //    ShoppingCart = Dependency.get('classRegister.ShoppingCart.model');\n    //});\n\n\n    Dependency.add('classRegister.AddWaitingList.store', new function () {\n\n        var self = this;\n\n\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care\n        self.getSwimmers = function () {\n            return DB.Swimmers.find({accountId: Meteor.userId()})\n        }\n\n        self.props = new ReactiveVar();\n\n        //////////////////////////////////////////////////////\n        ///////////////////selection info\n        // should reset after add to\n        //选中的swimmer\n        self.currentSwimmer = new ReactiveVar()\n        //当前的level\n        self.currentLevel = new ReactiveVar()\n        //选中的day\n        self.currentDay = new ReactiveVar()\n        self.currentTime = new ReactiveVar()\n        self.currentClass = new ReactiveVar()\n\n\n        //可选days 依赖于 当前的currentLevel\n        self.avaiableDays = new ReactiveVar([])\n        //可选时间   依赖于 当前选中的currentDay\n        self.avaiableTimes = new ReactiveVar([])\n\n\n\n        var undefinedSelectValueOption = {text:'', value: ''};\n        var undefinedSelectValue = '';\n\n\n        //暂存购物车ID 后端会验证其有效性\n\n\n        function resetDateAndTime() {\n            self.currentDay.set(undefinedSelectValue)\n            self.currentTime.set(undefinedSelectValue)\n        }\n\n\n        self.tokenId = Dispatcher.register(function (payload) {\n            switch (payload.actionType) {\n\n                case \"CRAddWaitingListPage_PROPS_INIT\"://get props\n                {\n\n                    self.props.set(payload.props)\n\n                    self.currentDay.set()\n                    self.currentTime.set()\n                    self.currentClass.set()\n\n\n                    break;\n                }\n\n                case \"CRAddWaitingListPage_SWIMMER_CHANGE\": //选择swimmer  level可能会变\n                {\n                    let swimmer = payload.swimmer\n\n                    self.currentSwimmer.set(swimmer)\n                    //self.currentLevel.set(App.getNextClassLevel(swimmer.level))//todo\n\n                    self.currentDay.set()\n                    self.currentTime.set()\n\n                    debugger\n\n                    break;\n                }\n                case \"CRAddWaitingListPage_DAY_CHANGE\"://选择day\n                {\n                    debugger\n\n                    self.currentDay.set(payload.day)\n                    break;\n                }\n\n                case \"CRAddWaitingListPage_TIME_CHANGE\"://选择time  确定一个class\n                {\n                    debugger\n                    self.currentTime.set(payload.time)\n                    break;\n                }\n\n\n                case \"CRAddWaitingListPage_CLASS_SELECT\"://select确定\n                {\n                    debugger\n\n                    var currentSwimmer=self.currentSwimmer.get()\n                    var currentClass = self.currentClass.get()\n\n                    Meteor.call('add_waiting_list',currentSwimmer._id,\n                        currentClass._id,function(err, result){\n                            if(err){\n                                console.error(err)\n                                return;\n                            }\n\n                            FlowRouter.go('/classRegister/AddWaitingListConfirm');\n                        })\n\n                    break;\n                }\n\n                case \"GOTO_CRAddWaitingListPage\":\n                {\n                    //清空上一轮的选择\n\n                    self.currentDay.set(undefinedSelectValue)\n                    self.currentTime.set(undefinedSelectValue)\n                    self.currentClass.set(null)\n                    //self.currentStep.set(1)\n                    //self.avaiableDays //依赖于 当前的currentLevel\n                    //self.avaiableTimes //依赖于 当前选中的currentDay\n\n                    self.selectedClasses.set(Immutable.Map())\n\n\n                }\n\n            }\n        });\n\n\n        /*\n         *\n         * ********************* wait for ******************\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *\n         * */\n\n        Meteor.startup(function () {\n\n\n            Tracker.autorun(function (compution) {\n                var props = self.props.get();\n\n                if(!props) return;\n                console.log('autorun props', props)\n\n\n                var currentSwimmer= DB.Swimmers.findOne({\n                    _id:props.swimmerId\n                })\n\n                var currentLevel =props.classLevel\n\n                self.currentSwimmer.set(currentSwimmer)\n                self.currentLevel.set(currentLevel)\n\n\n            })\n\n\n                //days depend on level of swimmer\n            Tracker.autorun(function () {\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n\n                var level = self.currentLevel.get();\n\n                //Tracker.nonreactive(function () {\n\n                //todo  计算可用数目报名数\n                let classes = DB.Classes.find({\n                    sessionId: App.info && App.info.sessionRegister, //level session\n                    levels: level,\n                    seatsRemain:{$lte:0}\n                }).fetch()\n\n                //debugger\n                classes = _.uniq(classes, function (item, key, a) {\n                    return item.day;\n                });\n\n                let days = classes.map(function (v, n) {\n                    return {text: App.Config.week[v.day], value: v.day}\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption)\n\n                self.avaiableDays.set(days)\n\n                //设置默认值\n                //if (days.length) {\n                //    self.currentDay.set(days[0].value)\n                //}\n\n\n                //});\n\n\n            });\n\n            /// time depend on day\n            Tracker.autorun(function () {\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n                var currentDay = self.currentDay.get();\n\n                var level\n                Tracker.nonreactive(function(){\n                    level = self.currentLevel.get()\n                });\n\n                let classes = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: currentDay,\n                    seatsRemain:{$lte:0}\n\n                }).fetch()\n\n                let times = classes.map(function (v, n) {\n                    return {\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime\n                    }\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption)\n\n                self.avaiableTimes.set(times)\n\n                //初始化time\n                //if (times.length) {\n                //    self.currentTime.set(times[0].value)\n                //}\n\n\n\n\n\n            });\n\n            //time确定后class就确定了\n            //level + day+ time  确定一个class\n            Tracker.autorun(function () {\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n                let time = self.currentTime.get()\n\n\n                let level\n                let day\n                Tracker.nonreactive(function(){\n                    level = self.currentLevel.get()\n                    day = self.currentDay.get()\n                });\n\n                let theClass = DB.Classes.find({\n                    sessionId:  App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: day,\n                    startTime: time,\n                    seatsRemain:{$lte:0}\n\n                }).fetch()\n\n                if (theClass[0]) {\n                    self.currentClass.set(theClass[0])\n                }\n\n\n            });\n\n\n            //初始化swimmer and level\n            //Tracker.autorun(function () {\n            //    //if(!DB.Swimmers) return;\n            //\n            //    var swimmers = self.getSwimmers().fetch()\n            //    if (swimmers.length) {\n            //        self.currentSwimmer.set(swimmers[0])\n            //        self.currentLevel.set(App.getNextClassLevel(swimmers[0].level))\n            //    }\n            //\n            //})\n        })\n\n\n    });\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/addWaitingList/AddWaitingListPage.jsx     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/16/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    (function () {                                                     //\n                                                                       //\n        var PageStore = undefined;                                     // 8\n        Dependency.autorun(function () {                               // 9\n            PageStore = Dependency.get('classRegister.AddWaitingList.store');\n        });                                                            //\n                                                                       //\n        Cal.CRAddWaitingListPage = React.createClass({                 // 14\n            displayName: \"CRAddWaitingListPage\",                       //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 16\n            getMeteorData: function () {                               // 17\n                                                                       //\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                Meteor.subscribe(\"classes\");                           // 20\n                                                                       //\n                var data = {                                           // 23\n                    account: Meteor.users.find().fetch(),              // 24\n                                                                       //\n                    //swimmers: PageStore.getSwimmers().fetch(),       //\n                                                                       //\n                    currentLevel: PageStore.currentLevel.get(), //next level\n                                                                       //\n                    currentSwimmer: PageStore.currentSwimmer.get(),    // 31\n                                                                       //\n                    //should wait for currentSwimmer                   //\n                    avaiableDays: PageStore.avaiableDays.get(),        // 34\n                    avaiableTimes: PageStore.avaiableTimes.get(),      // 35\n                    currentDay: PageStore.currentDay.get(),            // 36\n                    currentTime: PageStore.currentTime.get()           // 37\n                };                                                     //\n                                                                       //\n                return data;                                           // 40\n            },                                                         //\n                                                                       //\n            swimmerChange: function (e) {                              // 43\n                var value = this.refs.swimmer.getValue();              // 44\n                                                                       //\n                var swimmer = _.find(this.data.swimmers, function (v, n) {\n                    return v._id == value;                             // 47\n                });                                                    //\n                                                                       //\n                Dispatcher.dispatch({                                  // 50\n                    actionType: \"CRAddWaitingListPage_SWIMMER_CHANGE\",\n                    swimmer: swimmer                                   // 52\n                });                                                    //\n            },                                                         //\n            dayChange: function (e) {                                  // 56\n                var value = this.refs.day.getValue();                  // 57\n                value = parseInt(value, 10);                           // 58\n                                                                       //\n                Dispatcher.dispatch({                                  // 60\n                    actionType: \"CRAddWaitingListPage_DAY_CHANGE\",     // 61\n                    day: value                                         // 62\n                });                                                    //\n            },                                                         //\n            timeChange: function (e) {                                 // 67\n                var value = this.refs.time.getValue();                 // 68\n                value = parseInt(value, 10);                           // 69\n                Dispatcher.dispatch({                                  // 70\n                    actionType: \"CRAddWaitingListPage_TIME_CHANGE\",    // 71\n                    time: value                                        // 72\n                });                                                    //\n            },                                                         //\n                                                                       //\n            formSubmit: function (e) {                                 // 77\n                e.preventDefault();                                    // 78\n                                                                       //\n                var formData = this.refs.myForm.getFormData();         // 80\n                                                                       //\n                debugger;                                              // 82\n                                                                       //\n                //todo validation info in ui                           //\n                if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n                                                                       //\n                    alert('please select a class');                    // 87\n                    return;                                            // 88\n                }                                                      //\n                                                                       //\n                Dispatcher.dispatch({                                  // 91\n                    actionType: \"CRAddWaitingListPage_CLASS_SELECT\",   // 92\n                    selectedClass: formData                            // 93\n                });                                                    //\n            },                                                         //\n            componentWillMount: function () {                          // 97\n                ///PASS  props value to store                          //\n                Dispatcher.dispatch({                                  // 99\n                    actionType: 'CRAddWaitingListPage_PROPS_INIT',     // 100\n                    props: this.props                                  // 101\n                });                                                    //\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 106\n                                                                       //\n                //let swimmers = this.data.swimmers.map(function (v, i) {\n                //    return {text: v['name'], value: v._id}           //\n                //})                                                   //\n                                                                       //\n                var currentSwimmerValue = this.data.currentSwimmer && { value: this.data.currentSwimmer._id,\n                    text: this.data.currentSwimmer.name };             // 115\n                                                                       //\n                return React.createElement(                            // 118\n                    \"div\",                                             //\n                    null,                                              //\n                    React.createElement(                               //\n                        RC.Card,                                       // 120\n                        { key: Math.random(), className: \"padding\" },  //\n                        React.createElement(                           //\n                            \"p\",                                       //\n                            null,                                      //\n                            \"Pick a time and you will be on our waiting list\"\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Form,                                       // 128\n                        { ref: \"myForm\", key: Math.random(), onSubmit: this.formSubmit },\n                        React.createElement(                           //\n                            RC.List,                                   // 129\n                            { theme: \"inset\" },                        //\n                            React.createElement(                       //\n                                RC.Item,                               // 132\n                                { uiColor: \"brand1\" },                 //\n                                \"Swimmer: \",                           //\n                                this.data.currentSwimmer && this.data.currentSwimmer.name\n                            ),                                         //\n                            React.createElement(                       //\n                                RC.Item,                               // 137\n                                { uiColor: \"brand1\" },                 //\n                                \"Level: \",                             //\n                                this.data.currentLevel                 //\n                            ),                                         //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"day\",                            // 142\n                                options: this.data.avaiableDays,       // 143\n                                value: this.data.currentDay,           // 144\n                                name: \"day\",                           // 145\n                                changeHandler: this.dayChange,         // 146\n                                label: \"Day\"                           // 147\n                            }),                                        //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"time\",                           // 151\n                                options: this.data.avaiableTimes,      // 152\n                                value: this.data.currentTime,          // 153\n                                name: \"time\",                          // 154\n                                changeHandler: this.timeChange,        // 155\n                                label: \"Time\"                          // 156\n                            }),                                        //\n                            React.createElement(                       //\n                                RC.Button,                             // 158\n                                { name: \"button\", type: \"submit\",      //\n                                    onClick: this.formSubmit,          // 159\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                \"Add Waiting List\"                     //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/addWaitingList/AddWaitingListPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/addWaitingList/AddWaitingListPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/addWaitingList/AddWaitingListPage.jsx","sourcesContent":["/**\n * Created on 9/16/15.\n */\n\n{\n\n\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.AddWaitingList.store');\n    });\n\n\n    Cal.CRAddWaitingListPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            Meteor.subscribe(\"classes\");\n\n\n            var data = {\n                account: Meteor.users.find().fetch(),\n\n                //swimmers: PageStore.getSwimmers().fetch(),\n\n                currentLevel:PageStore.currentLevel.get(), //next level\n\n\n                currentSwimmer: PageStore.currentSwimmer.get(),\n\n                //should wait for currentSwimmer\n                avaiableDays: PageStore.avaiableDays.get(),\n                avaiableTimes: PageStore.avaiableTimes.get(),\n                currentDay: PageStore.currentDay.get(),\n                currentTime: PageStore.currentTime.get(),\n            }\n\n            return data\n        },\n\n        swimmerChange(e){\n            var value = this.refs.swimmer.getValue()\n\n            var swimmer = _.find(this.data.swimmers, function (v, n) {\n                return v._id == value;\n            })\n\n            Dispatcher.dispatch({\n                actionType: \"CRAddWaitingListPage_SWIMMER_CHANGE\",\n                swimmer: swimmer\n            });\n\n        },\n        dayChange(e){\n            var value = this.refs.day.getValue()\n            value = parseInt(value, 10)\n\n            Dispatcher.dispatch({\n                actionType: \"CRAddWaitingListPage_DAY_CHANGE\",\n                day: value\n            });\n\n\n        },\n        timeChange(e){\n            var value = this.refs.time.getValue()\n            value = parseInt(value, 10)\n            Dispatcher.dispatch({\n                actionType: \"CRAddWaitingListPage_TIME_CHANGE\",\n                time: value\n            });\n\n        },\n\n        formSubmit (e) {\n            e.preventDefault()\n\n            var formData = this.refs.myForm.getFormData()\n\n            debugger\n\n            //todo validation info in ui\n            if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n\n                alert('please select a class')\n                return;\n            }\n\n            Dispatcher.dispatch({\n                actionType: \"CRAddWaitingListPage_CLASS_SELECT\",\n                selectedClass: formData\n            });\n\n        },\n        componentWillMount(){\n             ///PASS  props value to store\n            Dispatcher.dispatch({\n                actionType: 'CRAddWaitingListPage_PROPS_INIT',\n                props: this.props\n            });\n\n        },\n\n        render() {\n\n            //let swimmers = this.data.swimmers.map(function (v, i) {\n            //    return {text: v['name'], value: v._id}\n            //})\n\n\n            let currentSwimmerValue = this.data.currentSwimmer\n                && {value:this.data.currentSwimmer._id,\n                    text:this.data.currentSwimmer.name}\n\n\n            return <div>\n\n                <RC.Card key={Math.random()} className=\"padding\">\n\n                    <p>\n                        Pick a time and you will be on our waiting list\n                    </p>\n\n                </RC.Card>\n\n                <RC.Form ref=\"myForm\" key={Math.random()} onSubmit={this.formSubmit}>\n                    <RC.List theme=\"inset\">\n\n\n                        <RC.Item uiColor=\"brand1\">\n                            Swimmer: {this.data.currentSwimmer\n                                        && this.data.currentSwimmer.name}\n                        </RC.Item>\n\n                        <RC.Item uiColor=\"brand1\">\n                            Level: {this.data.currentLevel}\n                        </RC.Item>\n\n                        <RC.Select2\n                            ref=\"day\"\n                            options={this.data.avaiableDays}\n                            value={this.data.currentDay}\n                            name=\"day\"\n                            changeHandler={this.dayChange}\n                            label=\"Day\"\n                            />\n\n                        <RC.Select2\n                            ref=\"time\"\n                            options={this.data.avaiableTimes}\n                            value={this.data.currentTime}\n                            name=\"time\"\n                            changeHandler={this.timeChange}\n                            label=\"Time\"\n                            />\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   onClick={this.formSubmit}\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Add Waiting List\n                        </RC.Button>\n\n\n                    </RC.List>\n                </RC.Form>\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/BookTheSameTimePage.jsx   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    (function () {                                                     //\n        var PageStore = undefined;                                     // 7\n        Dependency.autorun(function () {                               // 8\n            PageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n        });                                                            //\n                                                                       //\n        Cal.CRBookTheSameTimePage = React.createClass({                // 13\n            displayName: \"CRBookTheSameTimePage\",                      //\n                                                                       //\n            mixins: [ReactMeteorData, Cal.Mixins.windowUnload],        // 14\n            getMeteorData: function () {                               // 15\n                                                                       //\n                //todo                                                 //\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                //Meteor.subscribe(\"appInfo\");                         //\n                Meteor.subscribe(\"classes\");                           // 20\n                Meteor.subscribe(\"activeShoppingCart\");                // 21\n                                                                       //\n                var data = {                                           // 24\n                    account: Meteor.users.find().fetch(),              // 25\n                                                                       //\n                    swimmers: PageStore.getSwimmers().fetch(),         // 27\n                                                                       //\n                    currentSwimmer: PageStore.currentSwimmer.get(),    // 29\n                    currentLevel: PageStore.currentLevel.get(), //计算过后的值\n                                                                       //\n                    //当前注册课程信息 来自classesRegiser表                       //\n                    nowClasses: PageStore.nowClasses.get(),            // 33\n                    registeredClasses: PageStore.registeredClasses.get(),\n                    historyClasses: PageStore.historyClasses.get(),    // 35\n                    shoppingCartClasses: PageStore.shoppingCartClasses.get(),\n                                                                       //\n                    //当前swimmer下一个session的 same time class             //\n                    currentSwimmerSameClasses: PageStore.currentSwimmerSameClasses.get(),\n                    currentSwimmerAvaibleSameClasses: PageStore.currentSwimmerAvaibleSameClasses.get(),\n                                                                       //\n                    ////////////test                                   //\n                    //currentSwimmerClasses: PageStore.currentSwimmerClasses.get(),\n                    currentSwimmerType: PageStore.currentSwimmerType.get(),\n                                                                       //\n                    //swimmerClasses: PageStore.swimmerClasses.get(),  //\n                    //selectClassView: PageStore.selectClassView,      //\n                                                                       //\n                    //should wait for currentSwimmer                   //\n                    avaiableDays: PageStore.avaiableDays.get(),        // 51\n                    avaiableTimes: PageStore.avaiableTimes.get(),      // 52\n                    currentDay: PageStore.currentDay.get(),            // 53\n                    currentTime: PageStore.currentTime.get(),          // 54\n                                                                       //\n                    currentStep: PageStore.currentStep.get(),          // 56\n                                                                       //\n                    currentClass: PageStore.currentClass.get(),        // 58\n                                                                       //\n                    //一次选课流程的所有信息                                      //\n                    selectedClasses: PageStore.selectedClasses.get()   // 61\n                                                                       //\n                };                                                     //\n                                                                       //\n                debugger;                                              // 65\n                return data;                                           // 66\n            },                                                         //\n                                                                       //\n            //formSubmit (e) {                                         //\n            //    //两种步骤不同 无法合并                                        //\n            //                                                         //\n            //},                                                       //\n                                                                       //\n            getCardView: function () {                                 // 75\n                                                                       //\n                //let swimmers = this.data.swimmers.map(function (v, i) {\n                //    return {text: v['name'], value: v._id}           //\n                //})                                                   //\n                                                                       //\n                var swimmer = this.data.selectedClasses.get('swimmer');\n                var class1 = this.data.selectedClasses.get('class1');  // 83\n                var class2 = this.data.selectedClasses.get('class2');  // 84\n                var class3 = this.data.selectedClasses.get('class3');  // 85\n                                                                       //\n                return React.createElement(Cal.SelectedClassInfoCard, {\n                    swimmer: swimmer,                                  // 88\n                    selectedClasses: { 'class1': class1, 'class2': class2, 'class3': class3 }\n                });                                                    //\n            },                                                         //\n                                                                       //\n            getselectionView: function () {                            // 94\n                                                                       //\n                // 正在游                                                 //\n                // 且有sameclass                                         //\n                // 且购物车为空                                              //\n                // 且步骤为1时 显示bookthesametime                            //\n                if (this.data.currentSwimmerAvaibleSameClasses.length > 0 && !this.data.shoppingCartClasses.length && !this.data.registeredClasses.length) {\n                                                                       //\n                    if (this.data.currentStep == '1-1') {              // 104\n                        //可以直接去结账                                      //\n                                                                       //\n                        return React.createElement(Cal.CRBookTheSameTimeCurrentConfirm, null);\n                    } else if (this.data.currentStep == 1) {           //\n                        return React.createElement(Cal.CRBookTheSameTimeCurrent, {\n                                                                       //\n                            swimmers: this.data.swimmers,              // 111\n                            currentSwimmer: this.data.currentSwimmer,  // 112\n                            currentLevel: this.data.currentLevel,      // 113\n                                                                       //\n                            currentSwimmerSameClasses: this.data.currentSwimmerSameClasses,\n                            currentSwimmerAvaibleSameClasses: this.data.currentSwimmerAvaibleSameClasses,\n                                                                       //\n                            currentStep: this.data.currentStep         // 118\n                        });                                            //\n                    } else {                                           //\n                        //2 3                                          //\n                                                                       //\n                        return React.createElement(Cal.CRBookTheSameTimeCurrentPreference, {\n                            swimmers: this.data.swimmers,              // 124\n                            currentSwimmer: this.data.currentSwimmer,  // 125\n                            currentLevel: this.data.currentLevel,      // 126\n                                                                       //\n                            avaiableDays: this.data.avaiableDays,      // 129\n                            avaiableTimes: this.data.avaiableTimes,    // 130\n                                                                       //\n                            currentDay: this.data.currentDay,          // 132\n                            currentTime: this.data.currentTime,        // 133\n                                                                       //\n                            currentStep: this.data.currentStep,        // 135\n                                                                       //\n                            currentClass: this.data.currentClass,      // 137\n                            selectedClasses: this.data.selectedClasses\n                        });                                            //\n                    }                                                  //\n                } else {                                               //\n                                                                       //\n                    //brother sister 或者 return back                    //\n                    return React.createElement(Cal.CRBookTheSameTimeSibling, {\n                                                                       //\n                        swimmers: this.data.swimmers,                  // 150\n                        currentSwimmer: this.data.currentSwimmer,      // 151\n                        currentLevel: this.data.currentLevel,          // 152\n                                                                       //\n                        avaiableDays: this.data.avaiableDays,          // 155\n                        avaiableTimes: this.data.avaiableTimes,        // 156\n                                                                       //\n                        currentDay: this.data.currentDay,              // 158\n                        currentTime: this.data.currentTime,            // 159\n                                                                       //\n                        currentStep: this.data.currentStep,            // 161\n                                                                       //\n                        currentClass: this.data.currentClass,          // 163\n                        selectedClasses: this.data.selectedClasses     // 164\n                    });                                                //\n                }                                                      //\n            },                                                         //\n            onBeforeUnload: function (e) {                             // 170\n                var message = \"You may lost data, are you sure leving?\";\n                e.returnValue = message;                               // 172\n                return message;                                        // 173\n            },                                                         //\n                                                                       //\n            componentWillMount: function () {                          // 176\n                                                                       //\n                Dispatcher.dispatch({                                  // 178\n                    actionType: \"componentWillMount_CRBookTheSameTimePage\"\n                });                                                    //\n                                                                       //\n                //尝试清除不完整的购物项                                          //\n                Meteor.call('clear_uncompleted_item_in_cart');         // 183\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 187\n                                                                       //\n                //let currentSwimmerValue = this.data.currentSwimmer   //\n                //    && {                                             //\n                //        value: this.data.currentSwimmer._id,         //\n                //        text: this.data.currentSwimmer.name          //\n                //    }                                                //\n                //console.log(this.data.currentSwimmerClasses)         //\n                //                                                     //\n                //debugger                                             //\n                                                                       //\n                return React.createElement(                            // 200\n                    \"div\",                                             //\n                    null,                                              //\n                    this.getCardView(),                                //\n                    this.getselectionView()                            //\n                );                                                     //\n            }                                                          //\n                                                                       //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/BookTheSameTimePage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/BookTheSameTimePage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/bookTheSameTime/BookTheSameTimePage.jsx","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n\n{\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n    });\n\n\n    Cal.CRBookTheSameTimePage = React.createClass({\n        mixins: [ReactMeteorData, Cal.Mixins.windowUnload],\n        getMeteorData() {\n\n            //todo\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            //Meteor.subscribe(\"appInfo\");\n            Meteor.subscribe(\"classes\");\n            Meteor.subscribe(\"activeShoppingCart\");\n\n\n            var data = {\n                account: Meteor.users.find().fetch(),\n\n                swimmers: PageStore.getSwimmers().fetch(),\n\n                currentSwimmer: PageStore.currentSwimmer.get(),\n                currentLevel:PageStore.currentLevel.get(), //计算过后的值\n\n                //当前注册课程信息 来自classesRegiser表\n                nowClasses:PageStore.nowClasses.get(),\n                registeredClasses:PageStore.registeredClasses.get(),\n                historyClasses:PageStore.historyClasses.get(),\n                shoppingCartClasses:PageStore.shoppingCartClasses.get(),\n\n\n                //当前swimmer下一个session的 same time class\n                currentSwimmerSameClasses:PageStore.currentSwimmerSameClasses.get(),\n                currentSwimmerAvaibleSameClasses:PageStore.currentSwimmerAvaibleSameClasses.get(),\n\n                ////////////test\n                //currentSwimmerClasses: PageStore.currentSwimmerClasses.get(),\n                currentSwimmerType: PageStore.currentSwimmerType.get(),\n\n                //swimmerClasses: PageStore.swimmerClasses.get(),\n                //selectClassView: PageStore.selectClassView,\n\n                //should wait for currentSwimmer\n                avaiableDays: PageStore.avaiableDays.get(),\n                avaiableTimes: PageStore.avaiableTimes.get(),\n                currentDay: PageStore.currentDay.get(),\n                currentTime: PageStore.currentTime.get(),\n\n                currentStep: PageStore.currentStep.get(),\n\n                currentClass:PageStore.currentClass.get(),\n\n                //一次选课流程的所有信息\n                selectedClasses: PageStore.selectedClasses.get()\n\n            }\n\n            debugger\n            return data;\n\n        },\n\n        //formSubmit (e) {\n        //    //两种步骤不同 无法合并\n        //\n        //},\n\n        getCardView(){\n\n\n            //let swimmers = this.data.swimmers.map(function (v, i) {\n            //    return {text: v['name'], value: v._id}\n            //})\n\n            let swimmer = this.data.selectedClasses.get('swimmer')\n            let class1 = this.data.selectedClasses.get('class1')\n            let class2 = this.data.selectedClasses.get('class2')\n            let class3 = this.data.selectedClasses.get('class3')\n\n            return <Cal.SelectedClassInfoCard\n                swimmer={swimmer}\n                selectedClasses={{'class1':class1,'class2':class2,'class3':class3}}\n                />\n\n        },\n\n        getselectionView(){\n\n            // 正在游\n            // 且有sameclass\n            // 且购物车为空\n            // 且步骤为1时 显示bookthesametime\n            if(this.data.currentSwimmerAvaibleSameClasses.length>0\n                && !this.data.shoppingCartClasses.length\n                && !this.data.registeredClasses.length){\n\n                if(this.data.currentStep== '1-1'){  //可以直接去结账\n\n                    return <Cal.CRBookTheSameTimeCurrentConfirm />\n\n                }else if(this.data.currentStep== 1){\n                    return <Cal.CRBookTheSameTimeCurrent\n\n                        swimmers={this.data.swimmers}\n                        currentSwimmer={this.data.currentSwimmer}\n                        currentLevel={this.data.currentLevel}\n\n                        currentSwimmerSameClasses={this.data.currentSwimmerSameClasses}\n                        currentSwimmerAvaibleSameClasses={this.data.currentSwimmerAvaibleSameClasses}\n\n                        currentStep={this.data.currentStep}\n                        />\n\n                }else{ //2 3\n\n                    return <Cal.CRBookTheSameTimeCurrentPreference\n                        swimmers={this.data.swimmers}\n                        currentSwimmer={this.data.currentSwimmer}\n                        currentLevel={this.data.currentLevel}\n\n\n                        avaiableDays={this.data.avaiableDays}\n                        avaiableTimes={this.data.avaiableTimes}\n\n                        currentDay={this.data.currentDay}\n                        currentTime={this.data.currentTime}\n\n                        currentStep={this.data.currentStep}\n\n                        currentClass={this.data.currentClass}\n                        selectedClasses={this.data.selectedClasses}\n                        />\n\n                }\n\n\n            }else{\n\n\n                //brother sister 或者 return back\n                return <Cal.CRBookTheSameTimeSibling\n\n                    swimmers={this.data.swimmers}\n                    currentSwimmer={this.data.currentSwimmer}\n                    currentLevel={this.data.currentLevel}\n\n\n                    avaiableDays={this.data.avaiableDays}\n                    avaiableTimes={this.data.avaiableTimes}\n\n                    currentDay={this.data.currentDay}\n                    currentTime={this.data.currentTime}\n\n                    currentStep={this.data.currentStep}\n\n                    currentClass={this.data.currentClass}\n                    selectedClasses={this.data.selectedClasses}\n                    />\n\n            }\n\n        },\n        onBeforeUnload(e){\n            var message = \"You may lost data, are you sure leving?\";\n            e.returnValue = message;\n            return message;\n        },\n\n        componentWillMount(){\n\n            Dispatcher.dispatch({\n                actionType: \"componentWillMount_CRBookTheSameTimePage\"\n            });\n\n            //尝试清除不完整的购物项\n            Meteor.call('clear_uncompleted_item_in_cart')\n\n        },\n\n        render() {\n\n\n            //let currentSwimmerValue = this.data.currentSwimmer\n            //    && {\n            //        value: this.data.currentSwimmer._id,\n            //        text: this.data.currentSwimmer.name\n            //    }\n            //console.log(this.data.currentSwimmerClasses)\n            //\n            //debugger\n\n\n            return <div>\n\n\n\n                {this.getCardView()}\n\n\n                {this.getselectionView()}\n\n\n            </div>\n        }\n\n    })\n\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeClassIte //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/1/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.CRBookTheSameTimeClassItem = React.createClass({                   // 5\n    displayName: \"CRBookTheSameTimeClassItem\",                         //\n                                                                       //\n    propTypes: {                                                       // 6\n        classInfo: React.PropTypes.object //.isRequired                // 7\n    },                                                                 //\n    //mixins: [ReactMeteorData],                                       //\n    //getMeteorData() {                                                //\n    //    return {                                                     //\n    //    }                                                            //\n    //},                                                               //\n    //actions                                                          //\n    book: function () {                                                // 15\n                                                                       //\n        Dispatcher.dispatch({                                          // 17\n            actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",    // 18\n            selectedClass: this.props.classInfo,                       // 19\n            currentStep: 1                                             // 20\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 24\n                                                                       //\n        return React.createElement(                                    // 26\n            RC.Item,                                                   // 26\n            { uiColor: \"brand1\", className: \"item-text-wrap\" },        //\n            this.props.classInfo ? React.createElement(                //\n                \"div\",                                                 //\n                { className: \"row\" },                                  //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    this.props.classInfo.name                          //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col col-20\" },                       //\n                    React.createElement(                               //\n                        \"span\",                                        //\n                        { onClick: this.book, className: \"button button-small\" },\n                        \"BOOK\"                                         //\n                    )                                                  //\n                )                                                      //\n            ) : ''                                                     //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeClassItem.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeClassItem.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,0BAA0B,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/C,aAAS,EAAE;AACP,iBAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;KACpC;;;;;;;AAOD,QAAI,cAAE;;AAEF,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,0CAA0C;AACtD,yBAAa,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;AACnC,uBAAW,EAAC,CAAC;SAChB,CAAC,CAAC;KACN;;AAED,UAAM,cAAG;;AAEL,eAAO;AAAC,cAAE,CAAC,IAAI;cAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,EAAC,gBAAgB;YAEnD,IAAI,CAAC,KAAK,CAAC,SAAS,GAEhB;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,KAAK;oBAEf,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI;iBAExB;gBAEN;;sBAAK,SAAS,EAAC,YAAY;oBACvB;;0BAAM,OAAO,EAAE,IAAI,CAAC,IAAK,EAAC,SAAS,EAAC,qBAAqB;;qBAElD;iBACL;aACJ,GACJ,EAAE;SAIN;KAEb;CACJ,CAAC,uE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeClassItem.jsx","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\nCal.CRBookTheSameTimeClassItem = React.createClass({\n    propTypes: {\n        classInfo: React.PropTypes.object //.isRequired\n    },\n    //mixins: [ReactMeteorData],\n    //getMeteorData() {\n    //    return {\n    //    }\n    //},\n    //actions\n    book(){\n\n        Dispatcher.dispatch({\n            actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n            selectedClass: this.props.classInfo,\n            currentStep:1\n        });\n    },\n\n    render() {\n\n        return <RC.Item uiColor=\"brand1\" className='item-text-wrap'>\n            {\n                this.props.classInfo ?\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n\n                            {this.props.classInfo.name}\n\n                        </div>\n\n                        <div className=\"col col-20\">\n                            <span onClick={this.book} className=\"button button-small\">\n                            BOOK\n                            </span>\n                        </div>\n                    </div>\n                    : ''\n            }\n\n\n        </RC.Item>\n\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrent. //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/30/15.                                                 //\n */                                                                    //\n{                                                                      // 4\n                                                                       //\n    Cal.CRBookTheSameTimeCurrent = React.createClass({                 // 6\n        displayName: \"CRBookTheSameTimeCurrent\",                       //\n                                                                       //\n        propTypes: {                                                   // 8\n            swimmers: React.PropTypes.array, //.isRequired             // 9\n            currentSwimmer: React.PropTypes.object,                    // 10\n            currentSwimmerSameClasses: React.PropTypes.array,          // 11\n            currentSwimmerAvaibleSameClasses: React.PropTypes.array, //过滤后的\n            currentStep: React.PropTypes.number                        // 13\n        },                                                             //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 16\n        getMeteorData: function () {                                   // 17\n            return {};                                                 // 18\n        },                                                             //\n                                                                       //\n        //actions                                                      //\n        formSubmit: function (e) {                                     // 22\n            e.preventDefault();                                        // 23\n                                                                       //\n            var formData = this.refs.myForm.getFormData();             // 25\n                                                                       //\n            //todo validation info in ui                               //\n            //if (!this.data. || !this.data.currentDay || !this.data.currentTime) {\n            //                                                         //\n            //    alert('please select a class')                       //\n            //    return;                                              //\n            //}                                                        //\n                                                                       //\n            Dispatcher.dispatch({                                      // 35\n                actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n                currentStep: this.props.currentStep,                   // 37\n                selectedClass: formData                                // 38\n            });                                                        //\n        },                                                             //\n                                                                       //\n        render: function () {                                          // 43\n                                                                       //\n            //let sameTimeClasses =  this.props.currentSwimmerSameClasses;\n            var sameTimeClasses = this.props.currentSwimmerAvaibleSameClasses;\n                                                                       //\n            console.log(sameTimeClasses);                              // 49\n                                                                       //\n            return React.createElement(                                // 51\n                \"div\",                                                 //\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.Form,                                           // 53\n                    { ref: \"myForm\", key: Math.random(), onSubmit: this.formSubmit },\n                    React.createElement(Cal.SelectSwimmer, {           //\n                        swimmers: this.props.swimmers,                 // 57\n                        currentSwimmer: this.props.currentSwimmer,     // 58\n                        changeMessage: \"BookTheSameTime_SWIMMER_CHANGE\"\n                    }),                                                //\n                    sameTimeClasses ? sameTimeClasses.map(function (sameTimeClass) {\n                                                                       //\n                        return React.createElement(Cal.CRBookTheSameTimeClassItem, {\n                            key: sameTimeClass._id,                    // 66\n                            classInfo: sameTimeClass });               // 67\n                    }) : ''                                            //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrent.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrent.jsx"],"names":[],"mappings":";;;;;;;;;;;AAGA;;AAEI,OAAG,CAAC,wBAAwB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE7C,iBAAS,EAAE;AACP,oBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/B,0BAAc,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;AACrC,qCAAyB,EAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/C,4CAAgC,EAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AACtD,uBAAW,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;SACrC;;AAED,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;AACZ,mBAAO,EAAE;SACZ;;;AAGD,kBAAU,EAAC,UAAC,CAAC,EAAE;AACX,aAAC,CAAC,cAAc,EAAE;;AAElB,gBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;;;;;;;;;AAU7C,sBAAU,CAAC,QAAQ,CAAC;AAChB,0BAAU,EAAE,0CAA0C;AACtD,2BAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;AACnC,6BAAa,EAAE,QAAQ;aAC1B,CAAC,CAAC;SAEN;;AAED,cAAM,cAAG;;;AAGL,gBAAI,eAAe,GAAI,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC;;AAGnE,mBAAO,CAAC,GAAG,CAAC,eAAe,CAAC;;AAE5B,mBAAO;;;gBAEH;AAAC,sBAAE,CAAC,IAAI;sBAAC,GAAG,EAAC,QAAQ,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,UAAW;oBAGhE,oBAAC,GAAG,CAAC,aAAa;AACd,gCAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS;AAC9B,sCAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAe;AAC1C,qCAAa,EAAC,gCAAgC;sBAC5C;oBAGF,eAAe,GAAE,eAAe,CAAC,GAAG,CAAC,UAAU,aAAa,EAAE;;AAE1D,+BAAO,oBAAC,GAAG,CAAC,0BAA0B;AAClC,+BAAG,EAAE,aAAa,CAAC,GAAI;AACvB,qCAAS,EAAE,aAAc,GAAE;qBAClC,CAAC,GAAC,EAAE;iBAGH;aAER;SACT;KACJ,CAAC;CAEL,wE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrent.jsx","sourcesContent":["/**\n * Created on 9/30/15.\n */\n{\n\n    Cal.CRBookTheSameTimeCurrent = React.createClass({\n\n        propTypes: {\n            swimmers: React.PropTypes.array, //.isRequired\n            currentSwimmer:React.PropTypes.object,\n            currentSwimmerSameClasses:React.PropTypes.array,\n            currentSwimmerAvaibleSameClasses:React.PropTypes.array, //过滤后的\n            currentStep:React.PropTypes.number\n        },\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            return {}\n        },\n\n        //actions\n        formSubmit (e) {\n            e.preventDefault()\n\n            var formData = this.refs.myForm.getFormData()\n\n\n            //todo validation info in ui\n            //if (!this.data. || !this.data.currentDay || !this.data.currentTime) {\n            //\n            //    alert('please select a class')\n            //    return;\n            //}\n\n            Dispatcher.dispatch({\n                actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n                currentStep: this.props.currentStep,\n                selectedClass: formData\n            });\n\n        },\n\n        render() {\n\n            //let sameTimeClasses =  this.props.currentSwimmerSameClasses;\n            let sameTimeClasses =  this.props.currentSwimmerAvaibleSameClasses;\n\n\n            console.log(sameTimeClasses)\n\n            return <div>\n\n                <RC.Form ref=\"myForm\" key={Math.random()} onSubmit={this.formSubmit}>\n\n\n                    <Cal.SelectSwimmer\n                        swimmers={this.props.swimmers}\n                        currentSwimmer={this.props.currentSwimmer}\n                        changeMessage=\"BookTheSameTime_SWIMMER_CHANGE\"\n                        />\n\n                    {\n                        sameTimeClasses? sameTimeClasses.map(function (sameTimeClass) {\n\n                            return <Cal.CRBookTheSameTimeClassItem\n                                key={sameTimeClass._id}\n                                classInfo={sameTimeClass}/>\n                        }):''\n                    }\n\n                </RC.Form>\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentC //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/1/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    (function () {                                                     //\n        var PageStore = undefined;                                     // 7\n        Dependency.autorun(function () {                               // 8\n            PageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n        });                                                            //\n                                                                       //\n        Cal.CRBookTheSameTimeCurrentConfirm = React.createClass({      // 14\n            displayName: 'CRBookTheSameTimeCurrentConfirm',            //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 16\n            getMeteorData: function () {                               // 17\n                                                                       //\n                return {                                               // 20\n                    swimmer: PageStore.currentSwimmer.get(),           // 21\n                                                                       //\n                    selectedClasses: PageStore.selectedClasses.get()   // 23\n                };                                                     //\n            },                                                         //\n                                                                       //\n            //actions                                                  //\n            confirm: function (e) {                                    // 28\n                e.preventDefault();                                    // 29\n                FlowRouter.go('/classRegister/BookTheSameTimeSelectClassReady');\n            },                                                         //\n            choosePreference: function () {                            // 33\n                                                                       //\n                Dispatcher.dispatch({                                  // 35\n                    actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n                    currentStep: '1-1'                                 // 37\n                });                                                    //\n            },                                                         //\n                                                                       //\n            //selectedClass: formData                                  //\n            render: function () {                                      // 42\n                                                                       //\n                //var swimmer= this.data.swimmer                       //\n                                                                       //\n                var swimmer = this.data.selectedClasses.get('swimmer');\n                var class1 = this.data.selectedClasses.get('class1');  // 47\n                var class2 = this.data.selectedClasses.get('class2');  // 48\n                var class3 = this.data.selectedClasses.get('class3');  // 49\n                                                                       //\n                return React.createElement(                            // 53\n                    'div',                                             //\n                    { className: 'padding' },                          //\n                    React.createElement(                               //\n                        'p',                                           //\n                        null,                                          //\n                        React.createElement(                           //\n                            'a',                                       //\n                            { onClick: this.choosePreference },        //\n                            'click here to choose more preference'     //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Button,                                     // 66\n                        { name: 'button', type: 'submit',              //\n                            onClick: this.confirm,                     // 67\n                            theme: 'full', buttonColor: 'brand' },     // 68\n                        'Confirm'                                      //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentConfirm.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentConfirm.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;AACI,YAAI,SAAS,aAAC;AACd,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,qBAAS,GAAG,UAAU,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;SACzE,CAAC,CAAC;;AAIH,WAAG,CAAC,+BAA+B,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEpD,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;;AAGZ,uBAAO;AACH,2BAAO,EAAE,SAAS,CAAC,cAAc,CAAC,GAAG,EAAE;;AAEvC,mCAAe,EAAE,SAAS,CAAC,eAAe,CAAC,GAAG,EAAE;iBACnD;aACJ;;;AAGD,mBAAO,YAAC,CAAC,EAAC;AACN,iBAAC,CAAC,cAAc,EAAE;AAClB,0BAAU,CAAC,EAAE,CAAC,gDAAgD,CAAC,CAAC;aAEnE;AACD,4BAAgB,cAAE;;AAEd,0BAAU,CAAC,QAAQ,CAAC;AAChB,8BAAU,EAAE,0CAA0C;AACtD,+BAAW,EAAE,KAAK;iBAErB,CAAC,CAAC;aACN;;;AAED,kBAAM,cAAG;;;;AAIL,oBAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC;AACtD,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;AACpD,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;AACpD,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;;AAIpD,uBAAO;;sBAAK,SAAS,EAAC,SAAS;oBAI3B;;;wBACI;;8BAAI,OAAO,EAAE,IAAI,CAAC,gBAAiB;;yBAE/B;qBACJ;oBAKJ;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,mCAAO,EAAE,IAAI,CAAC,OAAQ;AACtB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;iBAIV;aACT;SACJ,CAAC;;CACL,wE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentConfirm.jsx","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\n\n{\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n    });\n\n\n\n    Cal.CRBookTheSameTimeCurrentConfirm = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n\n            return {\n                swimmer: PageStore.currentSwimmer.get(),\n\n                selectedClasses: PageStore.selectedClasses.get()\n            }\n        },\n\n        //actions\n        confirm(e){\n            e.preventDefault()\n            FlowRouter.go('/classRegister/BookTheSameTimeSelectClassReady');\n\n        },\n        choosePreference(){\n\n            Dispatcher.dispatch({\n                actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n                currentStep: '1-1',\n                //selectedClass: formData\n            });\n        },\n\n        render() {\n\n            //var swimmer= this.data.swimmer\n\n            let swimmer = this.data.selectedClasses.get('swimmer')\n            let class1 = this.data.selectedClasses.get('class1')\n            let class2 = this.data.selectedClasses.get('class2')\n            let class3 = this.data.selectedClasses.get('class3')\n\n\n\n            return <div className=\"padding\">\n\n\n\n                <p>\n                    <a  onClick={this.choosePreference}>\n                        click here to choose more preference\n                    </a>\n                </p>\n\n\n\n\n                <RC.Button name=\"button\" type=\"submit\"\n                           onClick={this.confirm}\n                           theme=\"full\" buttonColor=\"brand\">\n                    Confirm\n                </RC.Button>\n\n\n\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentP //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/6/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.CRBookTheSameTimeCurrentPreference = React.createClass({           // 5\n    displayName: \"CRBookTheSameTimeCurrentPreference\",                 //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n    //actions                                                          //\n    formSubmit: function (e) {                                         // 12\n        e.preventDefault();                                            // 13\n                                                                       //\n        //var formData = this.refs.myForm.getFormData()                //\n                                                                       //\n        //todo validation info in ui                                   //\n        //if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n        //                                                             //\n        //    alert('please select a class')                           //\n        //    return;                                                  //\n        //}                                                            //\n                                                                       //\n        //check duplicate                                              //\n        var selectedClasses = this.props.selectedClasses;              // 25\n        var currentClass = this.props.currentClass;                    // 26\n        if (App.currentClass_in_selectedClasses(currentClass, selectedClasses)) {\n            alert('class duplicated');                                 // 28\n            return;                                                    // 29\n        }                                                              //\n                                                                       //\n        Dispatcher.dispatch({                                          // 32\n            actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",    // 33\n            currentStep: this.props.currentStep                        // 34\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    //selectedClass: formData                                          //\n    render: function () {                                              // 40\n        return React.createElement(                                    // 41\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                RC.Form,                                               // 42\n                { ref: \"myForm\", key: Math.random() },                 //\n                React.createElement(                                   //\n                    RC.Item,                                           // 44\n                    { uiColor: \"brand1\" },                             //\n                    \"Swimmer: \",                                       //\n                    this.props.currentSwimmer && this.props.currentSwimmer.name\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 49\n                    { uiColor: \"brand1\" },                             //\n                    \"Level: \",                                         //\n                    this.props.currentLevel                            //\n                ),                                                     //\n                React.createElement(Cal.SelectDay, {                   //\n                    avaiableDays: this.props.avaiableDays,             // 54\n                    currentDay: this.props.currentDay,                 // 55\n                    changeMessage: \"BookTheSameTime_DAY_CHANGE\"        // 56\n                                                                       //\n                }),                                                    //\n                React.createElement(Cal.SelectTime, {                  //\n                    avaiableTimes: this.props.avaiableTimes,           // 60\n                    currentTime: this.props.currentTime,               // 61\n                    changeMessage: \"BookTheSameTime_TIME_CHANGE\"       // 62\n                                                                       //\n                }),                                                    //\n                React.createElement(                                   //\n                    RC.Button,                                         // 66\n                    { name: \"button\", type: \"submit\",                  //\n                        onClick: this.formSubmit,                      // 67\n                        theme: \"full\", buttonColor: \"brand\" },         // 68\n                    \"Select\"                                           //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentPreference.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentPreference.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,kCAAkC,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEvD,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,cAAU,YAAC,CAAC,EAAC;AACT,SAAC,CAAC,cAAc,EAAE;;;;;;;;;;;;AAYlB,YAAI,eAAe,GAAE,IAAI,CAAC,KAAK,CAAC,eAAe;AAC/C,YAAI,YAAY,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY;AACzC,YAAG,GAAG,CAAC,+BAA+B,CAAC,YAAY,EAAC,eAAe,CAAC,EAAC;AACjE,iBAAK,CAAC,kBAAkB,CAAC;AACzB,mBAAO;SACV;;AAED,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,0CAA0C;AACtD,uBAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;SAEtC,CAAC,CAAC;KAEN;;;AAED,UAAM,cAAG;AACL,eAAO;;;YACH;AAAC,kBAAE,CAAC,IAAI;kBAAC,GAAG,EAAC,QAAQ,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG;gBAErC;AAAC,sBAAE,CAAC,IAAI;sBAAC,OAAO,EAAC,QAAQ;;oBACX,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI;iBAC/D;gBAGV;AAAC,sBAAE,CAAC,IAAI;sBAAC,OAAO,EAAC,QAAQ;;oBACb,IAAI,CAAC,KAAK,CAAC,YAAY;iBACzB;gBAEV,oBAAC,GAAG,CAAC,SAAS;AACV,gCAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAa;AACtC,8BAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAW;AAClC,iCAAa,EAAC,4BAA4B;;kBAExC;gBACN,oBAAC,GAAG,CAAC,UAAU;AACX,iCAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAc;AACxC,+BAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAY;AACpC,iCAAa,EAAC,6BAA6B;;kBAEzC;gBAEN;AAAC,sBAAE,CAAC,MAAM;sBAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,+BAAO,EAAE,IAAI,CAAC,UAAW;AACzB,6BAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;iBAE/B;aAGN;SAER;KACT;CACJ,CAAC,uE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeCurrentPreference.jsx","sourcesContent":["/**\n * Created on 10/6/15.\n */\n\nCal.CRBookTheSameTimeCurrentPreference = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n    //actions\n    formSubmit(e){\n        e.preventDefault()\n\n        //var formData = this.refs.myForm.getFormData()\n\n        //todo validation info in ui\n        //if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n        //\n        //    alert('please select a class')\n        //    return;\n        //}\n\n        //check duplicate\n        var selectedClasses =this.props.selectedClasses\n        var currentClass =this.props.currentClass\n        if(App.currentClass_in_selectedClasses(currentClass,selectedClasses)){\n            alert('class duplicated')\n            return;\n        }\n\n        Dispatcher.dispatch({\n            actionType: \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\",\n            currentStep: this.props.currentStep,\n            //selectedClass: formData\n        });\n\n    },\n\n    render() {\n        return <div>\n            <RC.Form ref=\"myForm\" key={Math.random()} >\n\n                <RC.Item uiColor=\"brand1\">\n                    Swimmer: {this.props.currentSwimmer && this.props.currentSwimmer.name}\n                </RC.Item>\n\n\n                <RC.Item uiColor=\"brand1\">\n                    Level: {this.props.currentLevel}\n                </RC.Item>\n\n                <Cal.SelectDay\n                    avaiableDays={this.props.avaiableDays}\n                    currentDay={this.props.currentDay}\n                    changeMessage=\"BookTheSameTime_DAY_CHANGE\"\n\n                    />\n                <Cal.SelectTime\n                    avaiableTimes={this.props.avaiableTimes}\n                    currentTime={this.props.currentTime}\n                    changeMessage=\"BookTheSameTime_TIME_CHANGE\"\n\n                    />\n\n                <RC.Button name=\"button\" type=\"submit\"\n                           onClick={this.formSubmit}\n                           theme=\"full\" buttonColor=\"brand\">\n                    Select\n                </RC.Button>\n\n\n            </RC.Form>\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeSelectCl //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/6/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    //todo 与CRSelectClassReadyPage 合并                                  //\n                                                                       //\n    //let bookTheSameTimePageStore;                                    //\n    //Dependency.autorun(function () {                                 //\n    //    bookTheSameTimePageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n    //});                                                              //\n                                                                       //\n    Cal.CRBookTheSameTimeSelectClassReadyPage = React.createClass({    // 15\n        displayName: 'CRBookTheSameTimeSelectClassReadyPage',          //\n                                                                       //\n        propTypes: {                                                   // 16\n            cartId: React.PropTypes.string,                            // 17\n            swimmerId: React.PropTypes.string,                         // 18\n            classId: React.PropTypes.string                            // 19\n                                                                       //\n        },                                                             //\n        mixins: [ReactMeteorData],                                     // 22\n        getMeteorData: function () {                                   // 23\n                                                                       //\n            Meteor.subscribe(\"activeShoppingCart\");                    // 25\n                                                                       //\n            var shoppingCart = DB.ShoppingCart.findOne({               // 28\n                _id: this.props.cartId,                                // 29\n                type: 'register',                                      // 30\n                status: 'active'                                       // 31\n            });                                                        //\n                                                                       //\n            console.log(shoppingCart);                                 // 35\n                                                                       //\n            debugger;                                                  // 37\n                                                                       //\n            var cartItem = {};                                         // 39\n            if (shoppingCart && shoppingCart.items) {                  // 40\n                                                                       //\n                cartItem = _.findWhere(shoppingCart.items, {           // 42\n                    swimmerId: this.props.swimmerId,                   // 43\n                    classId: this.props.classId                        // 44\n                });                                                    //\n            }                                                          //\n                                                                       //\n            return {                                                   // 51\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n                                                                       //\n                cartItem: cartItem                                     // 54\n            };                                                         //\n        },                                                             //\n                                                                       //\n        //actions                                                      //\n        selectMore: function (e) {                                     // 59\n            e.preventDefault();                                        // 60\n                                                                       //\n            var href = \"/classRegister/BookTheSameTimePage\";           // 62\n            FlowRouter.go(href);                                       // 63\n        },                                                             //\n        goToEdit: function (swimmerId, classId, preferenceNum) {       // 65\n                                                                       //\n            var url = '/classRegister/SelectClassEdit' + '?swimmerId=' + swimmerId + '&classId=' + classId + '&preferenceNum=' + preferenceNum + '&cartId=' + this.props.cartId;\n                                                                       //\n            FlowRouter.go(url);                                        // 73\n        },                                                             //\n                                                                       //\n        render: function () {                                          // 77\n            var self = this;                                           // 78\n                                                                       //\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //let class1 = this.data.selectedClassesMap.get('class1')  //\n            //let class2 = this.data.selectedClassesMap.get('class2')  //\n            //let class3 = this.data.selectedClassesMap.get('class3')  //\n                                                                       //\n            if (this.data.cartItem) {                                  // 87\n                var isBookTheSameTime = this.data.cartItem.isBookTheSameTime;\n                var swimmer = this.data.cartItem['swimmer'];           // 89\n                                                                       //\n                var class1 = this.data.cartItem['class1'];             // 91\n                var class2 = this.data.cartItem['class2'];             // 92\n                var class3 = this.data.cartItem['class3'];             // 93\n            }                                                          //\n                                                                       //\n            return React.createElement(                                // 97\n                'div',                                                 //\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.List,                                           // 98\n                    { theme: 'inset' },                                //\n                    React.createElement(                               //\n                        RC.Item,                                       // 99\n                        { theme: 'body' },                             //\n                        React.createElement(                           //\n                            'h2',                                      //\n                            { className: 'brand' },                    //\n                            'Register for spring 2015'                 //\n                        ),                                             //\n                        swimmer ? React.createElement(                 //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Swimmer:'                             //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                swimmer.name                           //\n                            )                                          //\n                        ) : '',                                        //\n                        class1 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 1'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class1.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                !isBookTheSameTime ? React.createElement(\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 1) },\n                                    'Edit'                             //\n                                ) : ''                                 //\n                            )                                          //\n                        ) : '',                                        //\n                        class2 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 2'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class2.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                React.createElement(                   //\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 2) },\n                                    'Edit'                             //\n                                )                                      //\n                            )                                          //\n                        ) : '',                                        //\n                        class3 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 3'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class3.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                React.createElement(                   //\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 3) },\n                                    'Edit'                             //\n                                )                                      //\n                            )                                          //\n                        ) : ''                                         //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Button,                                     // 174\n                        { name: 'button', type: 'submit',              //\n                            onClick: this.selectMore,                  // 175\n                            theme: 'full', buttonColor: 'brand' },     // 176\n                        'Register More'                                //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.URL,                                        // 182\n                        { href: '/classRegister/RegBillingPage' },     //\n                        React.createElement(                           //\n                            RC.Button,                                 // 183\n                            { name: 'button', type: 'submit',          //\n                                theme: 'full', buttonColor: 'brand' },\n                            'Checkout'                                 //\n                        )                                              //\n                    )                                                  //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSelectClassReadyPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSelectClassReadyPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;;;;;;;AASI,OAAG,CAAC,qCAAqC,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC1D,iBAAS,EAAC;AACN,kBAAM,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;AAC7B,qBAAS,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;AAChC,mBAAO,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;;SAEjC;AACD,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;;AAEZ,kBAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;;AAGvC,gBAAI,YAAY,GAAE,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC;AACtC,mBAAG,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM;AACrB,oBAAI,EAAC,UAAU;AACf,sBAAM,EAAC,QAAQ;aAClB,CAAC;;AAGF,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC;;AAEzB,qBAAQ;;AAER,gBAAI,QAAQ,GAAC,EAAE;AACf,gBAAG,YAAY,IAAI,YAAY,CAAC,KAAK,EAAC;;AAElC,wBAAQ,GAAE,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,EAAC;AACrC,6BAAS,EAAC,IAAI,CAAC,KAAK,CAAC,SAAS;AAC9B,2BAAO,EAAC,IAAI,CAAC,KAAK,CAAC,OAAO;iBAC7B,CAAC;aAEL;;AAID,mBAAO;;;AAGH,wBAAQ,EAAC,QAAQ;aACpB;SACJ;;;AAGD,kBAAU,YAAC,CAAC,EAAC;AACT,aAAC,CAAC,cAAc,EAAE,CAAC;;AAEnB,gBAAI,IAAI,GAAG,oCAAoC;AAC/C,sBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACvB;AACD,gBAAQ,YAAC,SAAS,EAAE,OAAO,EAAE,aAAa,EAAC;;AAEvC,gBAAI,GAAG,GAAG,gCAAgC,GACpC,aAAa,GAAG,SAAS,GACzB,WAAW,GAAG,OAAO,GACrB,iBAAiB,GAAG,aAAa,GACjC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;;AAEpC,sBAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAEtB;;AAED,cAAM,cAAG;AACL,gBAAI,IAAI,GAAG,IAAI;;;;;;;AASf,gBAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC;AAClB,oBAAI,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB;AAC5D,oBAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;;AAE3C,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACzC,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACzC,oBAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;aAC5C;;AAGD,mBAAO;;;gBACH;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,OAAO;oBAClB;AAAC,0BAAE,CAAC,IAAI;0BAAC,KAAK,EAAC,MAAM;wBACjB;;8BAAI,SAAS,EAAC,OAAO;;yBAA8B;wBAE/C,OAAO,GAAG;;8BAAK,SAAS,EAAC,KAAK;4BAC1B;;kCAAK,SAAS,EAAC,KAAK;;6BAEd;4BACN;;kCAAK,SAAS,EAAC,KAAK;gCACf,OAAO,CAAC,IAAI;6BACX;yBACJ,GAAG,EAAE;wBAKX,MAAM,GAAG;;8BAAK,SAAS,EAAC,KAAK;4BACzB;;kCAAK,SAAS,EAAC,KAAK;;6BAEd;4BACN;;kCAAK,SAAS,EAAC,KAAK;gCACf,MAAM,CAAC,IAAI;6BACV;4BACN;;kCAAK,SAAS,EAAC,YAAY;gCAGnB,CAAC,iBAAiB,GACd;;sCAAQ,SAAS,EAAC,qBAAqB;AAC/B,+CAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAE;;iCAC1D,GAER,EAAE;6BAIT;yBAEJ,GAAG,EAAE;wBAIX,MAAM,GAAG;;8BAAK,SAAS,EAAC,KAAK;4BACzB;;kCAAK,SAAS,EAAC,KAAK;;6BAEd;4BACN;;kCAAK,SAAS,EAAC,KAAK;gCACf,MAAM,CAAC,IAAI;6BACV;4BACN;;kCAAK,SAAS,EAAC,YAAY;gCACvB;;sCAAQ,SAAS,EAAC,qBAAqB;AAC/B,+CAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAE;;iCAC1D;6BACP;yBAEJ,GAAG,EAAE;wBAIX,MAAM,GAAG;;8BAAK,SAAS,EAAC,KAAK;4BACzB;;kCAAK,SAAS,EAAC,KAAK;;6BAEd;4BACN;;kCAAK,SAAS,EAAC,KAAK;gCACf,MAAM,CAAC,IAAI;6BACV;4BACN;;kCAAK,SAAS,EAAC,YAAY;gCACvB;;sCAAQ,SAAS,EAAC,qBAAqB;AAC/B,+CAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAC,OAAO,CAAC,GAAG,EAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAE;;iCAC1D;6BACP;yBAEJ,GAAG,EAAE;qBAIT;oBACN;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC1B,mCAAO,EAAE,IAAI,CAAC,UAAW;AAC1B,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;oBAIhB;AAAC,0BAAE,CAAC,GAAG;0BAAC,IAAI,EAAC,+BAA+B;wBACxC;AAAC,8BAAE,CAAC,MAAM;8BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,qCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;yBAE/B;qBAEP;iBAEH;aACR;SACT;KACJ,CAAC;CACL,wE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSelectClassReadyPage.jsx","sourcesContent":["/**\n * Created on 10/6/15.\n */\n\n\n{\n   //todo 与CRSelectClassReadyPage 合并\n\n    //let bookTheSameTimePageStore;\n    //Dependency.autorun(function () {\n    //    bookTheSameTimePageStore = Dependency.get('classRegister.bookTheSameTimePage.store');\n    //});\n\n\n    Cal.CRBookTheSameTimeSelectClassReadyPage = React.createClass({\n        propTypes:{\n            cartId:React.PropTypes.string,\n            swimmerId:React.PropTypes.string,\n            classId:React.PropTypes.string\n\n        },\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            Meteor.subscribe(\"activeShoppingCart\");\n\n\n            var shoppingCart= DB.ShoppingCart.findOne({\n                _id:this.props.cartId,\n                type:'register',\n                status:'active'\n            })\n\n\n            console.log(shoppingCart)\n\n            debugger\n\n            var cartItem={}\n            if(shoppingCart && shoppingCart.items){\n\n                cartItem= _.findWhere(shoppingCart.items,{\n                    swimmerId:this.props.swimmerId,\n                    classId:this.props.classId\n                })\n\n            }\n\n\n\n            return {\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n\n                cartItem:cartItem\n            }\n        },\n\n        //actions\n        selectMore(e){\n            e.preventDefault();\n\n            var href = \"/classRegister/BookTheSameTimePage\"\n            FlowRouter.go(href);\n        },\n        goToEdit(swimmerId, classId, preferenceNum){\n\n            var url = '/classRegister/SelectClassEdit'\n                + '?swimmerId=' + swimmerId\n                + '&classId=' + classId\n                + '&preferenceNum=' + preferenceNum\n                + '&cartId=' + this.props.cartId\n\n            FlowRouter.go(url);\n\n        },\n\n        render() {\n            let self = this\n\n\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //let class1 = this.data.selectedClassesMap.get('class1')\n            //let class2 = this.data.selectedClassesMap.get('class2')\n            //let class3 = this.data.selectedClassesMap.get('class3')\n\n\n            if(this.data.cartItem){\n                var isBookTheSameTime = this.data.cartItem.isBookTheSameTime\n                var swimmer = this.data.cartItem['swimmer']\n\n                var class1 = this.data.cartItem['class1']\n                var class2 = this.data.cartItem['class2']\n                var class3 = this.data.cartItem['class3']\n            }\n\n\n            return <div>\n                <RC.List theme=\"inset\">\n                    <RC.Item theme=\"body\">\n                        <h2 className=\"brand\">Register for spring 2015</h2>\n                        {\n                            swimmer ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Swimmer:\n                                </div>\n                                <div className=\"col\">\n                                    {swimmer.name}\n                                </div>\n                            </div> : ''\n                        }\n\n\n                        {\n                            class1 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 1\n                                </div>\n                                <div className=\"col\">\n                                    {class1.name}\n                                </div>\n                                <div className=\"col col-20\">\n\n                                    {\n                                        !isBookTheSameTime?\n                                            <button className=\"button button-clear\"\n                                                    onClick={this.goToEdit.bind(self,swimmer._id,class1._id,1)}>Edit\n                                            </button>\n\n                                            :''\n\n                                    }\n\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class2 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 2\n                                </div>\n                                <div className=\"col\">\n                                    {class2.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,2)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class3 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 3\n                                </div>\n                                <div className=\"col\">\n                                    {class3.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,3)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n\n                    </RC.Item>\n                        <RC.Button name=\"button\" type=\"submit\"\n                                    onClick={this.selectMore}\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Register More\n                        </RC.Button>\n\n\n\n                    <RC.URL href=\"/classRegister/RegBillingPage\">\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Checkout\n                        </RC.Button>\n\n                    </RC.URL>\n\n                </RC.List>\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/CRBookTheSameTimeSibling. //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/30/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n                                                                       //\n    Cal.CRBookTheSameTimeSibling = React.createClass({                 // 8\n        displayName: \"CRBookTheSameTimeSibling\",                       //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 10\n        getMeteorData: function () {                                   // 11\n            return {};                                                 // 12\n        },                                                             //\n                                                                       //\n        formSubmit: function (e) {                                     // 15\n            e.preventDefault();                                        // 16\n                                                                       //\n            var formData = this.refs.myForm.getFormData();             // 18\n                                                                       //\n            //todo validation info in ui                               //\n            //if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n            //                                                         //\n            //    alert('please select a class')                       //\n            //    return;                                              //\n            //}                                                        //\n                                                                       //\n            var selectedClasses = this.props.selectedClasses;          // 28\n            var currentClass = this.props.currentClass;                // 29\n            if (App.currentClass_in_selectedClasses(currentClass, selectedClasses)) {\n                alert('class duplicated');                             // 31\n                return;                                                // 32\n            }                                                          //\n                                                                       //\n            Dispatcher.dispatch({                                      // 36\n                actionType: \"BookTheSameTime_CLASS_SELECT_FOR_SIBLING\",\n                currentStep: this.props.currentStep,                   // 38\n                selectedClass: formData                                // 39\n            });                                                        //\n                                                                       //\n            //<Cal.CRSelectSwimmer                                     //\n            //    swimmers={this.props.swimmers}                       //\n            //    currentSwimmer={this.props.currentSwimmer}           //\n            //    ></Cal.CRSelectSwimmer>                              //\n        },                                                             //\n        render: function () {                                          // 48\n                                                                       //\n            return React.createElement(                                // 50\n                \"div\",                                                 //\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.Form,                                           // 51\n                    { ref: \"myForm\", key: Math.random(), onSubmit: this.formSubmit },\n                    React.createElement(Cal.SelectSwimmer, {           //\n                        swimmers: this.props.swimmers,                 // 55\n                        currentSwimmer: this.props.currentSwimmer,     // 56\n                        changeMessage: \"BookTheSameTime_SWIMMER_CHANGE\"\n                    }),                                                //\n                    React.createElement(                               //\n                        RC.Item,                                       // 61\n                        { uiColor: \"brand1\" },                         //\n                        \"Level: \",                                     //\n                        this.props.currentLevel                        //\n                    ),                                                 //\n                    React.createElement(Cal.SelectDay, {               //\n                        avaiableDays: this.props.avaiableDays,         // 66\n                        currentDay: this.props.currentDay,             // 67\n                        changeMessage: \"BookTheSameTime_DAY_CHANGE\"    // 68\n                                                                       //\n                    }),                                                //\n                    React.createElement(Cal.SelectTime, {              //\n                        avaiableTimes: this.props.avaiableTimes,       // 72\n                        currentTime: this.props.currentTime,           // 73\n                        changeMessage: \"BookTheSameTime_TIME_CHANGE\"   // 74\n                                                                       //\n                    }),                                                //\n                    React.createElement(                               //\n                        RC.Button,                                     // 78\n                        { name: \"button\", type: \"submit\",              //\n                            onClick: this.formSubmit,                  // 79\n                            theme: \"full\", buttonColor: \"brand\" },     // 80\n                        this.props.currentStep == 1 ? 'Book' : 'Select'\n                    )                                                  //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSibling.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSibling.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;AAEI,OAAG,CAAC,wBAAwB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE7C,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;AACZ,mBAAO,EAAE;SACZ;;AAED,kBAAU,EAAC,UAAC,CAAC,EAAE;AACX,aAAC,CAAC,cAAc,EAAE;;AAElB,gBAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;;;;;;;;;AAU7C,gBAAI,eAAe,GAAE,IAAI,CAAC,KAAK,CAAC,eAAe;AAC/C,gBAAI,YAAY,GAAE,IAAI,CAAC,KAAK,CAAC,YAAY;AACzC,gBAAG,GAAG,CAAC,+BAA+B,CAAC,YAAY,EAAC,eAAe,CAAC,EAAC;AACjE,qBAAK,CAAC,kBAAkB,CAAC;AACzB,uBAAO;aACV;;AAGD,sBAAU,CAAC,QAAQ,CAAC;AAChB,0BAAU,EAAE,0CAA0C;AACtD,2BAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;AACnC,6BAAa,EAAE,QAAQ;aAC1B,CAAC,CAAC;;;;;;SAON;AACD,cAAM,cAAG;;AAEL,mBAAO;;;gBACH;AAAC,sBAAE,CAAC,IAAI;sBAAC,GAAG,EAAC,QAAQ,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,UAAW;oBAGhE,oBAAC,GAAG,CAAC,aAAa;AACd,gCAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS;AAC9B,sCAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAe;AAC1C,qCAAa,EAAC,gCAAgC;sBAC5C;oBAGN;AAAC,0BAAE,CAAC,IAAI;0BAAC,OAAO,EAAC,QAAQ;;wBACb,IAAI,CAAC,KAAK,CAAC,YAAY;qBACzB;oBAEV,oBAAC,GAAG,CAAC,SAAS;AACV,oCAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAa;AACtC,kCAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAW;AAClC,qCAAa,EAAC,4BAA4B;;sBAExC;oBACN,oBAAC,GAAG,CAAC,UAAU;AACX,qCAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAc;AACxC,mCAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAY;AACpC,qCAAa,EAAC,6BAA6B;;sBAEzC;oBAEN;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,mCAAO,EAAE,IAAI,CAAC,UAAW;AACzB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;wBACtC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,GAAG,MAAM,GAAG,QAAQ;qBACxC;iBAGN;aAGR;SACT;KACJ,CAAC;CACL,wE","file":"/client/app/class.register/bookTheSameTime/CRBookTheSameTimeSibling.jsx","sourcesContent":["/**\n * Created on 9/30/15.\n */\n\n\n{\n\n    Cal.CRBookTheSameTimeSibling = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            return {}\n        },\n\n        formSubmit (e) {\n            e.preventDefault()\n\n            var formData = this.refs.myForm.getFormData()\n\n\n            //todo validation info in ui\n            //if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n            //\n            //    alert('please select a class')\n            //    return;\n            //}\n\n            var selectedClasses =this.props.selectedClasses\n            var currentClass =this.props.currentClass\n            if(App.currentClass_in_selectedClasses(currentClass,selectedClasses)){\n                alert('class duplicated')\n                return;\n            }\n\n\n            Dispatcher.dispatch({\n                actionType: \"BookTheSameTime_CLASS_SELECT_FOR_SIBLING\",\n                currentStep: this.props.currentStep,\n                selectedClass: formData\n            });\n\n            //<Cal.CRSelectSwimmer\n            //    swimmers={this.props.swimmers}\n            //    currentSwimmer={this.props.currentSwimmer}\n            //    ></Cal.CRSelectSwimmer>\n\n        },\n        render() {\n\n            return <div>\n                <RC.Form ref=\"myForm\" key={Math.random()} onSubmit={this.formSubmit}>\n\n\n                    <Cal.SelectSwimmer\n                        swimmers={this.props.swimmers}\n                        currentSwimmer={this.props.currentSwimmer}\n                        changeMessage=\"BookTheSameTime_SWIMMER_CHANGE\"\n                        />\n\n\n                    <RC.Item uiColor=\"brand1\">\n                        Level: {this.props.currentLevel}\n                    </RC.Item>\n\n                    <Cal.SelectDay\n                        avaiableDays={this.props.avaiableDays}\n                        currentDay={this.props.currentDay}\n                        changeMessage=\"BookTheSameTime_DAY_CHANGE\"\n\n                        />\n                    <Cal.SelectTime\n                        avaiableTimes={this.props.avaiableTimes}\n                        currentTime={this.props.currentTime}\n                        changeMessage=\"BookTheSameTime_TIME_CHANGE\"\n\n                        />\n\n                    <RC.Button name=\"button\" type=\"submit\"\n                               onClick={this.formSubmit}\n                               theme=\"full\" buttonColor=\"brand\">\n                        {this.props.currentStep == 1 ? 'Book' : 'Select'}\n                    </RC.Button>\n\n\n                </RC.Form>\n\n\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/bookTheSameTime/bookTheSameTimePage.store //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/20/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    //let ShoppingCart;                                                //\n    //Dependency.autorun(function () {                                 //\n    //    ShoppingCart = Dependency.get('classRegister.ShoppingCart.model');\n    //});                                                              //\n                                                                       //\n    //subscribes                                                       //\n    Meteor.subscribe('accountWithSwimmersAndClasses');                 // 13\n                                                                       //\n    Dependency.add('classRegister.bookTheSameTimePage.store', new function () {\n                                                                       //\n        var self = this;                                               // 18\n                                                                       //\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care                                          //\n        self.getSwimmers = function () {                               // 22\n            return DB.Swimmers.find({ accountId: Meteor.userId() });   // 23\n        };                                                             //\n                                                                       //\n        //////////////////////////////////////////////////////         //\n        ///////////////////selection info                              //\n        // should reset after add to                                   //\n        //选中的swimmer                                                   //\n        self.currentSwimmer = new ReactiveVar();                       // 31\n        //当前的level                                                     //\n        self.currentLevel = new ReactiveVar();                         // 33\n        //选中的day                                                       //\n        self.currentDay = new ReactiveVar();                           // 35\n        self.currentTime = new ReactiveVar();                          // 36\n        self.currentClass = new ReactiveVar();                         // 37\n        //当前的步骤                                                        //\n        self.currentStep = new ReactiveVar(1);                         // 39\n                                                                       //\n        //注册信息                                                         //\n        self.nowClasses = new ReactiveVar([]);                         // 42\n        self.registeredClasses = new ReactiveVar([]);                  // 43\n        self.historyClasses = new ReactiveVar([]);                     // 44\n                                                                       //\n        self.shoppingCartClasses = new ReactiveVar([]);                // 46\n                                                                       //\n        self.isFirstTime = new ReactiveVar(false);                     // 48\n                                                                       //\n        //当前用户正在进行的课程                                                  //\n        //self.currentSwimmerClassesRegisterInfo=new ReactiveVar([]) //当前正在上的课程的注册信息\n                                                                       //\n        self.currentSwimmerClasses = new ReactiveVar([]); //当前正在上的课程的详细信息\n        self.currentSwimmerSameClasses = new ReactiveVar([]); //classes for book the same time\n                                                                       //\n        self.currentSwimmerAvaibleSameClasses = new ReactiveVar([]); //除去了购物车已有的项\n                                                                       //\n        self.currentSwimmerType = new ReactiveVar(); //标记当前的类型         // 61\n                                                                       //\n        //self.classes= new ReactiveVar({})  //by swimmerId            //\n        //self.classesRegister = new ReactiveVar([])                   //\n        //self.swimmerClasses = new ReactiveVar({})                    //\n        //self.selectClassView = new ReactiveVar({})  //'bookTheSameTime','common'\n                                                                       //\n        //可选days 依赖于 当前的currentLevel                                   //\n        self.avaiableDays = new ReactiveVar([]);                       // 77\n        //可选时间   依赖于 当前选中的currentDay                                   //\n        self.avaiableTimes = new ReactiveVar([]);                      // 79\n                                                                       //\n        //Session.set('CART_ID')                                       //\n                                                                       //\n        /*                                                             //\n         * 一次流程选择的class信息  3步                                          //\n         * 使用Immutable库进行对象修改                                          //\n         * {                                                           //\n         *  swimmer:                                                   //\n         *  class1:{classId, swimmerId}                                //\n         *  class2:                                                    //\n         *  class3:                                                    //\n         * }                                                           //\n         * */                                                          //\n        self.selectedClasses = new ReactiveVar(Immutable.Map());       // 95\n                                                                       //\n        var undefinedSelectValueOption = { text: '', value: '' };      // 98\n        var undefinedSelectValue = '';                                 // 99\n                                                                       //\n        //暂存购物车ID 后端会验证其有效性                                            //\n                                                                       //\n        function resetDateAndTime() {                                  // 104\n            self.currentDay.set(undefinedSelectValue);                 // 105\n            self.currentTime.set(undefinedSelectValue);                // 106\n        }                                                              //\n                                                                       //\n        self.tokenId = Dispatcher.register(function (payload) {        // 110\n            switch (payload.actionType) {                              // 111\n                                                                       //\n                case \"BookTheSameTime_SWIMMER_CHANGE\":                 // 113\n                    //选择swimmer  level可能会变                             //\n                    {                                                  // 114\n                        var swimmer = payload.swimmer;                 // 115\n                                                                       //\n                        self.currentSwimmer.set(swimmer);              // 117\n                                                                       //\n                        //当前swimmer returnback new swimmer区别处理         //\n                        //self.currentLevel.set(App.getNextClassLevel(swimmer.level))\n                                                                       //\n                        self.currentDay.set(undefinedSelectValue);     // 122\n                        self.currentTime.set(undefinedSelectValue);    // 123\n                                                                       //\n                        //var swimmerClasses = self.swimmerClasses.get()\n                        //var swimmerId = swimmer._id                  //\n                        //if (swimmerClasses && swimmerId) {           //\n                        //    if (swimmerClasses[swimmerId] && swimmerClasses[swimmerId] > 0) {\n                        //        self.selectClassView.set('bookTheSameTime')\n                        //    } else {                                 //\n                        //        self.selectClassView.set('common')   //\n                        //    }                                        //\n                        //                                             //\n                        //}                                            //\n                                                                       //\n                        debugger;                                      // 136\n                                                                       //\n                        break;                                         // 138\n                    }                                                  //\n                case \"BookTheSameTime_DAY_CHANGE\":                     // 139\n                    //选择day                                            //\n                    {                                                  // 141\n                        debugger;                                      // 142\n                                                                       //\n                        self.currentDay.set(payload.day);              // 144\n                        self.currentTime.set();                        // 145\n                        break;                                         // 146\n                    }                                                  //\n                                                                       //\n                case \"BookTheSameTime_TIME_CHANGE\":                    // 147\n                    //选择time  确定一个class                                //\n                    {                                                  // 150\n                        debugger;                                      // 151\n                        self.currentTime.set(payload.time);            // 152\n                        break;                                         // 153\n                    }                                                  //\n                                                                       //\n                //sibling 三步  可能是current swimmer BookTheSame time后的选择 也可能是return back用户 也可能是新用户\n                case \"BookTheSameTime_CLASS_SELECT_FOR_SIBLING\":       // 158\n                    //select确定                                         //\n                    {                                                  // 159\n                        debugger;                                      // 160\n                                                                       //\n                        if (payload.currentStep == 1) {                // 162\n                            var currentClass;                          //\n                                                                       //\n                            (function () {                             //\n                                                                       //\n                                var currentSwimmer = self.currentSwimmer.get();\n                                                                       //\n                                currentClass = self.currentClass.get(); //sibling first step\n                                                                       //\n                                var isFistTime = self.isFirstTime.get();\n                                                                       //\n                                Meteor.call('add_class_to_cart', {     // 175\n                                    swimmerId: currentSwimmer._id,     // 176\n                                    classId: currentClass._id,         // 177\n                                    quantity: 1,                       // 178\n                                    swimmer: currentSwimmer,           // 179\n                                    class1: currentClass,              // 180\n                                    type: 'register',                  // 181\n                                                                       //\n                                    isFistTime: isFistTime             // 183\n                                                                       //\n                                }, function (err, result) {            //\n                                    debugger;                          // 186\n                                    if (err) {                         // 187\n                                        alert(err.error);              // 188\n                                        return; //todo  prompt         // 189\n                                    }                                  //\n                                                                       //\n                                    //selectedClasses                  //\n                                    var map = self.selectedClasses.get();\n                                    map = map.set('swimmer', currentSwimmer);\n                                    map = map.set('class1', currentClass);\n                                    self.selectedClasses.set(map);     // 197\n                                                                       //\n                                    Session.set('CART_ID', result.cartId);\n                                                                       //\n                                    console.log('step1', currentSwimmer, currentClass);\n                                                                       //\n                                    self.currentStep.set(2);           // 206\n                                                                       //\n                                    resetDateAndTime();                // 209\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 2) {                // 215\n                            (function () {                             //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 219\n                                map = map.set('class2', currentClass);\n                                self.selectedClasses.set(map);         // 221\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 224\n                                var class1 = map.get('class1');        // 225\n                                                                       //\n                                //ShoppingCart.addClassPreference(2,{  //\n                                //    'swimmer': swimmer,              //\n                                //    'class1':  class1,               //\n                                //    data: currentClass               //\n                                //},function(err,result){              //\n                                //    if(err) return;                  //\n                                //                                     //\n                                //    self.currentStep.set(3),         //\n                                //    resetDateAndTime()               //\n                                //})                                   //\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 240\n                                                                       //\n                                    preferenceNum: 2,                  // 242\n                                                                       //\n                                    classId: class1._id,               // 244\n                                    swimmerId: swimmer._id,            // 245\n                                    data: currentClass                 // 246\n                                }, function (err) {                    //\n                                    if (err) return; //todo  prompt    // 248\n                                                                       //\n                                    console.log('step2', currentClass);\n                                                                       //\n                                    self.currentStep.set(3);           // 253\n                                    resetDateAndTime();                // 254\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 3) {                // 260\n                            (function () {                             //\n                                                                       //\n                                //todo unify with currentStep == 2     //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 266\n                                map = map.set('class3', currentClass);\n                                self.selectedClasses.set(map);         // 268\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 271\n                                var class1 = map.get('class1');        // 272\n                                                                       //\n                                //ShoppingCart.addClassPreference(3,{  //\n                                //    'swimmer': swimmer,              //\n                                //    'class1':   class1,              //\n                                //    data:currentClass                //\n                                //},function(err,result){              //\n                                //    if(err) return;                  //\n                                //                                     //\n                                //    FlowRouter.go('/classRegister/SelectClassReady');\n                                //                                     //\n                                //})                                   //\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 286\n                                                                       //\n                                    preferenceNum: 3,                  // 288\n                                                                       //\n                                    classId: class1._id,               // 290\n                                    swimmerId: swimmer._id,            // 291\n                                    data: currentClass                 // 292\n                                }, function (err) {                    //\n                                    if (err) return; //todo  prompt    // 294\n                                                                       //\n                                    console.log('step3', currentClass);\n                                                                       //\n                                    var href = \"/classRegister/BookTheSameTimeSelectClassReady\" + \"?cartId=\" + Session.get('CART_ID') + \"&swimmerId=\" + swimmer._id + \"&classId=\" + class1._id;\n                                    FlowRouter.go(href);               // 302\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        break;                                         // 308\n                    }                                                  //\n                                                                       //\n                //正在进行用户 四步  todo和以上合并?                                // 309\n                case \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\":       // 312\n                    {                                                  // 312\n                        payload;                                       // 313\n                        debugger;                                      // 314\n                                                                       //\n                        if (payload.currentStep == 1) {                // 316\n                            var currentClass;                          //\n                                                                       //\n                            (function () {                             //\n                                                                       //\n                                var currentSwimmer = self.currentSwimmer.get();\n                                                                       //\n                                currentClass = payload.selectedClass;  // 321\n                                // special; book the same time         //\n                                                                       //\n                                //todo获取一个classId                      //\n                                                                       //\n                                //ShoppingCart.addShoppingItem(        //\n                                //    {                                //\n                                //        swimmer: currentSwimmer,     //\n                                //        class1: currentClass         //\n                                //    }                                //\n                                //);                                   //\n                                                                       //\n                                debugger;                              // 336\n                                                                       //\n                                Meteor.call('add_class_to_cart', {     // 338\n                                    swimmerId: currentSwimmer._id,     // 339\n                                    classId: currentClass._id,         // 340\n                                    quantity: 1,                       // 341\n                                    swimmer: currentSwimmer,           // 342\n                                    class1: currentClass,              // 343\n                                                                       //\n                                    isBookTheSameTime: true,           // 345\n                                                                       //\n                                    type: 'register'                   // 347\n                                }, function (err, result) {            //\n                                    debugger;                          // 349\n                                    if (err) {                         // 350\n                                        alert(err.error);              // 351\n                                        return; //todo  prompt         // 352\n                                    }                                  //\n                                                                       //\n                                    //selectedClasses                  //\n                                    var map = self.selectedClasses.get();\n                                    map = map.set('swimmer', currentSwimmer);\n                                    map = map.set('class1', currentClass);\n                                    self.selectedClasses.set(map);     // 359\n                                                                       //\n                                    Session.set('CART_ID', result.cartId);\n                                                                       //\n                                    console.log('step1', currentSwimmer, currentClass);\n                                                                       //\n                                    //self.currentStep.set('1-1') //   //\n                                    self.currentStep.set(2);           // 369\n                                                                       //\n                                    resetDateAndTime();                // 371\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == '1-1') {            // 377\n                            //confirm  此步骤后来取消  todo delete            //\n                                                                       //\n                            self.currentStep.set(2);                   // 380\n                            debugger;                                  // 381\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 2) {                // 384\n                            (function () {                             //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 388\n                                map = map.set('class2', currentClass);\n                                self.selectedClasses.set(map);         // 390\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 393\n                                var class1 = map.get('class1');        // 394\n                                                                       //\n                                debugger;                              // 396\n                                                                       //\n                                //ShoppingCart.addClassPreference(2,{  //\n                                //    'swimmer': swimmer,              //\n                                //    'class1':  class1,               //\n                                //    data: currentClass               //\n                                //},function(err,result){              //\n                                //    if(err) return;                  //\n                                //                                     //\n                                //    self.currentStep.set(3),         //\n                                //    resetDateAndTime()               //\n                                //})                                   //\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 410\n                                                                       //\n                                    preferenceNum: 2,                  // 412\n                                                                       //\n                                    classId: class1._id,               // 414\n                                    swimmerId: swimmer._id,            // 415\n                                    data: currentClass                 // 416\n                                }, function (err) {                    //\n                                    if (err) return; //todo  prompt    // 418\n                                                                       //\n                                    console.log('step2', currentClass);\n                                                                       //\n                                    self.currentStep.set(3);           // 423\n                                    resetDateAndTime();                // 424\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 3) {                // 430\n                            (function () {                             //\n                                                                       //\n                                //todo unify with currentStep == 2     //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 436\n                                map = map.set('class3', currentClass);\n                                self.selectedClasses.set(map);         // 438\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 441\n                                var class1 = map.get('class1');        // 442\n                                                                       //\n                                debugger;                              // 444\n                                                                       //\n                                //ShoppingCart.addClassPreference(3,{  //\n                                //    'swimmer': swimmer,              //\n                                //    'class1':   class1,              //\n                                //    data:currentClass                //\n                                //},function(err,result){              //\n                                //    if(err) return;                  //\n                                //                                     //\n                                //    FlowRouter.go('/classRegister/SelectClassReady');\n                                //                                     //\n                                //})                                   //\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 458\n                                                                       //\n                                    preferenceNum: 3,                  // 460\n                                                                       //\n                                    classId: class1._id,               // 462\n                                    swimmerId: swimmer._id,            // 463\n                                    data: currentClass                 // 464\n                                }, function (err) {                    //\n                                    if (err) return; //todo  prompt    // 466\n                                                                       //\n                                    console.log('step3', currentClass);\n                                                                       //\n                                    //FlowRouter.go('/classRegister/BookTheSameTimeSelectClassReady');\n                                    var href = \"/classRegister/BookTheSameTimeSelectClassReady\" + \"?cartId=\" + Session.get('CART_ID') + \"&swimmerId=\" + swimmer._id + \"&classId=\" + class1._id;\n                                    FlowRouter.go(href);               // 476\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        break;                                         // 483\n                    }                                                  //\n                                                                       //\n                case \"componentWillMount_CRBookTheSameTimePage\":       // 484\n                    {                                                  // 487\n                        //debugger                                     //\n                        console.log('componentWillMount_CRBookTheSameTimePage');\n                        //清空上一轮的选择                                     //\n                                                                       //\n                        self.currentDay.set(undefinedSelectValue);     // 492\n                        self.currentTime.set(undefinedSelectValue);    // 493\n                        self.currentClass.set(null);                   // 494\n                        self.currentStep.set(1);                       // 495\n                        //self.avaiableDays //依赖于 当前的currentLevel      //\n                        //self.avaiableTimes //依赖于 当前选中的currentDay     //\n                                                                       //\n                        self.selectedClasses.set(Immutable.Map());     // 499\n                                                                       //\n                        break;                                         // 501\n                    }                                                  //\n                                                                       //\n            }                                                          // 502\n        });                                                            //\n                                                                       //\n        /*                                                             //\n         *                                                             //\n         * ********************* wait for ******************           //\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *                                                             //\n         * */                                                          //\n                                                                       //\n        Meteor.startup(function () {                                   // 514\n                                                                       //\n            //初始化swimmer                                               //\n            Tracker.autorun(function () {                              // 517\n                                                                       //\n                var swimmers = self.getSwimmers().fetch();             // 519\n                                                                       //\n                if (swimmers.length) {                                 // 521\n                    console.log('set currentSwimmer', swimmers[0]._id);\n                                                                       //\n                    self.currentSwimmer.set(swimmers[0]);              // 524\n                    //self.currentLevel.set(App.getNextClassLevel(swimmers[0].level))\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //获取当前swimmer的课数 用于判断swimmer的类型                            //\n            Tracker.autorun(function () {                              // 532\n                var currentSwimmer = self.currentSwimmer.get();        // 533\n                var appInfo = DB.App.findOne();                        // 534\n                                                                       //\n                if (!appInfo) return;                                  // 536\n                if (!currentSwimmer) return;                           // 537\n                                                                       //\n                Tracker.autorun(function () {                          // 539\n                                                                       //\n                    var nowClasses = DB.ClassesRegister.find({         // 541\n                        swimmerId: currentSwimmer._id,                 // 542\n                        status: 'normal', //不显示cancel中的和 change中的      // 543\n                        sessionId: App.info.sessionNow                 // 544\n                    }).fetch();                                        //\n                                                                       //\n                    self.nowClasses.set(nowClasses);                   // 547\n                                                                       //\n                    //self.currentSwimmerClassesRegisterInfo.set(currentSwimmerClassesRegisterInfo)\n                });                                                    //\n                Tracker.autorun(function () {                          // 553\n                                                                       //\n                    var registeredClasses = DB.ClassesRegister.find({  // 555\n                        swimmerId: currentSwimmer._id,                 // 556\n                        status: 'normal', //不显示cancel中的和 change中的      // 557\n                        sessionId: App.info.sessionRegister            // 558\n                    }).fetch();                                        //\n                    self.registeredClasses.set(registeredClasses);     // 560\n                });                                                    //\n                Tracker.autorun(function () {                          // 564\n                                                                       //\n                    var historyClasses = DB.ClassesRegister.find({     // 566\n                        swimmerId: currentSwimmer._id,                 // 567\n                        status: 'normal', //不显示cancel中的和 change中的      // 568\n                        sessionId: { $nin: [App.info.sessionNow, App.info.sessionRegister] }\n                                                                       //\n                    }).fetch();                                        //\n                    self.historyClasses.set(historyClasses);           // 572\n                });                                                    //\n                                                                       //\n                //shoppingCartClasses                                  //\n                Tracker.autorun(function () {                          // 577\n                                                                       //\n                    var shoppingCart = DB.ShoppingCart.findOne({       // 579\n                        status: 'active',                              // 580\n                        type: 'register'                               // 581\n                    });                                                //\n                                                                       //\n                    var classItems = [];                               // 584\n                    if (shoppingCart && shoppingCart.items.length) {   // 585\n                        classItems = _.filter(shoppingCart.items, function (item) {\n                            return item.class1 && item.class2 && item.class3 //完整的注册\n                             && item.swimmerId == currentSwimmer._id;  //\n                        });                                            //\n                    }                                                  //\n                                                                       //\n                    self.shoppingCartClasses.set(classItems);          // 593\n                    console.log(classItems);                           // 594\n                });                                                    //\n            });                                                        //\n                                                                       //\n            //判断swimmer是不是第一次注册                                        //\n            Tracker.autorun(function () {                              // 601\n                var nowClasses = self.nowClasses.get();                // 602\n                var registeredClasses = self.registeredClasses.get();  // 603\n                                                                       //\n                var historyClasses = self.historyClasses.get();        // 605\n                                                                       //\n                var shoppingCartClasses = self.shoppingCartClasses.get();\n                                                                       //\n                if (nowClasses.length == 0 && registeredClasses.length == 0 && historyClasses.length == 0\n                //&& shoppingCartClasses.length>0                      //\n                ) {                                                    //\n                                                                       //\n                        self.isFirstTime.set(true);                    // 616\n                    } else {                                           //\n                    self.isFirstTime.set(false);                       // 618\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //确定课程注册level                                              //\n            //对于return back 和 new swimmer  Level即当前level               //\n            //对于正在游的level＋1                                            //\n            Tracker.autorun(function () {                              // 628\n                var nowClasses = self.nowClasses.get();                // 629\n                var currentSwimmer = self.currentSwimmer.get();        // 630\n                                                                       //\n                if (!currentSwimmer) return;                           // 632\n                                                                       //\n                //当前session正在游                                         //\n                if (nowClasses.length > 0) {                           // 635\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level));\n                } else {                                               //\n                    self.currentLevel.set(currentSwimmer.level);       // 639\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //days depend on level of swimmer                          //\n            Tracker.autorun(function () {                              // 645\n                //if (!DB.Classes) return;                             //\n                var level = self.currentLevel.get();                   // 647\n                var appInfo = DB.App.findOne();                        // 648\n                                                                       //\n                if (!appInfo || !level) return;                        // 650\n                                                                       //\n                var classes = DB.Classes.find({                        // 653\n                    sessionId: appInfo.sessionRegister, //level session\n                    levels: level,                                     // 655\n                    seatsRemain: { $gt: 0 }                            // 656\n                }).fetch();                                            //\n                                                                       //\n                //debugger                                             //\n                classes = _.uniq(classes, function (item, key, a) {    // 660\n                    return item.day;                                   // 661\n                });                                                    //\n                                                                       //\n                var days = classes.map(function (v, n) {               // 664\n                    return { text: App.Config.week[v.day], value: v.day };\n                });                                                    //\n                                                                       //\n                days.sort(function (a, b) {                            // 668\n                    return a.value - b.value;                          // 669\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption);              // 673\n                                                                       //\n                self.avaiableDays.set(days);                           // 675\n                                                                       //\n                //设置默认值                                                //\n                //if (days.length) {                                   //\n                //    self.currentDay.set(days[0].value)               //\n                //}                                                    //\n            });                                                        //\n                                                                       //\n            /// time depend on day                                     //\n            Tracker.autorun(function () {                              // 685\n                //if (!DB.Classes) return;                             //\n                                                                       //\n                var currentDay = self.currentDay.get();                // 688\n                var appInfo = DB.App.findOne();                        // 689\n                                                                       //\n                if (!appInfo) return;                                  // 691\n                                                                       //\n                var level;                                             // 694\n                Tracker.nonreactive(function () {                      // 695\n                    level = self.currentLevel.get();                   // 696\n                });                                                    //\n                                                                       //\n                var classes = DB.Classes.find({                        // 699\n                    sessionId: appInfo.sessionRegister, // session level day\n                    levels: level,                                     // 701\n                    day: currentDay,                                   // 702\n                    seatsRemain: { $gt: 0 }                            // 703\n                }).fetch();                                            //\n                                                                       //\n                var times = classes.map(function (v, n) {              // 706\n                    return {                                           // 707\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime                             // 709\n                    };                                                 //\n                });                                                    //\n                times.sort(function (a, b) {                           // 712\n                    return a.value - b.value;                          // 713\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption);             // 717\n                                                                       //\n                self.avaiableTimes.set(times);                         // 719\n                                                                       //\n                //初始化time                                              //\n                //if (times.length) {                                  //\n                //    self.currentTime.set(times[0].value)             //\n                //}                                                    //\n            });                                                        //\n                                                                       //\n            //time确定后class就确定了                                         //\n            //level + day+ time  确定一个class                             //\n            Tracker.autorun(function () {                              // 731\n                //if (!DB.Classes) return;                             //\n                                                                       //\n                var time = self.currentTime.get();                     // 734\n                var appInfo = DB.App.findOne();                        // 735\n                                                                       //\n                if (!appInfo) return;                                  // 737\n                                                                       //\n                var level = undefined;                                 // 741\n                var day = undefined;                                   // 742\n                Tracker.nonreactive(function () {                      // 743\n                    level = self.currentLevel.get();                   // 744\n                    day = self.currentDay.get();                       // 745\n                });                                                    //\n                                                                       //\n                var theClass = DB.Classes.find({                       // 748\n                    sessionId: appInfo.sessionRegister, // session level day\n                    levels: level,                                     // 750\n                    day: day,                                          // 751\n                    startTime: time,                                   // 752\n                    seatsRemain: { $gt: 0 }                            // 753\n                }).fetch();                                            //\n                                                                       //\n                if (theClass[0]) {                                     // 756\n                    self.currentClass.set(theClass[0]);                // 757\n                }                                                      //\n            });                                                        //\n                                                                       //\n            /*                                                         //\n             若无sameclass 显示正常选择页                                       //\n             * */                                                      //\n            Tracker.autorun(function () {                              // 770\n                App.info = App.info || DB.App.findOne();               // 771\n                var nowClasses = self.nowClasses.get();                // 772\n                                                                       //\n                var currentLevel = self.currentLevel.get();            // 774\n                                                                       //\n                if (!App.info) return;                                 // 776\n                if (!currentLevel) return;                             // 777\n                                                                       //\n                Tracker.autorun(function () {                          // 781\n                    //获取当前class详细信息                                    //\n                                                                       //\n                    var ids = [];                                      // 783\n                    _.each(nowClasses, function (item) {               // 784\n                        ids.push(item.classId);                        // 785\n                    });                                                //\n                    var currentClasses = DB.Classes.find({             // 787\n                        _id: { $in: ids }                              // 788\n                    }).fetch();                                        //\n                                                                       //\n                    self.currentSwimmerClasses.set(currentClasses);    // 791\n                                                                       //\n                    //console.log(currentClasses)                      //\n                                                                       //\n                    Tracker.autorun(function () {                      // 796\n                        //获取类似class                                    //\n                        var sameClasses = [];                          // 797\n                                                                       //\n                        _.each(currentClasses, function (currentClass) {\n                                                                       //\n                            var sameClass = DB.Classes.findOne({       // 801\n                                sessionId: App.info.sessionRegister,   // 802\n                                levels: currentLevel,                  // 803\n                                                                       //\n                                day: currentClass.day,                 // 805\n                                startTime: currentClass.startTime,     // 806\n                                seatsRemain: { $gt: 0 }                // 807\n                            });                                        //\n                                                                       //\n                            if (sameClass) {                           // 810\n                                sameClasses.push(sameClass);           // 811\n                            }                                          //\n                        });                                            //\n                                                                       //\n                        self.currentSwimmerSameClasses.set(sameClasses);\n                                                                       //\n                        console.log('currentSwimmerSameClasses', sameClasses);\n                    });                                                //\n                });                                                    //\n            });                                                        //\n                                                                       //\n            //sameclass 已在购物车中则不显示该项                                   //\n            //sameclass 除去购物车已有的后数目为0 则显示正常选择页面                        //\n            //若已经注册过该class 也要除去                                        //\n            //由于bookthesametime 在一个流程的第一步 所以不需考虑重复 后面的步骤需要考虑           //\n            Tracker.autorun(function () {                              // 834\n                                                                       //\n                var currentSwimmer = self.currentSwimmer.get();        // 836\n                var currentSwimmerSameClasses = self.currentSwimmerSameClasses.get(); //can be []\n                                                                       //\n                var registeredClasses = self.registeredClasses.get();  // 839\n                var shoppingCartClasses = self.shoppingCartClasses.get();\n                                                                       //\n                if (!currentSwimmer) return;                           // 843\n                                                                       //\n                var registeredClassesIds = registeredClasses.map(function (item) {\n                    return item.classId;                               // 847\n                });                                                    //\n                var shoppingCartClassesIds = shoppingCartClasses.map(function (item) {\n                    return item.classId;                               // 850\n                });                                                    //\n                                                                       //\n                var exceptionIds = _.union(registeredClassesIds, shoppingCartClassesIds);\n                                                                       //\n                console.log('registeredClasses', registeredClassesIds);\n                console.log('shoppingCartClasses', shoppingCartClassesIds);\n                console.log('exceptionIds', exceptionIds);             // 857\n                                                                       //\n                var avaibleSameClasses = _.filter(currentSwimmerSameClasses, function (item) {\n                    return exceptionIds.indexOf(item._id) == -1;       // 863\n                });                                                    //\n                self.currentSwimmerAvaibleSameClasses.set(avaibleSameClasses);\n                                                                       //\n                console.log('currentSwimmerAvaibleSameClasses', avaibleSameClasses);\n                                                                       //\n                //avaibleSameClasses                                   //\n            });                                                        //\n                                                                       //\n            //view  bookthesame time or common                         //\n            Tracker.autorun(function () {                              // 878\n                var avaibleSameClasses = self.currentSwimmerAvaibleSameClasses.get();\n                                                                       //\n                if (avaibleSameClasses.length > 0) {                   // 881\n                    self.currentSwimmerType.set('swimmer-ongoing');    // 882\n                } else {                                               //\n                    self.currentSwimmerType.set('swimmer-sibling');    // 884\n                }                                                      //\n            });                                                        //\n        });                                                            //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/bookTheSameTime/bookTheSameTimePage.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/bookTheSameTime/bookTheSameTimePage.store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/bookTheSameTime/bookTheSameTimePage.store.jsx","sourcesContent":["/**\n * Created on 9/20/15.\n */\n\n\n{\n    //let ShoppingCart;\n    //Dependency.autorun(function () {\n    //    ShoppingCart = Dependency.get('classRegister.ShoppingCart.model');\n    //});\n\n    //subscribes\n    Meteor.subscribe('accountWithSwimmersAndClasses');\n\n\n    Dependency.add('classRegister.bookTheSameTimePage.store', new function () {\n\n        var self = this;\n\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care\n        self.getSwimmers = function () {\n            return DB.Swimmers.find({accountId: Meteor.userId()})\n        }\n\n\n        //////////////////////////////////////////////////////\n        ///////////////////selection info\n        // should reset after add to\n        //选中的swimmer\n        self.currentSwimmer = new ReactiveVar()\n        //当前的level\n        self.currentLevel = new ReactiveVar()\n        //选中的day\n        self.currentDay = new ReactiveVar()\n        self.currentTime = new ReactiveVar()\n        self.currentClass = new ReactiveVar()\n        //当前的步骤\n        self.currentStep = new ReactiveVar(1)\n\n        //注册信息\n        self.nowClasses =new ReactiveVar([])\n        self.registeredClasses =new ReactiveVar([])\n        self.historyClasses =new ReactiveVar([])\n\n        self.shoppingCartClasses= new ReactiveVar([])\n\n        self.isFirstTime =new ReactiveVar(false)\n\n\n\n        //当前用户正在进行的课程\n        //self.currentSwimmerClassesRegisterInfo=new ReactiveVar([]) //当前正在上的课程的注册信息\n\n        self.currentSwimmerClasses = new ReactiveVar([]) //当前正在上的课程的详细信息\n        self.currentSwimmerSameClasses = new ReactiveVar([])  //classes for book the same time\n\n        self.currentSwimmerAvaibleSameClasses = new ReactiveVar([]) //除去了购物车已有的项\n\n\n        self.currentSwimmerType=new ReactiveVar()  //标记当前的类型\n\n\n\n\n        //self.classes= new ReactiveVar({})  //by swimmerId\n        //self.classesRegister = new ReactiveVar([])\n       //self.swimmerClasses = new ReactiveVar({})\n       //self.selectClassView = new ReactiveVar({})  //'bookTheSameTime','common'\n\n\n\n\n\n\n        //可选days 依赖于 当前的currentLevel\n        self.avaiableDays = new ReactiveVar([])\n        //可选时间   依赖于 当前选中的currentDay\n        self.avaiableTimes = new ReactiveVar([])\n\n\n        //Session.set('CART_ID')\n\n\n        /*\n         * 一次流程选择的class信息  3步\n         * 使用Immutable库进行对象修改\n         * {\n         *  swimmer:\n         *  class1:{classId, swimmerId}\n         *  class2:\n         *  class3:\n         * }\n         * */\n        self.selectedClasses = new ReactiveVar(Immutable.Map())\n\n\n        var undefinedSelectValueOption = {text:'', value: ''};\n        var undefinedSelectValue = '';\n\n        //暂存购物车ID 后端会验证其有效性\n\n\n        function resetDateAndTime() {\n            self.currentDay.set(undefinedSelectValue)\n            self.currentTime.set(undefinedSelectValue)\n        }\n\n\n        self.tokenId = Dispatcher.register(function (payload) {\n            switch (payload.actionType) {\n\n                case \"BookTheSameTime_SWIMMER_CHANGE\": //选择swimmer  level可能会变\n                {\n                    let swimmer = payload.swimmer\n\n                    self.currentSwimmer.set(swimmer)\n\n                    //当前swimmer returnback new swimmer区别处理\n                    //self.currentLevel.set(App.getNextClassLevel(swimmer.level))\n\n                    self.currentDay.set(undefinedSelectValue)\n                    self.currentTime.set(undefinedSelectValue)\n\n                    //var swimmerClasses = self.swimmerClasses.get()\n                    //var swimmerId = swimmer._id\n                    //if (swimmerClasses && swimmerId) {\n                    //    if (swimmerClasses[swimmerId] && swimmerClasses[swimmerId] > 0) {\n                    //        self.selectClassView.set('bookTheSameTime')\n                    //    } else {\n                    //        self.selectClassView.set('common')\n                    //    }\n                    //\n                    //}\n\n                    debugger\n\n                    break;\n                }\n                case \"BookTheSameTime_DAY_CHANGE\"://选择day\n                {\n                    debugger\n\n                    self.currentDay.set(payload.day)\n                    self.currentTime.set()\n                    break;\n                }\n\n                case \"BookTheSameTime_TIME_CHANGE\"://选择time  确定一个class\n                {\n                    debugger\n                    self.currentTime.set(payload.time)\n                    break;\n                }\n\n\n                //sibling 三步  可能是current swimmer BookTheSame time后的选择 也可能是return back用户 也可能是新用户\n                case \"BookTheSameTime_CLASS_SELECT_FOR_SIBLING\"://select确定\n                {\n                    debugger\n\n                    if (payload.currentStep == 1) {\n\n                        let currentSwimmer = self.currentSwimmer.get()\n\n                        var currentClass;\n\n                        currentClass = self.currentClass.get() //sibling first step\n\n\n                        let isFistTime = self.isFirstTime.get()\n\n\n\n                        Meteor.call('add_class_to_cart', {\n                            swimmerId: currentSwimmer._id,\n                            classId: currentClass._id,\n                            quantity: 1,\n                            swimmer: currentSwimmer,\n                            class1: currentClass,\n                            type:'register',\n\n                            isFistTime:isFistTime\n\n                        }, function (err, result) {\n                            debugger\n                            if (err) {\n                                alert(err.error)\n                                return; //todo  prompt\n                            }\n\n\n                            //selectedClasses\n                            let map = self.selectedClasses.get()\n                            map = map.set('swimmer', currentSwimmer)\n                            map = map.set('class1', currentClass)\n                            self.selectedClasses.set(map)\n\n\n\n                            Session.set('CART_ID', result.cartId)\n\n\n                            console.log('step1', currentSwimmer, currentClass)\n\n                            self.currentStep.set(2)\n\n\n                            resetDateAndTime();\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == 2) {\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class2', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n\n                        //ShoppingCart.addClassPreference(2,{\n                        //    'swimmer': swimmer,\n                        //    'class1':  class1,\n                        //    data: currentClass\n                        //},function(err,result){\n                        //    if(err) return;\n                        //\n                        //    self.currentStep.set(3),\n                        //    resetDateAndTime()\n                        //})\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 2,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) return; //todo  prompt\n\n                            console.log('step2', currentClass)\n\n\n                            self.currentStep.set(3)\n                            resetDateAndTime()\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == 3) {\n\n                        //todo unify with currentStep == 2\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class3', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n                        //ShoppingCart.addClassPreference(3,{\n                        //    'swimmer': swimmer,\n                        //    'class1':   class1,\n                        //    data:currentClass\n                        //},function(err,result){\n                        //    if(err) return;\n                        //\n                        //    FlowRouter.go('/classRegister/SelectClassReady');\n                        //\n                        //})\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 3,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) return; //todo  prompt\n\n                            console.log('step3', currentClass)\n\n                            var href=\"/classRegister/BookTheSameTimeSelectClassReady\"\n                                +\"?cartId=\"+Session.get('CART_ID')\n                                +\"&swimmerId=\"+swimmer._id\n                                +\"&classId=\"+class1._id\n                            FlowRouter.go(href);\n\n                        })\n\n                    }\n\n                    break;\n                }\n\n                //正在进行用户 四步  todo和以上合并?\n                case \"BookTheSameTime_CLASS_SELECT_FOR_CURRENT\":{\n                    payload\n                    debugger\n\n                    if (payload.currentStep == 1) {\n\n                        let currentSwimmer = self.currentSwimmer.get()\n\n\n                        var currentClass =  payload.selectedClass  // special; book the same time\n\n\n                        //todo获取一个classId\n\n\n\n\n                        //ShoppingCart.addShoppingItem(\n                        //    {\n                        //        swimmer: currentSwimmer,\n                        //        class1: currentClass\n                        //    }\n                        //);\n\n                        debugger\n\n                        Meteor.call('add_class_to_cart', {\n                            swimmerId: currentSwimmer._id,\n                            classId: currentClass._id,\n                            quantity: 1,\n                            swimmer: currentSwimmer,\n                            class1: currentClass,\n\n                            isBookTheSameTime:true,\n\n                            type:'register'\n                        }, function (err, result) {\n                            debugger\n                            if (err) {\n                                alert(err.error)\n                                return; //todo  prompt\n                            }\n\n                            //selectedClasses\n                            let map = self.selectedClasses.get()\n                            map = map.set('swimmer', currentSwimmer)\n                            map = map.set('class1', currentClass)\n                            self.selectedClasses.set(map)\n\n\n\n                            Session.set('CART_ID', result.cartId)\n\n\n                            console.log('step1', currentSwimmer, currentClass)\n\n                            //self.currentStep.set('1-1') //\n                            self.currentStep.set(2)\n\n                            resetDateAndTime();\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == '1-1'){ //confirm  此步骤后来取消  todo delete\n\n\n                        self.currentStep.set(2)\n                        debugger\n                    }\n\n                    if (payload.currentStep == 2) {\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class2', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n                        debugger\n\n                        //ShoppingCart.addClassPreference(2,{\n                        //    'swimmer': swimmer,\n                        //    'class1':  class1,\n                        //    data: currentClass\n                        //},function(err,result){\n                        //    if(err) return;\n                        //\n                        //    self.currentStep.set(3),\n                        //    resetDateAndTime()\n                        //})\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 2,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) return; //todo  prompt\n\n                            console.log('step2', currentClass)\n\n\n                            self.currentStep.set(3)\n                            resetDateAndTime()\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == 3) {\n\n                        //todo unify with currentStep == 2\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class3', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n                        debugger\n\n                        //ShoppingCart.addClassPreference(3,{\n                        //    'swimmer': swimmer,\n                        //    'class1':   class1,\n                        //    data:currentClass\n                        //},function(err,result){\n                        //    if(err) return;\n                        //\n                        //    FlowRouter.go('/classRegister/SelectClassReady');\n                        //\n                        //})\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 3,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) return; //todo  prompt\n\n                            console.log('step3', currentClass)\n\n\n                            //FlowRouter.go('/classRegister/BookTheSameTimeSelectClassReady');\n                            var href=\"/classRegister/BookTheSameTimeSelectClassReady\"\n                                +\"?cartId=\"+Session.get('CART_ID')\n                                +\"&swimmerId=\"+swimmer._id\n                                +\"&classId=\"+class1._id\n                            FlowRouter.go(href);\n                        })\n\n                    }\n\n\n\n                    break;\n                }\n\n                case \"componentWillMount_CRBookTheSameTimePage\":\n                {\n                    //debugger\n                    console.log('componentWillMount_CRBookTheSameTimePage')\n                    //清空上一轮的选择\n\n                    self.currentDay.set(undefinedSelectValue)\n                    self.currentTime.set(undefinedSelectValue)\n                    self.currentClass.set(null)\n                    self.currentStep.set(1)\n                    //self.avaiableDays //依赖于 当前的currentLevel\n                    //self.avaiableTimes //依赖于 当前选中的currentDay\n\n                    self.selectedClasses.set(Immutable.Map())\n\n                    break;\n                }\n\n            }\n        });\n\n        /*\n         *\n         * ********************* wait for ******************\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *\n         * */\n\n        Meteor.startup(function () {\n\n            //初始化swimmer\n            Tracker.autorun(function () {\n\n                var swimmers = self.getSwimmers().fetch()\n\n                if (swimmers.length) {\n                    console.log('set currentSwimmer',swimmers[0]._id)\n\n                    self.currentSwimmer.set(swimmers[0])\n                    //self.currentLevel.set(App.getNextClassLevel(swimmers[0].level))\n\n                }\n\n            })\n\n            //获取当前swimmer的课数 用于判断swimmer的类型\n            Tracker.autorun(function () {\n                var currentSwimmer = self.currentSwimmer.get()\n                var appInfo = DB.App.findOne()\n\n                if(!appInfo) return;\n                if(!currentSwimmer) return;\n\n                Tracker.autorun(function () {\n\n                    var nowClasses = DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId: App.info.sessionNow\n                    }).fetch();\n\n                    self.nowClasses.set(nowClasses)\n\n                    //self.currentSwimmerClassesRegisterInfo.set(currentSwimmerClassesRegisterInfo)\n\n\n                })\n                Tracker.autorun(function () {\n\n                    var registeredClasses = DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId: App.info.sessionRegister\n                    }).fetch();\n                    self.registeredClasses.set(registeredClasses)\n\n\n                })\n                Tracker.autorun(function () {\n\n                    var historyClasses=DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId:{$nin:[ App.info.sessionNow , App.info.sessionRegister]}\n\n                    }).fetch();\n                    self.historyClasses.set(historyClasses)\n\n                })\n\n                //shoppingCartClasses\n                Tracker.autorun(function () {\n\n                    var shoppingCart= DB.ShoppingCart.findOne({\n                        status:'active',\n                        type:'register'\n                    })\n\n                    var classItems=[];\n                    if(shoppingCart && shoppingCart.items.length){\n                        classItems = _.filter(shoppingCart.items,function(item){\n                            return item.class1 && item.class2 && item.class3   //完整的注册\n                                &&  item.swimmerId == currentSwimmer._id\n\n                        })\n                    }\n\n                    self.shoppingCartClasses.set(classItems)\n                    console.log(classItems)\n\n                })\n\n            })\n\n            //判断swimmer是不是第一次注册\n            Tracker.autorun(function () {\n                let nowClasses =self.nowClasses.get()\n                let registeredClasses =self.registeredClasses.get()\n\n                let historyClasses =self.historyClasses.get()\n\n                let shoppingCartClasses =self.shoppingCartClasses.get()\n\n\n                if(nowClasses.length==0\n                    && registeredClasses.length ==0\n                    && historyClasses.length ==0\n                //&& shoppingCartClasses.length>0\n                ){\n\n                    self.isFirstTime.set(true)\n                }else{\n                    self.isFirstTime.set(false)\n                }\n\n\n            })\n\n\n            //确定课程注册level\n            //对于return back 和 new swimmer  Level即当前level\n            //对于正在游的level＋1\n            Tracker.autorun(function(){\n                var nowClasses =self.nowClasses.get()\n                var currentSwimmer = self.currentSwimmer.get()\n\n                if(!currentSwimmer) return;\n\n                //当前session正在游\n                if(nowClasses.length>0){\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n\n                }else{\n                    self.currentLevel.set(currentSwimmer.level)\n                }\n\n            })\n\n            //days depend on level of swimmer\n            Tracker.autorun(function () {\n                //if (!DB.Classes) return;\n                var level = self.currentLevel.get();\n                var appInfo = DB.App.findOne()\n\n                if(!appInfo || !level) return;\n\n\n                let classes = DB.Classes.find({\n                    sessionId: appInfo.sessionRegister, //level session\n                    levels: level,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                //debugger\n                classes = _.uniq(classes, function (item, key, a) {\n                    return item.day;\n                });\n\n                let days = classes.map(function (v, n) {\n                    return {text: App.Config.week[v.day], value: v.day}\n                })\n\n                days.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption)\n\n                self.avaiableDays.set(days)\n\n                //设置默认值\n                //if (days.length) {\n                //    self.currentDay.set(days[0].value)\n                //}\n\n            });\n\n            /// time depend on day\n            Tracker.autorun(function () {\n                //if (!DB.Classes) return;\n\n                var currentDay = self.currentDay.get();\n                var appInfo = DB.App.findOne()\n\n                if(!appInfo) return;\n\n\n                var level\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                });\n\n                let classes = DB.Classes.find({\n                    sessionId: appInfo.sessionRegister, // session level day\n                    levels: level,\n                    day: currentDay,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                let times = classes.map(function (v, n) {\n                    return {\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime\n                    }\n                })\n                times.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption)\n\n                self.avaiableTimes.set(times)\n\n                //初始化time\n                //if (times.length) {\n                //    self.currentTime.set(times[0].value)\n                //}\n\n\n            });\n\n            //time确定后class就确定了\n            //level + day+ time  确定一个class\n            Tracker.autorun(function () {\n                //if (!DB.Classes) return;\n\n                let time = self.currentTime.get()\n                let appInfo = DB.App.findOne()\n\n                if(!appInfo) return;\n\n\n\n                let level\n                let day\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                    day = self.currentDay.get()\n                });\n\n                let theClass = DB.Classes.find({\n                    sessionId: appInfo.sessionRegister, // session level day\n                    levels: level,\n                    day: day,\n                    startTime: time,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                if (theClass[0]) {\n                    self.currentClass.set(theClass[0])\n                }\n\n\n            });\n\n\n\n\n            /*\n             若无sameclass 显示正常选择页\n\n            * */\n            Tracker.autorun(function () {\n                App.info = App.info || DB.App.findOne()\n                var nowClasses= self.nowClasses.get()\n\n                var currentLevel = self.currentLevel.get()\n\n                if(!App.info) return;\n                if(!currentLevel) return;\n\n\n\n                Tracker.autorun(function () {//获取当前class详细信息\n\n                    var ids=[]\n                    _.each(nowClasses,function(item){\n                        ids.push(item.classId)\n                    })\n                    var currentClasses =  DB.Classes.find({\n                        _id:{$in:ids}\n                    }).fetch()\n\n                    self.currentSwimmerClasses.set(currentClasses)\n\n\n                     //console.log(currentClasses)\n\n                    Tracker.autorun(function () {//获取类似class\n                        var sameClasses =[]\n\n                        _.each(currentClasses,function(currentClass){\n\n                            var sameClass = DB.Classes.findOne({\n                                sessionId: App.info.sessionRegister,\n                                levels:currentLevel,\n\n                                day:currentClass.day,\n                                startTime:currentClass.startTime,\n                                seatsRemain:{$gt:0}\n                            })\n\n                            if(sameClass){\n                                sameClasses.push(sameClass)\n                            }\n\n                        })\n\n                        self.currentSwimmerSameClasses.set(sameClasses)\n\n                        console.log('currentSwimmerSameClasses',sameClasses)\n\n                    })\n\n\n                })\n\n\n\n            })\n\n\n            //sameclass 已在购物车中则不显示该项\n            //sameclass 除去购物车已有的后数目为0 则显示正常选择页面\n            //若已经注册过该class 也要除去\n            //由于bookthesametime 在一个流程的第一步 所以不需考虑重复 后面的步骤需要考虑\n            Tracker.autorun(function (){\n\n                var currentSwimmer = self.currentSwimmer.get()\n                var currentSwimmerSameClasses = self.currentSwimmerSameClasses.get() //can be []\n\n                var registeredClasses = self.registeredClasses.get()\n                var shoppingCartClasses= self.shoppingCartClasses.get()\n\n\n                if(!currentSwimmer) return;\n\n\n                var registeredClassesIds = registeredClasses.map(function(item){\n                    return item.classId\n                });\n                var shoppingCartClassesIds = shoppingCartClasses.map(function(item){\n                    return item.classId\n                })\n\n                var exceptionIds=_.union(registeredClassesIds,shoppingCartClassesIds)\n\n                console.log('registeredClasses',registeredClassesIds)\n                console.log('shoppingCartClasses',shoppingCartClassesIds)\n                console.log('exceptionIds',exceptionIds)\n\n\n\n\n                var avaibleSameClasses = _.filter(currentSwimmerSameClasses,function(item){\n                    return exceptionIds.indexOf(item._id)==-1\n                })\n                self.currentSwimmerAvaibleSameClasses.set(avaibleSameClasses)\n\n\n                console.log('currentSwimmerAvaibleSameClasses',avaibleSameClasses)\n\n\n                //avaibleSameClasses\n\n\n            })\n\n\n            //view  bookthesame time or common\n            Tracker.autorun(function () {\n                var avaibleSameClasses = self.currentSwimmerAvaibleSameClasses.get()\n\n                if(avaibleSameClasses.length>0){\n                    self.currentSwimmerType.set('swimmer-ongoing')\n                }else{\n                    self.currentSwimmerType.set('swimmer-sibling')\n                }\n            })\n\n\n\n\n\n\n\n        })\n\n\n    });\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/Account.store.jsx                                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/26/15.                                                 //\n */                                                                    //\n                                                                       //\nDependency.add('Account.AddSwimmer.store', new function () {           // 5\n                                                                       //\n    var self = this;                                                   // 7\n    //swimmer eval level                                               //\n    self.evalLevel = new ReactiveVar();                                // 9\n                                                                       //\n    self.addSwimmerFormData = new ReactiveVar({                        // 11\n        name: '',                                                      // 12\n        dob: '',                                                       // 13\n        gender: 'male',                                                // 14\n        location: ''                                                   // 15\n    });                                                                //\n                                                                       //\n    self.locationOptions = new ReactiveVar(['Fremont', 'Dublin']);     // 18\n                                                                       //\n    self.tokenId = Dispatcher.register(function (payload) {            // 20\n        switch (payload.actionType) {                                  // 21\n            case \"ACCOUNT_EVAL_LEVEL_SUBMIT\":                          // 22\n                {                                                      // 22\n                    self.evalLevel.set(payload.level);                 // 23\n                    FlowRouter.go('/account/AddSwimmer');              // 24\n                    break;                                             // 25\n                }                                                      //\n            case \"ACCOUNT_ADD_SWIMMER_SUBMIT\":                         // 26\n                {                                                      // 27\n                    DB.Swimmers.insert(payload.fromData, function (err, result) {\n                        if (err) {                                     // 29\n                            console.error(err);                        // 30\n                            return;                                    // 31\n                        }                                              //\n                        FlowRouter.go('/account');                     // 33\n                    });                                                //\n                    break;                                             // 35\n                }                                                      //\n                                                                       //\n            case \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\":                     // 36\n                {                                                      // 38\n                                                                       //\n                    self.addSwimmerFormData.set(payload.fromData);     // 40\n                                                                       //\n                    break;                                             // 42\n                }                                                      //\n                                                                       //\n            case \"PASSWORD_CHANGE_SUCCESS\":                            // 45\n                {                                                      // 45\n                    FlowRouter.go('/account');                         // 46\n                    break;                                             // 47\n                }                                                      //\n            case \"USERNAME_CHANGE_SUCCESS\":                            // 48\n                {                                                      // 49\n                    FlowRouter.go('/account');                         // 50\n                    break;                                             // 51\n                }                                                      //\n            case \"EMERGENCY_CONTACT_CHANGE_SUCCESS\":                   // 53\n                {                                                      // 53\n                    FlowRouter.go('/account');                         // 54\n                    break;                                             // 55\n                }                                                      //\n            case \"ALTERNATE_CONTACT_CHANGE_SUCCESS\":                   // 56\n                {                                                      // 57\n                    FlowRouter.go('/account');                         // 58\n                    break;                                             // 59\n                }                                                      //\n            case \"GO_BACK\":                                            // 61\n                {                                                      // 61\n                    FlowRouter.go('/account');                         // 62\n                    break;                                             // 63\n                }                                                      //\n        }                                                              // 64\n    });                                                                //\n}());                                                                  //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/Account.store.jsx","sourceMap":{"version":3,"sources":["/client/app/account/Account.store.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,UAAU,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,YAAY;;AAEvD,QAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,QAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE;;AAElC,QAAI,CAAC,kBAAkB,GAAG,IAAI,WAAW,CAAC;AACtC,YAAI,EAAC,EAAE;AACP,WAAG,EAAC,EAAE;AACN,cAAM,EAAC,MAAM;AACb,gBAAQ,EAAC,EAAE;KACd,CAAC;;AAEF,QAAI,CAAC,eAAe,GAAE,IAAI,WAAW,CAAC,CAAC,SAAS,EAAC,QAAQ,CAAC,CAAC;;AAE3D,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,OAAO,EAAE;AAClD,gBAAQ,OAAO,CAAC,UAAU;AACtB,iBAAK,2BAA2B;AAAC;AAC7B,wBAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AACjC,8BAAU,CAAC,EAAE,CAAC,qBAAqB,CAAC,CAAC;AACrC,0BAAM;iBACT;AACD,iBAAK,4BAA4B;AAAC;AAC9B,sBAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAC,UAAS,GAAG,EAAC,MAAM,EAAC;AACpD,4BAAG,GAAG,EAAE;AACJ,mCAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AAClB,mCAAO;yBACV;AACD,kCAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;qBAC7B,CAAC;AACF,0BAAM;iBACT;;AAED,iBAAK,gCAAgC;AAAC;;AAElC,wBAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;;AAE7C,0BAAK;iBACR;;AAED,iBAAK,yBAAyB;AAAC;AAC3B,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC;AACzB,0BAAM;iBACT;AACD,iBAAK,yBAAyB;AAAC;AAC3B,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC;AACzB,0BAAM;iBACT;AACD,iBAAK,kCAAkC;AAAC;AACpC,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC;AACzB,0BAAM;iBACT;AACD,iBAAK,kCAAkC;AAAC;AACpC,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC;AACzB,0BAAM;iBACT;AACD,iBAAK,SAAS;AAAC;AACX,8BAAU,CAAC,EAAE,CAAC,UAAU,CAAC;AACzB,0BAAM;iBACT;AAAA,SACJ;KACJ,CAAC;CACL,GAAC,qE","file":"/client/app/account/Account.store.jsx","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\nDependency.add('Account.AddSwimmer.store', new function () {\n\n    var self = this;\n    //swimmer eval level\n    self.evalLevel = new ReactiveVar()\n\n    self.addSwimmerFormData = new ReactiveVar({\n        name:'',\n        dob:'',\n        gender:'male',\n        location:''\n    })\n\n    self.locationOptions= new ReactiveVar(['Fremont','Dublin'])\n\n    self.tokenId = Dispatcher.register(function (payload) {\n        switch (payload.actionType) {\n            case \"ACCOUNT_EVAL_LEVEL_SUBMIT\":{\n                self.evalLevel.set(payload.level)\n                FlowRouter.go('/account/AddSwimmer');\n                break;\n            }\n            case \"ACCOUNT_ADD_SWIMMER_SUBMIT\":{\n                DB.Swimmers.insert(payload.fromData,function(err,result){\n                    if(err) {\n                        console.error(err)\n                        return;\n                    }\n                    FlowRouter.go('/account');\n                })\n                break;\n            }\n\n            case \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\":{\n\n                self.addSwimmerFormData.set(payload.fromData)\n\n                break\n            }\n\n            case \"PASSWORD_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"USERNAME_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"EMERGENCY_CONTACT_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"ALTERNATE_CONTACT_CHANGE_SUCCESS\":{\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"GO_BACK\":{\n                FlowRouter.go('/account')\n                break;\n            }\n        }\n    })\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/AccountAddSwimmer.jsx                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/26/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    (function () {                                                     //\n                                                                       //\n        var accountStore = undefined;                                  // 7\n        Dependency.autorun(function () {                               // 8\n            accountStore = Dependency.get('Account.AddSwimmer.store');\n        });                                                            //\n                                                                       //\n        Cal.AccountAddSwimmer = React.createClass({                    // 12\n            displayName: 'AccountAddSwimmer',                          //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 14\n                                                                       //\n            getMeteorData: function () {                               // 16\n                return {                                               // 17\n                    formData: accountStore.addSwimmerFormData.get(),   // 18\n                    evalLevel: accountStore.evalLevel.get(), //单独页面设置  // 19\n                    locationOptions: accountStore.locationOptions.get()\n                };                                                     //\n            },                                                         //\n                                                                       //\n            ////actions                                                //\n            formSubmit: function (e) {                                 // 25\n                e.preventDefault();                                    // 26\n                                                                       //\n                var fromData = this.refs.AddSwimmerForm.getFormData();\n                                                                       //\n                fromData.level = accountStore.evalLevel.get();         // 30\n                                                                       //\n                if (!fromData.name || !fromData.level || !fromData.location) {\n                    alert('please complete the form ');                // 33\n                    return;                                            // 34\n                }                                                      //\n                                                                       //\n                fromData.accountId = Meteor.userId();                  // 37\n                                                                       //\n                Dispatcher.dispatch({                                  // 40\n                    actionType: \"ACCOUNT_ADD_SWIMMER_SUBMIT\",          // 41\n                    fromData: fromData                                 // 42\n                });                                                    //\n            },                                                         //\n            goToEvaluation: function () {                              // 46\n                                                                       //\n                var fromData = this.refs.AddSwimmerForm.getFormData();\n                                                                       //\n                //保存当前页面表单数据                                           //\n                Dispatcher.dispatch({                                  // 51\n                    actionType: \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\",      // 52\n                    fromData: fromData                                 // 53\n                });                                                    //\n                                                                       //\n                var href = \"/account/EvalLevel\";                       // 56\n                FlowRouter.go(href);                                   // 57\n            },                                                         //\n            render: function () {                                      // 61\n                return React.createElement(                            // 62\n                    'div',                                             //\n                    null,                                              //\n                    React.createElement(                               //\n                        RC.Form,                                       // 63\n                        { ref: 'AddSwimmerForm', onSubmit: this.formSubmit },\n                        React.createElement(RC.Input, { name: 'name', label: 'Name',\n                            ref: 'name',                               // 66\n                            value: this.data.formData && this.data.formData.name }),\n                        React.createElement(RC.Select, {               //\n                            options: [{ text: \"Male\", value: 'male' }, { text: 'Female', value: 'female' }],\n                            name: 'gender',                            // 71\n                            label: 'Gender',                           // 72\n                            value: '{this.data.formData && this.data.formData.gender}'\n                        }),                                            //\n                        React.createElement(RC.Input, { name: 'dob', label: 'Birthday',\n                            placeholder: '2005/01/01',                 // 77\n                            value: this.data.formData && this.data.formData.dob }),\n                        React.createElement(RC.Select, {               //\n                            options: this.data.locationOptions,        // 82\n                            name: 'location',                          // 83\n                            label: 'Location',                         // 84\n                            value: this.data.formData && this.data.formData.location\n                                                                       //\n                        }),                                            //\n                        React.createElement(                           //\n                            RC.Item,                                   // 89\n                            null,                                      //\n                            React.createElement(                       //\n                                'span',                                //\n                                null,                                  //\n                                'Level'                                //\n                            ),                                         //\n                            React.createElement(                       //\n                                'b',                                   //\n                                { style: { 'marginLeft': '5px', color: 'blue' } },\n                                this.data.evalLevel                    //\n                            ),                                         //\n                            React.createElement(                       //\n                                'a',                                   //\n                                { className: 'button-clear',           //\n                                    onClick: this.goToEvaluation,      // 98\n                                    style: { float: 'right' } },       // 99\n                                ' Evaluation Level'                    //\n                            )                                          //\n                        ),                                             //\n                        React.createElement(                           //\n                            RC.Button,                                 // 105\n                            { name: 'level', theme: 'full',            //\n                                onClick: this.formSubmit,              // 106\n                                buttonColor: 'brand' },                // 107\n                            'Add'                                      //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/AccountAddSwimmer.jsx","sourceMap":{"version":3,"sources":["/client/app/account/AccountAddSwimmer.jsx"],"names":[],"mappings":"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","file":"/client/app/account/AccountAddSwimmer.jsx","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\n{\n\n    let accountStore;\n    Dependency.autorun(function () {\n        accountStore = Dependency.get('Account.AddSwimmer.store');\n    });\n\n    Cal.AccountAddSwimmer = React.createClass({\n\n        mixins: [ReactMeteorData],\n\n        getMeteorData() {\n            return {\n                formData:accountStore.addSwimmerFormData.get(),\n                evalLevel:accountStore.evalLevel.get(),  //单独页面设置\n                locationOptions:accountStore.locationOptions.get()\n            }\n        },\n\n        ////actions\n        formSubmit(e){\n            e.preventDefault()\n\n            var fromData = this.refs.AddSwimmerForm.getFormData()\n\n            fromData.level = accountStore.evalLevel.get()\n\n            if(!fromData.name || !fromData.level|| !fromData.location){\n                alert('please complete the form ')\n                return;\n            }\n\n            fromData.accountId= Meteor.userId()\n\n\n            Dispatcher.dispatch({\n                actionType: \"ACCOUNT_ADD_SWIMMER_SUBMIT\",\n                fromData: fromData\n            });\n\n        },\n        goToEvaluation(){\n\n            var fromData = this.refs.AddSwimmerForm.getFormData()\n\n            //保存当前页面表单数据\n            Dispatcher.dispatch({\n                actionType: \"ACCOUNT_ADD_SWIMMER_GO_TO_EVAL\",\n                fromData: fromData\n            });\n\n            var href=\"/account/EvalLevel\"\n            FlowRouter.go(href)\n\n\n        },\n        render() {\n            return <div>\n                <RC.Form ref=\"AddSwimmerForm\" onSubmit={this.formSubmit}>\n\n                    <RC.Input name=\"name\" label=\"Name\"\n                              ref=\"name\"\n                              value={this.data.formData && this.data.formData.name}/>\n\n                    <RC.Select\n                        options={[{text:\"Male\",value:'male'},{text:'Female',value:'female'}]}\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value=\"{this.data.formData && this.data.formData.gender}\"\n                        />\n\n                    <RC.Input name=\"dob\" label=\"Birthday\"\n                              placeholder=\"2005/01/01\"\n                              value={this.data.formData && this.data.formData.dob}/>\n\n\n                    <RC.Select\n                        options={this.data.locationOptions}\n                        name=\"location\"\n                        label=\"Location\"\n                        value={this.data.formData && this.data.formData.location}\n\n                        />\n\n                    <RC.Item>\n                        <span  >Level</span>\n\n                        <b style={{'marginLeft':'5px',color:'blue'}}>\n                            {this.data.evalLevel}\n                        </b>\n\n\n                         <a className=\"button-clear\"\n                            onClick={this.goToEvaluation}\n                            style={{float:'right'}}> Evaluation Level</a>\n\n\n                    </RC.Item>\n\n\n                    <RC.Button name=\"level\" theme=\"full\"\n                               onClick={this.formSubmit}\n                               buttonColor=\"brand\">\n                        Add\n                    </RC.Button>\n\n\n                </RC.Form>\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/AccountEvalSwimmerLevel.jsx                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/26/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.AccountEvalSwimmerLevel = React.createClass({                      // 5\n    displayName: \"AccountEvalSwimmerLevel\",                            //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    //actions                                                          //\n    confirm: function () {                                             // 13\n                                                                       //\n        var level = this.refs.levelInput.getValue();                   // 15\n                                                                       //\n        Dispatcher.dispatch({                                          // 17\n            actionType: \"ACCOUNT_EVAL_LEVEL_SUBMIT\",                   // 18\n            level: level                                               // 19\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 25\n                                                                       //\n        return React.createElement(                                    // 27\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                RC.Item,                                               // 29\n                { theme: \"body\" },                                     //\n                React.createElement(                                   //\n                    \"h2\",                                              //\n                    { className: \"brand\" },                            //\n                    \"Description\"                                      //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"p\",                                               //\n                    null,                                              //\n                    \"If you do not assign a \\\"name\\\" prop, a random string will be generated for you.\"\n                )                                                      //\n            ),                                                         //\n            React.createElement(RC.RadioGroup, { list: App.Config.classEVALLevels,\n                ref: \"levelInput\",                                     // 35\n                name: \"my-park\",                                       // 36\n                value: \"elora-gorge\", uiColor: \"brand2\" }),            // 37\n            React.createElement(                                       //\n                RC.Button,                                             // 39\n                { name: \"button\", theme: \"full\",                       //\n                    onClick: this.confirm,                             // 40\n                    buttonColor: \"brand\" },                            // 41\n                \"Select\"                                               //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/AccountEvalSwimmerLevel.jsx","sourceMap":{"version":3,"sources":["/client/app/account/AccountEvalSwimmerLevel.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE5C,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;;AAGD,WAAO,cAAE;;AAEL,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;;AAE3C,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,2BAA2B;AACvC,iBAAK,EAAE,KAAK;SACf,CAAC,CAAC;KAEN;;AAGD,UAAM,cAAG;;AAEL,eAAO;;;YAEH;AAAC,kBAAE,CAAC,IAAI;kBAAC,KAAK,EAAC,MAAM;gBACjB;;sBAAI,SAAS,EAAC,OAAO;;iBAAiB;gBACtC;;;;iBAA+F;aACzF;YAEV,oBAAC,EAAE,CAAC,UAAU,IAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,eAAgB;AACjC,mBAAG,EAAG,YAAY;AAClB,oBAAI,EAAC,SAAS;AACd,qBAAK,EAAC,aAAa,EAAC,OAAO,EAAC,QAAQ,GAAG;YAEtD;AAAC,kBAAE,CAAC,MAAM;kBAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM;AAC1B,2BAAO,EAAE,IAAI,CAAC,OAAQ;AACtB,+BAAW,EAAC,OAAO;;aAElB;SAEV;KACT;CACJ,CAAC,uE","file":"/client/app/account/AccountEvalSwimmerLevel.jsx","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\nCal.AccountEvalSwimmerLevel = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    //actions\n    confirm(){\n\n        var level = this.refs.levelInput.getValue()\n\n        Dispatcher.dispatch({\n            actionType: \"ACCOUNT_EVAL_LEVEL_SUBMIT\",\n            level: level\n        });\n\n    },\n\n\n    render() {\n\n        return <div>\n\n            <RC.Item theme=\"body\">\n                <h2 className=\"brand\">Description</h2>\n                <p>If you do not assign a &quot;name&quot; prop, a random string will be generated for you.</p>\n            </RC.Item>\n\n            <RC.RadioGroup list={App.Config.classEVALLevels}\n                           ref = 'levelInput'\n                           name=\"my-park\"\n                           value=\"elora-gorge\" uiColor=\"brand2\" />\n\n            <RC.Button name=\"button\" theme=\"full\"\n                       onClick={this.confirm}\n                       buttonColor=\"brand\">\n                Select\n            </RC.Button>\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/AccountManagement.jsx                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/26/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.AccountManagement = React.createClass({                            // 5\n    displayName: \"AccountManagement\",                                  //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n                                                                       //\n    getMeteorData: function () {                                       // 10\n                                                                       //\n        Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());      // 12\n                                                                       //\n        return {                                                       // 14\n            currentUser: Meteor.user(),                                // 15\n            swimmers: DB.Swimmers.find({ accountId: Meteor.userId() }).fetch()\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 20\n                                                                       //\n        return React.createElement(                                    // 22\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(RC.Card, { title: \"Manage My Account\" }),\n            React.createElement(                                       //\n                RC.List,                                               // 27\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.Item,                                           // 28\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"User Name\"                                //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            this.data.currentUser.username ? this.data.currentUser.username : 'User Name Not Set'\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            React.createElement(                       //\n                                \"a\",                                   //\n                                { className: \"button button-block\", href: \"/account/resetUserName\" },\n                                \"Change\"                               //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 46\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Email\"                                    //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            this.data.currentUser ? this.data.currentUser.emails[0].address : ''\n                        )                                              //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 59\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Password\"                                 //\n                        ),                                             //\n                        React.createElement(\"div\", { className: \"col\" }),\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            React.createElement(                       //\n                                \"a\",                                   //\n                                { className: \"button button-block\", href: \"/account/resetPassword\" },\n                                \"Change\"                               //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 74\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Emergency Contact\"                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            this.data.currentUser.emergencyContact ? this.data.currentUser.emergencyContact.name : 'Emergency Contact Not Set'\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            React.createElement(                       //\n                                \"a\",                                   //\n                                { className: \"button button-block\", href: \"/account/emergencyContact\" },\n                                \"Update\"                               //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 93\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Alternate Contact\"                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            this.data.currentUser.alterContact ? this.data.currentUser.alterContact.name : 'Alternate Contact Not Set'\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            React.createElement(                       //\n                                \"a\",                                   //\n                                { className: \"button button-block\", href: \"/account/alternateContact\" },\n                                \"Update\"                               //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 111\n                    { className: \"item-text-wrap\" },                   //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"swimmers\"                                 //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            React.createElement(                       //\n                                \"p\",                                   //\n                                null,                                  //\n                                this.data.swimmers.map(function (swimmer) {\n                                                                       //\n                                    var href = '/account/SwimmerProfile/' + swimmer._id;\n                                                                       //\n                                    return React.createElement(        // 124\n                                        \"a\",                           //\n                                        { key: swimmer._id,            //\n                                            className: \"button button-block button-small\",\n                                            href: href },              // 126\n                                        swimmer.name                   //\n                                    );                                 //\n                                })                                     //\n                            ),                                         //\n                            React.createElement(                       //\n                                \"p\",                                   //\n                                null,                                  //\n                                React.createElement(                   //\n                                    \"a\",                               //\n                                    { className: \"button button-block\",\n                                        href: \"/account/AddSwimmer\" },\n                                    \"Add\"                              //\n                                )                                      //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/AccountManagement.jsx","sourceMap":{"version":3,"sources":["/client/app/account/AccountManagement.jsx"],"names":[],"mappings":"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","file":"/client/app/account/AccountManagement.jsx","sourcesContent":["/**\n * Created on 9/26/15.\n */\n\nCal.AccountManagement = React.createClass({\n\n    mixins: [ReactMeteorData],\n\n\n    getMeteorData() {\n\n        Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n\n        return {\n            currentUser: Meteor.user(),\n            swimmers: DB.Swimmers.find({accountId: Meteor.userId()}).fetch()\n        };\n    },\n\n    render() {\n\n        return <div>\n            <RC.Card title=\"Manage My Account\">\n\n            </RC.Card>\n\n            <RC.List>\n                <RC.Item className=\"item-text-wrap\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            User Name\n                        </div>\n                        <div className=\"col\">\n                            {this.data.currentUser.username\n                                ? this.data.currentUser.username : 'User Name Not Set'}\n                        </div>\n                        <div className=\"col\">\n\n                            <a className=\"button button-block\" href=\"/account/resetUserName\">\n                                Change\n                            </a>\n                        </div>\n                    </div>\n                </RC.Item>\n\n                <RC.Item className=\"item-text-wrap\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            Email\n                        </div>\n\n                        <div className=\"col\">\n                            {this.data.currentUser ?\n                                this.data.currentUser.emails[0].address : ''}\n                        </div>\n                    </div>\n                </RC.Item>\n\n                <RC.Item className=\"item-text-wrap\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            Password\n                        </div>\n                        <div className=\"col\">\n                        </div>\n                        <div className=\"col\">\n                            <a className=\"button button-block\" href=\"/account/resetPassword\">\n                                Change\n                            </a>\n                        </div>\n                    </div>\n                </RC.Item>\n\n                <RC.Item className=\"item-text-wrap\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            Emergency Contact\n                        </div>\n                        <div className=\"col\">\n                            {this.data.currentUser.emergencyContact\n                                ? this.data.currentUser.emergencyContact.name : 'Emergency Contact Not Set'}\n                        </div>\n\n                        <div className=\"col\">\n                            <a className=\"button button-block\" href=\"/account/emergencyContact\">\n                                Update\n                            </a>\n                        </div>\n\n                    </div>\n                </RC.Item>\n\n                <RC.Item className=\"item-text-wrap\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            Alternate Contact\n                        </div>\n                        <div className=\"col\">\n                            {this.data.currentUser.alterContact\n                                ? this.data.currentUser.alterContact.name : 'Alternate Contact Not Set'}\n                        </div>\n\n                        <div className=\"col\">\n                            <a className=\"button button-block\" href=\"/account/alternateContact\">\n                                Update\n                            </a>\n                        </div>\n                    </div>\n                </RC.Item>\n\n                <RC.Item className=\"item-text-wrap\">\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            swimmers\n                        </div>\n                        <div className=\"col\">\n                            <p>\n                                {\n                                    this.data.swimmers.map(function (swimmer) {\n\n                                        let href = '/account/SwimmerProfile/' + swimmer._id;\n\n                                        return <a key={swimmer._id}\n                                                  className=\"button button-block button-small\"\n                                                  href={href}>\n                                            {swimmer.name}\n                                        </a>\n\n                                    })\n\n                                }\n                            </p>\n                            <p>\n                                <a className=\"button button-block\"\n                                   href=\"/account/AddSwimmer\">Add</a>\n                            </p>\n\n                        </div>\n                    </div>\n\n                </RC.Item>\n\n\n            </RC.List>\n\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/AccountSwimmerProfile.jsx                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/28/15.                                                 //\n */                                                                    //\n{                                                                      // 4\n                                                                       //\n    //'read'  'edit' mode                                              //\n    //let mode = new ReactiveVar('read')                               //\n                                                                       //\n    Cal.AccountSwimmerProfile = React.createClass({                    // 10\n        displayName: \"AccountSwimmerProfile\",                          //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 12\n        getMeteorData: function () {                                   // 13\n                                                                       //\n            Meteor.subscribe('swimmer', this.props.swimmerId);         // 16\n            return {                                                   // 17\n                                                                       //\n                swimmer: DB.Swimmers.findOne({                         // 19\n                    _id: this.props.swimmerId                          // 20\n                })                                                     //\n            };                                                         //\n        },                                                             //\n                                                                       //\n        render: function () {                                          // 25\n                                                                       //\n            return React.createElement(                                // 27\n                \"div\",                                                 //\n                null,                                                  //\n                this.data.swimmer ? React.createElement(               //\n                    RC.Form,                                           // 31\n                    { ref: \"myForm\", onSubmit: this.formSubmit },      //\n                    React.createElement(RC.Input, { name: \"name\", label: \"Name\", value: this.data.swimmer.name }),\n                    React.createElement(RC.Select, {                   //\n                        options: ['male', 'female'],                   // 38\n                        name: \"gender\",                                // 39\n                        label: \"Gender\",                               // 40\n                        value: this.data.swimmer.gender                // 41\n                    }),                                                //\n                    React.createElement(RC.Input, { name: \"dob\", label: \"DOB\", value: \"\" }),\n                    React.createElement(RC.Select, {                   //\n                        options: ['place1', 'place2'],                 // 48\n                        name: \"location\",                              // 49\n                        label: \"Location\",                             // 50\n                        value: this.data.swimmer.location              // 51\n                    }),                                                //\n                    React.createElement(RC.Select, {                   //\n                        options: App.Config.classLevelsNUM,            // 55\n                        name: \"level\",                                 // 56\n                        readOnly: true,                                // 57\n                        label: \"Level\",                                // 58\n                        value: this.data.swimmer.level                 // 59\n                                                                       //\n                    })                                                 //\n                ) : React.createElement(RC.Card, { title: \"No such swimmer\" })\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/AccountSwimmerProfile.jsx","sourceMap":{"version":3,"sources":["/client/app/account/AccountSwimmerProfile.jsx"],"names":[],"mappings":";;;;;;;;;;;AAGA;;;;;AAMI,OAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE1C,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;;AAGZ,kBAAM,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AACjD,mBAAO;;AAEH,uBAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC;AACzB,uBAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;iBAC5B,CAAC;aACL;SACJ;;AAED,cAAM,cAAG;;AAEL,mBAAO;;;gBAGC,IAAI,CAAC,IAAI,CAAC,OAAO,GACb;AAAC,sBAAE,CAAC,IAAI;sBAAC,GAAG,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,UAAW;oBAG5C,oBAAC,EAAE,CAAC,KAAK,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAK,GAAE;oBAGnE,oBAAC,EAAE,CAAC,MAAM;AACN,+BAAO,EAAE,CAAC,MAAM,EAAC,QAAQ,CAAE;AAC3B,4BAAI,EAAC,QAAQ;AACb,6BAAK,EAAC,QAAQ;AACd,6BAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAO;sBAC9B;oBAEN,oBAAC,EAAE,CAAC,KAAK,IAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,EAAE,GAAE;oBAG3C,oBAAC,EAAE,CAAC,MAAM;AACN,+BAAO,EAAE,CAAC,QAAQ,EAAC,QAAQ,CAAE;AAC7B,4BAAI,EAAC,UAAU;AACf,6BAAK,EAAC,UAAU;AAChB,6BAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAS;sBAChC;oBAEN,oBAAC,EAAE,CAAC,MAAM;AACN,+BAAO,EAAE,GAAG,CAAC,MAAM,CAAC,cAAe;AACnC,4BAAI,EAAC,OAAO;AACZ,gCAAQ;AACR,6BAAK,EAAC,OAAO;AACb,6BAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAM;;sBAE7B;iBAGA,GACR,oBAAC,EAAE,CAAC,IAAI,IAAC,KAAK,EAAC,iBAAiB,GAAW;aAEnD;SACT;KACJ,CAAC;CACL,wE","file":"/client/app/account/AccountSwimmerProfile.jsx","sourcesContent":["/**\n * Created on 9/28/15.\n */\n{\n\n    //'read'  'edit' mode\n    //let mode = new ReactiveVar('read')\n\n\n    Cal.AccountSwimmerProfile = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n\n            Meteor.subscribe('swimmer', this.props.swimmerId)\n            return {\n\n                swimmer: DB.Swimmers.findOne({\n                    _id: this.props.swimmerId\n                })\n            }\n        },\n\n        render() {\n\n            return <div>\n\n                {\n                    this.data.swimmer ?\n                        <RC.Form ref=\"myForm\" onSubmit={this.formSubmit}>\n\n\n                            <RC.Input name=\"name\" label=\"Name\" value={this.data.swimmer.name}/>\n\n\n                            <RC.Select\n                                options={['male','female']}\n                                name=\"gender\"\n                                label=\"Gender\"\n                                value={this.data.swimmer.gender}\n                                />\n\n                            <RC.Input name=\"dob\" label=\"DOB\" value=\"\"/>\n\n\n                            <RC.Select\n                                options={['place1','place2']}\n                                name=\"location\"\n                                label=\"Location\"\n                                value={this.data.swimmer.location}\n                                />\n\n                            <RC.Select\n                                options={App.Config.classLevelsNUM}\n                                name=\"level\"\n                                readOnly\n                                label=\"Level\"\n                                value={this.data.swimmer.level}\n\n                                />\n\n\n                        </RC.Form>\n                        : <RC.Card title=\"No such swimmer\"></RC.Card>\n                }\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/accountAlternateContact.jsx                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar themes = [\"overlay-light\", \"overlay-dark\"];                        // 1\n                                                                       //\nCal.ChangeAlternateContact = React.createClass({                       // 3\n\tdisplayName: \"ChangeAlternateContact\",                                //\n                                                                       //\n\tmixins: [RC.Mixins.Theme],                                            // 5\n\tthemeGroup: \"ih-login\",                                               // 6\n\tthemeDefault: \"overlay-dark\",                                         // 7\n\tthemes: themes,                                                       // 8\n                                                                       //\n\tgetInitialState: function () {                                        // 10\n\t\treturn {                                                             // 11\n\t\t\tbuttonActive: false,                                                // 12\n\t\t\twaiting: false,                                                     // 13\n\t\t\tmsg: null                                                           // 14\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tclearForm: function () {                                              // 18\n\t\tthis.refs.name.reset();                                              // 19\n\t\tthis.refs.phone.reset();                                             // 20\n\t\tthis.refs.address.reset();                                           // 21\n\t\tthis.setState({                                                      // 22\n\t\t\tmsg: null,                                                          // 23\n\t\t\twaiting: false,                                                     // 24\n\t\t\tbuttonActive: false });                                             // 25\n\t},                                                                    //\n                                                                       //\n\tupdateAlternateContact: function (e) {                                // 28\n\t\tdebugger;                                                            // 29\n\t\te.preventDefault();                                                  // 30\n\t\tvar self = this;                                                     // 31\n\t\tvar form = this.refs.AlternateContactForm.getFormData();             // 32\n                                                                       //\n\t\tif (form.name) {                                                     // 34\n                                                                       //\n\t\t\t// Reset Account Password using token                               //\n\t\t\tthis.setState({ waiting: true });                                   // 37\n\t\t\tvar alternateContact = {                                            // 38\n\t\t\t\tname: form.name,                                                   // 39\n\t\t\t\tphone: form.phone,                                                 // 40\n\t\t\t\taddress: form.address,                                             // 41\n\t\t\t\tlocation: null                                                     // 42\n\t\t\t};                                                                  //\n                                                                       //\n\t\t\tMeteor.call('SetAlternateContact', Meteor.userId(), alternateContact, function (err, result) {\n\t\t\t\tdebugger;                                                          // 46\n\t\t\t\tvar passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : null;\n\t\t\t\tif (!!err) {                                                       // 50\n\t\t\t\t\tconsole.log(err);                                                 // 51\n\t\t\t\t\tself.setState({                                                   // 52\n\t\t\t\t\t\tmsg: passedMsg,                                                  // 53\n\t\t\t\t\t\twaiting: false,                                                  // 54\n\t\t\t\t\t\tbuttonActive: false });                                          // 55\n\t\t\t\t\treturn;                                                           // 56\n\t\t\t\t} else {                                                           //\n\t\t\t\t\tself.clearForm();                                                 // 58\n\t\t\t\t\tDispatcher.dispatch({                                             // 59\n\t\t\t\t\t\tactionType: \"ALTERNATE_CONTACT_CHANGE_SUCCESS\"                   // 60\n\t\t\t\t\t});                                                               //\n\t\t\t\t\treturn;                                                           // 62\n\t\t\t\t}                                                                  //\n\t\t\t});                                                                 //\n\t\t} else {                                                             //\n\t\t\tthis.setState({ msg: \"Name Cannot Be Empty.\" });                    // 66\n\t\t\tthis.setState({ waiting: false, buttonActive: false });             // 67\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tdebuggerHelper: function () {                                         // 71\n\t\tdebugger;                                                            // 72\n\t},                                                                    //\n                                                                       //\n\tprintMsg: function () {                                               // 75\n\t\tconsole.log(\"printMsg is called\");                                   // 76\n\t\tvar currentMessages = this.state.msg ? [this.state.msg] : [];        // 77\n\t\treturn React.createElement(                                          // 78\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tcurrentMessages.map(function (m, n) {                               //\n\t\t\t\treturn React.createElement(                                        // 81\n\t\t\t\t\t\"div\",                                                            //\n\t\t\t\t\t{ className: \"center\", key: n },                                  //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"div\",                                                           //\n\t\t\t\t\t\t{ className: \"bigger inline-block invis-70 red\" },               //\n\t\t\t\t\t\t_.isString(m) ? React.createElement(                             //\n\t\t\t\t\t\t\t\"div\",                                                          //\n\t\t\t\t\t\t\tnull,                                                           //\n\t\t\t\t\t\t\tm                                                               //\n\t\t\t\t\t\t) : m                                                            //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t);                                                                 //\n\t\t\t})                                                                  //\n\t\t);                                                                   //\n\t},                                                                    //\n                                                                       //\n\tcheckButtonState: function (e) {                                      // 91\n\t\tvar form = this.refs.AlternateContactForm.getFormData();             // 92\n\t\tvar test = _.every(_.values(form), function (t) {                    // 93\n\t\t\treturn t.length && t.length > 0;                                    // 94\n\t\t});                                                                  //\n\t\tif (test != this.state.buttonActive) {                               // 96\n\t\t\tthis.setState({ buttonActive: test, msg: null });                   // 97\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tbackToAccount: function (e) {                                         // 101\n\t\tDispatcher.dispatch({                                                // 102\n\t\t\tactionType: \"GO_BACK\"                                               // 103\n\t\t});                                                                  //\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 107\n\t\tvar inputTheme = \"small-label\";                                      // 108\n\t\tvar buttonTheme = \"full\";                                            // 109\n\t\tif (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n\t\t\tinputTheme += \",\" + this.props.theme;                               // 111\n\t\t\tbuttonTheme += \",\" + this.props.theme;                              // 112\n\t\t}                                                                    //\n\t\treturn React.createElement(                                          // 114\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.Form,                                                           // 116\n\t\t\t\t{ onSubmit: this.updateAlternateContact, onKeyUp: this.checkButtonState, ref: \"AlternateContactForm\" },\n\t\t\t\tthis.printMsg(),                                                   //\n\t\t\t\tReact.createElement(RC.Input, { name: \"name\", label: \"Contact Name\", theme: inputTheme, ref: \"name\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"phone\", label: \"Contact Phone Number\", theme: inputTheme, ref: \"phone\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"address\", label: \"Contact Address\", theme: inputTheme, ref: \"address\" }),\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\t\"p\",                                                              //\n\t\t\t\t\t{ className: \"center\" },                                          //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"span\",                                                          //\n\t\t\t\t\t\t{ className: \"smallest inline-block cursor open-registration invis-70\", onClick: this.backToAccount },\n\t\t\t\t\t\t\"Go Back To My Account\"                                          //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t),                                                                 //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 128\n\t\t\t\t\t{ name: \"button\", active: this.state.buttonActive, theme: buttonTheme, disabled: this.state.waiting },\n\t\t\t\t\tthis.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Update Alternate Contact\"\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t);                                                                   //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/accountAlternateContact.jsx","sourceMap":{"version":3,"sources":["/client/app/account/accountAlternateContact.jsx"],"names":[],"mappings":"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","file":"/client/app/account/accountAlternateContact.jsx","sourcesContent":["let themes = [\"overlay-light\",\"overlay-dark\"]\n\nCal.ChangeAlternateContact = React.createClass({\n\n\tmixins: [RC.Mixins.Theme],\n\tthemeGroup: \"ih-login\",\n\tthemeDefault: \"overlay-dark\",\n\tthemes: themes,\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tbuttonActive: false,\n\t\t\twaiting: false,\n\t\t\tmsg: null,\n\t\t}\n\t},\n\n\tclearForm(){\n\t\tthis.refs.name.reset()\n\t\tthis.refs.phone.reset()\n\t\tthis.refs.address.reset()\n\t\tthis.setState({ \n\t\t\tmsg: null,\n\t\t\twaiting: false,\n\t\t\tbuttonActive: false })\n\t},\n\n\tupdateAlternateContact(e){\n\t\tdebugger\n\t\te.preventDefault()\n\t\tlet self = this\n\t\tlet form = this.refs.AlternateContactForm.getFormData()\n\n\t\tif (form.name) {\n\n\t      \t// Reset Account Password using token\n\t      \tthis.setState({ waiting: true })\n\t      \tlet alternateContact = {\n\t      \t\tname: form.name,\n\t      \t\tphone: form.phone,\n\t      \t\taddress: form.address,\n\t      \t\tlocation: null\n\t      \t}\n\n\t      \tMeteor.call('SetAlternateContact', Meteor.userId(), alternateContact, function(err, result){\n\t      \t\tdebugger\n\t      \t\tlet passedMsg = err && err.error\n\t      \t\t\t\t? (ph.errorMsgs[err.error] || err.reason)\n\t      \t\t\t\t: null\n\t      \t\tif (!!err) {\n\t      \t\t\tconsole.log(err)\n\t      \t\t\tself.setState({ \n\t      \t\t\t\tmsg: passedMsg,\n\t      \t\t\t\twaiting: false,\n\t      \t\t\t\tbuttonActive: false })\n\t      \t\t\treturn\n\t      \t\t} else {\n\t      \t\t\tself.clearForm()\n\t\t      \t\tDispatcher.dispatch({\n\t\t        \t\tactionType: \"ALTERNATE_CONTACT_CHANGE_SUCCESS\"\n\t\t        \t});\n\t\t        \treturn;\n\t      \t\t}\n\t      \t})\n\t  \t} else { \n\t  \t\tthis.setState({ msg: \"Name Cannot Be Empty.\" })\n\t  \t\tthis.setState({ waiting: false, buttonActive: false })\n\t  \t}\n\t},\n\n\tdebuggerHelper(){\n\t\tdebugger\n\t},\n\n\tprintMsg(){\n\t\tconsole.log(\"printMsg is called\")\n\t\tlet currentMessages = this.state.msg ? [this.state.msg] : []\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tcurrentMessages.map(function(m,n){\n\t\t\t\t\treturn <div className=\"center\" key={n}>\n\t\t\t\t             \t<div className=\"bigger inline-block invis-70 red\">\n\t\t\t\t             \t\t{_.isString(m) ? <div>{m}</div> : m}\n\t\t\t\t             \t</div>\n\t\t\t            \t</div>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t},\n\n\tcheckButtonState(e){\n\t\tvar form = this.refs.AlternateContactForm.getFormData()\n\t\tlet test = _.every( _.values(form), function(t){\n\t\t\treturn t.length && t.length>0\n\t\t})\n\t\tif(test\t!= this.state.buttonActive) {\n\t\t\tthis.setState({ buttonActive: test, msg: null})\n\t\t}\n\t},\n\n\tbackToAccount(e){\n\t\tDispatcher.dispatch({\n\t\t    actionType: \"GO_BACK\"\n\t\t});\n\t},\n\n\trender: function() {\n\t\tvar inputTheme = \"small-label\"\n    \tvar buttonTheme = \"full\"\n\t\tif (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      \t\tinputTheme += \",\"+this.props.theme\n      \t\tbuttonTheme += \",\"+this.props.theme\n    \t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RC.Form onSubmit={this.updateAlternateContact} onKeyUp={this.checkButtonState} ref=\"AlternateContactForm\">\n\t\t\t\t\t{this.printMsg()}\n\t\t\t\t\t<RC.Input name=\"name\" label=\"Contact Name\"  theme={inputTheme} ref=\"name\"  />\n\t\t\t\t\t<RC.Input name=\"phone\" label=\"Contact Phone Number\"  theme={inputTheme} ref=\"phone\"  />\n\t\t\t\t\t<RC.Input name=\"address\" label=\"Contact Address\"  theme={inputTheme} ref=\"address\"  />\n\t\t\t\t\t{\n\t\t\t            <p className=\"center\">\n\t\t\t              <span className=\"smallest inline-block cursor open-registration invis-70\" onClick={this.backToAccount}>\n\t\t\t                Go Back To My Account\n\t\t\t              </span>\n\t\t\t            </p>\n\t\t\t        }\n\t\t\t\t\t<RC.Button name=\"button\" active={this.state.buttonActive} theme={buttonTheme} disabled={this.state.waiting}>\n\t\t\t\t\t\t{this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Update Alternate Contact\"}\n\t\t\t\t\t</RC.Button>\n\t\t\t\t</RC.Form>\n\t\t\t</div>\n\t\t);\n\t}\n}); "]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/accountChangeEmergencyContact.jsx                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar themes = [\"overlay-light\", \"overlay-dark\"];                        // 1\n                                                                       //\nCal.ChangeEmergencyContact = React.createClass({                       // 3\n\tdisplayName: \"ChangeEmergencyContact\",                                //\n                                                                       //\n\tmixins: [RC.Mixins.Theme],                                            // 5\n\tthemeGroup: \"ih-login\",                                               // 6\n\tthemeDefault: \"overlay-dark\",                                         // 7\n\tthemes: themes,                                                       // 8\n                                                                       //\n\tgetInitialState: function () {                                        // 10\n\t\treturn {                                                             // 11\n\t\t\tbuttonActive: false,                                                // 12\n\t\t\twaiting: false,                                                     // 13\n\t\t\tmsg: null                                                           // 14\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tclearForm: function () {                                              // 18\n\t\tthis.refs.name.reset();                                              // 19\n\t\tthis.refs.phone.reset();                                             // 20\n\t\tthis.refs.address.reset();                                           // 21\n\t\tthis.setState({                                                      // 22\n\t\t\tmsg: null,                                                          // 23\n\t\t\twaiting: false,                                                     // 24\n\t\t\tbuttonActive: false });                                             // 25\n\t},                                                                    //\n                                                                       //\n\tupdateEmergencyContact: function (e) {                                // 28\n\t\tdebugger;                                                            // 29\n\t\te.preventDefault();                                                  // 30\n\t\tvar self = this;                                                     // 31\n\t\tvar form = this.refs.EmergencyContactForm.getFormData();             // 32\n                                                                       //\n\t\tif (form.name) {                                                     // 34\n                                                                       //\n\t\t\t// Reset Account Password using token                               //\n\t\t\tthis.setState({ waiting: true });                                   // 37\n\t\t\tvar emergencyContact = {                                            // 38\n\t\t\t\tname: form.name,                                                   // 39\n\t\t\t\tphone: form.phone,                                                 // 40\n\t\t\t\taddress: form.address,                                             // 41\n\t\t\t\tlocation: null                                                     // 42\n\t\t\t};                                                                  //\n                                                                       //\n\t\t\tMeteor.call('SetEmergencyContact', Meteor.userId(), emergencyContact, function (err, result) {\n\t\t\t\tdebugger;                                                          // 46\n\t\t\t\tvar passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : null;\n\t\t\t\tif (!!err) {                                                       // 50\n\t\t\t\t\tconsole.log(err);                                                 // 51\n\t\t\t\t\tself.setState({                                                   // 52\n\t\t\t\t\t\tmsg: passedMsg,                                                  // 53\n\t\t\t\t\t\twaiting: false,                                                  // 54\n\t\t\t\t\t\tbuttonActive: false });                                          // 55\n\t\t\t\t\treturn;                                                           // 56\n\t\t\t\t} else {                                                           //\n\t\t\t\t\tself.clearForm();                                                 // 58\n\t\t\t\t\tDispatcher.dispatch({                                             // 59\n\t\t\t\t\t\tactionType: \"EMERGENCY_CONTACT_CHANGE_SUCCESS\"                   // 60\n\t\t\t\t\t});                                                               //\n\t\t\t\t\treturn;                                                           // 62\n\t\t\t\t}                                                                  //\n\t\t\t});                                                                 //\n\t\t} else {                                                             //\n\t\t\tthis.setState({ msg: \"Name Cannot Be Empty.\" });                    // 66\n\t\t\tthis.setState({ waiting: false, buttonActive: false });             // 67\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tdebuggerHelper: function () {                                         // 71\n\t\tdebugger;                                                            // 72\n\t},                                                                    //\n                                                                       //\n\tprintMsg: function () {                                               // 75\n\t\tconsole.log(\"printMsg is called\");                                   // 76\n\t\tvar currentMessages = this.state.msg ? [this.state.msg] : [];        // 77\n\t\treturn React.createElement(                                          // 78\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tcurrentMessages.map(function (m, n) {                               //\n\t\t\t\treturn React.createElement(                                        // 81\n\t\t\t\t\t\"div\",                                                            //\n\t\t\t\t\t{ className: \"center\", key: n },                                  //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"div\",                                                           //\n\t\t\t\t\t\t{ className: \"bigger inline-block invis-70 red\" },               //\n\t\t\t\t\t\t_.isString(m) ? React.createElement(                             //\n\t\t\t\t\t\t\t\"div\",                                                          //\n\t\t\t\t\t\t\tnull,                                                           //\n\t\t\t\t\t\t\tm                                                               //\n\t\t\t\t\t\t) : m                                                            //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t);                                                                 //\n\t\t\t})                                                                  //\n\t\t);                                                                   //\n\t},                                                                    //\n                                                                       //\n\tcheckButtonState: function (e) {                                      // 91\n\t\tvar form = this.refs.EmergencyContactForm.getFormData();             // 92\n\t\tvar test = _.every(_.values(form), function (t) {                    // 93\n\t\t\treturn t.length && t.length > 0;                                    // 94\n\t\t});                                                                  //\n\t\tif (test != this.state.buttonActive) {                               // 96\n\t\t\tthis.setState({ buttonActive: test, msg: null });                   // 97\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tbackToAccount: function (e) {                                         // 101\n\t\tDispatcher.dispatch({                                                // 102\n\t\t\tactionType: \"GO_BACK\"                                               // 103\n\t\t});                                                                  //\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 107\n\t\tvar inputTheme = \"small-label\";                                      // 108\n\t\tvar buttonTheme = \"full\";                                            // 109\n\t\tif (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n\t\t\tinputTheme += \",\" + this.props.theme;                               // 111\n\t\t\tbuttonTheme += \",\" + this.props.theme;                              // 112\n\t\t}                                                                    //\n\t\treturn React.createElement(                                          // 114\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.Form,                                                           // 116\n\t\t\t\t{ onSubmit: this.updateEmergencyContact, onKeyUp: this.checkButtonState, ref: \"EmergencyContactForm\" },\n\t\t\t\tthis.printMsg(),                                                   //\n\t\t\t\tReact.createElement(RC.Input, { name: \"name\", label: \"Contact Name\", theme: inputTheme, ref: \"name\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"phone\", label: \"Contact Phone Number\", theme: inputTheme, ref: \"phone\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"address\", label: \"Contact Address\", theme: inputTheme, ref: \"address\" }),\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\t\"p\",                                                              //\n\t\t\t\t\t{ className: \"center\" },                                          //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"span\",                                                          //\n\t\t\t\t\t\t{ className: \"smallest inline-block cursor open-registration invis-70\", onClick: this.backToAccount },\n\t\t\t\t\t\t\"Go Back To My Account\"                                          //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t),                                                                 //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 128\n\t\t\t\t\t{ name: \"button\", active: this.state.buttonActive, theme: buttonTheme, disabled: this.state.waiting },\n\t\t\t\t\tthis.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Update Emergency Contact\"\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t);                                                                   //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/accountChangeEmergencyContact.jsx","sourceMap":{"version":3,"sources":["/client/app/account/accountChangeEmergencyContact.jsx"],"names":[],"mappings":"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","file":"/client/app/account/accountChangeEmergencyContact.jsx","sourcesContent":["let themes = [\"overlay-light\",\"overlay-dark\"]\n\nCal.ChangeEmergencyContact = React.createClass({\n\n\tmixins: [RC.Mixins.Theme],\n\tthemeGroup: \"ih-login\",\n\tthemeDefault: \"overlay-dark\",\n\tthemes: themes,\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tbuttonActive: false,\n\t\t\twaiting: false,\n\t\t\tmsg: null,\n\t\t}\n\t},\n\n\tclearForm(){\n\t\tthis.refs.name.reset()\n\t\tthis.refs.phone.reset()\n\t\tthis.refs.address.reset()\n\t\tthis.setState({ \n\t\t\tmsg: null,\n\t\t\twaiting: false,\n\t\t\tbuttonActive: false })\n\t},\n\n\tupdateEmergencyContact(e){\n\t\tdebugger\n\t\te.preventDefault()\n\t\tlet self = this\n\t\tlet form = this.refs.EmergencyContactForm.getFormData()\n\n\t\tif (form.name) {\n\n\t      \t// Reset Account Password using token\n\t      \tthis.setState({ waiting: true })\n\t      \tlet emergencyContact = {\n\t      \t\tname: form.name,\n\t      \t\tphone: form.phone,\n\t      \t\taddress: form.address,\n\t      \t\tlocation: null\n\t      \t}\n\n\t      \tMeteor.call('SetEmergencyContact', Meteor.userId(), emergencyContact, function(err, result){\n\t      \t\tdebugger\n\t      \t\tlet passedMsg = err && err.error\n\t      \t\t\t\t? (ph.errorMsgs[err.error] || err.reason)\n\t      \t\t\t\t: null\n\t      \t\tif (!!err) {\n\t      \t\t\tconsole.log(err)\n\t      \t\t\tself.setState({ \n\t      \t\t\t\tmsg: passedMsg,\n\t      \t\t\t\twaiting: false,\n\t      \t\t\t\tbuttonActive: false })\n\t      \t\t\treturn\n\t      \t\t} else {\n\t      \t\t\tself.clearForm()\n\t\t      \t\tDispatcher.dispatch({\n\t\t        \t\tactionType: \"EMERGENCY_CONTACT_CHANGE_SUCCESS\"\n\t\t        \t});\n\t\t        \treturn;\n\t      \t\t}\n\t      \t})\n\t  \t} else { \n\t  \t\tthis.setState({ msg: \"Name Cannot Be Empty.\" })\n\t  \t\tthis.setState({ waiting: false, buttonActive: false })\n\t  \t}\n\t},\n\n\tdebuggerHelper(){\n\t\tdebugger\n\t},\n\n\tprintMsg(){\n\t\tconsole.log(\"printMsg is called\")\n\t\tlet currentMessages = this.state.msg ? [this.state.msg] : []\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tcurrentMessages.map(function(m,n){\n\t\t\t\t\treturn <div className=\"center\" key={n}>\n\t\t\t\t             \t<div className=\"bigger inline-block invis-70 red\">\n\t\t\t\t             \t\t{_.isString(m) ? <div>{m}</div> : m}\n\t\t\t\t             \t</div>\n\t\t\t            \t</div>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t},\n\n\tcheckButtonState(e){\n\t\tvar form = this.refs.EmergencyContactForm.getFormData()\n\t\tlet test = _.every( _.values(form), function(t){\n\t\t\treturn t.length && t.length>0\n\t\t})\n\t\tif(test\t!= this.state.buttonActive) {\n\t\t\tthis.setState({ buttonActive: test, msg: null})\n\t\t}\n\t},\n\n\tbackToAccount(e){\n\t\tDispatcher.dispatch({\n\t\t    actionType: \"GO_BACK\"\n\t\t});\n\t},\n\n\trender: function() {\n\t\tvar inputTheme = \"small-label\"\n    \tvar buttonTheme = \"full\"\n\t\tif (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      \t\tinputTheme += \",\"+this.props.theme\n      \t\tbuttonTheme += \",\"+this.props.theme\n    \t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RC.Form onSubmit={this.updateEmergencyContact} onKeyUp={this.checkButtonState} ref=\"EmergencyContactForm\">\n\t\t\t\t\t{this.printMsg()}\n\t\t\t\t\t<RC.Input name=\"name\" label=\"Contact Name\"  theme={inputTheme} ref=\"name\"  />\n\t\t\t\t\t<RC.Input name=\"phone\" label=\"Contact Phone Number\"  theme={inputTheme} ref=\"phone\"  />\n\t\t\t\t\t<RC.Input name=\"address\" label=\"Contact Address\"  theme={inputTheme} ref=\"address\"  />\n\t\t\t\t\t{\n\t\t\t            <p className=\"center\">\n\t\t\t              <span className=\"smallest inline-block cursor open-registration invis-70\" onClick={this.backToAccount}>\n\t\t\t                Go Back To My Account\n\t\t\t              </span>\n\t\t\t            </p>\n\t\t\t        }\n\t\t\t\t\t<RC.Button name=\"button\" active={this.state.buttonActive} theme={buttonTheme} disabled={this.state.waiting}>\n\t\t\t\t\t\t{this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Update Emergency Contact\"}\n\t\t\t\t\t</RC.Button>\n\t\t\t\t</RC.Form>\n\t\t\t</div>\n\t\t);\n\t}\n}); "]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/accountResetPassword.jsx                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar themes = [\"overlay-light\", \"overlay-dark\"];                        // 1\n                                                                       //\nCal.ResetPasswordUser = React.createClass({                            // 3\n\tdisplayName: \"ResetPasswordUser\",                                     //\n                                                                       //\n\tmixins: [RC.Mixins.Theme],                                            // 5\n\tthemeGroup: \"ih-login\",                                               // 6\n\tthemeDefault: \"overlay-dark\",                                         // 7\n\tthemes: themes,                                                       // 8\n                                                                       //\n\tgetInitialState: function () {                                        // 10\n\t\treturn {                                                             // 11\n\t\t\tbuttonActive: false,                                                // 12\n\t\t\twaiting: false,                                                     // 13\n\t\t\tmsg: null                                                           // 14\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tclearForm: function () {                                              // 18\n\t\tthis.refs.oldPw.reset();                                             // 19\n\t\tthis.refs.newPw.reset();                                             // 20\n\t\tthis.refs.newPwRepeat.reset();                                       // 21\n\t\tthis.setState({                                                      // 22\n\t\t\tmsg: null,                                                          // 23\n\t\t\twaiting: false,                                                     // 24\n\t\t\tbuttonActive: false });                                             // 25\n\t},                                                                    //\n                                                                       //\n\tchangePassword: function (e) {                                        // 28\n\t\tdebugger;                                                            // 29\n\t\te.preventDefault();                                                  // 30\n\t\tvar self = this;                                                     // 31\n\t\tvar form = this.refs.changePasswordForm.getFormData();               // 32\n                                                                       //\n\t\tif (form.pw == form.pwRepeat) {                                      // 34\n\t\t\tif (!App.checkPassword(form.pw)) {                                  // 35\n\t\t\t\tthis.setState({                                                    // 36\n\t\t\t\t\tmsg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\",\n\t\t\t\t\twaiting: false                                                    // 38\n\t\t\t\t});                                                                //\n\t\t\t\treturn;                                                            // 40\n\t\t\t};                                                                  //\n\t\t\t// Reset Account Password using token                               //\n\t\t\tthis.setState({ waiting: true });                                   // 43\n\t\t\tAccounts.changePassword(form.oldPw, form.pw, function (err) {       // 44\n\t\t\t\tvar passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : React.createElement(\n\t\t\t\t\t\"p\",                                                              //\n\t\t\t\t\tnull,                                                             //\n\t\t\t\t\t\"Password Changed Successfully!\"                                  //\n\t\t\t\t);                                                                 //\n\t\t\t\tif (!err) {                                                        // 51\n\t\t\t\t\tself.clearForm();                                                 // 52\n\t\t\t\t\tDispatcher.dispatch({                                             // 53\n\t\t\t\t\t\tactionType: \"PASSWORD_CHANGE_SUCCESS\"                            // 54\n\t\t\t\t\t});                                                               //\n\t\t\t\t\treturn;                                                           // 56\n\t\t\t\t}                                                                  //\n\t\t\t\tself.setState({                                                    // 58\n\t\t\t\t\tmsg: passedMsg                                                    // 59\n\t\t\t\t});                                                                //\n\t\t\t});                                                                 //\n\t\t} else {                                                             //\n\t\t\tthis.setState({ msg: \"Your passwords did not match, please try again.\" });\n\t\t\tthis.setState({ waiting: false });                                  // 64\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tdebuggerHelper: function () {                                         // 68\n\t\tdebugger;                                                            // 69\n\t},                                                                    //\n                                                                       //\n\tprintMsg: function () {                                               // 72\n\t\tconsole.log(\"printMsg is called\");                                   // 73\n\t\tvar currentMessages = this.state.msg ? [this.state.msg] : [];        // 74\n\t\treturn React.createElement(                                          // 75\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tcurrentMessages.map(function (m, n) {                               //\n\t\t\t\treturn React.createElement(                                        // 78\n\t\t\t\t\t\"div\",                                                            //\n\t\t\t\t\t{ className: \"center\", key: n },                                  //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"div\",                                                           //\n\t\t\t\t\t\t{ className: \"bigger inline-block invis-70 red\" },               //\n\t\t\t\t\t\t_.isString(m) ? React.createElement(                             //\n\t\t\t\t\t\t\t\"div\",                                                          //\n\t\t\t\t\t\t\tnull,                                                           //\n\t\t\t\t\t\t\tm                                                               //\n\t\t\t\t\t\t) : m                                                            //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t);                                                                 //\n\t\t\t})                                                                  //\n\t\t);                                                                   //\n\t},                                                                    //\n                                                                       //\n\tcheckButtonState: function (e) {                                      // 88\n\t\tvar form = this.refs.changePasswordForm.getFormData();               // 89\n\t\tvar test = _.every(_.values(form), function (t) {                    // 90\n\t\t\treturn t.length && t.length > 0;                                    // 91\n\t\t});                                                                  //\n\t\tvar pwMatch = form.pw == form.pwRepeat;                              // 93\n\t\tif (test && pwMatch) {                                               // 94\n\t\t\tthis.setState({ msg: null, waiting: false, buttonActive: true });   // 95\n\t\t} else if (test && !pwMatch) {                                       //\n\t\t\tthis.setState({                                                     // 97\n\t\t\t\tmsg: \"Your passwords did not match, please try again.\",            // 98\n\t\t\t\twaiting: false,                                                    // 99\n\t\t\t\tbuttonActive: false });                                            // 100\n\t\t} else {                                                             //\n\t\t\tthis.setState({ buttonActive: false });                             // 102\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 106\n\t\tvar inputTheme = \"small-label\";                                      // 107\n\t\tvar buttonTheme = \"full\";                                            // 108\n\t\tif (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n\t\t\tinputTheme += \",\" + this.props.theme;                               // 110\n\t\t\tbuttonTheme += \",\" + this.props.theme;                              // 111\n\t\t}                                                                    //\n\t\treturn React.createElement(                                          // 113\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.Form,                                                           // 115\n\t\t\t\t{ onSubmit: this.changePassword, onKeyUp: this.checkButtonState, ref: \"changePasswordForm\" },\n\t\t\t\tthis.printMsg(),                                                   //\n\t\t\t\tReact.createElement(RC.Input, { name: \"oldPw\", label: \"Current Password\", type: \"password\", theme: inputTheme, ref: \"oldPw\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"pw\", label: \"Password\", type: \"password\", theme: inputTheme, ref: \"newPw\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"pwRepeat\", label: \"Repeat Password\", type: \"password\", theme: inputTheme, ref: \"newPwRepeat\" }),\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 120\n\t\t\t\t\t{ name: \"button\", active: this.state.buttonActive, theme: buttonTheme, disabled: this.state.waiting },\n\t\t\t\t\tthis.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Change Password\"\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t);                                                                   //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/accountResetPassword.jsx","sourceMap":{"version":3,"sources":["/client/app/account/accountResetPassword.jsx"],"names":[],"mappings":"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","file":"/client/app/account/accountResetPassword.jsx","sourcesContent":["let themes = [\"overlay-light\",\"overlay-dark\"]\n\nCal.ResetPasswordUser = React.createClass({\n\n\tmixins: [RC.Mixins.Theme],\n\tthemeGroup: \"ih-login\",\n\tthemeDefault: \"overlay-dark\",\n\tthemes: themes,\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tbuttonActive: false,\n\t\t\twaiting: false,\n\t\t\tmsg: null,\n\t\t}\n\t},\n\n\tclearForm(){\n\t\tthis.refs.oldPw.reset()\n\t\tthis.refs.newPw.reset()\n\t\tthis.refs.newPwRepeat.reset()\n\t\tthis.setState({ \n\t\t\tmsg: null,\n\t\t\twaiting: false,\n\t\t\tbuttonActive: false })\n\t},\n\n\tchangePassword(e){\n\t\tdebugger\n\t\te.preventDefault()\n\t\tlet self = this\n\t\tlet form = this.refs.changePasswordForm.getFormData()\n\n\t\tif (form.pw == form.pwRepeat) {\n\t\t\tif (!App.checkPassword(form.pw)) {\n\t\t\t\tthis.setState({\n          \t\t\tmsg: \"Password shoud have at least 8 characters, containing Capital Letters AND Numbers.\",\n          \t\t\twaiting: false\n        \t\t})\n        \t\treturn\n\t\t\t};\n\t      \t// Reset Account Password using token\n\t      \tthis.setState({ waiting: true })\n\t      \tAccounts.changePassword(\n\t      \t\tform.oldPw,\n\t      \t\tform.pw,\n\t      \t\tfunction(err) {\n\t\t      \t\tlet passedMsg = err && err.error\n\t\t      \t\t\t? (ph.errorMsgs[err.error] || err.reason)\n\t\t      \t\t\t: <p>Password Changed Successfully!</p>\n\t\t      \t\tif (!err) {\n\t\t      \t\t\tself.clearForm()\n\t\t      \t\t\tDispatcher.dispatch({\n\t\t        \t\t\tactionType: \"PASSWORD_CHANGE_SUCCESS\"\n\t\t        \t\t});\n\t\t        \t\treturn;\n\t\t      \t\t}\n\t\t        \tself.setState({\n\t\t        \t\tmsg: passedMsg\n\t\t        \t})\n\t    \t\t})\n\t  \t} else { \n\t  \t\tthis.setState({ msg: \"Your passwords did not match, please try again.\" })\n\t  \t\tthis.setState({ waiting: false })\n\t  \t}\n\t},\n\n\tdebuggerHelper(){\n\t\tdebugger\n\t},\n\n\tprintMsg(){\n\t\tconsole.log(\"printMsg is called\")\n\t\tlet currentMessages = this.state.msg ? [this.state.msg] : []\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tcurrentMessages.map(function(m,n){\n\t\t\t\t\treturn <div className=\"center\" key={n}>\n\t\t\t\t             \t<div className=\"bigger inline-block invis-70 red\">\n\t\t\t\t             \t\t{_.isString(m) ? <div>{m}</div> : m}\n\t\t\t\t             \t</div>\n\t\t\t            \t</div>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t},\n\n\tcheckButtonState(e){\n\t\tvar form = this.refs.changePasswordForm.getFormData()\n\t\tlet test = _.every( _.values(form), function(t){\n\t\t\treturn t.length && t.length>0\n\t\t})\n\t\tlet pwMatch = form.pw == form.pwRepeat\n\t\tif (test && pwMatch) {\n\t\t\tthis.setState({ msg: null, waiting: false, buttonActive: true})\n\t\t} else if (test && !pwMatch) {\n\t\t\tthis.setState({ \n\t\t\t\tmsg: \"Your passwords did not match, please try again.\", \n\t\t\t\twaiting: false, \n\t\t\t\tbuttonActive: false})\n\t\t} else {\n\t\t\tthis.setState({ buttonActive: false })\n\t\t}\n\t},\n\n\trender: function() {\n\t\tvar inputTheme = \"small-label\"\n    \tvar buttonTheme = \"full\"\n\t\tif (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      \t\tinputTheme += \",\"+this.props.theme\n      \t\tbuttonTheme += \",\"+this.props.theme\n    \t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RC.Form onSubmit={this.changePassword} onKeyUp={this.checkButtonState} ref=\"changePasswordForm\">\n\t\t\t\t\t{this.printMsg()}\n\t\t\t\t\t<RC.Input name=\"oldPw\" label=\"Current Password\" type=\"password\" theme={inputTheme} ref=\"oldPw\" />\n\t\t\t\t\t<RC.Input name=\"pw\" label=\"Password\" type=\"password\" theme={inputTheme} ref=\"newPw\" />\n\t\t\t\t\t<RC.Input name=\"pwRepeat\" label=\"Repeat Password\" type=\"password\" theme={inputTheme} ref=\"newPwRepeat\" />\n\t\t\t\t\t<RC.Button name=\"button\" active={this.state.buttonActive} theme={buttonTheme} disabled={this.state.waiting}>\n\t\t\t\t\t\t{this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Change Password\"}\n\t\t\t\t\t</RC.Button>\n\t\t\t\t</RC.Form>\n\t\t\t</div>\n\t\t);\n\t}\n}); "]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/account/accountResetUserName.jsx                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar themes = [\"overlay-light\", \"overlay-dark\"];                        // 1\n                                                                       //\nCal.ResetUserName = React.createClass({                                // 3\n\tdisplayName: \"ResetUserName\",                                         //\n                                                                       //\n\tmixins: [RC.Mixins.Theme],                                            // 5\n\tthemeGroup: \"ih-login\",                                               // 6\n\tthemeDefault: \"overlay-dark\",                                         // 7\n\tthemes: themes,                                                       // 8\n                                                                       //\n\tgetInitialState: function () {                                        // 10\n\t\treturn {                                                             // 11\n\t\t\tbuttonActive: false,                                                // 12\n\t\t\twaiting: false,                                                     // 13\n\t\t\tmsg: null                                                           // 14\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tclearForm: function () {                                              // 18\n\t\tthis.refs.userName.reset();                                          // 19\n\t\tthis.setState({                                                      // 20\n\t\t\tmsg: null,                                                          // 21\n\t\t\twaiting: false,                                                     // 22\n\t\t\tbuttonActive: false });                                             // 23\n\t},                                                                    //\n                                                                       //\n\tchangeUserName: function (e) {                                        // 26\n\t\tdebugger;                                                            // 27\n\t\te.preventDefault();                                                  // 28\n\t\tvar self = this;                                                     // 29\n\t\tvar form = this.refs.changeUserNameForm.getFormData();               // 30\n                                                                       //\n\t\tif (form.userName) {                                                 // 32\n                                                                       //\n\t\t\t// Reset Account Password using token                               //\n\t\t\tthis.setState({ waiting: true });                                   // 35\n                                                                       //\n\t\t\tMeteor.call('SetUserName', Meteor.userId(), form.userName, function (err, result) {\n\t\t\t\tdebugger;                                                          // 38\n\t\t\t\tvar passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : null;\n\t\t\t\tif (!!err) {                                                       // 42\n\t\t\t\t\tconsole.log(err);                                                 // 43\n\t\t\t\t\tself.setState({                                                   // 44\n\t\t\t\t\t\tmsg: passedMsg,                                                  // 45\n\t\t\t\t\t\twaiting: false,                                                  // 46\n\t\t\t\t\t\tbuttonActive: false });                                          // 47\n\t\t\t\t\treturn;                                                           // 48\n\t\t\t\t} else {                                                           //\n\t\t\t\t\tself.clearForm();                                                 // 50\n\t\t\t\t\tDispatcher.dispatch({                                             // 51\n\t\t\t\t\t\tactionType: \"USERNAME_CHANGE_SUCCESS\"                            // 52\n\t\t\t\t\t});                                                               //\n\t\t\t\t\treturn;                                                           // 54\n\t\t\t\t}                                                                  //\n\t\t\t});                                                                 //\n\t\t} else {                                                             //\n\t\t\tthis.setState({ msg: \"UserName Cannot Be Empty.\" });                // 58\n\t\t\tthis.setState({ waiting: false, buttonActive: false });             // 59\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tdebuggerHelper: function () {                                         // 63\n\t\tdebugger;                                                            // 64\n\t},                                                                    //\n                                                                       //\n\tprintMsg: function () {                                               // 67\n\t\tconsole.log(\"printMsg is called\");                                   // 68\n\t\tvar currentMessages = this.state.msg ? [this.state.msg] : [];        // 69\n\t\treturn React.createElement(                                          // 70\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tcurrentMessages.map(function (m, n) {                               //\n\t\t\t\treturn React.createElement(                                        // 73\n\t\t\t\t\t\"div\",                                                            //\n\t\t\t\t\t{ className: \"center\", key: n },                                  //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"div\",                                                           //\n\t\t\t\t\t\t{ className: \"bigger inline-block invis-70 red\" },               //\n\t\t\t\t\t\t_.isString(m) ? React.createElement(                             //\n\t\t\t\t\t\t\t\"div\",                                                          //\n\t\t\t\t\t\t\tnull,                                                           //\n\t\t\t\t\t\t\tm                                                               //\n\t\t\t\t\t\t) : m                                                            //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t);                                                                 //\n\t\t\t})                                                                  //\n\t\t);                                                                   //\n\t},                                                                    //\n                                                                       //\n\tcheckButtonState: function (e) {                                      // 83\n\t\tvar form = this.refs.changeUserNameForm.getFormData();               // 84\n\t\tvar test = _.every(_.values(form), function (t) {                    // 85\n\t\t\treturn t.length && t.length > 0;                                    // 86\n\t\t});                                                                  //\n\t\tif (test != this.state.buttonActive) {                               // 88\n\t\t\tthis.setState({ buttonActive: test, msg: null });                   // 89\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 93\n\t\tvar inputTheme = \"small-label\";                                      // 94\n\t\tvar buttonTheme = \"full\";                                            // 95\n\t\tif (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n\t\t\tinputTheme += \",\" + this.props.theme;                               // 97\n\t\t\tbuttonTheme += \",\" + this.props.theme;                              // 98\n\t\t}                                                                    //\n\t\treturn React.createElement(                                          // 100\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.Form,                                                           // 102\n\t\t\t\t{ onSubmit: this.changeUserName, onKeyUp: this.checkButtonState, ref: \"changeUserNameForm\" },\n\t\t\t\tthis.printMsg(),                                                   //\n\t\t\t\tReact.createElement(RC.Input, { name: \"userName\", label: \"New User name\", theme: inputTheme, ref: \"userName\" }),\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 105\n\t\t\t\t\t{ name: \"button\", active: this.state.buttonActive, theme: buttonTheme, disabled: this.state.waiting },\n\t\t\t\t\tthis.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Change userName\"\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t);                                                                   //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/account/accountResetUserName.jsx","sourceMap":{"version":3,"sources":["/client/app/account/accountResetUserName.jsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,MAAM,GAAG,CAAC,eAAe,EAAC,cAAc,CAAC;;AAE7C,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAErC,OAAM,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AACzB,WAAU,EAAE,UAAU;AACtB,aAAY,EAAE,cAAc;AAC5B,OAAM,EAAE,MAAM;;AAEd,gBAAe,cAAG;AACjB,SAAO;AACN,eAAY,EAAE,KAAK;AACnB,UAAO,EAAE,KAAK;AACd,MAAG,EAAE,IAAI;GACT;EACD;;AAED,UAAS,cAAE;AACV,MAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;AAC1B,MAAI,CAAC,QAAQ,CAAC;AACb,MAAG,EAAE,IAAI;AACT,UAAO,EAAE,KAAK;AACd,eAAY,EAAE,KAAK,EAAE,CAAC;EACvB;;AAED,eAAc,YAAC,CAAC,EAAC;AAChB,WAAQ;AACR,GAAC,CAAC,cAAc,EAAE;AAClB,MAAI,IAAI,GAAG,IAAI;AACf,MAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;;AAErD,MAAI,IAAI,CAAC,QAAQ,EAAE;;;AAGb,OAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;AAEhC,SAAM,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAS,GAAG,EAAE,MAAM,EAAC;AAC/E,aAAQ;AACR,QAAI,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,GAC3B,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,GACtC,IAAI;AACR,QAAI,CAAC,CAAC,GAAG,EAAE;AACV,YAAO,CAAC,GAAG,CAAC,GAAG,CAAC;AAChB,SAAI,CAAC,QAAQ,CAAC;AACb,SAAG,EAAE,SAAS;AACd,aAAO,EAAE,KAAK;AACd,kBAAY,EAAE,KAAK,EAAE,CAAC;AACvB,YAAM;KACN,MAAM;AACN,SAAI,CAAC,SAAS,EAAE;AAChB,eAAU,CAAC,QAAQ,CAAC;AAClB,gBAAU,EAAE,yBAAyB;MACrC,CAAC,CAAC;AACH,YAAO;KACR;IACD,CAAC;GACL,MAAM;AACN,OAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,2BAA2B,EAAE,CAAC;AACnD,OAAI,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;GACtD;EACH;;AAED,eAAc,cAAE;AACf,WAAQ;EACR;;AAED,SAAQ,cAAE;AACT,SAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;AACjC,MAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AAC5D,SAAO;;;GAEL,eAAe,CAAC,GAAG,CAAC,UAAS,CAAC,EAAC,CAAC,EAAC;AAChC,WAAO;;OAAK,SAAS,EAAC,QAAQ,EAAC,GAAG,EAAE,CAAE;KACzB;;QAAK,SAAS,EAAC,kCAAkC;MAC/C,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;;;OAAM,CAAC;OAAO,GAAG,CAAC;MAC9B;KACF;IACjB,CAAC;GAEE;EACN;;AAED,iBAAgB,YAAC,CAAC,EAAC;AAClB,MAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE;AACrD,MAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAS,CAAC,EAAC;AAC9C,UAAO,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,GAAC,CAAC;GAC7B,CAAC;AACF,MAAG,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AACnC,OAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC;GAC/C;EACD;;AAED,OAAM,EAAE,YAAW;AAClB,MAAI,UAAU,GAAG,aAAa;AAC3B,MAAI,WAAW,GAAG,MAAM;AAC3B,MAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAC,cAAc,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC9D,aAAU,IAAI,GAAG,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK;AAClC,cAAW,IAAI,GAAG,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK;GACrC;AACJ,SACC;;;GACC;AAAC,MAAE,CAAC,IAAI;MAAC,QAAQ,EAAE,IAAI,CAAC,cAAe,EAAC,OAAO,EAAE,IAAI,CAAC,gBAAiB,EAAC,GAAG,EAAC,oBAAoB;IAC9F,IAAI,CAAC,QAAQ,EAAE;IAChB,oBAAC,EAAE,CAAC,KAAK,IAAC,IAAI,EAAC,UAAU,EAAC,KAAK,EAAC,eAAe,EAAE,KAAK,EAAE,UAAW,EAAC,GAAG,EAAC,UAAU,GAAI;IACtF;AAAC,OAAE,CAAC,MAAM;OAAC,IAAI,EAAC,QAAQ,EAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAa,EAAC,KAAK,EAAE,WAAY,EAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,OAAQ;KACzG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,oBAAC,EAAE,CAAC,MAAM,IAAC,OAAO,EAAC,0BAA0B,GAAG,GAAG,iBAAiB;KAC/E;IACH;GACL,CACL;EACF;CACD,CAAC,CAAC,sE","file":"/client/app/account/accountResetUserName.jsx","sourcesContent":["let themes = [\"overlay-light\",\"overlay-dark\"]\n\nCal.ResetUserName = React.createClass({\n\n\tmixins: [RC.Mixins.Theme],\n\tthemeGroup: \"ih-login\",\n\tthemeDefault: \"overlay-dark\",\n\tthemes: themes,\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tbuttonActive: false,\n\t\t\twaiting: false,\n\t\t\tmsg: null,\n\t\t}\n\t},\n\n\tclearForm(){\n\t\tthis.refs.userName.reset()\n\t\tthis.setState({ \n\t\t\tmsg: null,\n\t\t\twaiting: false,\n\t\t\tbuttonActive: false })\n\t},\n\n\tchangeUserName(e){\n\t\tdebugger\n\t\te.preventDefault()\n\t\tlet self = this\n\t\tlet form = this.refs.changeUserNameForm.getFormData()\n\n\t\tif (form.userName) {\n\n\t      \t// Reset Account Password using token\n\t      \tthis.setState({ waiting: true })\n\n\t      \tMeteor.call('SetUserName', Meteor.userId(), form.userName, function(err, result){\n\t      \t\tdebugger\n\t      \t\tlet passedMsg = err && err.error\n\t      \t\t\t\t? (ph.errorMsgs[err.error] || err.reason)\n\t      \t\t\t\t: null\n\t      \t\tif (!!err) {\n\t      \t\t\tconsole.log(err)\n\t      \t\t\tself.setState({ \n\t      \t\t\t\tmsg: passedMsg,\n\t      \t\t\t\twaiting: false,\n\t      \t\t\t\tbuttonActive: false })\n\t      \t\t\treturn\n\t      \t\t} else {\n\t      \t\t\tself.clearForm()\n\t\t      \t\tDispatcher.dispatch({\n\t\t        \t\tactionType: \"USERNAME_CHANGE_SUCCESS\"\n\t\t        \t});\n\t\t        \treturn;\n\t      \t\t}\n\t      \t})\n\t  \t} else { \n\t  \t\tthis.setState({ msg: \"UserName Cannot Be Empty.\" })\n\t  \t\tthis.setState({ waiting: false, buttonActive: false })\n\t  \t}\n\t},\n\n\tdebuggerHelper(){\n\t\tdebugger\n\t},\n\n\tprintMsg(){\n\t\tconsole.log(\"printMsg is called\")\n\t\tlet currentMessages = this.state.msg ? [this.state.msg] : []\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tcurrentMessages.map(function(m,n){\n\t\t\t\t\treturn <div className=\"center\" key={n}>\n\t\t\t\t             \t<div className=\"bigger inline-block invis-70 red\">\n\t\t\t\t             \t\t{_.isString(m) ? <div>{m}</div> : m}\n\t\t\t\t             \t</div>\n\t\t\t            \t</div>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t},\n\n\tcheckButtonState(e){\n\t\tvar form = this.refs.changeUserNameForm.getFormData()\n\t\tlet test = _.every( _.values(form), function(t){\n\t\t\treturn t.length && t.length>0\n\t\t})\n\t\tif(test\t!= this.state.buttonActive) {\n\t\t\tthis.setState({ buttonActive: test, msg: null})\n\t\t}\n\t},\n\n\trender: function() {\n\t\tvar inputTheme = \"small-label\"\n    \tvar buttonTheme = \"full\"\n\t\tif (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      \t\tinputTheme += \",\"+this.props.theme\n      \t\tbuttonTheme += \",\"+this.props.theme\n    \t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RC.Form onSubmit={this.changeUserName} onKeyUp={this.checkButtonState} ref=\"changeUserNameForm\">\n\t\t\t\t\t{this.printMsg()}\n\t\t\t\t\t<RC.Input name=\"userName\" label=\"New User name\"  theme={inputTheme} ref=\"userName\"  />\n\t\t\t\t\t<RC.Button name=\"button\" active={this.state.buttonActive} theme={buttonTheme} disabled={this.state.waiting}>\n\t\t\t\t\t\t{this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Change userName\"}\n\t\t\t\t\t</RC.Button>\n\t\t\t\t</RC.Form>\n\t\t\t</div>\n\t\t);\n\t}\n}); \n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/auth/auth.jsx                                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.Auth = React.createClass({                                         // 1\n\tdisplayName: \"Auth\",                                                  //\n                                                                       //\n\tmixins: [ReactMeteorData],                                            // 2\n                                                                       //\n\tgetMeteorData: function () {                                          // 4\n\t\treturn {                                                             // 5\n\t\t\tcurrentUser: Meteor.user()                                          // 6\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tlogOut: function () {                                                 // 10\n\t\tdebugger;                                                            // 11\n\t\tMeteor.logout();                                                     // 12\n\t\tFlowRouter.go(\"/auth\");                                              // 13\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 16\n\t\treturn React.createElement(                                          // 17\n\t\t\tRC.List,                                                            // 19\n\t\t\t{ className: \"padding\" },                                           //\n\t\t\tthis.data.currentUser ? React.createElement(                        //\n\t\t\t\t\"div\",                                                             //\n\t\t\t\tnull,                                                              //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Item,                                                          // 23\n\t\t\t\t\t{ theme: \"text-wrap\" },                                           //\n\t\t\t\t\t\" User Name: \",                                                   //\n\t\t\t\t\tthis.data.currentUser.username                                    //\n\t\t\t\t),                                                                 //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Item,                                                          // 24\n\t\t\t\t\t{ theme: \"text-wrap\" },                                           //\n\t\t\t\t\t\" User Email: \",                                                  //\n\t\t\t\t\tthis.data.currentUser.emails[0].address                           //\n\t\t\t\t)                                                                  //\n\t\t\t) : React.createElement(                                            //\n\t\t\t\tRC.Item,                                                           // 25\n\t\t\t\t{ theme: \"text-wrap\" },                                            //\n\t\t\t\t\" User Not Logged In\"                                              //\n\t\t\t),                                                                  //\n\t\t\tthis.data.currentUser ? React.createElement(                        //\n\t\t\t\tRC.Button,                                                         // 28\n\t\t\t\t{ onClick: this.logOut, name: \"button\", theme: \"full\", buttonColor: \"brand\" },\n\t\t\t\t\"Log Out\"                                                          //\n\t\t\t) : React.createElement(                                            //\n\t\t\t\tRC.URL,                                                            // 31\n\t\t\t\t{ href: \"/login\" },                                                //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 32\n\t\t\t\t\t{ name: \"button\", theme: \"full\", buttonColor: \"brand\" },          //\n\t\t\t\t\t\"Log In\"                                                          //\n\t\t\t\t)                                                                  //\n\t\t\t),                                                                  //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.URL,                                                            // 38\n\t\t\t\t{ href: \"/\" },                                                     //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 39\n\t\t\t\t\t{ name: \"button\", theme: \"full\", buttonColor: \"brand\" },          //\n\t\t\t\t\t\"Home\"                                                            //\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t)                                                                    //\n                                                                       //\n\t\t// <div>                                                             //\n\t\t//   <h2 className=\"brand\"> User {this.data.currentUser.username}</h2>\n\t\t// <div className=\"padding\">                                         //\n\t\t//  \t\tThis is an app for Yifan Wang testing.                         //\n\t\t// </div>                                                            //\n\t\t// </div>                                                            //\n\t\t;                                                                    //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/auth/auth.jsx","sourceMap":{"version":3,"sources":["/client/app/auth/auth.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC5B,OAAM,EAAE,CAAC,eAAe,CAAC;;AAEzB,cAAa,cAAG;AACd,SAAO;AACL,cAAW,EAAE,MAAM,CAAC,IAAI,EAAE;GAC1B,CAAC;EACH;;AAED,OAAM,cAAE;AACP,WAAQ;AACR,QAAM,CAAC,MAAM,EAAE;AACf,YAAU,CAAC,EAAE,CAAC,OAAO,CAAC;EACtB;;AAEF,OAAM,cAAG;AACL,SAEC;AAAC,KAAE,CAAC,IAAI;KAAC,SAAS,EAAC,SAAS;GAEnB,IAAI,CAAC,IAAI,CAAC,WAAW,GACtB;;;IACC;AAAC,OAAE,CAAC,IAAI;OAAC,KAAK,EAAC,WAAW;;KAAc,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ;KAAW;IACjF;AAAC,OAAE,CAAC,IAAI;OAAC,KAAK,EAAC,WAAW;;KAAe,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;KAAW;IACtF,GAAG;AAAC,MAAE,CAAC,IAAI;MAAC,KAAK,EAAC,WAAW;;IAA8B;GAEhE,IAAI,CAAC,IAAI,CAAC,WAAW,GACtB;AAAC,MAAE,CAAC,MAAM;MAAC,OAAO,EAAE,IAAI,CAAC,MAAO,EAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;IAEnE,GACZ;AAAC,MAAE,CAAC,GAAG;MAAC,IAAI,EAAC,QAAQ;IACjB;AAAC,OAAE,CAAC,MAAM;OAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;KAE7C;IACP;GAGV;AAAC,MAAE,CAAC,GAAG;MAAC,IAAI,EAAC,GAAG;IACZ;AAAC,OAAE,CAAC,MAAM;OAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;KAE7C;IACP;GAEH;;;;;;;;GAQZ;EACJ;CACF,CAAC,uE","file":"/client/app/auth/auth.jsx","sourcesContent":["Cal.Auth = React.createClass({\n\tmixins: [ReactMeteorData],\n  \t\n\tgetMeteorData() {\n\t \treturn {\n\t  \t\tcurrentUser: Meteor.user()\n\t  \t};\n\t },\n\n\t logOut(){\n\t \tdebugger\n\t \tMeteor.logout()\n\t \tFlowRouter.go(\"/auth\")\n\t },\n\t\t\t\t\t\n\trender() {\n\t    return (\n\t    \t\n\t    \t<RC.List className=\"padding\">\n\n\t            { this.data.currentUser ?\n\t            \t<div>\n\t            \t\t<RC.Item theme=\"text-wrap\"> User Name: {this.data.currentUser.username}</RC.Item>\n\t            \t\t<RC.Item theme=\"text-wrap\"> User Email: {this.data.currentUser.emails[0].address}</RC.Item>\n\t            \t</div> : <RC.Item theme=\"text-wrap\"> User Not Logged In</RC.Item>\n\t            }\n\t            { this.data.currentUser ?\n\t            \t<RC.Button onClick={this.logOut} name=\"button\" theme=\"full\" buttonColor=\"brand\">\n\t\t                Log Out\n\t\t            </RC.Button> :\n\t\t            <RC.URL href=\"/login\">\n\t\t                <RC.Button name=\"button\" theme=\"full\" buttonColor=\"brand\">\n\t\t                    Log In\n\t\t                </RC.Button>\n\t\t            </RC.URL>\n\t\t            \n\t\t        }\n\t            <RC.URL href=\"/\">\n\t                <RC.Button name=\"button\" theme=\"full\" buttonColor=\"brand\">\n\t                    Home\n\t                </RC.Button>\n\t            </RC.URL>\n\n        \t</RC.List>\n\n\t\t    // <div>\n\t\t    //   <h2 className=\"brand\"> User {this.data.currentUser.username}</h2>\n\t   \t\t// <div className=\"padding\">\n\t     //  \t\tThis is an app for Yifan Wang testing.\n\t    \t// </div>\n\t    \t// </div>\n\t    );\n\t }\n})"]}},{"type":"js","data":"(function(){/**\n * Created on 9/27/15.\n */\n\n Dependency.add('auth.store', new function () {\n\n    var self = this;\n\n    self.tokenId = Dispatcher.register(function (payload) {\n        switch (payload.actionType) {\n            case \"AUTH_LOGOUT\":{\n                Meteor.logout(function(err){\n                    if(err) {\n                        console.error(err) //todo UI side\n                        return;\n                    }\n                    FlowRouter.go('/login')\n                })\n                break;\n            }\n            case \"AUTH_REGISTER_SUCCESS\":{\n                FlowRouter.LastRoute\n                debugger\n                FlowRouter.LastRoute=[];\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"AUTH_RESET_SUCCESS\":{\n                FlowRouter.LastRoute\n                debugger\n                FlowRouter.LastRoute=[];\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"AUTH_LOGIN_SUCCESS\":{\n                FlowRouter.go('/')\n                break;\n            }\n        }\n    })\n})\n}).call(this);\n","servePath":"/client/app/auth/auth.store.js","sourceMap":{"version":3,"sources":["/client/app/auth/auth.store.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/client/app/auth/auth.store.js","sourcesContent":["/**\n * Created on 9/27/15.\n */\n\n Dependency.add('auth.store', new function () {\n\n    var self = this;\n\n    self.tokenId = Dispatcher.register(function (payload) {\n        switch (payload.actionType) {\n            case \"AUTH_LOGOUT\":{\n                Meteor.logout(function(err){\n                    if(err) {\n                        console.error(err) //todo UI side\n                        return;\n                    }\n                    FlowRouter.go('/login')\n                })\n                break;\n            }\n            case \"AUTH_REGISTER_SUCCESS\":{\n                FlowRouter.LastRoute\n                debugger\n                FlowRouter.LastRoute=[];\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"AUTH_RESET_SUCCESS\":{\n                FlowRouter.LastRoute\n                debugger\n                FlowRouter.LastRoute=[];\n                FlowRouter.go('/account')\n                break;\n            }\n            case \"AUTH_LOGIN_SUCCESS\":{\n                FlowRouter.go('/')\n                break;\n            }\n        }\n    })\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/auth/resetPassword.jsx                                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nvar themes = [\"overlay-light\", \"overlay-dark\"];                        // 1\nCal.ResetPasswordEmail = React.createClass({                           // 2\n\tdisplayName: \"ResetPasswordEmail\",                                    //\n                                                                       //\n\tmixins: [RC.Mixins.Theme],                                            // 4\n\tthemeGroup: \"ih-login\",                                               // 5\n\tthemeDefault: \"overlay-dark\",                                         // 6\n\tthemes: themes,                                                       // 7\n                                                                       //\n\tpropTypes: {                                                          // 9\n\t\tuserToken: React.PropTypes.string                                    // 10\n\t},                                                                    //\n                                                                       //\n\tgetInitialState: function () {                                        // 13\n\t\treturn {                                                             // 14\n\t\t\tbuttonActive: false,                                                // 15\n\t\t\twaiting: false,                                                     // 16\n\t\t\tmsg: null                                                           // 17\n\t\t};                                                                   //\n\t},                                                                    //\n                                                                       //\n\tclearForm: function () {                                              // 21\n\t\tthis.refs.newPw.reset();                                             // 22\n\t\tthis.refs.newPwRepeat.reset();                                       // 23\n\t\tthis.setState({                                                      // 24\n\t\t\tmsg: null,                                                          // 25\n\t\t\twaiting: false });                                                  // 26\n\t},                                                                    //\n                                                                       //\n\treset: function (e) {                                                 // 29\n\t\tdebugger;                                                            // 30\n\t\te.preventDefault();                                                  // 31\n\t\tif (this.state.msg) return null;                                     // 32\n\t\tvar self = this;                                                     // 33\n\t\tvar form = this.refs.resetForm.getFormData();                        // 34\n                                                                       //\n\t\tif (form.pw == form.pwRepeat) {                                      // 36\n\t\t\tif (!App.checkPassword(form.pw)) {                                  // 37\n\t\t\t\tthis.setState({                                                    // 38\n\t\t\t\t\tmsg: \"Password shoud have at least 8 characters, containing Capital Letts AND Numbers.\",\n\t\t\t\t\twaiting: false                                                    // 40\n\t\t\t\t});                                                                //\n\t\t\t\treturn;                                                            // 42\n\t\t\t};                                                                  //\n\t\t\t// Reset Account Password using token                               //\n\t\t\tthis.setState({ waiting: true });                                   // 45\n\t\t\tAccounts.resetPassword(this.props.userToken, form.pw, function (err) {\n\t\t\t\tvar passedMsg = err && err.error ? ph.errorMsgs[err.error] || err.reason : React.createElement(\n\t\t\t\t\t\"p\",                                                              //\n\t\t\t\t\tnull,                                                             //\n\t\t\t\t\t\"Thank you for registering!\"                                      //\n\t\t\t\t);                                                                 //\n\t\t\t\tif (!err) {                                                        // 53\n\t\t\t\t\tself.clearForm();                                                 // 54\n\t\t\t\t\tDispatcher.dispatch({                                             // 55\n\t\t\t\t\t\tactionType: \"AUTH_RESET_SUCCESS\"                                 // 56\n\t\t\t\t\t});                                                               //\n\t\t\t\t\treturn;                                                           // 58\n\t\t\t\t}                                                                  //\n\t\t\t\tself.setState({                                                    // 60\n\t\t\t\t\tmsg: passedMsg                                                    // 61\n\t\t\t\t});                                                                //\n\t\t\t});                                                                 //\n\t\t} else {                                                             //\n\t\t\tthis.setState({ msg: \"Your passwords did not match, please try again.\" });\n\t\t\tthis.setState({ waiting: false });                                  // 66\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\tdebuggerHelper: function () {                                         // 70\n\t\tdebugger;                                                            // 71\n\t},                                                                    //\n                                                                       //\n\tprintMsg: function () {                                               // 74\n\t\tconsole.log(\"printMsg is called\");                                   // 75\n\t\tvar currentMessages = this.state.msg ? [this.state.msg] : [];        // 76\n\t\treturn React.createElement(                                          // 77\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tcurrentMessages.map(function (m, n) {                               //\n\t\t\t\treturn React.createElement(                                        // 80\n\t\t\t\t\t\"div\",                                                            //\n\t\t\t\t\t{ className: \"center\", key: n },                                  //\n\t\t\t\t\tReact.createElement(                                              //\n\t\t\t\t\t\t\"div\",                                                           //\n\t\t\t\t\t\t{ className: \"bigger inline-block invis-70 red\" },               //\n\t\t\t\t\t\t_.isString(m) ? React.createElement(                             //\n\t\t\t\t\t\t\t\"div\",                                                          //\n\t\t\t\t\t\t\tnull,                                                           //\n\t\t\t\t\t\t\tm                                                               //\n\t\t\t\t\t\t) : m                                                            //\n\t\t\t\t\t)                                                                 //\n\t\t\t\t);                                                                 //\n\t\t\t})                                                                  //\n\t\t);                                                                   //\n\t},                                                                    //\n                                                                       //\n\tcheckButtonState: function (e) {                                      // 90\n\t\tvar form = this.refs.resetForm.getFormData();                        // 91\n\t\tvar test = _.every(_.values(form), function (t) {                    // 92\n\t\t\treturn t.length && t.length > 0;                                    // 93\n\t\t});                                                                  //\n\t\tvar pwMatch = form.pw == form.pwRepeat;                              // 95\n\t\tif (test && pwMatch) {                                               // 96\n\t\t\tthis.setState({ msg: null, waiting: false, buttonActive: true });   // 97\n\t\t} else if (test && !pwMatch) {                                       //\n\t\t\tthis.setState({                                                     // 99\n\t\t\t\tmsg: \"Your passwords did not match, please try again.\",            // 100\n\t\t\t\twaiting: false,                                                    // 101\n\t\t\t\tbuttonActive: false });                                            // 102\n\t\t} else {                                                             //\n\t\t\tthis.setState({ buttonActive: false });                             // 104\n\t\t}                                                                    //\n\t},                                                                    //\n                                                                       //\n\trender: function () {                                                 // 108\n\t\tdebugger;                                                            // 109\n\t\tvar inputTheme = \"small-label\";                                      // 110\n\t\tvar buttonTheme = \"full\";                                            // 111\n\t\tif (_.contains([\"overlay-light\", \"overlay-dark\"], this.props.theme)) {\n\t\t\tinputTheme += \",\" + this.props.theme;                               // 113\n\t\t\tbuttonTheme += \",\" + this.props.theme;                              // 114\n\t\t}                                                                    //\n\t\treturn React.createElement(                                          // 116\n\t\t\t\"div\",                                                              //\n\t\t\tnull,                                                               //\n\t\t\tReact.createElement(                                                //\n\t\t\t\tRC.Form,                                                           // 118\n\t\t\t\t{ onSubmit: this.reset, onKeyUp: this.checkButtonState, ref: \"resetForm\" },\n\t\t\t\tReact.createElement(RC.Input, { name: \"pw\", label: \"Password\", type: \"password\", theme: inputTheme, ref: \"newPw\" }),\n\t\t\t\tReact.createElement(RC.Input, { name: \"pwRepeat\", label: \"Repeat Password\", type: \"password\", theme: inputTheme, ref: \"newPwRepeat\" }),\n\t\t\t\tthis.printMsg(),                                                   //\n\t\t\t\tReact.createElement(                                               //\n\t\t\t\t\tRC.Button,                                                        // 122\n\t\t\t\t\t{ name: \"button\", active: this.state.buttonActive, theme: buttonTheme, disabled: this.state.waiting },\n\t\t\t\t\tthis.state.waiting ? React.createElement(RC.uiIcon, { uiClass: \"circle-o-notch spin-slow\" }) : \"Reset Password\"\n\t\t\t\t)                                                                  //\n\t\t\t)                                                                   //\n\t\t);                                                                   //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/auth/resetPassword.jsx","sourceMap":{"version":3,"sources":["/client/app/auth/resetPassword.jsx"],"names":[],"mappings":"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","file":"/client/app/auth/resetPassword.jsx","sourcesContent":["let themes = [\"overlay-light\",\"overlay-dark\"]\nCal.ResetPasswordEmail = React.createClass({\n\n\tmixins: [RC.Mixins.Theme],\n\tthemeGroup: \"ih-login\",\n\tthemeDefault: \"overlay-dark\",\n\tthemes: themes,\n\n\tpropTypes: {\n\t\tuserToken: React.PropTypes.string\n\t},\n\n\tgetInitialState() {\n\t\treturn {\n\t\t\tbuttonActive: false,\n\t\t\twaiting: false,\n\t\t\tmsg: null,\n\t\t}\n\t},\n\n\tclearForm(){\n\t\tthis.refs.newPw.reset()\n\t\tthis.refs.newPwRepeat.reset()\n\t\tthis.setState({ \n\t\t\tmsg: null,\n\t\t\twaiting: false })\n\t},\n\n\treset(e){\n\t\tdebugger\n\t\te.preventDefault()\n\t\tif (this.state.msg) return null\n\t\tlet self = this\n\t\tlet form = this.refs.resetForm.getFormData()\n\n\t\tif (form.pw == form.pwRepeat) {\n\t\t\tif (!App.checkPassword(form.pw)) {\n\t\t\t\tthis.setState({\n          \t\t\tmsg: \"Password shoud have at least 8 characters, containing Capital Letts AND Numbers.\",\n          \t\t\twaiting: false\n        \t\t})\n        \t\treturn\n\t\t\t};\n\t      \t// Reset Account Password using token\n\t      \tthis.setState({ waiting: true })\n\t      \tAccounts.resetPassword(\n\t      \tthis.props.userToken,\n\t      \tform.pw,\n\t      \tfunction(err) {\n\t\t      \tlet passedMsg = err && err.error\n\t\t      \t\t? (ph.errorMsgs[err.error] || err.reason)\n\t\t      \t\t: <p>Thank you for registering!</p>\n\t\t      \tif (!err) {\n\t\t      \t\tself.clearForm()\n\t\t      \t\tDispatcher.dispatch({\n\t\t        \t\tactionType: \"AUTH_RESET_SUCCESS\"\n\t\t        \t});\n\t\t        \treturn;\n\t\t      \t}\n\t\t        self.setState({\n\t\t        \tmsg: passedMsg\n\t\t        })\n\t    \t})\n\t  \t} else { \n\t  \t\tthis.setState({ msg: \"Your passwords did not match, please try again.\" })\n\t  \t\tthis.setState({ waiting: false })\n\t  \t}\n\t},\n\n\tdebuggerHelper(){\n\t\tdebugger\n\t},\n\n\tprintMsg(){\n\t\tconsole.log(\"printMsg is called\")\n\t\tlet currentMessages = this.state.msg ? [this.state.msg] : []\n\t\treturn <div>\n\t\t\t{\n\t\t\t\tcurrentMessages.map(function(m,n){\n\t\t\t\t\treturn <div className=\"center\" key={n}>\n\t\t\t\t             \t<div className=\"bigger inline-block invis-70 red\">\n\t\t\t\t             \t\t{_.isString(m) ? <div>{m}</div> : m}\n\t\t\t\t             \t</div>\n\t\t\t            \t</div>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t},\n\n\tcheckButtonState(e){\n\t\tvar form = this.refs.resetForm.getFormData()\n\t\tlet test = _.every( _.values(form), function(t){\n\t\t\treturn t.length && t.length>0\n\t\t})\n\t\tlet pwMatch = form.pw == form.pwRepeat\n\t\tif (test && pwMatch) {\n\t\t\tthis.setState({ msg: null, waiting: false, buttonActive: true})\n\t\t} else if (test && !pwMatch) {\n\t\t\tthis.setState({ \n\t\t\t\tmsg: \"Your passwords did not match, please try again.\", \n\t\t\t\twaiting: false, \n\t\t\t\tbuttonActive: false})\n\t\t} else {\n\t\t\tthis.setState({ buttonActive: false })\n\t\t}\n\t},\n\n\trender: function() {\n\t\tdebugger\n\t\tvar inputTheme = \"small-label\"\n    \tvar buttonTheme = \"full\"\n\t\tif (_.contains([\"overlay-light\",\"overlay-dark\"], this.props.theme)) {\n      \t\tinputTheme += \",\"+this.props.theme\n      \t\tbuttonTheme += \",\"+this.props.theme\n    \t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RC.Form onSubmit={this.reset} onKeyUp={this.checkButtonState} ref=\"resetForm\">\n\t\t\t\t<RC.Input name=\"pw\" label=\"Password\" type=\"password\" theme={inputTheme} ref=\"newPw\" />\n\t\t\t\t<RC.Input name=\"pwRepeat\" label=\"Repeat Password\" type=\"password\" theme={inputTheme} ref=\"newPwRepeat\" />\n\t\t\t\t{this.printMsg()}\n\t\t\t\t<RC.Button name=\"button\" active={this.state.buttonActive} theme={buttonTheme} disabled={this.state.waiting}>\n\t\t\t\t\t{this.state.waiting ? <RC.uiIcon uiClass=\"circle-o-notch spin-slow\" /> : \"Reset Password\"}\n\t\t\t\t</RC.Button>\n\t\t\t\t</RC.Form>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}); "]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/auth/userLoginBasic.jsx                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\nCal.Login = React.createClass({                                        // 2\n  displayName: \"Login\",                                                //\n                                                                       //\n  render: function () {                                                // 3\n    /**                                                                //\n     * Notice how I used the .bg-brand class to style the login form.  //\n     * Classes such as .bg-brand, .bg-brand2, .bg-brand3 are worth remembering.\n     * They are useful and can be re-used many times.                  //\n     */                                                                //\n    debugger;                                                          // 9\n    return React.createElement(IH.RC.User, { fullHeight: true, theme: \"overlay-dark\", bgColor: \"brand-light\" });\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/auth/userLoginBasic.jsx","sourceMap":{"version":3,"sources":["/client/app/auth/userLoginBasic.jsx"],"names":[],"mappings":";;;;;;;;;AACA,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC5B,QAAM,cAAG;;;;;;AAMP,aAAQ;AACR,WACE,oBAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAC,UAAU,EAAE,IAAK,EAAC,KAAK,EAAC,cAAc,EAAC,OAAO,EAAC,aAAa,GAE3D,CACZ;GACJ;CACF,CAAC,uE","file":"/client/app/auth/userLoginBasic.jsx","sourcesContent":["\nCal.Login = React.createClass({\n  render() {\n    /**\n     * Notice how I used the .bg-brand class to style the login form.\n     * Classes such as .bg-brand, .bg-brand2, .bg-brand3 are worth remembering.\n     * They are useful and can be re-used many times.\n     */\n    debugger\n    return (\n      <IH.RC.User fullHeight={true} theme=\"overlay-dark\" bgColor=\"brand-light\">\n        \n      </IH.RC.User>\n      )\n  }\n})\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/auth/userRegister.jsx                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\nCal.User_Registration_Only = React.createClass({                       // 2\n  displayName: \"User_Registration_Only\",                               //\n                                                                       //\n  render: function () {                                                // 3\n    /**                                                                //\n     * You can change the action to \"register\" to display a different form.\n     * You can also set \"allowSwitch\" to false to disable switching back and forth.\n     */                                                                //\n    return React.createElement(                                        // 8\n      IH.RC.User,                                                      // 8\n      { fullHeight: true, action: \"register\", disableSwitch: true, theme: \"overlay-dark\", bgColor: \"white\" },\n      React.createElement(\"img\", { src: \"/assets/logo.png\" })          //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/auth/userRegister.jsx","sourceMap":{"version":3,"sources":["/client/app/auth/userRegister.jsx"],"names":[],"mappings":";;;;;;;;;AACA,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC7C,QAAM,cAAG;;;;;AAKP,WAAO;AAAC,QAAE,CAAC,EAAE,CAAC,IAAI;QAAC,UAAU,EAAE,IAAK,EAAC,MAAM,EAAC,UAAU,EAAC,aAAa,EAAE,IAAK,EAAC,KAAK,EAAC,cAAc,EAAC,OAAO,EAAC,OAAO;MAC/G,6BAAK,GAAG,EAAC,kBAAkB,GAAG;KACnB;GACb;CACF,CAAC,uE","file":"/client/app/auth/userRegister.jsx","sourcesContent":["\nCal.User_Registration_Only = React.createClass({\n  render() {\n    /**\n     * You can change the action to \"register\" to display a different form.\n     * You can also set \"allowSwitch\" to false to disable switching back and forth.\n     */\n    return <IH.RC.User fullHeight={true} action=\"register\" disableSwitch={true} theme=\"overlay-dark\" bgColor=\"white\">\n     <img src=\"/assets/logo.png\" />\n   </IH.RC.User>\n  }\n})\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/auth.signin/signin.jsx                                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/auth.signin/signin.jsx","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/client/app/auth.signin/signin.jsx"}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/BillingAndPayment.jsx                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/22/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n                                                                       //\n    Cal.CEBillingAndPayment = React.createClass({                      // 8\n        displayName: \"CEBillingAndPayment\",                            //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 10\n        getMeteorData: function () {                                   // 11\n                                                                       //\n            Meteor.subscribe(\"historyShoppingCart\", Meteor.userId());  // 14\n            Meteor.subscribe(\"nowShoppingCart\", Meteor.userId());      // 15\n                                                                       //\n            //status==done                                             //\n            var historyBillings = DB.ShoppingCart.find({               // 20\n                accountId: Meteor.userId(),                            // 21\n                status: 'done'                                         // 22\n            }).fetch();                                                //\n                                                                       //\n            //尚未支付的订单 status  [active , checking]                      //\n            //active还未选择支付方式  checking已选择pay－now or pay－in－store       //\n            var unfinishedBillings = DB.ShoppingCart.find({            // 27\n                accountId: Meteor.userId(),                            // 28\n                status: {                                              // 29\n                    $in: ['active', 'checking', 'applied']             // 30\n                }                                                      //\n            }).fetch();                                                //\n                                                                       //\n            debugger;                                                  // 34\n                                                                       //\n            return {                                                   // 36\n                historyBillings: historyBillings,                      // 37\n                unfinishedBillings: unfinishedBillings                 // 38\n            };                                                         //\n        },                                                             //\n                                                                       //\n        ///actions                                                     //\n                                                                       //\n        render: function () {                                          // 45\n                                                                       //\n            //<Cal.BillingUnfinished unfinishedBillings={this.data.unfinishedBillings}/>\n            //<Cal.CRRegBillingPage />                                 //\n                                                                       //\n            return React.createElement(                                // 51\n                RC.Tabs,                                               // 51\n                { className: \"bg-white\" },                             //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { label: \"Pending Billing\", className: \"padding\" },\n                    React.createElement(Cal.BillingUnfinished, { unfinishedBillings: this.data.unfinishedBillings })\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { label: \"History Payment\", className: \"padding\" },\n                    this.data.historyBillings.map(function (cart) {    //\n                                                                       //\n                        return cart.items.map(function (item) {        // 62\n                                                                       //\n                            return React.createElement(                // 64\n                                \"div\",                                 //\n                                { className: \"row\" },                  //\n                                React.createElement(                   //\n                                    \"div\",                             //\n                                    { className: \"col\" },              //\n                                    item.swimmer && item.swimmer.name  //\n                                ),                                     //\n                                React.createElement(                   //\n                                    \"div\",                             //\n                                    { className: \"col\" },              //\n                                    item.class1 && item.class1.name    //\n                                )                                      //\n                            );                                         //\n                        });                                            //\n                    })                                                 //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/BillingAndPayment.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/BillingAndPayment.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA;;AAGI,OAAG,CAAC,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAExC,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;;AAGZ,kBAAM,CAAC,SAAS,CAAC,qBAAqB,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AACzD,kBAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;;AAKrD,gBAAI,eAAe,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;AACvC,yBAAS,EAAE,MAAM,CAAC,MAAM,EAAE;AAC1B,sBAAM,EAAE,MAAM;aACjB,CAAC,CAAC,KAAK,EAAE;;;;AAIV,gBAAI,kBAAkB,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;AAC1C,yBAAS,EAAE,MAAM,CAAC,MAAM,EAAE;AAC1B,sBAAM,EAAE;AACJ,uBAAG,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAC,SAAS,CAAC;iBACxC;aACJ,CAAC,CAAC,KAAK,EAAE;;AAEV,qBAAQ;;AAER,mBAAO;AACH,+BAAe,EAAE,eAAe;AAChC,kCAAkB,EAAE,kBAAkB;aACzC;SACJ;;;;AAKD,cAAM,cAAG;;;;;AAML,mBAAO;AAAC,kBAAE,CAAC,IAAI;kBAAC,SAAS,EAAC,UAAU;gBAChC;;sBAAK,KAAK,EAAC,iBAAiB,EAAC,SAAS,EAAC,SAAS;oBAE5C,oBAAC,GAAG,CAAC,iBAAiB,IAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,kBAAmB,GAAE;iBAExE;gBACN;;sBAAK,KAAK,EAAC,iBAAiB,EAAC,SAAS,EAAC,SAAS;oBAGxC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;AAE1C,+BAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,IAAI,EAAC;;AAE5B,mCAAO;;kCAAK,SAAS,EAAC,KAAK;gCACnB;;sCAAK,SAAS,EAAC,KAAK;oCACf,IAAI,CAAC,OAAO,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI;iCAC/B;gCACN;;sCAAK,SAAS,EAAC,KAAK;oCACf,IAAI,CAAC,MAAM,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI;iCAE7B;6BACJ;yBACb,CAAC;qBAGT,CAAC;iBAIJ;aACA;SACb;KACJ,CAAC;CAEL,wE","file":"/client/app/class.edit/BillingAndPayment.jsx","sourcesContent":["/**\n * Created on 9/22/15.\n */\n\n{\n\n\n    Cal.CEBillingAndPayment = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n\n            Meteor.subscribe(\"historyShoppingCart\", Meteor.userId());\n            Meteor.subscribe(\"nowShoppingCart\", Meteor.userId());\n\n\n\n            //status==done\n            let historyBillings = DB.ShoppingCart.find({\n                accountId: Meteor.userId(),\n                status: 'done'\n            }).fetch()\n\n            //尚未支付的订单 status  [active , checking]\n            //active还未选择支付方式  checking已选择pay－now or pay－in－store\n            let unfinishedBillings = DB.ShoppingCart.find({\n                accountId: Meteor.userId(),\n                status: {\n                    $in: ['active', 'checking','applied']\n                }\n            }).fetch()\n\n            debugger\n\n            return {\n                historyBillings: historyBillings,\n                unfinishedBillings: unfinishedBillings\n            }\n        },\n\n        ///actions\n\n\n        render() {\n\n            //<Cal.BillingUnfinished unfinishedBillings={this.data.unfinishedBillings}/>\n            //<Cal.CRRegBillingPage />\n\n\n            return <RC.Tabs className=\"bg-white\">\n                <div label=\"Pending Billing\" className=\"padding\">\n\n                    <Cal.BillingUnfinished unfinishedBillings={this.data.unfinishedBillings}/>\n\n                </div>\n                <div label=\"History Payment\" className=\"padding\">\n\n                    {\n                        this.data.historyBillings.map(function (cart) {\n\n                            return cart.items.map(function(item){\n\n                                    return <div className=\"row\">\n                                            <div className=\"col\">\n                                                {item.swimmer &&item.swimmer.name }\n                                            </div>\n                                            <div className=\"col\">\n                                                {item.class1 &&item.class1.name }\n\n                                            </div>\n                                        </div>\n                                })\n\n\n                        })\n\n                    }\n\n                </div>\n            </RC.Tabs>\n        }\n    })\n\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/BillingUnfinished.jsx                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.BillingUnfinished = React.createClass({                            // 1\n    displayName: \"BillingUnfinished\",                                  //\n                                                                       //\n    render: function () {                                              // 3\n                                                                       //\n        return React.createElement(                                    // 5\n            \"div\",                                                     //\n            null,                                                      //\n            this.props.unfinishedBillings.map(function (cart) {        //\n                                                                       //\n                return cart.items.map(function (item) {                // 10\n                                                                       //\n                    return React.createElement(                        // 12\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            item.swimmer && item.swimmer.name          //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            item.class1 && item.class1.name            //\n                        )                                              //\n                    );                                                 //\n                });                                                    //\n            }),                                                        //\n            React.createElement(                                       //\n                RC.URL,                                                // 26\n                { href: \"/classRegister/RegBillingPage\" },             //\n                React.createElement(                                   //\n                    RC.Button,                                         // 27\n                    { name: \"button\", type: \"submit\",                  //\n                        onClick: this.formSubmit,                      // 28\n                        theme: \"full\", buttonColor: \"brand\" },         // 29\n                    \"Checkout\"                                         //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n                                                                       //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/BillingUnfinished.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/BillingUnfinished.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEtC,UAAM,EAAE,YAAY;;AAEhB,eAAO;;;YAGC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;AAE9C,uBAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,IAAI,EAAC;;AAEhC,2BAAO;;0BAAK,SAAS,EAAC,KAAK;wBACvB;;8BAAK,SAAS,EAAC,KAAK;4BACf,IAAI,CAAC,OAAO,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI;yBAC/B;wBACN;;8BAAK,SAAS,EAAC,KAAK;4BACf,IAAI,CAAC,MAAM,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI;yBAE7B;qBACJ;iBACT,CAAC;aACL,CAAC;YAIN;AAAC,kBAAE,CAAC,GAAG;kBAAC,IAAI,EAAC,+BAA+B;gBACxC;AAAC,sBAAE,CAAC,MAAM;sBAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,+BAAO,EAAE,IAAI,CAAC,UAAW;AACzB,6BAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;iBAE/B;aAEP;SAIP,CAAC;KACV;;CAEJ,CAAC,CAAC,sE","file":"/client/app/class.edit/BillingUnfinished.jsx","sourcesContent":["Cal.BillingUnfinished = React.createClass({\n\n    render: function () {\n\n        return <div>\n\n            {\n                this.props.unfinishedBillings.map(function (cart) {\n\n                    return cart.items.map(function(item){\n\n                        return <div className=\"row\">\n                            <div className=\"col\">\n                                {item.swimmer &&item.swimmer.name }\n                            </div>\n                            <div className=\"col\">\n                                {item.class1 &&item.class1.name }\n\n                            </div>\n                        </div>\n                    })\n                })\n            }\n\n\n            <RC.URL href=\"/classRegister/RegBillingPage\">\n                <RC.Button name=\"button\" type=\"submit\"\n                           onClick={this.formSubmit}\n                           theme=\"full\" buttonColor=\"brand\">\n                    Checkout\n                </RC.Button>\n\n            </RC.URL>\n\n\n\n        </div>;\n    }\n\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/CancelClass.store.jsx                         //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/25/15.                                                 //\n */                                                                    //\n                                                                       //\nDependency.add('classEdit.CancelClass.store', new function () {        // 5\n                                                                       //\n    var self = this;                                                   // 7\n                                                                       //\n    self.refundWay = new ReactiveVar();                                // 10\n                                                                       //\n    self.tokenId = Dispatcher.register(function (payload) {            // 13\n                                                                       //\n        switch (payload.actionType) {                                  // 15\n                                                                       //\n            case \"CECancelClassPage_SELECT_REFUND_WAY\":                // 17\n                {                                                      // 17\n                                                                       //\n                    break;                                             // 20\n                }                                                      //\n                                                                       //\n        }                                                              // 21\n    });                                                                //\n}());                                                                  //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/CancelClass.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/CancelClass.store.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,UAAU,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,YAAY;;AAE1D,QAAI,IAAI,GAAG,IAAI,CAAC;;AAGhB,QAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE;;AAGlC,QAAI,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,OAAO,EAAE;;AAElD,gBAAQ,OAAO,CAAC,UAAU;;AAEtB,iBAAK,qCAAqC;AAAC;;AAGvC,0BAAM;iBACT;;AAAA,SAEJ;KAGJ,CAAC;CAIL,GAAC,qE","file":"/client/app/class.edit/CancelClass.store.jsx","sourcesContent":["/**\n * Created on 9/25/15.\n */\n\nDependency.add('classEdit.CancelClass.store', new function () {\n\n    var self = this;\n\n\n    self.refundWay = new ReactiveVar()\n\n\n    self.tokenId = Dispatcher.register(function (payload) {\n\n        switch (payload.actionType) {\n\n            case \"CECancelClassPage_SELECT_REFUND_WAY\":{\n\n\n                break;\n            }\n\n        }\n\n\n    })\n\n\n\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/CancelClassBillingConfirmPage.jsx             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/25/15.                                                 //\n */                                                                    //\n{                                                                      // 4\n    (function () {                                                     //\n        var cancelClassStore = undefined;                              // 5\n        Dependency.autorun(function () {                               // 6\n            cancelClassStore = Dependency.get('classEdit.CancelClass.store');\n        });                                                            //\n                                                                       //\n        Cal.CECancelClassConfirmPage = React.createClass({             // 10\n            displayName: 'CECancelClassConfirmPage',                   //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 12\n            getMeteorData: function () {                               // 13\n                var classId = this.props.classId;                      // 14\n                Meteor.subscribe(\"class\", classId);                    // 15\n                                                                       //\n                return {                                               // 17\n                                                                       //\n                    'class': DB.Classes.findOne({ _id: classId }),     // 19\n                                                                       //\n                    refundWay: cancelClassStore.refundWay              // 21\n                };                                                     //\n            },                                                         //\n                                                                       //\n            ////action                                                 //\n            confirm: function () {                                     // 27\n                                                                       //\n                Meteor.call('cancel_class', this.props.swimmerId, this.props.classId, function (err, result) {\n                    if (err) {                                         // 33\n                        console.error(err);                            // 34\n                        return;                                        // 35\n                    }                                                  //\n                                                                       //\n                    alert('cancel success');                           // 38\n                });                                                    //\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 46\n                                                                       //\n                return React.createElement(                            // 48\n                    'div',                                             //\n                    null,                                              //\n                    React.createElement(Cal.ClassRegisterDetail, {     //\n                        classId: this.props.classId,                   // 52\n                        swimmerId: this.props.swimmerId                // 53\n                    }),                                                //\n                    React.createElement(                               //\n                        'div',                                         //\n                        null,                                          //\n                        React.createElement(                           //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'DUE'                                  //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                '0'                                    //\n                            )                                          //\n                        ),                                             //\n                        React.createElement(                           //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Credit'                               //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                this.data['class'] && this.data['class'].price\n                            )                                          //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        'p',                                           //\n                        { className: 'padding' },                      //\n                        React.createElement(                           //\n                            RC.Button,                                 // 73\n                            { name: 'button', type: 'submit',          //\n                                onClick: this.confirm,                 // 74\n                                theme: 'full', buttonColor: 'brand' },\n                            'Confirm Cancel'                           //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/CancelClassBillingConfirmPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/CancelClassBillingConfirmPage.jsx"],"names":[],"mappings":";;;;;;;;;;;AAGA;;AACI,YAAI,gBAAgB,aAAC;AACrB,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,4BAAgB,GAAG,UAAU,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;SACpE,CAAC,CAAC;;AAEH,WAAG,CAAC,wBAAwB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE7C,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;AACZ,oBAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;AAChC,sBAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;;AAEnC,uBAAO;;AAEH,6BAAO,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC;;AAEzC,6BAAS,EAAE,gBAAgB,CAAC,SAAS;iBACxC;aACJ;;;AAID,mBAAO,cAAE;;AAEL,sBAAM,CAAC,IAAI,CAAC,cAAc,EACtB,IAAI,CAAC,KAAK,CAAC,SAAS,EACpB,IAAI,CAAC,KAAK,CAAC,OAAO,EAClB,UAAS,GAAG,EAAC,MAAM,EAAC;AAChB,wBAAG,GAAG,EAAE;AACJ,+BAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AAClB,+BAAM;qBACT;;AAED,yBAAK,CAAC,gBAAgB,CAAC;iBAE1B,CAAC,CAAC;aAEV;;AAID,kBAAM,cAAG;;AAEL,uBAAO;;;oBAGH,oBAAC,GAAG,CAAC,mBAAmB;AACpB,+BAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAQ;AAC5B,iCAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;sBAC9B;oBAEN;;;wBACI;;8BAAK,SAAS,EAAC,KAAK;4BAChB;;kCAAK,SAAS,EAAC,KAAK;;6BAAU;4BAC9B;;kCAAK,SAAS,EAAC,KAAK;;6BAEd;yBACJ;wBACN;;8BAAK,SAAS,EAAC,KAAK;4BAChB;;kCAAK,SAAS,EAAC,KAAK;;6BAAa;4BACjC;;kCAAK,SAAS,EAAC,KAAK;gCACf,IAAI,CAAC,IAAI,SAAM,IAAI,IAAI,CAAC,IAAI,SAAM,CAAC,KAAK;6BACvC;yBACJ;qBACJ;oBAGN;;0BAAG,SAAS,EAAC,SAAS;wBAClB;AAAC,8BAAE,CAAC,MAAM;8BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,uCAAO,EAAE,IAAI,CAAC,OAAQ;AACtB,qCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;yBAE/B;qBACZ;iBAIF;aACT;SACJ,CAAC;;CAEL,wE","file":"/client/app/class.edit/CancelClassBillingConfirmPage.jsx","sourcesContent":["/**\n * Created on 9/25/15.\n */\n{\n    let cancelClassStore;\n    Dependency.autorun(function () {\n        cancelClassStore = Dependency.get('classEdit.CancelClass.store');\n    });\n\n    Cal.CECancelClassConfirmPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            var classId = this.props.classId\n            Meteor.subscribe(\"class\", classId);\n\n            return {\n\n                class: DB.Classes.findOne({_id: classId}),\n\n                refundWay: cancelClassStore.refundWay\n            }\n        },\n\n\n        ////action\n        confirm(){\n\n            Meteor.call('cancel_class',\n                this.props.swimmerId,\n                this.props.classId,\n                function(err,result){\n                    if(err) {\n                        console.error(err)\n                        return\n                    }\n\n                    alert('cancel success')\n\n                });\n\n        },\n\n\n\n        render() {\n\n            return <div>\n\n\n                <Cal.ClassRegisterDetail\n                    classId={this.props.classId}\n                    swimmerId={this.props.swimmerId}\n                    />\n\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col\">DUE</div>\n                        <div className=\"col\">\n                                0\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">Credit</div>\n                        <div className=\"col\">\n                            {this.data.class && this.data.class.price}\n                        </div>\n                    </div>\n                </div>\n\n\n                <p className=\"padding\">\n                    <RC.Button name=\"button\" type=\"submit\"\n                               onClick={this.confirm}\n                               theme=\"full\" buttonColor=\"brand\">\n                        Confirm Cancel\n                    </RC.Button>\n                </p>\n\n\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/CancelClassPage.jsx                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    (function () {                                                     //\n                                                                       //\n        var cancelClassStore = undefined;                              // 8\n        Dependency.autorun(function () {                               // 9\n            cancelClassStore = Dependency.get('classEdit.CancelClass.store');\n        });                                                            //\n                                                                       //\n        Cal.CECancelClassPage = React.createClass({                    // 14\n            displayName: 'CECancelClassPage',                          //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 16\n            getMeteorData: function () {                               // 17\n                                                                       //\n                var classId = this.props.classId;                      // 20\n                var swimmerId = this.props.swimmerId;                  // 21\n                Meteor.subscribe(\"class\", classId);                    // 22\n                                                                       //\n                return {                                               // 24\n                    'class': DB.Classes.findOne({ _id: classId }),     // 25\n                    swimmer: DB.Swimmers.findOne({ _id: swimmerId }),  // 26\n                                                                       //\n                    refundWay: cancelClassStore.refundWay              // 28\n                };                                                     //\n            },                                                         //\n                                                                       //\n            selectRefundWay: function (item) {                         // 32\n                                                                       //\n                console.log(item.value);                               // 35\n                //alert(this.refs.refundWay.getValue())                //\n                                                                       //\n                cancelClassStore.refundWay.set(item.value);            // 38\n            },                                                         //\n                                                                       //\n            next: function (e) {                                       // 43\n                if (!cancelClassStore.refundWay.get()) {               // 44\n                    alert('please select a refund way');               // 45\n                    e.preventDefault();                                // 46\n                    return;                                            // 47\n                }                                                      //\n                                                                       //\n                var href = '/classEdit/CancelClassConfirmPage' + '?classId=' + this.props.classId + '&swimmerId=' + this.props.swimmerId;\n                                                                       //\n                //alert(href)                                          //\n                FlowRouter.go(href);                                   // 55\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 59\n                var classId = this.props.classId;                      // 60\n                                                                       //\n                var href = '/classEdit/' + this.props.classId + '/CancelClassConfirmPage';\n                                                                       //\n                var refundMethods = [{                                 // 64\n                    value: 'cash',                                     // 65\n                    label: \"cash refund\"                               // 66\n                }, {                                                   //\n                    value: 'credit',                                   // 68\n                    label: \"cash to you credit card\"                   // 69\n                }, {                                                   //\n                    value: 'account',                                  // 71\n                    label: \"credit to your account\"                    // 72\n                }];                                                    //\n                                                                       //\n                return React.createElement(                            // 75\n                    'div',                                             //\n                    { className: 'padding' },                          //\n                    React.createElement(Cal.ClassRegisterDetail, {     //\n                        classId: this.props.classId,                   // 79\n                        swimmerId: this.props.swimmerId                // 80\n                    }),                                                //\n                    React.createElement(                               //\n                        RC.Item,                                       // 84\n                        { theme: 'divider' },                          //\n                        'Please select a refund method'                //\n                    ),                                                 //\n                    React.createElement(RC.RadioGroup2, { list: refundMethods,\n                        changeHandler: this.selectRefundWay,           // 87\n                        ref: 'refundWay',                              // 88\n                        name: 'refundWay', value: 'erindale',          // 89\n                        uiClass: 'paw', uiColor: 'brand' }),           // 90\n                    React.createElement(                               //\n                        RC.Button,                                     // 94\n                        { name: 'button', type: 'submit',              //\n                            onClick: this.next,                        // 95\n                            theme: 'full', buttonColor: 'brand' },     // 96\n                        'Next'                                         //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/CancelClassPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/CancelClassPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;;AAEI,YAAI,gBAAgB,aAAC;AACrB,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,4BAAgB,GAAG,UAAU,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;SACpE,CAAC,CAAC;;AAGH,WAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEtC,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;;AAGZ,oBAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;AAChC,oBAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;AACpC,sBAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;;AAEnC,uBAAO;AACH,6BAAO,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC;AACzC,2BAAO,EAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,SAAS,EAAC,CAAC;;AAEhD,6BAAS,EAAE,gBAAgB,CAAC,SAAS;iBACxC;aACJ;;AAED,2BAAe,YAAC,IAAI,EAAC;;AAGjB,uBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;;;AAGvB,gCAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;aAG7C;;AAED,gBAAI,YAAC,CAAC,EAAC;AACH,oBAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;AACnC,yBAAK,CAAC,4BAA4B,CAAC;AACnC,qBAAC,CAAC,cAAc,EAAE;AAClB,2BAAO;iBACV;;AAED,oBAAI,IAAI,GAAG,mCAAmC,GACzC,WAAW,GAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAC9B,aAAa,GAAC,IAAI,CAAC,KAAK,CAAC,SAAS;;;AAGvC,0BAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aAEvB;;AAED,kBAAM,cAAG;AACL,oBAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO;;AAEhC,oBAAI,IAAI,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,yBAAyB;;AAEzE,oBAAI,aAAa,GAAG,CAAC;AACjB,yBAAK,EAAE,MAAM;AACb,yBAAK,EAAE,aAAa;iBACvB,EAAE;AACC,yBAAK,EAAE,QAAQ;AACf,yBAAK,EAAE,yBAAyB;iBACnC,EAAE;AACC,yBAAK,EAAE,SAAS;AAChB,yBAAK,EAAE,wBAAwB;iBAClC,CAAC;;AAEF,uBAAO;;sBAAK,SAAS,EAAC,SAAS;oBAG3B,oBAAC,GAAG,CAAC,mBAAmB;AACpB,+BAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAQ;AAC5B,iCAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;sBAC9B;oBAGN;AAAC,0BAAE,CAAC,IAAI;0BAAC,KAAK,EAAC,SAAS;;qBAAwC;oBAEhE,oBAAC,EAAE,CAAC,WAAW,IAAC,IAAI,EAAE,aAAc;AACpB,qCAAa,EAAE,IAAI,CAAC,eAAgB;AACpC,2BAAG,EAAC,WAAW;AACf,4BAAI,EAAC,WAAW,EAAC,KAAK,EAAC,UAAU;AACjC,+BAAO,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,GAAE;oBAI/C;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,mCAAO,EAAE,IAAI,CAAC,IAAK;AACnB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;iBAGV;aACT;SACJ,CAAC;;CAEL,wE","file":"/client/app/class.edit/CancelClassPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\n\n{\n\n    let cancelClassStore;\n    Dependency.autorun(function () {\n        cancelClassStore = Dependency.get('classEdit.CancelClass.store');\n    });\n\n\n    Cal.CECancelClassPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n\n            var classId = this.props.classId\n            var swimmerId = this.props.swimmerId\n            Meteor.subscribe(\"class\", classId);\n\n            return {\n                class: DB.Classes.findOne({_id: classId}),\n                swimmer:   DB.Swimmers.findOne({_id: swimmerId}),\n\n                refundWay: cancelClassStore.refundWay\n            }\n        },\n\n        selectRefundWay(item){\n\n\n            console.log(item.value)\n            //alert(this.refs.refundWay.getValue())\n\n            cancelClassStore.refundWay.set(item.value)\n\n\n        },\n\n        next(e){\n            if (!cancelClassStore.refundWay.get()) {\n                alert('please select a refund way')\n                e.preventDefault()\n                return;\n            }\n\n            var href = '/classEdit/CancelClassConfirmPage'\n                +'?classId='+this.props.classId\n                +'&swimmerId='+this.props.swimmerId\n\n            //alert(href)\n            FlowRouter.go(href);\n\n        },\n\n        render() {\n            var classId = this.props.classId\n\n            var href = '/classEdit/' + this.props.classId + '/CancelClassConfirmPage'\n\n            let refundMethods = [{\n                value: 'cash',\n                label: \"cash refund\"\n            }, {\n                value: 'credit',\n                label: \"cash to you credit card\"\n            }, {\n                value: 'account',\n                label: \"credit to your account\"\n            }]\n\n            return <div className=\"padding\">\n\n\n                <Cal.ClassRegisterDetail\n                    classId={this.props.classId}\n                    swimmerId={this.props.swimmerId}\n                    />\n\n\n                <RC.Item theme=\"divider\">Please select a refund method</RC.Item>\n\n                <RC.RadioGroup2 list={refundMethods}\n                                changeHandler={this.selectRefundWay}\n                                ref=\"refundWay\"\n                                name=\"refundWay\" value=\"erindale\"\n                                uiClass=\"paw\" uiColor=\"brand\"/>\n\n\n\n                <RC.Button name=\"button\" type=\"submit\"\n                           onClick={this.next}\n                           theme=\"full\" buttonColor=\"brand\">\n                    Next\n                </RC.Button>\n\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/ChangeClassBillingPage.jsx                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n{                                                                      // 4\n    (function () {                                                     //\n                                                                       //\n        var PageStore = undefined;                                     // 6\n        Dependency.autorun(function () {                               // 7\n            PageStore = Dependency.get('classEdit.ChangeClass.store');\n        });                                                            //\n                                                                       //\n        Cal.ChangeClassBillingPage = React.createClass({               // 12\n            displayName: \"ChangeClassBillingPage\",                     //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 14\n            getMeteorData: function () {                               // 15\n                return {                                               // 16\n                    swimmer: PageStore.swimmer.get(),                  // 17\n                    \"class\": PageStore[\"class\"].get(),                 // 18\n                    newClass: PageStore.currentClass.get()             // 19\n                };                                                     //\n            },                                                         //\n                                                                       //\n            ///actions                                                 //\n                                                                       //\n            confirm: function () {                                     // 25\n                                                                       //\n                Dispatcher.dispatch({                                  // 27\n                    actionType: \"ChangeClassPage_BILLING_CONFIRM\"      // 28\n                });                                                    //\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 32\n                return React.createElement(                            // 33\n                    \"div\",                                             //\n                    { className: \"padding\" },                          //\n                    React.createElement(                               //\n                        RC.Card,                                       // 36\n                        { key: Math.random(), title: \"Class Change Confirm\" },\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"row\" },                      //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                React.createElement(                   //\n                                    \"b\",                               //\n                                    null,                              //\n                                    this.data.swimmer && this.data.swimmer.name\n                                )                                      //\n                            ),                                         //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                this.data[\"class\"] && this.data.swimmer ? React.createElement(\n                                    \"p\",                               //\n                                    null,                              //\n                                    this.data[\"class\"].name,           //\n                                    React.createElement(\"br\", null),   //\n                                    React.createElement(               //\n                                        \"b\",                           //\n                                        null,                          //\n                                        \"is Changed to\"                //\n                                    ),                                 //\n                                    React.createElement(\"br\", null),   //\n                                    this.data.newClass.name            //\n                                ) : 'class change detail'              //\n                            )                                          //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Due\"                                      //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"0\"                                        //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Refund\"                                   //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"0\"                                        //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Button,                                     // 87\n                        { name: \"button\",                              //\n                            onClick: this.confirm,                     // 88\n                            theme: \"full\", buttonColor: \"brand\" },     // 89\n                        \"Confirm\"                                      //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/ChangeClassBillingPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/ChangeClassBillingPage.jsx"],"names":[],"mappings":";;;;;;;;;;;AAGA;;;AAEI,YAAI,SAAS,aAAC;AACd,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,qBAAS,GAAG,UAAU,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;SAC7D,CAAC,CAAC;;AAGH,WAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE3C,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;AACZ,uBAAO;AACH,2BAAO,EAAE,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE;AAChC,6BAAO,SAAS,SAAM,CAAC,GAAG,EAAE;AAC5B,4BAAQ,EAAE,SAAS,CAAC,YAAY,CAAC,GAAG,EAAE;iBACzC;aACJ;;;;AAID,mBAAO,cAAE;;AAEL,0BAAU,CAAC,QAAQ,CAAC;AAChB,8BAAU,EAAE,iCAAiC;iBAChD,CAAC,CAAC;aACN;;AAED,kBAAM,cAAG;AACL,uBAAO;;sBAAK,SAAS,EAAC,SAAS;oBAG3B;AAAC,0BAAE,CAAC,IAAI;0BAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,KAAK,EAAC,sBAAsB;wBAErD;;8BAAK,SAAS,EAAC,KAAK;4BAChB;;kCAAK,SAAS,EAAC,KAAK;gCAChB;;;oCACK,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;iCAC5C;6BACF;4BAEN;;kCAAK,SAAS,EAAC,KAAK;gCAGZ,IAAI,CAAC,IAAI,SAAM,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,GAChC;;;oCACK,IAAI,CAAC,IAAI,SAAM,CAAC,IAAI;oCAErB,+BAAK;oCACD;;;;qCAAoB;oCACxB,+BAAK;oCAEJ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI;iCACxB,GAEJ,qBAAqB;6BAE3B;yBAEJ;qBAEA;oBAGV;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBAEJ;oBACN;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBAEJ;oBAEN;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ;AACb,mCAAO,EAAE,IAAI,CAAC,OAAQ;AACtB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;iBAGV;aAET;SACJ,CAAC;;CAEL,wE","file":"/client/app/class.edit/ChangeClassBillingPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n{\n\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classEdit.ChangeClass.store');\n    });\n\n\n    Cal.ChangeClassBillingPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            return {\n                swimmer: PageStore.swimmer.get(),\n                class: PageStore.class.get(),\n                newClass: PageStore.currentClass.get()\n            }\n        },\n\n        ///actions\n\n        confirm(){\n\n            Dispatcher.dispatch({\n                actionType: \"ChangeClassPage_BILLING_CONFIRM\"\n            });\n        },\n\n        render() {\n            return <div className=\"padding\">\n\n\n                <RC.Card key={Math.random()} title=\"Class Change Confirm\">\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <b>\n                                {this.data.swimmer && this.data.swimmer.name}\n                            </b>\n                        </div>\n\n                        <div className=\"col\">\n\n                            {\n                                this.data.class && this.data.swimmer ?\n                                    <p>\n                                        {this.data.class.name}\n\n                                        <br/>\n                                            <b>is Changed to</b>\n                                        <br/>\n\n                                        {this.data.newClass.name}\n                                    </p> :\n\n                                    'class change detail'\n                            }\n                        </div>\n\n                    </div>\n\n                </RC.Card>\n\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Due\n                    </div>\n                    <div className=\"col\">\n                        0\n                    </div>\n\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Refund\n                    </div>\n                    <div className=\"col\">\n                        0\n                    </div>\n\n                </div>\n\n                <RC.Button name=\"button\"\n                           onClick={this.confirm}\n                           theme=\"full\" buttonColor=\"brand\">\n                    Confirm\n                </RC.Button>\n\n\n            </div>\n\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/ChangeClassPage.jsx                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    (function () {                                                     //\n        var PageStore = undefined;                                     // 7\n        Dependency.autorun(function () {                               // 8\n            PageStore = Dependency.get('classEdit.ChangeClass.store');\n        });                                                            //\n                                                                       //\n        Cal.ChangeClassPage = React.createClass({                      // 13\n            displayName: \"ChangeClassPage\",                            //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 15\n            getMeteorData: function () {                               // 16\n                                                                       //\n                return {                                               // 18\n                                                                       //\n                    swimmer: PageStore.swimmer,                        // 20\n                    \"class\": PageStore[\"class\"],                       // 21\n                    currentLevel: PageStore.currentLevel,              // 22\n                                                                       //\n                    avaiableDays: PageStore.avaiableDays.get(),        // 24\n                    avaiableTimes: PageStore.avaiableTimes.get(),      // 25\n                                                                       //\n                    currentDay: PageStore.currentDay.get(),            // 27\n                    currentTime: PageStore.currentTime.get()           // 28\n                                                                       //\n                };                                                     //\n            },                                                         //\n                                                                       //\n            ////actions                                                //\n            dayChange: function (e) {                                  // 34\n                var value = this.refs.day.getValue();                  // 35\n                value = parseInt(value, 10);                           // 36\n                                                                       //\n                Dispatcher.dispatch({                                  // 38\n                    actionType: \"ChangeClassPage_DAY_CHANGE\",          // 39\n                    day: value                                         // 40\n                });                                                    //\n            },                                                         //\n            timeChange: function (e) {                                 // 45\n                var value = this.refs.time.getValue();                 // 46\n                value = parseInt(value, 10);                           // 47\n                Dispatcher.dispatch({                                  // 48\n                    actionType: \"ChangeClassPage_TIME_CHANGE\",         // 49\n                    time: value                                        // 50\n                });                                                    //\n            },                                                         //\n            formSubmit: function (e) {                                 // 54\n                e.preventDefault();                                    // 55\n                                                                       //\n                Dispatcher.dispatch({                                  // 57\n                    actionType: \"ChangeClassPage_CLASS_CONFIRM\"        // 58\n                });                                                    //\n            },                                                         //\n                                                                       //\n            //init store                                               //\n            componentDidMount: function () {                           // 66\n                Dispatcher.dispatch({                                  // 67\n                    actionType: \"ChangeClassPage_INIT\",                // 68\n                    swimmerId: this.props.swimmerId,                   // 69\n                    classId: this.props.classId                        // 70\n                });                                                    //\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 74\n                return React.createElement(                            // 75\n                    \"div\",                                             //\n                    null,                                              //\n                    React.createElement(Cal.ClassRegisterDetail, {     //\n                        classId: this.props.classId,                   // 79\n                        swimmerId: this.props.swimmerId,               // 80\n                        currentLevel: this.data.currentLevel           // 81\n                    }),                                                //\n                    React.createElement(                               //\n                        RC.Form,                                       // 84\n                        { ref: \"changeClassForm\", onSubmit: this.formSubmit },\n                        React.createElement(                           //\n                            RC.List,                                   // 85\n                            { theme: \"inset\" },                        //\n                            \"Please select new day and time\",          //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"day\",                            // 90\n                                options: this.data.avaiableDays,       // 91\n                                value: this.data.currentDay,           // 92\n                                name: \"day\",                           // 93\n                                changeHandler: this.dayChange,         // 94\n                                label: \"Day\"                           // 95\n                            }),                                        //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"time\",                           // 99\n                                options: this.data.avaiableTimes,      // 100\n                                value: this.data.currentTime,          // 101\n                                name: \"time\",                          // 102\n                                changeHandler: this.timeChange,        // 103\n                                label: \"Time\"                          // 104\n                            }),                                        //\n                            React.createElement(                       //\n                                RC.Button,                             // 108\n                                { name: \"button\", type: \"submit\",      //\n                                    onClick: this.formSubmit,          // 109\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                \"confirm\"                              //\n                            )                                          //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/ChangeClassPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/ChangeClassPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.edit/ChangeClassPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\n\n{\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classEdit.ChangeClass.store');\n    });\n\n\n    Cal.ChangeClassPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            return {\n\n                swimmer:PageStore.swimmer,\n                class:PageStore.class,\n                currentLevel:PageStore.currentLevel,\n\n                avaiableDays: PageStore.avaiableDays.get(),\n                avaiableTimes: PageStore.avaiableTimes.get(),\n\n                currentDay: PageStore.currentDay.get(),\n                currentTime: PageStore.currentTime.get(),\n\n            }\n        },\n\n        ////actions\n        dayChange(e){\n            var value = this.refs.day.getValue()\n            value = parseInt(value, 10)\n\n            Dispatcher.dispatch({\n                actionType: \"ChangeClassPage_DAY_CHANGE\",\n                day: value\n            });\n\n\n        },\n        timeChange(e){\n            var value = this.refs.time.getValue()\n            value = parseInt(value, 10)\n            Dispatcher.dispatch({\n                actionType: \"ChangeClassPage_TIME_CHANGE\",\n                time: value\n            });\n\n        },\n        formSubmit(e){\n            e.preventDefault()\n\n            Dispatcher.dispatch({\n                actionType: \"ChangeClassPage_CLASS_CONFIRM\"\n            });\n\n        },\n\n\n\n        //init store\n        componentDidMount(){\n            Dispatcher.dispatch({\n                actionType: \"ChangeClassPage_INIT\",\n                swimmerId: this.props.swimmerId,\n                classId :this.props.classId\n            });\n        },\n\n        render() {\n            return <div>\n\n\n                <Cal.ClassRegisterDetail\n                    classId={this.props.classId}\n                    swimmerId={this.props.swimmerId}\n                    currentLevel={this.data.currentLevel}\n                    />\n\n                <RC.Form ref=\"changeClassForm\" onSubmit={this.formSubmit}>\n                    <RC.List theme=\"inset\">\n\n                        Please select new day and time\n\n                        <RC.Select2\n                            ref=\"day\"\n                            options={this.data.avaiableDays}\n                            value={this.data.currentDay}\n                            name=\"day\"\n                            changeHandler={this.dayChange}\n                            label=\"Day\"\n                            />\n\n                        <RC.Select2\n                            ref=\"time\"\n                            options={this.data.avaiableTimes}\n                            value={this.data.currentTime}\n                            name=\"time\"\n                            changeHandler={this.timeChange}\n                            label=\"Time\"\n                            />\n\n\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   onClick={this.formSubmit}\n                                   theme=\"full\" buttonColor=\"brand\">\n                            confirm\n                        </RC.Button>\n\n\n                    </RC.List>\n                </RC.Form>\n\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/ChangeClassPage.store.jsx                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/25/15.                                                 //\n */                                                                    //\n                                                                       //\nDependency.add('classEdit.ChangeClass.store', new function () {        // 5\n                                                                       //\n    var self = this;                                                   // 7\n                                                                       //\n    self.swimmerId = new ReactiveVar();                                // 10\n    self.classId = new ReactiveVar();                                  // 11\n                                                                       //\n    self.swimmer = new ReactiveVar();                                  // 14\n    self[\"class\"] = new ReactiveVar();                                 // 15\n                                                                       //\n    self.currentLevel = new ReactiveVar();                             // 17\n                                                                       //\n    //可选days 依赖于 当前的currentLevel                                       //\n    self.avaiableDays = new ReactiveVar([]);                           // 21\n    //可选时间   依赖于 当前选中的currentDay                                       //\n    self.avaiableTimes = new ReactiveVar([]);                          // 23\n                                                                       //\n    //选择的class                                                         //\n    self.currentDay = new ReactiveVar();                               // 27\n    self.currentTime = new ReactiveVar();                              // 28\n    self.currentClass = new ReactiveVar();                             // 29\n                                                                       //\n    self.tokenId = Dispatcher.register(function (payload) {            // 32\n                                                                       //\n        switch (payload.actionType) {                                  // 34\n                                                                       //\n            case \"ChangeClassPage_INIT\":                               // 38\n                {                                                      // 39\n                                                                       //\n                    self.swimmerId.set(payload.swimmerId);             // 41\n                    self.classId.set(payload.classId);                 // 42\n                                                                       //\n                    Meteor.subscribe(\"classes\");                       // 44\n                    Meteor.subscribe(\"swimmer\", payload.swimmerId);    // 45\n                                                                       //\n                    break;                                             // 48\n                }                                                      //\n            case \"ChangeClassPage_DAY_CHANGE\":                         // 50\n                {                                                      // 51\n                                                                       //\n                    debugger;                                          // 53\n                                                                       //\n                    self.currentDay.set(payload.day);                  // 55\n                    break;                                             // 56\n                }                                                      //\n            case \"ChangeClassPage_TIME_CHANGE\":                        // 57\n                {                                                      // 59\n                                                                       //\n                    debugger;                                          // 61\n                    self.currentTime.set(payload.time);                // 62\n                                                                       //\n                    break;                                             // 64\n                }                                                      //\n            case \"ChangeClassPage_CLASS_CONFIRM\":                      // 65\n                {                                                      // 67\n                                                                       //\n                    var href = '/classEdit/ChangeClassBillingPage';    // 69\n                                                                       //\n                    FlowRouter.go(href);                               // 71\n                                                                       //\n                    break;                                             // 73\n                }                                                      //\n            case \"ChangeClassPage_BILLING_CONFIRM\":                    // 75\n                {                                                      // 76\n                                                                       //\n                    var swimmer = self.swimmer.get();                  // 78\n                    var oldClass = self[\"class\"].get();                // 79\n                    var newClass = self.currentClass.get();            // 80\n                                                                       //\n                    debugger;                                          // 83\n                    Meteor.call('change_class', swimmer._id, oldClass._id, newClass._id, function (err) {\n                        if (err) {                                     // 90\n                            //todo  prompt                             //\n                            console.error(err);                        // 91\n                            alert(err.message);                        // 92\n                            return;                                    // 93\n                        }                                              //\n                                                                       //\n                        FlowRouter.go('/classEdit/swimmerList');       // 96\n                    });                                                //\n                                                                       //\n                    break;                                             // 99\n                }                                                      //\n            //每次 router到这个页面 清空用户选择                                    // 100\n            case \"GOTO_ChangeClassPage\":                               // 102\n                {                                                      // 103\n                    self.currentDay.set();                             // 104\n                    self.currentTime.set();                            // 105\n                    self.currentClass.set();                           // 106\n                }                                                      //\n                                                                       //\n        }                                                              // 108\n    });                                                                //\n                                                                       //\n    //todo  为autorun 添加 ignore逻辑 优化性能                                  //\n    Meteor.startup(function () {                                       // 117\n                                                                       //\n        //swimmerId  classId                                           //\n        Tracker.autorun(function () {                                  // 120\n                                                                       //\n            var swimmerId = self.swimmerId.get();                      // 122\n            var classId = self.classId.get();                          // 123\n                                                                       //\n            if (!swimmerId || !classId) return;                        // 125\n                                                                       //\n            var swimmer = DB.Swimmers.findOne({ _id: swimmerId });     // 127\n            var classDetail = DB.Classes.findOne({ _id: classId });    // 128\n                                                                       //\n            if (!swimmer || !classDetail) return;                      // 130\n                                                                       //\n            self.swimmer.set(swimmer);                                 // 132\n            self[\"class\"].set(classDetail);                            // 133\n                                                                       //\n            //var curentLevel= App.getNextClassLevel(swimmer.level)    //\n            //console.log(curentLevel)                                 //\n            //                                                         //\n            //self.currentLevel.set(curentLevel)                       //\n        });                                                            //\n                                                                       //\n        Tracker.autorun(function () {                                  // 143\n            var currentSwimmer = self.swimmer.get();                   // 144\n            var appInfo = DB.App.findOne();                            // 145\n                                                                       //\n            if (!appInfo) return;                                      // 147\n            if (!currentSwimmer) return;                               // 148\n                                                                       //\n            Tracker.autorun(function () {                              // 150\n                                                                       //\n                var nowClasses = DB.ClassesRegister.find({             // 152\n                    swimmerId: currentSwimmer._id,                     // 153\n                    status: 'normal', //不显示cancel中的和 change中的          // 154\n                    sessionId: App.info.sessionNow                     // 155\n                }).fetch();                                            //\n                                                                       //\n                //self.nowClasses.set(nowClasses)                      //\n                                                                       //\n                if (nowClasses.length > 0) {                           // 160\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level));\n                } else {                                               //\n                    self.currentLevel.set(currentSwimmer.level);       // 164\n                }                                                      //\n            });                                                        //\n        });                                                            //\n                                                                       //\n        //选择 avaiableDays                                              //\n        Tracker.autorun(function () {                                  // 172\n            App.info = App.info || DB.App.findOne();                   // 173\n            if (!App.info) return;                                     // 174\n                                                                       //\n            var level = self.currentLevel.get();                       // 176\n                                                                       //\n            var classes = DB.Classes.find({                            // 178\n                sessionId: App.info.sessionRegister, //level session   // 179\n                levels: level,                                         // 180\n                _id: { $ne: self.classId.get() } //除去当前class           // 181\n            }).fetch();                                                //\n                                                                       //\n            console.log(level, classes);                               // 184\n            classes = _.uniq(classes, function (item, key, a) {        // 185\n                return item.day;                                       // 186\n            });                                                        //\n                                                                       //\n            var days = classes.map(function (v, n) {                   // 189\n                return { text: App.Config.week[v.day], value: v.day };\n            });                                                        //\n                                                                       //\n            days.unshift({ value: undefined });                        // 193\n                                                                       //\n            //debugger                                                 //\n                                                                       //\n            self.avaiableDays.set(days);                               // 197\n        });                                                            //\n                                                                       //\n        Tracker.autorun(function () {                                  // 203\n            App.info = App.info || DB.App.findOne();                   // 204\n            if (!App.info) return;                                     // 205\n                                                                       //\n            var currentDay = self.currentDay.get();                    // 207\n                                                                       //\n            var level = self.currentLevel.get();                       // 209\n                                                                       //\n            var classes = DB.Classes.find({                            // 211\n                sessionId: App.info.sessionRegister, // session level day\n                levels: level,                                         // 213\n                day: currentDay,                                       // 214\n                _id: { $ne: self.classId.get() }                       // 215\n            }).fetch();                                                //\n                                                                       //\n            var times = classes.map(function (v, n) {                  // 218\n                return {                                               // 219\n                    text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                    value: v.startTime                                 // 221\n                };                                                     //\n            });                                                        //\n                                                                       //\n            //add an empty value to prevent browser init select value  use the first item\n            times.unshift({ value: undefined });                       // 226\n                                                                       //\n            self.avaiableTimes.set(times);                             // 228\n                                                                       //\n            //初始化time                                                  //\n            //if (times.length) {                                      //\n            //    self.currentTime.set(times[0].value)                 //\n            //}                                                        //\n        });                                                            //\n                                                                       //\n        Tracker.autorun(function () {                                  // 238\n            App.info = App.info || DB.App.findOne();                   // 239\n            if (!App.info) return;                                     // 240\n                                                                       //\n            var time = self.currentTime.get();                         // 242\n                                                                       //\n            var level = self.currentLevel.get();                       // 244\n            var day = self.currentDay.get();                           // 245\n                                                                       //\n            var theClass = DB.Classes.findOne({                        // 248\n                sessionId: App.info.sessionRegister, // session level day\n                levels: level,                                         // 250\n                day: day,                                              // 251\n                startTime: time                                        // 252\n            });                                                        //\n                                                                       //\n            if (theClass) {                                            // 255\n                self.currentClass.set(theClass);                       // 256\n            }                                                          //\n        });                                                            //\n    });                                                                //\n}());                                                                  //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/ChangeClassPage.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/ChangeClassPage.store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.edit/ChangeClassPage.store.jsx","sourcesContent":["/**\n * Created on 9/25/15.\n */\n\nDependency.add('classEdit.ChangeClass.store', new function () {\n\n    var self = this;\n\n\n    self.swimmerId = new ReactiveVar()\n    self.classId = new ReactiveVar()\n\n\n    self.swimmer = new ReactiveVar()\n    self.class = new ReactiveVar()\n\n    self.currentLevel = new ReactiveVar()\n\n\n    //可选days 依赖于 当前的currentLevel\n    self.avaiableDays = new ReactiveVar([])\n    //可选时间   依赖于 当前选中的currentDay\n    self.avaiableTimes = new ReactiveVar([])\n\n\n    //选择的class\n    self.currentDay = new ReactiveVar()\n    self.currentTime = new ReactiveVar()\n    self.currentClass = new ReactiveVar()\n\n\n    self.tokenId = Dispatcher.register(function (payload) {\n\n        switch (payload.actionType) {\n\n\n\n            case \"ChangeClassPage_INIT\":\n            {\n\n                self.swimmerId.set(payload.swimmerId)\n                self.classId.set(payload.classId)\n\n                Meteor.subscribe(\"classes\");\n                Meteor.subscribe(\"swimmer\", payload.swimmerId);\n\n\n                break;\n            }\n            case \"ChangeClassPage_DAY_CHANGE\":\n            {\n\n                debugger\n\n                self.currentDay.set(payload.day)\n                break;\n            }\n            case \"ChangeClassPage_TIME_CHANGE\":\n            {\n\n                debugger\n                self.currentTime.set(payload.time)\n\n                break;\n            }\n            case \"ChangeClassPage_CLASS_CONFIRM\":\n            {\n\n                var href = '/classEdit/ChangeClassBillingPage'\n\n                FlowRouter.go(href);\n\n                break;\n            }\n            case \"ChangeClassPage_BILLING_CONFIRM\":\n            {\n\n                var swimmer =self.swimmer.get()\n                var oldClass = self.class.get()\n                var newClass = self.currentClass.get()\n\n\n                debugger\n                Meteor.call('change_class',\n                    swimmer._id,\n                    oldClass._id,\n                    newClass._id,\n\n                    function (err) {\n                    if (err) {//todo  prompt\n                        console.error(err)\n                        alert(err.message)\n                        return;\n                    }\n\n                    FlowRouter.go('/classEdit/swimmerList');\n                })\n\n                break;\n            }\n            //每次 router到这个页面 清空用户选择\n            case \"GOTO_ChangeClassPage\":\n            {\n                self.currentDay.set()\n                self.currentTime.set()\n                self.currentClass.set()\n\n            }\n\n\n\n        }\n    })\n\n\n    //todo  为autorun 添加 ignore逻辑 优化性能\n    Meteor.startup(function () {\n\n        //swimmerId  classId\n        Tracker.autorun(function () {\n\n            var swimmerId = self.swimmerId.get()\n            var classId = self.classId.get()\n\n            if(!swimmerId || !classId) return;\n\n            var swimmer = DB.Swimmers.findOne({_id: swimmerId})\n            var classDetail = DB.Classes.findOne({_id: classId})\n\n            if(!swimmer || !classDetail) return;\n\n            self.swimmer.set(swimmer)\n            self.class.set(classDetail)\n\n\n            //var curentLevel= App.getNextClassLevel(swimmer.level)\n            //console.log(curentLevel)\n            //\n            //self.currentLevel.set(curentLevel)\n\n        })\n\n        Tracker.autorun(function () {\n            var currentSwimmer = self.swimmer.get()\n            var appInfo = DB.App.findOne()\n\n            if(!appInfo) return;\n            if(!currentSwimmer) return;\n\n            Tracker.autorun(function () {\n\n                var nowClasses = DB.ClassesRegister.find({\n                    swimmerId: currentSwimmer._id,\n                    status:'normal',  //不显示cancel中的和 change中的\n                    sessionId: App.info.sessionNow\n                }).fetch();\n\n                //self.nowClasses.set(nowClasses)\n\n                if(nowClasses.length>0){\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n\n                }else{\n                    self.currentLevel.set(currentSwimmer.level)\n                }\n\n            })\n\n        })\n\n        //选择 avaiableDays\n        Tracker.autorun(function () {\n            App.info = App.info || DB.App.findOne()\n            if (!App.info) return;\n\n            var level = self.currentLevel.get()\n\n            let classes = DB.Classes.find({\n                sessionId: App.info.sessionRegister, //level session\n                levels: level,\n                _id:{$ne: self.classId.get()} //除去当前class\n            }).fetch()\n\n            console.log(level,classes)\n            classes = _.uniq(classes, function (item, key, a) {\n                return item.day;\n            });\n\n            let days = classes.map(function (v, n) {\n                return {text: App.Config.week[v.day], value: v.day}\n            })\n\n            days.unshift({value: undefined})\n\n            //debugger\n\n            self.avaiableDays.set(days)\n\n\n        })\n\n\n        Tracker.autorun(function () {\n            App.info = App.info || DB.App.findOne()\n            if (!App.info) return;\n\n            var currentDay = self.currentDay.get();\n\n            var level = self.currentLevel.get()\n\n            let classes = DB.Classes.find({\n                sessionId: App.info.sessionRegister, // session level day\n                levels: level,\n                day: currentDay,\n                _id:{$ne: self.classId.get()}\n            }).fetch()\n\n            let times = classes.map(function (v, n) {\n                return {\n                    text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                    value: v.startTime\n                }\n            })\n\n            //add an empty value to prevent browser init select value  use the first item\n            times.unshift({value: undefined})\n\n            self.avaiableTimes.set(times)\n\n            //初始化time\n            //if (times.length) {\n            //    self.currentTime.set(times[0].value)\n            //}\n\n        });\n\n\n        Tracker.autorun(function () {\n            App.info = App.info || DB.App.findOne()\n            if (!App.info) return;\n\n            let time = self.currentTime.get()\n\n            let level = self.currentLevel.get()\n            let day = self.currentDay.get()\n\n\n            let theClass = DB.Classes.findOne({\n                sessionId: App.info.sessionRegister, // session level day\n                levels: level,\n                day: day,\n                startTime: time\n            })\n\n            if (theClass) {\n                self.currentClass.set(theClass)\n            }\n\n        });\n\n\n    })\n\n\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/ClassOperationBoardPage.jsx                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.ClassOperationBoardPage = React.createClass({                      // 5\n    displayName: \"ClassOperationBoardPage\",                            //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n        //let classId = this.props.classId;                            //\n        //let swimmerId= this.props.swimmerId                          //\n        //                                                             //\n        //Meteor.subscribe(\"class\",classId);                           //\n        //Meteor.subscribe(\"swimmer\",swimmerId);                       //\n        //                                                             //\n        //return {                                                     //\n        //    swimmer:DB.Swimmers.findOne({_id:swimmerId}),            //\n        //    class:DB.Classes.findOne({_id:classId})                  //\n        //                                                             //\n        //}                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 23\n                                                                       //\n        var classId = this.props.classId;                              // 25\n        var swimmerId = this.props.swimmerId;                          // 26\n                                                                       //\n        debugger;                                                      // 28\n                                                                       //\n        var colours = [{                                               // 30\n            uiColor: \"brand\",                                          // 31\n            value: \"Change Class\",                                     // 32\n            href: '/classEdit/change' + '?classId=' + classId + '&swimmerId=' + swimmerId\n                                                                       //\n        }, {                                                           //\n            uiColor: \"brand1\",                                         // 38\n            value: \"Cancel Class\",                                     // 39\n            href: '/classEdit/cancel' + '?classId=' + classId + '&swimmerId=' + swimmerId\n        },                                                             //\n        //    {                                                        //\n        //    uiColor: \"brand2\",                                       //\n        //    value: \"Shedule Meeting\",                                //\n        //    href:'/classEdit/'+classId+'/sheduleMeeting'             //\n        //},                                                           //\n        {                                                              // 49\n            uiColor: \"brand3\",                                         // 50\n            value: \"Write Comment\",                                    // 51\n            href: '/classEdit/writeComment' + '?classId=' + classId + '&swimmerId=' + swimmerId\n        }];                                                            //\n                                                                       //\n        return React.createElement(                                    // 57\n            RC.List,                                                   // 57\n            null,                                                      //\n            React.createElement(Cal.ClassRegisterDetail, {             //\n                classId: this.props.classId,                           // 60\n                swimmerId: this.props.swimmerId                        // 61\n            }),                                                        //\n            colours.map(function (c, n) {                              //\n                c.theme = \"icon-right\";                                // 66\n                c.uiClass = \"angle-right\";                             // 67\n                return React.createElement(                            // 68\n                    RC.Item,                                           // 68\n                    babelHelpers._extends({}, _.omit(c, \"value\"), { key: n }),\n                    c.value                                            //\n                );                                                     //\n            })                                                         //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/ClassOperationBoardPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/ClassOperationBoardPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE5C,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;;;;;;;;;;;;KAYZ;;AAED,UAAM,cAAG;;AAEL,YAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACjC,YAAI,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC,SAAS;;AAEnC,iBAAQ;;AAER,YAAI,OAAO,GAAG,CAAC;AACX,mBAAO,EAAE,OAAO;AAChB,iBAAK,EAAE,cAAc;AACrB,gBAAI,EAAC,mBAAmB,GACf,WAAW,GAAC,OAAO,GACnB,aAAa,GAAC,SAAS;;SAEnC,EAAC;AACE,mBAAO,EAAE,QAAQ;AACjB,iBAAK,EAAE,cAAc;AACrB,gBAAI,EAAC,mBAAmB,GACnB,WAAW,GAAC,OAAO,GACnB,aAAa,GAAC,SAAS;SAC/B;;;;;;AAMG;AACA,mBAAO,EAAE,QAAQ;AACjB,iBAAK,EAAE,eAAe;AACtB,gBAAI,EAAC,yBAAyB,GACrB,WAAW,GAAC,OAAO,GACnB,aAAa,GAAC,SAAS;SACnC,CAAC;;AAEF,eAAO;AAAC,cAAE,CAAC,IAAI;;YAEX,oBAAC,GAAG,CAAC,mBAAmB;AACpB,uBAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAQ;AAC5B,yBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;cAC9B;YAGF,OAAO,CAAC,GAAG,CAAC,UAAS,CAAC,EAAC,CAAC,EAAC;AACrB,iBAAC,CAAC,KAAK,GAAG,YAAY;AACtB,iBAAC,CAAC,OAAO,GAAG,aAAa;AACzB,uBAAO;AAAC,sBAAE,CAAC,IAAI;8CAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAC,OAAO,CAAC,IAAE,GAAG,EAAE,CAAE;oBAAE,CAAC,CAAC,KAAK;iBAAW;aACtE,CAAC;SAEA;KACb;CACJ,CAAC,uE","file":"/client/app/class.edit/ClassOperationBoardPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\nCal.ClassOperationBoardPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n        //let classId = this.props.classId;\n        //let swimmerId= this.props.swimmerId\n        //\n        //Meteor.subscribe(\"class\",classId);\n        //Meteor.subscribe(\"swimmer\",swimmerId);\n        //\n        //return {\n        //    swimmer:DB.Swimmers.findOne({_id:swimmerId}),\n        //    class:DB.Classes.findOne({_id:classId})\n        //\n        //}\n    },\n\n    render() {\n\n        let classId = this.props.classId;\n        let swimmerId= this.props.swimmerId\n\n        debugger\n\n        let colours = [{\n            uiColor: \"brand\",\n            value: \"Change Class\",\n            href:'/classEdit/change'\n                    +'?classId='+classId\n                    +'&swimmerId='+swimmerId\n\n        },{\n            uiColor: \"brand1\",\n            value: \"Cancel Class\",\n            href:'/classEdit/cancel'\n                +'?classId='+classId\n                +'&swimmerId='+swimmerId\n        },\n        //    {\n        //    uiColor: \"brand2\",\n        //    value: \"Shedule Meeting\",\n        //    href:'/classEdit/'+classId+'/sheduleMeeting'\n        //},\n            {\n            uiColor: \"brand3\",\n            value: \"Write Comment\",\n            href:'/classEdit/writeComment'\n                    +'?classId='+classId\n                    +'&swimmerId='+swimmerId\n        }]\n\n        return <RC.List >\n\n            <Cal.ClassRegisterDetail\n                classId={this.props.classId}\n                swimmerId={this.props.swimmerId}\n                />\n\n            {\n                colours.map(function(c,n){\n                    c.theme = \"icon-right\"\n                    c.uiClass = \"angle-right\"\n                    return <RC.Item {... _.omit(c,\"value\")} key={n}>{c.value}</RC.Item>\n                })\n            }\n        </RC.List>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/ClassRegisterDetail.component.jsx             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/25/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.ClassRegisterDetail = React.createClass({                          // 5\n    displayName: \"ClassRegisterDetail\",                                //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n                                                                       //\n    getMeteorData: function () {                                       // 9\n        var classId = this.props.classId;                              // 10\n        var swimmerId = this.props.swimmerId;                          // 11\n                                                                       //\n        Meteor.subscribe(\"class\", classId);                            // 13\n        Meteor.subscribe(\"swimmer\", swimmerId);                        // 14\n                                                                       //\n        return {                                                       // 16\n            swimmer: DB.Swimmers.findOne({ _id: swimmerId }),          // 17\n            \"class\": DB.Classes.findOne({ _id: classId })              // 18\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 22\n        var title = this.props.title || 'Class Register Info';         // 23\n                                                                       //\n        return React.createElement(                                    // 25\n            RC.Card,                                                   // 25\n            { title: title },                                          //\n            React.createElement(                                       //\n                \"div\",                                                 //\n                { className: \"row\" },                                  //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    \" Swimmer\"                                         //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    this.data.swimmer && this.data.swimmer.name        //\n                )                                                      //\n            ),                                                         //\n            React.createElement(                                       //\n                \"div\",                                                 //\n                { className: \"row\" },                                  //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    \" Class Level\"                                     //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    this.props.currentLevel                            //\n                )                                                      //\n            ),                                                         //\n            React.createElement(                                       //\n                \"div\",                                                 //\n                { className: \"row\" },                                  //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    \" Class Day\"                                       //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    this.data[\"class\"] && App.Config.week[this.data[\"class\"].day]\n                )                                                      //\n            ),                                                         //\n            React.createElement(                                       //\n                \"div\",                                                 //\n                { className: \"row\" },                                  //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    \" Class Time\"                                      //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"col\" },                              //\n                    this.data[\"class\"] && App.num2time(this.data[\"class\"].startTime),\n                    \"-\",                                               //\n                    this.data[\"class\"] && App.num2time(this.data[\"class\"].endTime)\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/ClassRegisterDetail.component.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/ClassRegisterDetail.component.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAExC,UAAM,EAAE,CAAC,eAAe,CAAC;;AAEzB,iBAAa,cAAG;AACZ,YAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;AACjC,YAAI,SAAS,GAAE,IAAI,CAAC,KAAK,CAAC,SAAS;;AAEnC,cAAM,CAAC,SAAS,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;AAClC,cAAM,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,CAAC,CAAC;;AAEtC,eAAO;AACH,mBAAO,EAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC,GAAG,EAAC,SAAS,EAAC,CAAC;AAC5C,qBAAM,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,GAAG,EAAC,OAAO,EAAC,CAAC;SAC1C;KACJ;;AAED,UAAM,cAAG;AACL,YAAI,KAAK,GAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,qBAAqB;;AAEpD,eAAO;AAAC,cAAE,CAAC,IAAI;cAAC,KAAK,EAAE,KAAM;YACzB;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,KAAK;;iBAAe;gBACnC;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;iBAC1C;aACJ;YACN;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,KAAK;;iBAAmB;gBACvC;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,KAAK,CAAC,YAAY;iBAEtB;aACJ;YACN;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,KAAK;;iBAAiB;gBACrC;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,IAAI,SAAM,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,SAAM,CAAC,GAAG,CAAC;iBAGtD;aACJ;YACN;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,KAAK;;iBAAkB;gBACtC;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,IAAI,SAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,SAAM,CAAC,SAAS,CAAC;;oBAC1D,IAAI,CAAC,IAAI,SAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,SAAM,CAAC,OAAO,CAAC;iBAEvD;aACJ;SAEA;KACb;CACJ,CAAC,uE","file":"/client/app/class.edit/ClassRegisterDetail.component.jsx","sourcesContent":["/**\n * Created on 9/25/15.\n */\n\nCal.ClassRegisterDetail = React.createClass({\n\n    mixins: [ReactMeteorData],\n\n    getMeteorData() {\n        let classId = this.props.classId;\n        let swimmerId= this.props.swimmerId\n\n        Meteor.subscribe(\"class\",classId);\n        Meteor.subscribe(\"swimmer\",swimmerId);\n\n        return {\n            swimmer:DB.Swimmers.findOne({_id:swimmerId}),\n            class:DB.Classes.findOne({_id:classId})\n        }\n    },\n\n    render() {\n        var title= this.props.title || 'Class Register Info'\n\n        return <RC.Card title={title}>\n            <div className=\"row\">\n                <div className=\"col\"> Swimmer</div>\n                <div className=\"col\">\n                    {this.data.swimmer && this.data.swimmer.name}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\"> Class Level</div>\n                <div className=\"col\">\n                    {this.props.currentLevel}\n\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\"> Class Day</div>\n                <div className=\"col\">\n                    {this.data.class && App.Config.week[this.data.class.day]}\n\n\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\"> Class Time</div>\n                <div className=\"col\">\n                    {this.data.class && App.num2time(this.data.class.startTime)}-\n                    {this.data.class && App.num2time(this.data.class.endTime)}\n\n                </div>\n            </div>\n\n        </RC.Card>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/SheduleMeetingPage.jsx                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.SheduleMeetingPage = React.createClass({                           // 5\n    displayName: \"SheduleMeetingPage\",                                 //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 12\n        return React.createElement(                                    // 13\n            \"div\",                                                     //\n            null,                                                      //\n            \"SheduleMeetingPage\"                                       //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/SheduleMeetingPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/SheduleMeetingPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEvC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,UAAM,cAAG;AACL,eAAO;;;;SAA6B;KACvC;CACJ,CAAC,uE","file":"/client/app/class.edit/SheduleMeetingPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\nCal.SheduleMeetingPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    render() {\n        return <div>SheduleMeetingPage</div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/SwimmerItem.jsx                               //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.ClassEditSwimmerItem = React.createClass({                         // 1\n    displayName: 'ClassEditSwimmerItem',                               //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 3\n    getMeteorData: function () {                                       // 4\n                                                                       //\n        var swimmerId = this.props.swimmer._id;                        // 8\n                                                                       //\n        Meteor.subscribe(\"registerInfoBySwimmerId\", swimmerId);        // 10\n                                                                       //\n        return {                                                       // 12\n            classesRegisterInfo: DB.ClassesRegister.find({             // 13\n                swimmerId: swimmerId,                                  // 14\n                status: 'normal', //不显示cancel中的和 change中的              // 15\n                sessionId: App.info && App.info.sessionNow             // 16\n            }).fetch()                                                 //\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 21\n                                                                       //\n        //let href = '/classEditSwimmer/'+this.props.swimmer._id+'/registeredClass'\n        var href = '/classEdit/SwimmerRegisteredClass?swimmerId=' + this.props.swimmer._id;\n                                                                       //\n        return React.createElement(                                    // 27\n            RC.Item,                                                   // 27\n            { className: 'item-text-wrap',                             //\n                href: href,                                            // 28\n                theme: 'icon-left, icon-right ',                       // 29\n                uiClass: 'user, angle-right' },                        // 30\n            this.props.swimmer.name,                                   //\n            this.data.classesRegisterInfo.map(function (register, n) {\n                                                                       //\n                return React.createElement(Cal.ClassEditSwimmerItemClassItem, { registerInfo: register, key: n });\n            })                                                         //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/SwimmerItem.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/SwimmerItem.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEzC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAIZ,YAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;;AAEvC,cAAM,CAAC,SAAS,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;;AAEvD,eAAO;AACH,+BAAmB,EAAE,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;AACzC,yBAAS,EAAE,SAAS;AACpB,sBAAM,EAAC,QAAQ;AACf,yBAAS,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU;aAC7C,CAAC,CAAC,KAAK,EAAE;SACb,CAAC;KACL;;AAED,UAAM,cAAG;;;AAGL,YAAI,IAAI,GAAG,8CAA8C,GAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG;;AAGhF,eAAO;AAAC,cAAE,CAAC,IAAI;cAAC,SAAS,EAAC,gBAAgB;AAC1B,oBAAI,EAAE,IAAK;AACX,qBAAK,EAAC,wBAAwB;AAC9B,uBAAO,EAAC,mBAAmB;YACtC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;YAGpB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,QAAQ,EAAE,CAAC,EAAE;;AAGrD,uBAAO,oBAAC,GAAG,CAAC,6BAA6B,IAAC,YAAY,EAAE,QAAS,EAAC,GAAG,EAAE,CAAE,GACrC;aAEvC,CAAC;SAGA;KACb;CACJ,CAAC,uE","file":"/client/app/class.edit/SwimmerItem.jsx","sourcesContent":["Cal.ClassEditSwimmerItem = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n\n\n        let swimmerId = this.props.swimmer._id;\n\n        Meteor.subscribe(\"registerInfoBySwimmerId\", swimmerId);\n\n        return {\n            classesRegisterInfo: DB.ClassesRegister.find({\n                swimmerId: swimmerId,\n                status:'normal',  //不显示cancel中的和 change中的\n                sessionId: App.info && App.info.sessionNow\n            }).fetch()\n        };\n    },\n\n    render() {\n\n        //let href = '/classEditSwimmer/'+this.props.swimmer._id+'/registeredClass'\n        let href = '/classEdit/SwimmerRegisteredClass?swimmerId='+this.props.swimmer._id\n\n\n        return <RC.Item className=\"item-text-wrap\"\n                        href={href}\n                        theme=\"icon-left, icon-right \"\n                        uiClass=\"user, angle-right\">\n            {this.props.swimmer.name}\n\n            {\n                this.data.classesRegisterInfo.map(function (register, n) {\n\n\n                    return <Cal.ClassEditSwimmerItemClassItem registerInfo={register} key={n}>\n                    </Cal.ClassEditSwimmerItemClassItem>\n\n                })\n            }\n\n        </RC.Item>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/SwimmerItemClassItem.jsx                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.ClassEditSwimmerItemClassItem = React.createClass({                // 1\n    displayName: \"ClassEditSwimmerItemClassItem\",                      //\n                                                                       //\n    propTypes: {                                                       // 2\n        registerInfo: React.PropTypes.object,                          // 3\n        isLink: React.PropTypes.bool                                   // 4\n    },                                                                 //\n    mixins: [ReactMeteorData],                                         // 6\n    getMeteorData: function () {                                       // 7\n                                                                       //\n        //account swimmers classes                                     //\n        //Meteor.subscribe(\"accountWithSwimmersAndClasses\",'account1');\n                                                                       //\n        var registerInfo = this.props.registerInfo;                    // 12\n        var classId = registerInfo.classId;                            // 13\n        var swimmerId = registerInfo.swimmerId;                        // 14\n                                                                       //\n        Meteor.subscribe(\"class\", classId);                            // 16\n        Meteor.subscribe(\"swimmer\", swimmerId);                        // 17\n                                                                       //\n        return {                                                       // 20\n            swimmer: DB.Swimmers.find({ _id: swimmerId }).fetch(),     // 21\n            classInfo: DB.Classes.find({ _id: classId }).fetch()       // 22\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 26\n        var registerInfo = this.props.registerInfo;                    // 27\n                                                                       //\n        var href = '/classEdit/operationBoard?' + 'classId=' + encodeURIComponent(registerInfo.classId) + '&swimmerId=' + registerInfo.swimmerId + '&registerInfoId=' + registerInfo._id;\n                                                                       //\n        return !this.props.isLink ? React.createElement(               // 34\n            \"p\",                                                       //\n            null,                                                      //\n            this.data.classInfo.length ? React.createElement(          //\n                \"span\",                                                //\n                null,                                                  //\n                this.data.classInfo[0].name                            //\n            ) : ''                                                     //\n        ) : this.data.classInfo.length ? React.createElement(          //\n            RC.Item,                                                   // 41\n            { className: \"item-text-wrap\",                             //\n                href: href,                                            // 42\n                theme: \"icon-left, icon-right \",                       // 43\n                uiClass: \"user, angle-right\" },                        // 44\n            this.data.classInfo[0].name                                //\n        ) : '';                                                        //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/SwimmerItemClassItem.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/SwimmerItemClassItem.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,6BAA6B,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAClD,aAAS,EAAE;AACP,oBAAY,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACpC,cAAM,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;KAC/B;AACD,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;;;;AAKZ,YAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;AAC1C,YAAI,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;AACnC,YAAI,SAAS,GAAG,YAAY,CAAC,SAAS;;AAEtC,cAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACnC,cAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAGvC,eAAO;AACH,mBAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,SAAS,EAAC,CAAC,CAAC,KAAK,EAAE;AACnD,qBAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC,KAAK,EAAE;SACrD,CAAC;KACL;;AAED,UAAM,cAAG;AACL,YAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;;AAE1C,YAAI,IAAI,GAAG,4BAA4B,GACjC,UAAU,GAAG,kBAAkB,CAAC,YAAY,CAAC,OAAO,CAAC,GACrD,aAAa,GAAG,YAAY,CAAC,SAAS,GACtC,kBAAkB,GAAG,YAAY,CAAC,GAAG;;AAE3C,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;;;YAEpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG;;;gBACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;aACzB,GAAG,EAAE;SAEhB,GACA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAE;AAAC,cAAE,CAAC,IAAI;cAAC,SAAS,EAAC,gBAAgB;AACtD,oBAAI,EAAE,IAAK;AACX,qBAAK,EAAC,wBAAwB;AAC9B,uBAAO,EAAC,mBAAmB;YAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;SACtB,GAAC,EAAE;KACpB;CACJ,CAAC,CAAC,sE","file":"/client/app/class.edit/SwimmerItemClassItem.jsx","sourcesContent":["Cal.ClassEditSwimmerItemClassItem = React.createClass({\n    propTypes: {\n        registerInfo: React.PropTypes.object,\n        isLink: React.PropTypes.bool\n    },\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        //account swimmers classes\n        //Meteor.subscribe(\"accountWithSwimmersAndClasses\",'account1');\n\n        let registerInfo = this.props.registerInfo\n        let classId = registerInfo.classId;\n        let swimmerId = registerInfo.swimmerId\n\n        Meteor.subscribe(\"class\", classId);\n        Meteor.subscribe(\"swimmer\", swimmerId);\n\n\n        return {\n            swimmer: DB.Swimmers.find({_id: swimmerId}).fetch(),\n            classInfo: DB.Classes.find({_id: classId}).fetch()\n        };\n    },\n\n    render() {\n        let registerInfo = this.props.registerInfo\n\n        let href = '/classEdit/operationBoard?'\n            + 'classId=' + encodeURIComponent(registerInfo.classId)\n            + '&swimmerId=' + registerInfo.swimmerId\n            + '&registerInfoId=' + registerInfo._id\n\n        return !this.props.isLink ? <p>\n            {\n                this.data.classInfo.length ? <span >\n                    {this.data.classInfo[0].name}\n                </span> : ''\n            }\n        </p> :\n            this.data.classInfo.length ?<RC.Item className=\"item-text-wrap\"\n                     href={href}\n                     theme=\"icon-left, icon-right \"\n                     uiClass=\"user, angle-right\">\n                {this.data.classInfo[0].name}\n            </RC.Item>:''\n    }\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/SwimmerListPage.jsx                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.CESwimmerListPage = React.createClass({                            // 1\n    displayName: \"CESwimmerListPage\",                                  //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 3\n    getMeteorData: function () {                                       // 4\n                                                                       //\n        //Meteor.subscribe(\"accountWithSwimmersAndClasses\", 'account1');\n                                                                       //\n        Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());      // 8\n                                                                       //\n        return {                                                       // 10\n            swimmers: DB.Swimmers.find({ accountId: Meteor.userId() }).fetch()\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 15\n                                                                       //\n        //return <div>                                                 //\n        //                                                             //\n        //    <RC.Card title=\"2015 Summer Session\">                    //\n        //                                                             //\n        //    </RC.Card>                                               //\n        //                                                             //\n        //    <RC.List>                                                //\n        //        {this.data.swimmers.map(function (swimmer, n) {      //\n        //                                                             //\n        //            return <RC.Item className=\"item-text-wrap\">      //\n        //                                                             //\n        //                <div className=\"row\">                        //\n        //                                                             //\n        //                    <div className=\"col\">                    //\n        //                        {swimmer.name}                       //\n        //                    </div>                                   //\n        //                                                             //\n        //                    <div className=\"col-50 cal-text-wrap\" >  //\n        //                        <p className=\" item-text-wrap\">      //\n        //                            {swimmer.name}sdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfas        //\n        //                        </p>                                 //\n        //                        <p className=\" cal-text-wrap\">       //\n        //                            {swimmer.name}sdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfas   //\n        //                        </p>                                 //\n        //                                                             //\n        //                    </div>                                   //\n        //                                                             //\n        //                                                             //\n        //                    <div className=\"col cal-text-wrap\">      //\n        //                        {swimmer.name}                       //\n        //                    </div>                                   //\n        //                                                             //\n        //                </div>                                       //\n        //                                                             //\n        //            </RC.Item>                                       //\n        //        })}                                                  //\n        //    </RC.List>                                               //\n        //</div>                                                       //\n                                                                       //\n        //debugger                                                     //\n                                                                       //\n        return React.createElement(                                    // 67\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(RC.Card, { title: \"2015 Summer Session\" }),\n            React.createElement(                                       //\n                RC.List,                                               // 73\n                null,                                                  //\n                this.data.swimmers.map(function (swimmer, n) {         //\n                                                                       //\n                    return React.createElement(Cal.ClassEditSwimmerItem, { swimmer: swimmer, key: n });\n                })                                                     //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/SwimmerListPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/SwimmerListPage.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEtC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;;;AAIZ,cAAM,CAAC,SAAS,CAAC,qBAAqB,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;;AAEzD,eAAO;AACH,oBAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,MAAM,CAAC,MAAM,EAAE,EAAC,CAAC,CAAC,KAAK,EAAE;SACnE,CAAC;KACL;;AAED,UAAM,cAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDL,eAAO;;;YAEH,oBAAC,EAAE,CAAC,IAAI,IAAC,KAAK,EAAC,qBAAqB,GAE1B;YAEV;AAAC,kBAAE,CAAC,IAAI;;gBACH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,OAAO,EAAE,CAAC,EAAE;;AAE1C,2BAAO,oBAAC,GAAG,CAAC,oBAAoB,IAAC,OAAO,EAAE,OAAQ,EAAC,GAAG,EAAE,CAAE,GAC/B;iBAC9B,CAAC;aACI;SACR;KAET;CACJ,CAAC,uE","file":"/client/app/class.edit/SwimmerListPage.jsx","sourcesContent":["Cal.CESwimmerListPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        //Meteor.subscribe(\"accountWithSwimmersAndClasses\", 'account1');\n\n        Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n\n        return {\n            swimmers: DB.Swimmers.find({accountId: Meteor.userId()}).fetch()\n        };\n    },\n\n    render() {\n\n\n\n        //return <div>\n        //\n        //    <RC.Card title=\"2015 Summer Session\">\n        //\n        //    </RC.Card>\n        //\n        //    <RC.List>\n        //        {this.data.swimmers.map(function (swimmer, n) {\n        //\n        //            return <RC.Item className=\"item-text-wrap\">\n        //\n        //                <div className=\"row\">\n        //\n        //                    <div className=\"col\">\n        //                        {swimmer.name}\n        //                    </div>\n        //\n        //                    <div className=\"col-50 cal-text-wrap\" >\n        //                        <p className=\" item-text-wrap\">\n        //                            {swimmer.name}sdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfas\n        //                        </p>\n        //                        <p className=\" cal-text-wrap\">\n        //                            {swimmer.name}sdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfassdfas\n        //                            sdfassdfassdfassdfassdfassdfas\n        //                        </p>\n        //\n        //                    </div>\n        //\n        //\n        //                    <div className=\"col cal-text-wrap\">\n        //                        {swimmer.name}\n        //                    </div>\n        //\n        //                </div>\n        //\n        //            </RC.Item>\n        //        })}\n        //    </RC.List>\n        //</div>\n\n\n\n\n        //debugger\n\n        return <div>\n\n            <RC.Card title=\"2015 Summer Session\">\n\n            </RC.Card>\n\n            <RC.List>\n                {this.data.swimmers.map(function (swimmer, n) {\n\n                    return <Cal.ClassEditSwimmerItem swimmer={swimmer} key={n}>\n                    </Cal.ClassEditSwimmerItem>\n                })}\n            </RC.List>\n        </div>\n\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/SwimmerRegisteredClassPage.jsx                //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.SwimmerRegisteredClassPage = React.createClass({                   // 5\n    displayName: 'SwimmerRegisteredClassPage',                         //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n                                                                       //\n        var registeredClasses = DB.ClassesRegister.find({              // 10\n            swimmerId: this.props.swimmerId,                           // 11\n            status: 'normal', //不显示cancel中的和 change中的                  // 12\n            sessionId: App.info && App.info.sessionRegister            // 13\n        }).fetch();                                                    //\n                                                                       //\n        var nowClasses = DB.ClassesRegister.find({                     // 16\n            swimmerId: this.props.swimmerId,                           // 17\n            status: 'normal', //不显示cancel中的和 change中的                  // 18\n            sessionId: App.info && App.info.sessionNow                 // 19\n        }).fetch();                                                    //\n                                                                       //\n        var historyClasses = DB.ClassesRegister.find({                 // 22\n            swimmerId: this.props.swimmerId,                           // 23\n            status: 'normal', //不显示cancel中的和 change中的                  // 24\n            sessionId: { $nin: [App.info && App.info.sessionNow, App.info && App.info.sessionRegister] }\n                                                                       //\n        }).fetch();                                                    //\n                                                                       //\n        return {                                                       // 31\n            registeredClasses: registeredClasses,                      // 32\n            nowClasses: nowClasses,                                    // 33\n            historyClasses: historyClasses                             // 34\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 38\n        return React.createElement(                                    // 39\n            RC.Tabs,                                                   // 39\n            { className: 'bg-white' },                                 //\n            React.createElement(                                       //\n                'div',                                                 //\n                { label: 'new session', className: 'padding' },        //\n                this.data.registeredClasses && this.data.registeredClasses.map(function (item) {\n                                                                       //\n                    return React.createElement(Cal.ClassEditSwimmerItemClassItem, {\n                        isLink: true,                                  // 47\n                        registerInfo: item                             // 48\n                    });                                                //\n                })                                                     //\n            ),                                                         //\n            React.createElement(                                       //\n                'div',                                                 //\n                { label: 'current session', className: 'padding' },    //\n                this.data.nowClasses && this.data.nowClasses.map(function (item) {\n                                                                       //\n                    return React.createElement(Cal.ClassEditSwimmerItemClassItem, {\n                        isLink: true,                                  // 62\n                        registerInfo: item                             // 63\n                    });                                                //\n                })                                                     //\n            ),                                                         //\n            React.createElement(                                       //\n                'div',                                                 //\n                { label: 'history', className: 'padding' },            //\n                this.data.historyClasses && this.data.historyClasses.map(function (item) {\n                                                                       //\n                    return React.createElement(Cal.ClassEditSwimmerItemClassItem, {\n                        registerInfo: item                             // 76\n                    });                                                //\n                })                                                     //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/SwimmerRegisteredClassPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/SwimmerRegisteredClassPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,0BAA0B,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE/C,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAEZ,YAAI,iBAAiB,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;AAC5C,qBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;AAC/B,kBAAM,EAAC,QAAQ;AACf,qBAAS,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe;SAClD,CAAC,CAAC,KAAK,EAAE,CAAC;;AAEX,YAAI,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;AACrC,qBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;AAC/B,kBAAM,EAAC,QAAQ;AACf,qBAAS,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU;SAC7C,CAAC,CAAC,KAAK,EAAE,CAAC;;AAEX,YAAI,cAAc,GAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC;AACvC,qBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;AAC/B,kBAAM,EAAC,QAAQ;AACf,qBAAS,EAAC,EAAC,IAAI,EAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,EAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,EAAC;;SAE5F,CAAC,CAAC,KAAK,EAAE,CAAC;;AAIX,eAAO;AACH,6BAAiB,EAAC,iBAAiB;AACnC,sBAAU,EAAC,UAAU;AACrB,0BAAc,EAAC,cAAc;SAChC;KACJ;;AAED,UAAM,cAAG;AACL,eAAO;AAAC,cAAE,CAAC,IAAI;cAAC,SAAS,EAAC,UAAU;YAChC;;kBAAK,KAAK,EAAC,aAAa,EAAC,SAAS,EAAC,SAAS;gBAIpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;AAE3E,2BAAO,oBAAC,GAAG,CAAC,6BAA6B;AACrC,8BAAM,EAAE,IAAK;AACT,oCAAY,EAAE,IAAK;sBACrB;iBACT,CAAC;aAKJ;YACN;;kBAAK,KAAK,EAAC,iBAAiB,EAAC,SAAS,EAAC,SAAS;gBAGxC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAK,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;AAE9D,2BAAO,oBAAC,GAAG,CAAC,6BAA6B;AACrC,8BAAM,EAAE,IAAK;AACb,oCAAY,EAAE,IAAK;sBACjB;iBACT,CAAC;aAIJ;YACN;;kBAAK,KAAK,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS;gBAGhC,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE;;AAErE,2BAAO,oBAAC,GAAG,CAAC,6BAA6B;AACrC,oCAAY,EAAE,IAAK;sBACjB;iBACT,CAAC;aAIJ;SACA;KACb;CACJ,CAAC,uE","file":"/client/app/class.edit/SwimmerRegisteredClassPage.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\nCal.SwimmerRegisteredClassPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        var registeredClasses = DB.ClassesRegister.find({\n            swimmerId: this.props.swimmerId,\n            status:'normal',  //不显示cancel中的和 change中的\n            sessionId: App.info && App.info.sessionRegister\n        }).fetch();\n\n        var nowClasses = DB.ClassesRegister.find({\n            swimmerId: this.props.swimmerId,\n            status:'normal',  //不显示cancel中的和 change中的\n            sessionId: App.info && App.info.sessionNow\n        }).fetch();\n\n        var historyClasses=DB.ClassesRegister.find({\n            swimmerId: this.props.swimmerId,\n            status:'normal',  //不显示cancel中的和 change中的\n            sessionId:{$nin:[App.info && App.info.sessionNow , App.info && App.info.sessionRegister]}\n\n        }).fetch();\n\n\n\n        return {\n            registeredClasses:registeredClasses,\n            nowClasses:nowClasses,\n            historyClasses:historyClasses\n        }\n    },\n\n    render() {\n        return <RC.Tabs className=\"bg-white\">\n            <div label=\"new session\" className=\"padding\">\n\n\n                {\n                    this.data.registeredClasses && this.data.registeredClasses.map(function (item) {\n\n                        return <Cal.ClassEditSwimmerItemClassItem\n                            isLink={true}\n                                registerInfo={item}\n                            />\n                    })\n                }\n\n\n\n            </div>\n            <div label=\"current session\" className=\"padding\">\n\n                {\n                    this.data.nowClasses &&  this.data.nowClasses.map(function (item) {\n\n                        return <Cal.ClassEditSwimmerItemClassItem\n                            isLink={true}\n                            registerInfo={item}\n                            />\n                    })\n\n                }\n\n            </div>\n            <div label=\"history\" className=\"padding\">\n\n                {\n                    this.data.historyClasses && this.data.historyClasses.map(function (item) {\n\n                        return <Cal.ClassEditSwimmerItemClassItem\n                            registerInfo={item}\n                            />\n                    })\n\n                }\n\n            </div>\n        </RC.Tabs>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.edit/WriteComment.jsx                              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/11/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.WriteComment = React.createClass({                                 // 5\n    displayName: \"WriteComment\",                                       //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 12\n        return React.createElement(                                    // 13\n            \"div\",                                                     //\n            null,                                                      //\n            \"WriteComment\"                                             //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.edit/WriteComment.jsx","sourceMap":{"version":3,"sources":["/client/app/class.edit/WriteComment.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEjC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,UAAM,cAAG;AACL,eAAO;;;;SAAuB;KACjC;CACJ,CAAC,uE","file":"/client/app/class.edit/WriteComment.jsx","sourcesContent":["/**\n * Created on 9/11/15.\n */\n\nCal.WriteComment = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    render() {\n        return <div>WriteComment</div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/AgreementWaiverPage.jsx                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/17/15.                                                //\n */                                                                    //\n{                                                                      // 4\n    (function () {                                                     //\n        var AgreementWaiverPageStore = undefined;                      // 5\n        Dependency.autorun(function () {                               // 6\n            AgreementWaiverPageStore = Dependency.get('classRegister.AgreementWaiverPage.store');\n        });                                                            //\n                                                                       //\n        Cal.CRAgreementWaiverPage = React.createClass({                // 10\n            displayName: \"CRAgreementWaiverPage\",                      //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 11\n            getMeteorData: function () {                               // 12\n                return {                                               // 13\n                    hasNewSwimmer: AgreementWaiverPageStore.hasNewSwimmer.get(),\n                    swimmerIds: AgreementWaiverPageStore.swimmerIds.get()\n                };                                                     //\n            },                                                         //\n                                                                       //\n            submit: function (e) {                                     // 19\n                e.preventDefault();                                    // 20\n                                                                       //\n                DB.Waiver.insert({                                     // 22\n                    accountId: Meteor.userId(),                        // 23\n                    swimmers: this.data.swimmerIds                     // 24\n                                                                       //\n                }, function (err) {                                    //\n                    if (err) {                                         // 27\n                        console.error(err.error);                      // 28\n                    }                                                  //\n                                                                       //\n                    var href = \"/classRegister/paymentOptionsPage\";    // 31\n                    FlowRouter.go(href);                               // 32\n                });                                                    //\n            },                                                         //\n                                                                       //\n            /*                                                         //\n              __X_______________________________________________________________________________________________________________________________________________\n             Please List ALL Swimmers’ Names                           //\n              __X___________________________________________\t\t__X________________________________________\t      __X__________________________________\n             Name of Parent or Legal Guardian if Under 18           \tSwimmer’s Signature(s)\t\t\t      Date\n             (Sig                                                      //\n               * */                                                    //\n                                                                       //\n            render: function () {                                      // 49\n                return React.createElement(                            // 50\n                    \"div\",                                             //\n                    { className: \"padding\" },                          //\n                    React.createElement(                               //\n                        \"h2\",                                          //\n                        null,                                          //\n                        \"Swimmer Agreement & Waiver (SAW)\"             //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"p\",                                           //\n                        null,                                          //\n                        \"The following enrollment & release agreement (“Agreement”) is effective as of the date written on this form, and shall remain effective for as long as the Swimmer (“Swimmer”) is enrolled in a Calphin Aquatic Club (“CALPHIN”) (formally known as California Dolphin Swim School) class/program. Where the swimmer is under 18 of age, “Swimmer” herein shall mean Swimmer’s parent or guardian (“Parent/Guardian”), where appropriate.\"\n                    ),                                                 //\n                    \"ENROLLMENT & REGISTRATION POLICIES Registration Registration is a first come first served basis, so please plan accordingly. We give all swimmers enrolled in the current session a two weeks advance priority registration period for the upcoming session. All New/Returning swimmers will begin registration the following week. We register swimmers in their current level and will automatically update their levels after testing. The registration fee is due once a year according to the session you first registered. Please provide at least 3 valid class time preferences within your availability. (There is a possibility you could get your last preference depending on class changes) Class schedules are not confirmed at the time of early registration until email confirmations are sent out. Class Schedules Email confirmations will be sent out a week before the next session begins to confirm your upcoming session schedule. If you do not receive an email from us or receive multiple confirmations, please give us a call as soon as possible. The minimum number of swimmers to open a class is 4 for all levels (2 for Bubbler). Classes will be made with every effort to optimize pool usage by combining adjacent levels or rescheduling classes with low enrollment.  Instructors are trained to give customized instructions to each individual swimmer. (i.e. Glider 2 & 3 combined, Sprinter & Racer combined, etc.) Parents must pick up their swimmers on time after class. Additional Fees Tuition must be paid in full at the time of registration for an available class. If your child's level changes causing a price adjustment, you will be contacted and the rate adjustment will be collected. Any price difference or remaining tuition must be paid before attending the first class. Failure to make payment on time will result in a $20 late fee after the second class. Each swimmer is allotted one free permanent schedule change per session. Any additional schedule changes after will result in a $20 fee. Bounced checks are subjected to a $25 charge. Cancellation Cancellations for full refunds need to be submitted 3 days before the session begins. After the cut-off date and the start of the session, the annual registration fee is non-refundable and refunds are subjected to a $30/swimmer/class transaction fee. Club Credit (or in-store credit) is available for future enrollment in Calphin programs without a transaction fee. Once opting for credit, the credited amount cannot be refunded, but can be transferred to family or friends. SWIM LESSONS RULES General Parents are not allowed on deck without Calphin permission. Parent Coach Conferences available upon request. Pictures are not allowed until the last day of class.  Video recording is prohibited at all times. Goggles are mandatory. Caps are mandatory for swimmers with hair length past their ears. Have your caps and goggles on BEFORE class starts. Bring your own gear; borrowing can be a health hazard. Only swim attire can be worn into the pool; NO t-shirts, jeans, street clothes, etc. Rash guards are OK for temperature purposes, but are not recommended unless properly fitted, as it can weigh the swimmer down and make it difficult to swim. Wetsuits are not allowed; they are extremely buoyant & provide a false sense of ability. Before Class Swimmers should use the restroom before class to avoid any unnecessary accidents. Avoid eating or drinking before class or allow one hour between start of swimmer's class and their last meal. Do NOT apply any type of lotion, sunscreen, or oils before entering the water as they react with the chlorine and cause rashes. Restrooms Showers are for RINSING only, please NO shampoo, NO conditioner, and NO soap of any kind. Please help Calphin keep the restrooms nice and clean. Notify the staff if any supplies need to be replenished. Camera phone use is prohibited in the locker rooms. No girls over 4 years old allowed in boys' restroom. No boys over 4 years old allowed in girls' restroom. (2 shower head rinse stations are available on the pool deck) Family bathroom & changing room time is limited to 5 minutes. Missed Classes YOU MUST CALL OR EMAIL (info@calphin.com) THE FRONT DESK AND NOTIFY STAFF OF ANY ABSENCE PRIOR TO THE START TIME OF THE SWIMMER’S CLASS. ONLY THEN WILL YOU BE ELIGIBLE TO RECEIVE A SELF-PRACTICE TICKET OR CLUB CREDIT (with a doctor’s note). We do not offer makeup classes, but Self-Practice will be available for any missed classes (Wednesday 8-9p & Sunday 12-1p) upon advance notification for currently enrolled students. If classes are cancelled due to pool maintenance or accidents, club credit (if more than half of the class is cancelled) or self-practice will be issued, no makeup classes. Self-Practice will be issued for missed classes due to menstruation. If your swimmer is showing symptoms of serious illness, including nausea, please do not attend the class. Only self-practice tickets will be issued for medical related absences without doctor’s notes If a class is missed and excused by a doctor, then a doctor's note must be submitted within two weeks of the first missed class. The note must state the class dates missed to receive credit towards the next session (exams, check-ups, dental hygiene appointments do NOT count as excused and self-practice will be issued). Summer Session Vacation Policy: if 3 or more consecutive classes are missed per family for vacation out of the Bay Area, Club Credit may be received with submission of vacation documentation. (Only valid in Summer.) Self-Practice Calphin cannot accommodate more than 30 swimmers in the small pool, and 150 swimmers in the big pool. Self-practice times are only available to swimmers who are enrolled in the current session. Returning swimmers or friends NOT registered in the current program will NOT be allowed in. Self-practice tickets cannot be redeemed for cash, cannot be transferred, and cannot be extended. Self-practice tickets must be used within the session they are issued. No swim instructors will be available during the practice time to help swimmers. All parents MUST sit on the bench while watching; standing/walking in front of the viewing area, walking on pool deck, or the pathway between pools is prohibited. All swimmers must utilize the pool that they currently take lessons in. Swimmers, who are in Glider 2 class or lower, must swim with an adult (over the age of 18). Parents of Sprinter & higher levels are not allowed in the water. A parent is allowed to supervise only 2 children maximum and must stay within arm’s reach at all times. No personal property (i.e. swim bags, laptops, and strollers) other than towels, water bottles, shoes, and personal kickboards are permitted on the pool deck. No toys or equipment are allowed during self-practice swim other than kickboards. Testing Test week is the third to last class of the session.  Encourage swimmers to do their best as they have been working hard all session! If test week is missed, there will be a make-up evaluation the following week during your regular class time. There are no tests administered the last class of the session. Missing test week will hinder your registration priority. No retests will be conducted for swimmers who have taken the test. CLUB POLICIES & POOL RULES General Use the pool at your own risk when a lifeguard is not on duty and Calphin is not responsible for accidents or injuries. Distracting the attention of the lifeguard is prohibited. Lifeguards are on duty to enforce rules for your safety and to respond to emergencies. Please cooperate with their requests. No running, pushing, or other dangerous horseplay. Please keep calm and follow Calphin staff instructions in an emergency situation. No playing or hanging on lane lines. Management reserves the right to deny use of pool to anyone at any time. Dive only in designated areas under supervision of Calphin certified instructor (not allowed during membership). No glass, food, or drink (except water) in pool area. Smoking, alcoholic beverages and pets are not allowed. Be considerate - no yelling, vulgar language or other loud noises. Remove all bandages and dispose of all chewing gum before entering the pool area. Hair length past swimmers' ears needs to be put up in a swim cap. Children under the age of three are required to use a Calphin approved reusable swim diaper. All swimmers must wear swimsuits that are specifically made for swimming. Street clothes are not allowed. Everyone is responsible for the equipment used and must return it when finished. Personal flotation devices are not allowed. Individuals with severe open cuts or bleeding are prohibited from using the pool. Persons with any type of illness appearing to be unable to care for him or herself will not be allowed in the pool. Viewers must stay out of pool area and sit down on the benches in order to keep pathways clear. Calphin Aquatic Club is not responsible for any lost or stolen items. All valuables and personal property must be locked in the locker rooms (Calphin does NOT provide locks; patrons must bring their own lock). All children 5 years & under are not permitted in big pool. (Unless qualified for appropriate level) Parents are required to remain seated while watching swimming, no loitering on deck allowed during lessons/self-practice. Membership Any outside equipment must be approved by Aquatic Staff (fins, snorkels, and training equipment). Swimmers under 7 years old need to be accompanied by a responsible adult. Inexperienced young swimmers must be within an arm’s reach of an adult. Only tested capable swimmers can use the large deep pool during membership swim. No toys or equipment are allowed during membership swim except kickboards. Membership swimmers must follow the lane use designation and lifeguards' directions. Please be courteous to other swimmers and share lanes when needed. Parking Please be considerate to other patrons and park within the white lines of the single parking spots. There is additional parking available in the Lucky shopping center (near the recycling center). DO NOT park at Motel 6 or behind the white sign; your car will be towed at your own expense. DO NOT park, stop, or leave your car in the red FIRE zone as it is a danger hazard. Make sure to lock your car and hide all valuables as Calphin is not responsible for any lost/stolen items. Please drive with caution for many children and patrons are crossing and there are limited sidewalks. As a swimmer (or parent of), I have been consulted in regards to mine (or my child’s) swim level & mentioned health condition(s). I am aware that adjustments might be made on/after the first lesson to place the swimmer into a swim class that fits best and is the safest. Such adjustments might include a change in level, day, or time of schedule.   __________ (Initials) I give Calphin Aquatic Club full permission to take pictures/videos of my child(ren) listed above for marketing only purposes. I understand that the pictures taken will be used by Calphin Aquatic Club only and will not be distributed to other parties. _________ (Initials) By signing the form below, I certify that the Swimmer is in good health to swim in chlorinated water. I also confirm that the Swimmer have received, understood, and will comply with all the safety rules and club policies (see website www.Calphin.com for complete policy) established by CALPHIN. I, the undersigned, understand and assume all incidental risks involved in swimming and its facility, and agree that CALPHIN cannot be held accountable for any knowledge of any medical conditions of any swimmer that is not listed and communicated. In case of injury to the Swimmer. I, the undersigned, do hereby release, indemnify, hold harmless and waive all claims against the pool facility owners, management organizations, CALPHIN, their officers and employees. I also certify that I have read, understood the foregoing message, and sign this form voluntarily. nature of Parent or Legal Guardian if Under 18)\",\n                    React.createElement(                               //\n                        RC.Button,                                     // 177\n                        { name: \"button\", type: \"submit\",              //\n                            onClick: this.submit,                      // 178\n                            theme: \"full\", buttonColor: \"brand\" },     // 179\n                        \"Confirm\"                                      //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n                                                                       //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/AgreementWaiverPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/AgreementWaiverPage.jsx"],"names":[],"mappings":";;;;;;;;;;;AAGA;;AACI,YAAI,wBAAwB,aAAC;AAC7B,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,oCAAwB,GAAG,UAAU,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;SACxF,CAAC,CAAC;;AAEH,WAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC1C,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;AACZ,uBAAO;AACH,iCAAa,EAAC,wBAAwB,CAAC,aAAa,CAAC,GAAG,EAAE;AAC1D,8BAAU,EAAC,wBAAwB,CAAC,UAAU,CAAC,GAAG,EAAE;iBACvD;aACJ;;AAED,kBAAM,YAAC,CAAC,EAAC;AACL,iBAAC,CAAC,cAAc,EAAE,CAAC;;AAEnB,kBAAE,CAAC,MAAM,CAAC,MAAM,CAAC;AACb,6BAAS,EAAC,MAAM,CAAC,MAAM,EAAE;AACzB,4BAAQ,EAAC,IAAI,CAAC,IAAI,CAAC,UAAU;;iBAEhC,EAAC,UAAS,GAAG,EAAC;AACX,wBAAG,GAAG,EAAC;AACH,+BAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;qBAC3B;;AAED,wBAAI,IAAI,GAAC,mCAAmC;AAC5C,8BAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;iBACvB,CAAC;aACL;;;;;;;;;;AAeD,kBAAM,EAAE,YAAY;AAChB,uBAAO;;sBAAK,SAAS,EAAC,SAAS;oBAE3B;;;;qBAAyC;oBAGzC;;;;qBAGI;;oBAuHJ;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC1B,mCAAO,EAAE,IAAI,CAAC,MAAO;AACrB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;iBAGX;aACT;;SAEJ,CAAC,CAAC;;CACN,wE","file":"/client/app/class.register/AgreementWaiverPage.jsx","sourcesContent":["/**\n * Created on 10/17/15.\n */\n{\n    let AgreementWaiverPageStore;\n    Dependency.autorun(function () {\n        AgreementWaiverPageStore = Dependency.get('classRegister.AgreementWaiverPage.store');\n    });\n\n    Cal.CRAgreementWaiverPage = React.createClass({\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            return {\n                hasNewSwimmer:AgreementWaiverPageStore.hasNewSwimmer.get(),\n                swimmerIds:AgreementWaiverPageStore.swimmerIds.get()\n            }\n        },\n\n        submit(e){\n            e.preventDefault();\n\n            DB.Waiver.insert({\n                accountId:Meteor.userId(),\n                swimmers:this.data.swimmerIds\n\n            },function(err){\n                if(err){\n                    console.error(err.error)\n                }\n\n                let href=\"/classRegister/paymentOptionsPage\"\n                FlowRouter.go(href);\n            })\n        },\n\n\n        /*\n\n         __X_______________________________________________________________________________________________________________________________________________\n         Please List ALL Swimmers’ Names\n\n         __X___________________________________________\t\t__X________________________________________\t      __X__________________________________\n         Name of Parent or Legal Guardian if Under 18           \tSwimmer’s Signature(s)\t\t\t      Date\n         (Sig\n\n\n         * */\n\n        render: function () {\n            return <div className=\"padding\">\n\n                <h2>Swimmer Agreement & Waiver (SAW)</h2>\n\n\n                <p>\n                    The following enrollment & release agreement (“Agreement”) is effective as of the date written on this form, and shall remain effective for as long as the Swimmer (“Swimmer”) is enrolled in a Calphin Aquatic Club (“CALPHIN”) (formally known as California Dolphin Swim School) class/program. Where the swimmer is under 18 of age, “Swimmer” herein shall mean Swimmer’s parent or guardian (“Parent/Guardian”), where appropriate.\n\n                </p>\n\n                ENROLLMENT & REGISTRATION POLICIES\n                Registration\n                Registration is a first come first served basis, so please plan accordingly.\n                We give all swimmers enrolled in the current session a two weeks advance priority registration period for the upcoming session.\n                All New/Returning swimmers will begin registration the following week.\n                We register swimmers in their current level and will automatically update their levels after testing.\n                The registration fee is due once a year according to the session you first registered.\n                Please provide at least 3 valid class time preferences within your availability. (There is a possibility you could get your last preference depending on class changes)\n                Class schedules are not confirmed at the time of early registration until email confirmations are sent out.\n                Class Schedules\n                Email confirmations will be sent out a week before the next session begins to confirm your upcoming session schedule. If you do not receive an email from us or receive multiple confirmations, please give us a call as soon as possible.\n                The minimum number of swimmers to open a class is 4 for all levels (2 for Bubbler).\n                Classes will be made with every effort to optimize pool usage by combining adjacent levels or rescheduling classes with low enrollment.  Instructors are trained to give customized instructions to each individual swimmer. (i.e. Glider 2 & 3 combined, Sprinter & Racer combined, etc.)\n                Parents must pick up their swimmers on time after class.\n                Additional Fees\n                Tuition must be paid in full at the time of registration for an available class.\n                If your child's level changes causing a price adjustment, you will be contacted and the rate adjustment will be collected.\n                Any price difference or remaining tuition must be paid before attending the first class. Failure to make payment on time will result in a $20 late fee after the second class.\n                Each swimmer is allotted one free permanent schedule change per session. Any additional schedule changes after will result in a $20 fee.\n                Bounced checks are subjected to a $25 charge.\n                Cancellation\n                Cancellations for full refunds need to be submitted 3 days before the session begins. After the cut-off date and the start of the session, the annual registration fee is non-refundable and refunds are subjected to a $30/swimmer/class transaction fee.\n                Club Credit (or in-store credit) is available for future enrollment in Calphin programs without a transaction fee. Once opting for credit, the credited amount cannot be refunded, but can be transferred to family or friends.\n\n                SWIM LESSONS RULES\n                General\n                Parents are not allowed on deck without Calphin permission. Parent Coach Conferences available upon request.\n                Pictures are not allowed until the last day of class.  Video recording is prohibited at all times.\n                Goggles are mandatory. Caps are mandatory for swimmers with hair length past their ears.\n                Have your caps and goggles on BEFORE class starts. Bring your own gear; borrowing can be a health hazard.\n                Only swim attire can be worn into the pool; NO t-shirts, jeans, street clothes, etc.\n                Rash guards are OK for temperature purposes, but are not recommended unless properly fitted, as it can weigh the swimmer down and make it difficult to swim.\n                Wetsuits are not allowed; they are extremely buoyant & provide a false sense of ability.\n                Before Class\n                Swimmers should use the restroom before class to avoid any unnecessary accidents.\n                Avoid eating or drinking before class or allow one hour between start of swimmer's class and their last meal.\n                Do NOT apply any type of lotion, sunscreen, or oils before entering the water as they react with the chlorine and cause rashes.\n                Restrooms\n                Showers are for RINSING only, please NO shampoo, NO conditioner, and NO soap of any kind.\n                Please help Calphin keep the restrooms nice and clean. Notify the staff if any supplies need to be replenished.\n                Camera phone use is prohibited in the locker rooms.\n                No girls over 4 years old allowed in boys' restroom. No boys over 4 years old allowed in girls' restroom. (2 shower head rinse stations are available on the pool deck)\n                Family bathroom & changing room time is limited to 5 minutes.\n                Missed Classes\n                YOU MUST CALL OR EMAIL (info@calphin.com) THE FRONT DESK AND NOTIFY STAFF OF ANY ABSENCE PRIOR TO THE START TIME OF THE SWIMMER’S CLASS. ONLY THEN WILL YOU BE ELIGIBLE TO RECEIVE A SELF-PRACTICE TICKET OR CLUB CREDIT (with a doctor’s note).\n                We do not offer makeup classes, but Self-Practice will be available for any missed classes (Wednesday 8-9p & Sunday 12-1p) upon advance notification for currently enrolled students.\n                If classes are cancelled due to pool maintenance or accidents, club credit (if more than half of the class is cancelled) or self-practice will be issued, no makeup classes.\n                Self-Practice will be issued for missed classes due to menstruation.\n                If your swimmer is showing symptoms of serious illness, including nausea, please do not attend the class. Only self-practice tickets will be issued for medical related absences without doctor’s notes\n                If a class is missed and excused by a doctor, then a doctor's note must be submitted within two weeks of the first missed class. The note must state the class dates missed to receive credit towards the next session (exams, check-ups, dental hygiene appointments do NOT count as excused and self-practice will be issued).\n                Summer Session Vacation Policy: if 3 or more consecutive classes are missed per family for vacation out of the Bay Area, Club Credit may be received with submission of vacation documentation. (Only valid in Summer.)\n                Self-Practice\n                Calphin cannot accommodate more than 30 swimmers in the small pool, and 150 swimmers in the big pool.\n                Self-practice times are only available to swimmers who are enrolled in the current session. Returning swimmers or friends NOT registered in the current program will NOT be allowed in.\n                Self-practice tickets cannot be redeemed for cash, cannot be transferred, and cannot be extended.\n                Self-practice tickets must be used within the session they are issued.\n                No swim instructors will be available during the practice time to help swimmers.\n                All parents MUST sit on the bench while watching; standing/walking in front of the viewing area, walking on pool deck, or the pathway between pools is prohibited.\n                All swimmers must utilize the pool that they currently take lessons in.\n                Swimmers, who are in Glider 2 class or lower, must swim with an adult (over the age of 18). Parents of Sprinter & higher levels are not allowed in the water.\n                A parent is allowed to supervise only 2 children maximum and must stay within arm’s reach at all times.\n                No personal property (i.e. swim bags, laptops, and strollers) other than towels, water bottles, shoes, and personal kickboards are permitted on the pool deck.\n                No toys or equipment are allowed during self-practice swim other than kickboards.\n\n                Testing\n                Test week is the third to last class of the session.  Encourage swimmers to do their best as they have been working hard all session!\n                If test week is missed, there will be a make-up evaluation the following week during your regular class time. There are no tests administered the last class of the session. Missing test week will hinder your registration priority.\n                No retests will be conducted for swimmers who have taken the test.\n\n                CLUB POLICIES & POOL RULES\n                General\n                Use the pool at your own risk when a lifeguard is not on duty and Calphin is not responsible for accidents or injuries.\n                Distracting the attention of the lifeguard is prohibited. Lifeguards are on duty to enforce rules for your safety and to respond to emergencies. Please cooperate with their requests.\n                No running, pushing, or other dangerous horseplay.\n                Please keep calm and follow Calphin staff instructions in an emergency situation.\n                No playing or hanging on lane lines.\n                Management reserves the right to deny use of pool to anyone at any time.\n                Dive only in designated areas under supervision of Calphin certified instructor (not allowed during membership).\n                No glass, food, or drink (except water) in pool area.\n                Smoking, alcoholic beverages and pets are not allowed.\n                Be considerate - no yelling, vulgar language or other loud noises.\n                Remove all bandages and dispose of all chewing gum before entering the pool area.\n                Hair length past swimmers' ears needs to be put up in a swim cap.\n                Children under the age of three are required to use a Calphin approved reusable swim diaper.\n                All swimmers must wear swimsuits that are specifically made for swimming. Street clothes are not allowed.\n                Everyone is responsible for the equipment used and must return it when finished.\n                Personal flotation devices are not allowed.\n                Individuals with severe open cuts or bleeding are prohibited from using the pool.\n                Persons with any type of illness appearing to be unable to care for him or herself will not be allowed in the pool.\n                Viewers must stay out of pool area and sit down on the benches in order to keep pathways clear.\n                Calphin Aquatic Club is not responsible for any lost or stolen items. All valuables and personal property must be locked in the locker rooms (Calphin does NOT provide locks; patrons must bring their own lock).\n                All children 5 years & under are not permitted in big pool. (Unless qualified for appropriate level)\n                Parents are required to remain seated while watching swimming, no loitering on deck allowed during lessons/self-practice.\n                Membership\n                Any outside equipment must be approved by Aquatic Staff (fins, snorkels, and training equipment).\n                Swimmers under 7 years old need to be accompanied by a responsible adult.\n                Inexperienced young swimmers must be within an arm’s reach of an adult.\n                Only tested capable swimmers can use the large deep pool during membership swim.\n                No toys or equipment are allowed during membership swim except kickboards.\n                Membership swimmers must follow the lane use designation and lifeguards' directions.\n                Please be courteous to other swimmers and share lanes when needed.\n                Parking\n                Please be considerate to other patrons and park within the white lines of the single parking spots.\n                There is additional parking available in the Lucky shopping center (near the recycling center).\n                DO NOT park at Motel 6 or behind the white sign; your car will be towed at your own expense.\n                DO NOT park, stop, or leave your car in the red FIRE zone as it is a danger hazard.\n                Make sure to lock your car and hide all valuables as Calphin is not responsible for any lost/stolen items.\n                Please drive with caution for many children and patrons are crossing and there are limited sidewalks.\n                As a swimmer (or parent of), I have been consulted in regards to mine (or my child’s) swim level & mentioned health condition(s). I am aware that adjustments might be made on/after the first lesson to place the swimmer into a swim class that fits best and is the safest. Such adjustments might include a change in level, day, or time of schedule.   __________ (Initials)\n\n                I give Calphin Aquatic Club full permission to take pictures/videos of my child(ren) listed above for marketing only purposes. I understand that the pictures taken will be used by Calphin Aquatic Club only and will not be distributed to other parties. _________ (Initials)\n\n                By signing the form below, I certify that the Swimmer is in good health to swim in chlorinated water. I also confirm that the Swimmer have received, understood, and will comply with all the safety rules and club policies (see website www.Calphin.com for complete policy) established by CALPHIN. I, the undersigned, understand and assume all incidental risks involved in swimming and its facility, and agree that CALPHIN cannot be held accountable for any knowledge of any medical conditions of any swimmer that is not listed and communicated. In case of injury to the Swimmer. I, the undersigned, do hereby release, indemnify, hold harmless and waive all claims against the pool facility owners, management organizations, CALPHIN, their officers and employees. I also certify that I have read, understood the foregoing message, and sign this form voluntarily.\n\n\n                nature of Parent or Legal Guardian if Under 18)\n\n                <RC.Button name=\"button\" type=\"submit\"\n                            onClick={this.submit}\n                            theme=\"full\" buttonColor=\"brand\">\n                     Confirm\n                 </RC.Button>\n\n\n            </div>\n        }\n\n    });\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/AgreementWaiverPage.store.jsx             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/18/15.                                                //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    //waiver form 判断及处理                                                //\n                                                                       //\n    Dependency.add('classRegister.AgreementWaiverPage.store', new function () {\n                                                                       //\n        var self = this;                                               // 11\n                                                                       //\n        self.getShoppingCart = function () {                           // 13\n            return DB.ShoppingCart.findOne({                           // 14\n                status: 'active',                                      // 15\n                type: 'register'                                       // 16\n            });                                                        //\n        };                                                             //\n                                                                       //\n        //是否包含第一次第一次注册的swimmer                                         //\n        self.hasNewSwimmer = new ReactiveVar(true);                    // 21\n                                                                       //\n        self.swimmerIds = new ReactiveVar([]);                         // 23\n                                                                       //\n        Meteor.startup(function () {                                   // 26\n                                                                       //\n            Tracker.autorun(function () {                              // 28\n                var shoppingCart = self.getShoppingCart();             // 29\n                                                                       //\n                var items = shoppingCart && shoppingCart.items;        // 31\n                                                                       //\n                var hasNewSwimmer = _.some(items, function (item) {    // 33\n                    return item.isFistTime == true;                    // 34\n                });                                                    //\n                self.hasNewSwimmer.set(hasNewSwimmer);                 // 36\n                                                                       //\n                var ids = _.map(items, function (item) {               // 39\n                    return item.swimmerId;                             // 40\n                });                                                    //\n                ids = _.uniq(ids);                                     // 42\n                                                                       //\n                self.swimmerIds.set(ids);                              // 44\n                                                                       //\n                console.log('swimmerIds', ids);                        // 47\n            });                                                        //\n        });                                                            //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/AgreementWaiverPage.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/AgreementWaiverPage.store.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAKA;;;AAGI,cAAU,CAAC,GAAG,CAAC,yCAAyC,EAAE,IAAI,YAAY;;AAEtE,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,CAAC,eAAe,GAAG,YAAY;AAC/B,mBAAO,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC;AAC3B,sBAAM,EAAE,QAAQ;AAChB,oBAAI,EAAE,UAAU;aACnB,CAAC;SACL;;;AAGD,YAAI,CAAC,aAAa,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC;;AAE1C,YAAI,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC;;AAGrC,cAAM,CAAC,OAAO,CAAC,YAAY;;AAEvB,mBAAO,CAAC,OAAO,CAAC,YAAY;AACxB,oBAAI,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE;;AAEzC,oBAAI,KAAK,GAAG,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC;;AAE/C,oBAAI,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE;AAC9C,2BAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;iBAClC,CAAC;AACF,oBAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC;;AAGrC,oBAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,IAAI,EAAE;AACnC,2BAAO,IAAI,CAAC,SAAS;iBACxB,CAAC;AACF,mBAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAElB,oBAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;;AAGxB,uBAAO,CAAC,GAAG,CAAC,YAAY,EAAC,GAAG,CAAC;aAChC,CAAC;SAEL,CAAC;KAGL,GAAC;CAEL,wE","file":"/client/app/class.register/AgreementWaiverPage.store.jsx","sourcesContent":["/**\n * Created on 10/18/15.\n */\n\n\n{\n    //waiver form 判断及处理\n\n    Dependency.add('classRegister.AgreementWaiverPage.store', new function () {\n\n        var self = this;\n\n        self.getShoppingCart = function () {\n            return DB.ShoppingCart.findOne({\n                status: 'active',\n                type: 'register'\n            })\n        }\n\n        //是否包含第一次第一次注册的swimmer\n        self.hasNewSwimmer = new ReactiveVar(true)\n\n        self.swimmerIds = new ReactiveVar([])\n\n\n        Meteor.startup(function () {\n\n            Tracker.autorun(function () {\n                var shoppingCart = self.getShoppingCart()\n\n                var items = shoppingCart && shoppingCart.items;\n\n                var hasNewSwimmer = _.some(items, function (item) {\n                    return item.isFistTime == true;\n                })\n                self.hasNewSwimmer.set(hasNewSwimmer)\n\n\n                var ids = _.map(items, function (item) {\n                    return item.swimmerId\n                })\n                ids = _.uniq(ids);\n\n                self.swimmerIds.set(ids)\n\n\n                console.log('swimmerIds',ids)\n            })\n\n        })\n\n\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/RegBillingPage.jsx                        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/19/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    (function () {                                                     //\n                                                                       //\n        var AgreementWaiverPageStore = undefined;                      // 7\n        Dependency.autorun(function () {                               // 8\n            AgreementWaiverPageStore = Dependency.get('classRegister.AgreementWaiverPage.store');\n        });                                                            //\n                                                                       //\n        Cal.CRRegBillingPage = React.createClass({                     // 13\n            displayName: 'CRRegBillingPage',                           //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 15\n            getMeteorData: function () {                               // 16\n                Meteor.subscribe(\"activeShoppingCart\");                // 17\n                                                                       //\n                return {                                               // 19\n                    //当前的 ShoppingCart                                 //\n                    ShoppingCart: DB.ShoppingCart.findOne({            // 21\n                        status: 'active',                              // 22\n                        type: 'register'                               // 23\n                    }),                                                //\n                    hasNewSwimmer: AgreementWaiverPageStore.hasNewSwimmer.get()\n                };                                                     //\n            },                                                         //\n                                                                       //\n            //actions                                                  //\n            'delete': function (shoppingCartItem) {                    // 30\n                                                                       //\n                console.log(shoppingCartItem);                         // 32\n                                                                       //\n                Meteor.call('delete_class_from_cart', {                // 34\n                    classId: shoppingCartItem.class1._id,              // 35\n                    swimmerId: shoppingCartItem.swimmer._id,           // 36\n                    cartId: this.data.ShoppingCart._id                 // 37\n                }, function (err, result) {                            //\n                    if (err) {                                         // 39\n                        console.error(err);                            // 40\n                        return;                                        // 41\n                    }                                                  //\n                });                                                    //\n            },                                                         //\n                                                                       //\n            //如果有new swimmer就 waiver form 否则 payment option            //\n            goToNextPage: function (e) {                               // 49\n                e.preventDefault();                                    // 50\n                                                                       //\n                var hasNewSwimmer = this.data.hasNewSwimmer;           // 52\n                                                                       //\n                console.log('hasNewSwimmer', hasNewSwimmer);           // 54\n                if (hasNewSwimmer) {                                   // 55\n                                                                       //\n                    var href = '/classRegister/waiver';                // 57\n                    FlowRouter.go(href);                               // 58\n                } else {                                               //\n                    var href = '/classRegister/paymentOptionsPage';    // 61\n                                                                       //\n                    FlowRouter.go(href);                               // 63\n                }                                                      //\n            },                                                         //\n            render: function () {                                      // 68\n                                                                       //\n                var self = this;                                       // 70\n                var items = this.data.ShoppingCart && this.data.ShoppingCart.items;\n                                                                       //\n                debugger;                                              // 73\n                if (!items || !items.length) return React.createElement(\n                    'div',                                             //\n                    { className: 'padding' },                          //\n                    'you have not added item in shopping cart'         //\n                );                                                     //\n                                                                       //\n                return React.createElement(                            // 78\n                    'div',                                             //\n                    { className: 'padding' },                          //\n                    React.createElement(                               //\n                        'div',                                         //\n                        { className: 'row' },                          //\n                        React.createElement(                           //\n                            'div',                                     //\n                            { className: 'col' },                      //\n                            'Student'                                  //\n                        ),                                             //\n                        React.createElement(                           //\n                            'div',                                     //\n                            { className: 'col' },                      //\n                            'Class'                                    //\n                        ),                                             //\n                        React.createElement(                           //\n                            'div',                                     //\n                            { className: 'col' },                      //\n                            'Amt'                                      //\n                        ),                                             //\n                        React.createElement('div', { className: 'col' })\n                    ),                                                 //\n                    items.map(function (item, index, all) {            //\n                                                                       //\n                        return React.createElement(                    // 88\n                            'div',                                     //\n                            { className: 'row', key: index },          //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                item.swimmer.name                      //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                item.class1.name                       //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                item.class1.price                      //\n                            ),                                         //\n                            !item.isBookTheSameTime ? React.createElement(\n                                'div',                                 //\n                                { className: 'col', onClick: self['delete'].bind(self, item) },\n                                'Delete'                               //\n                            ) : React.createElement('div', { className: 'col' })\n                        );                                             //\n                    }),                                                //\n                    React.createElement('br', null),                   //\n                    React.createElement('br', null),                   //\n                    React.createElement(                               //\n                        RC.Button,                                     // 106\n                        { name: 'button', type: 'submit',              //\n                            onClick: this.goToNextPage,                // 107\n                            theme: 'full', buttonColor: 'brand' },     // 108\n                        'Process To Checkout'                          //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/RegBillingPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/RegBillingPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/RegBillingPage.jsx","sourcesContent":["/**\n * Created on 9/19/15.\n */\n\n{\n\n    let AgreementWaiverPageStore;\n    Dependency.autorun(function () {\n        AgreementWaiverPageStore = Dependency.get('classRegister.AgreementWaiverPage.store');\n    });\n\n\n    Cal.CRRegBillingPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n            Meteor.subscribe(\"activeShoppingCart\");\n\n            return {\n                //当前的 ShoppingCart\n                ShoppingCart: DB.ShoppingCart.findOne({\n                    status:'active',\n                    type:'register'\n                }),\n                hasNewSwimmer:AgreementWaiverPageStore.hasNewSwimmer.get()\n            }\n        },\n\n        //actions\n        delete(shoppingCartItem){\n\n            console.log(shoppingCartItem)\n\n            Meteor.call('delete_class_from_cart',{\n                classId :shoppingCartItem.class1._id,\n                swimmerId :shoppingCartItem.swimmer._id,\n                cartId:this.data.ShoppingCart._id\n            },function(err, result){\n                if(err){\n                    console.error(err)\n                    return;\n                }\n\n            })\n\n        },\n\n        //如果有new swimmer就 waiver form 否则 payment option\n        goToNextPage(e){\n            e.preventDefault();\n\n            var hasNewSwimmer= this.data.hasNewSwimmer\n\n            console.log('hasNewSwimmer', hasNewSwimmer)\n            if(hasNewSwimmer){\n\n                let href= '/classRegister/waiver'\n                FlowRouter.go(href);\n\n            }else{\n                let href= '/classRegister/paymentOptionsPage'\n\n                FlowRouter.go(href);\n\n            }\n\n        },\n        render() {\n\n            var self = this;\n            let items = this.data.ShoppingCart && this.data.ShoppingCart.items\n\n            debugger\n            if (!items || !items.length) return <div className=\"padding\">\n                you have not added item in shopping cart\n            </div>;\n\n            return <div className=\"padding\">\n                <div className=\"row\">\n                    <div className=\"col\">Student</div>\n                    <div className=\"col\">Class</div>\n                    <div className=\"col\">Amt</div>\n                    <div className=\"col\"></div>\n                </div>\n                {\n                    items.map(function (item, index, all) {\n\n                        return <div className=\"row\" key={index}>\n                            <div className=\"col\">{item.swimmer.name}</div>\n                            <div className=\"col\">{item.class1.name}</div>\n                            <div className=\"col\">{item.class1.price}</div>\n                            {\n                                !item.isBookTheSameTime?\n                                    <div className=\"col\" onClick={self.delete.bind(self,item)}>Delete</div>\n                                    :<div className=\"col\"></div>\n\n                            }\n\n                        </div>\n                    })\n\n\n                }\n\n                <br/><br/>\n                    <RC.Button name=\"button\" type=\"submit\"\n                               onClick={this.goToNextPage}\n                               theme=\"full\" buttonColor=\"brand\">\n                        Process To Checkout\n                    </RC.Button>\n\n\n            </div>\n        }\n    })\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/SelectClassEditPage.jsx                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n                                                                       //\n{                                                                      // 3\n    (function () {                                                     //\n        //let CRSelectClassEditPageStoreClass;                         //\n        //Dependency.autorun(function () {                             //\n        //    CRSelectClassEditPageStoreClass = Dependency.get('classRegister.CRSelectClassEditPage.storeClass');\n        //});                                                          //\n        var PageStore = undefined;                                     // 8\n        Dependency.autorun(function () {                               // 9\n            PageStore = Dependency.get('classRegister.CRSelectClassEditPage.store');\n        });                                                            //\n                                                                       //\n        function getShoppingItem(cart, swimmerId, classId) {           // 16\n            if (!cart || !cart.items) return;                          // 17\n            var items = cart.items;                                    // 18\n                                                                       //\n            for (var i = 0; i < items.length; i++) {                   // 20\n                if (items[i].swimmerId == swimmerId && items[i].classId == classId) {\n                    return items[i];                                   // 24\n                }                                                      //\n            }                                                          //\n            return null;                                               // 27\n        }                                                              //\n                                                                       //\n        Cal.CRSelectClassEditPage = React.createClass({                // 31\n            displayName: \"CRSelectClassEditPage\",                      //\n                                                                       //\n            propTypes: {                                               // 32\n                cartId: React.PropTypes.string,                        // 33\n                swimmerId: React.PropTypes.string,                     // 34\n                classId: React.PropTypes.string,                       // 35\n                preferenceNum: React.PropTypes.number //preferenceNumber\n                                                                       //\n            },                                                         //\n            mixins: [ReactMeteorData],                                 // 39\n                                                                       //\n            getMeteorData: function () {                               // 41\n                                                                       //\n                //////////////////subscribe/////////////////////////   //\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                //Meteor.subscribe(\"appInfo\");                         //\n                Meteor.subscribe(\"classes\");                           // 46\n                Meteor.subscribe(\"activeShoppingCart\");                // 47\n                //Meteor.subscribe(\"accountShoppingCart\");             //\n                                                                       //\n                //var PageStore = new CRSelectClassEditPageStoreClass;\n                                                                       //\n                var data = {                                           // 55\n                                                                       //\n                    cart: PageStore.cart.get(),                        // 57\n                                                                       //\n                    //account: Meteor.users.find().fetch(),            //\n                    currentSwimmer: PageStore.currentSwimmer.get(),    // 60\n                    currentClass: PageStore.currentClass.get(),        // 61\n                                                                       //\n                    currentLevel: PageStore.currentLevel.get(), //next level\n                                                                       //\n                    //should wait for currentSwimmer                   //\n                    avaiableDays: PageStore.avaiableDays.get(),        // 67\n                    avaiableTimes: PageStore.avaiableTimes.get(),      // 68\n                    currentDay: PageStore.currentDay.get(),            // 69\n                    currentTime: PageStore.currentTime.get()           // 70\n                                                                       //\n                };                                                     //\n                                                                       //\n                //currentStep: PageStore.currentStep.get(),            //\n                                                                       //\n                //一次选课流程的所有信息                                          //\n                //selectedClasses: PageStore.selectedClasses.get()     //\n                                                                       //\n                //debugger                                             //\n                return data;                                           // 80\n            },                                                         //\n                                                                       //\n            componentWillMount: function () {                          // 85\n                ///         ///PASS  props value to store              //\n                Dispatcher.dispatch({                                  // 87\n                    actionType: 'CRSelectClassEditPage_PROPS_UPDATE',  // 88\n                    props: this.props                                  // 89\n                });                                                    //\n            },                                                         //\n            formSubmit: function (e) {                                 // 93\n                e.preventDefault();                                    // 94\n                                                                       //\n                Dispatcher.dispatch({                                  // 96\n                    actionType: 'CRSelectClassEditPage_CLASS_SELECT',  // 97\n                    props: this.props                                  // 98\n                });                                                    //\n            },                                                         //\n                                                                       //\n            ///////////////actions////////////////                     //\n                                                                       //\n            render: function () {                                      // 106\n                                                                       //\n                var items = this.data.cart && this.data.cart.items;    // 108\n                var item = _.findWhere(items, {                        // 109\n                    swimmerId: this.props.swimmerId,                   // 110\n                    classId: this.props.classId                        // 111\n                });                                                    //\n                console.log(item);                                     // 113\n                //debugger                                             //\n                                                                       //\n                return React.createElement(                            // 117\n                    \"div\",                                             //\n                    null,                                              //\n                    React.createElement(                               //\n                        RC.Card,                                       // 119\n                        { className: \"padding\" },                      //\n                        React.createElement(                           //\n                            \"h4\",                                      //\n                            { className: \"brand\" },                    //\n                            \"Register Class Edit Preference\",          //\n                            this.props.preferenceNum                   //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            null,                                      //\n                            \"now :\",                                   //\n                            item && item['class' + this.props.preferenceNum] && item['class' + this.props.preferenceNum].name\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            null,                                      //\n                            \"changed :\",                               //\n                            this.data.currentClass && this.data.currentClass.name\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Form,                                       // 132\n                        { ref: \"myForm\", onSubmit: this.formSubmit },  //\n                        React.createElement(                           //\n                            RC.Item,                                   // 134\n                            { uiColor: \"brand1\" },                     //\n                            \"Swimmer: \",                               //\n                            this.data.currentSwimmer && this.data.currentSwimmer.name\n                        ),                                             //\n                        React.createElement(                           //\n                            RC.Item,                                   // 137\n                            { uiColor: \"brand1\" },                     //\n                            \"Level: \",                                 //\n                            this.data.currentLevel                     //\n                        ),                                             //\n                        React.createElement(Cal.SelectDay, {           //\n                            avaiableDays: this.data.avaiableDays,      // 142\n                            currentDay: this.data.currentDay,          // 143\n                            changeMessage: \"CRSelectClassEditPage_DAY_CHANGE\"\n                        }),                                            //\n                        React.createElement(Cal.SelectTime, {          //\n                            avaiableTimes: this.data.avaiableTimes,    // 147\n                            currentTime: this.data.currentTime,        // 148\n                            changeMessage: \"CRSelectClassEditPage_TIME_CHANGE\"\n                        }),                                            //\n                        React.createElement(                           //\n                            RC.Button,                                 // 152\n                            { name: \"button\", type: \"submit\",          //\n                                onClick: this.formSubmit,              // 153\n                                theme: \"full\", buttonColor: \"brand\" },\n                            this.data.currentStep == 1 ? 'Book' : 'Select'\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n                                                                       //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/SelectClassEditPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/SelectClassEditPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassEditPage.jsx","sourcesContent":["\n\n{\n    //let CRSelectClassEditPageStoreClass;\n    //Dependency.autorun(function () {\n    //    CRSelectClassEditPageStoreClass = Dependency.get('classRegister.CRSelectClassEditPage.storeClass');\n    //});\n    let PageStore;\n    Dependency.autorun(function () {\n        PageStore = Dependency.get('classRegister.CRSelectClassEditPage.store');\n    });\n\n\n\n\n    function getShoppingItem(cart,swimmerId, classId){\n        if(!cart || !cart.items) return;\n        var items = cart.items\n\n        for(var i=0;i<items.length;i++){\n            if(items[i].swimmerId ==swimmerId\n                &&items[i].classId == classId\n            ){\n                return items[i]\n            }\n        }\n        return null\n    }\n\n\n    Cal.CRSelectClassEditPage = React.createClass({\n        propTypes:{\n            cartId:React.PropTypes.string,\n            swimmerId:React.PropTypes.string,\n            classId:React.PropTypes.string,\n            preferenceNum:React.PropTypes.number //preferenceNumber\n\n        },\n        mixins: [ReactMeteorData],\n\n        getMeteorData() {\n\n            //////////////////subscribe/////////////////////////\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            //Meteor.subscribe(\"appInfo\");\n            Meteor.subscribe(\"classes\");\n            Meteor.subscribe(\"activeShoppingCart\");\n            //Meteor.subscribe(\"accountShoppingCart\");\n\n\n            //var PageStore = new CRSelectClassEditPageStoreClass;\n\n\n\n            var data = {\n\n                cart:PageStore.cart.get(),\n\n                //account: Meteor.users.find().fetch(),\n                currentSwimmer: PageStore.currentSwimmer.get(),\n                currentClass:PageStore.currentClass.get(),\n\n                currentLevel:PageStore.currentLevel.get(), //next level\n\n\n                //should wait for currentSwimmer\n                avaiableDays: PageStore.avaiableDays.get(),\n                avaiableTimes: PageStore.avaiableTimes.get(),\n                currentDay: PageStore.currentDay.get(),\n                currentTime: PageStore.currentTime.get(),\n\n                //currentStep: PageStore.currentStep.get(),\n\n                //一次选课流程的所有信息\n                //selectedClasses: PageStore.selectedClasses.get()\n\n            }\n\n            //debugger\n            return data;\n\n        },\n\n\n        componentWillMount(){\n///         ///PASS  props value to store\n            Dispatcher.dispatch({\n                actionType: 'CRSelectClassEditPage_PROPS_UPDATE',\n                props: this.props\n            });\n\n        },\n        formSubmit(e){\n            e.preventDefault()\n\n            Dispatcher.dispatch({\n                actionType: 'CRSelectClassEditPage_CLASS_SELECT',\n                props: this.props\n            });\n\n        },\n\n\n        ///////////////actions////////////////\n\n        render: function () {\n\n            let items = this.data.cart && this.data.cart.items ;\n            var item = _.findWhere(items,{\n                swimmerId:this.props.swimmerId,\n                classId:this.props.classId\n            })\n            console.log(item)\n            //debugger\n\n\n            return <div>\n\n                <RC.Card className=\"padding\">\n                    <h4 className=\"brand\">Register Class Edit Preference{this.props.preferenceNum}</h4>\n\n                    <div>\n                        now :{item && item['class'+this.props.preferenceNum] && item['class'+this.props.preferenceNum].name}\n                    </div>\n                    <div>\n                        changed :{this.data.currentClass && this.data.currentClass.name}\n                    </div>\n\n\n                </RC.Card>\n\n                <RC.Form ref=\"myForm\"  onSubmit={this.formSubmit}>\n\n                    <RC.Item uiColor=\"brand1\">\n                        Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n                    </RC.Item>\n                    <RC.Item uiColor=\"brand1\">\n                        Level: {this.data.currentLevel}\n                    </RC.Item>\n\n                    <Cal.SelectDay\n                        avaiableDays={this.data.avaiableDays}\n                        currentDay={this.data.currentDay}\n                        changeMessage=\"CRSelectClassEditPage_DAY_CHANGE\"\n                        />\n                    <Cal.SelectTime\n                        avaiableTimes={this.data.avaiableTimes}\n                        currentTime={this.data.currentTime}\n                        changeMessage=\"CRSelectClassEditPage_TIME_CHANGE\"\n                        />\n\n                    <RC.Button name=\"button\" type=\"submit\"\n                               onClick={this.formSubmit}\n                               theme=\"full\" buttonColor=\"brand\">\n                        {this.data.currentStep == 1 ? 'Book':'Select'}\n                    </RC.Button>\n\n                </RC.Form>\n\n\n\n                </div>;\n        }\n\n    });\n\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/SelectClassEditPage.store.jsx             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/11/15.                                                //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    //单体 在多个地方使用或在meteordata中被触发  仅初始化一次                               //\n    //let _storeInstance=null;                                         //\n                                                                       //\n    Dependency.add('classRegister.CRSelectClassEditPage.store', new function () {\n                                                                       //\n        //if(_storeInstance) return _storeInstance;                    //\n        //console.log('run Dependency CRSelectClassEditPage')          //\n        //_storeInstance = this;                                       //\n                                                                       //\n        var self = this;                                               // 15\n                                                                       //\n        ////props///                                                   //\n                                                                       //\n        self.props = new ReactiveVar();                                // 19\n        self.cart = new ReactiveVar();                                 // 20\n                                                                       //\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care                                          //\n        self.getSwimmers = function () {                               // 25\n            return DB.Swimmers.find({ accountId: Meteor.userId() });   // 26\n        };                                                             //\n                                                                       //\n        //////////////////////////////////////////////////////         //\n        ///////////////////selection info                              //\n        // should reset after add to                                   //\n        //选中的swimmer                                                   //\n        self.currentSwimmer = new ReactiveVar();                       // 33\n        //当前的level                                                     //\n        self.currentLevel = new ReactiveVar();                         // 35\n        //选中的day                                                       //\n        self.currentDay = new ReactiveVar();                           // 37\n        self.currentTime = new ReactiveVar();                          // 38\n        self.currentClass = new ReactiveVar();                         // 39\n        //当前的步骤                                                        //\n        self.currentStep = new ReactiveVar(1);                         // 41\n                                                                       //\n        //可选days 依赖于 当前的currentLevel                                   //\n        self.avaiableDays = new ReactiveVar([]);                       // 45\n        //可选时间   依赖于 当前选中的currentDay                                   //\n        self.avaiableTimes = new ReactiveVar([]);                      // 47\n                                                                       //\n        //Session.set('CART_ID')                                       //\n                                                                       //\n        /*                                                             //\n         * 一次流程选择的class信息  3步                                          //\n         * 使用Immutable库进行对象修改                                          //\n         * {                                                           //\n         *  swimmer:                                                   //\n         *  class1:{classId, swimmerId}                                //\n         *  class2:                                                    //\n         *  class3:                                                    //\n         * }                                                           //\n         * */                                                          //\n        self.selectedClasses = new ReactiveVar(Immutable.Map());       // 63\n                                                                       //\n        var undefinedSelectValueOption = { text: '', value: '' };      // 66\n        var undefinedSelectValue = '';                                 // 67\n                                                                       //\n        //暂存购物车ID 后端会验证其有效性                                            //\n                                                                       //\n        function resetDateAndTime() {                                  // 72\n            self.currentDay.set(undefinedSelectValue);                 // 73\n            self.currentTime.set(undefinedSelectValue);                // 74\n        }                                                              //\n                                                                       //\n        self.tokenId = Dispatcher.register(function (payload) {        // 78\n            switch (payload.actionType) {                              // 79\n                                                                       //\n                case \"CRSelectClassEditPage_PROPS_UPDATE\":             // 81\n                    //get props                                        //\n                    {                                                  // 82\n                        console.log('CRSelectClassEditPage_PROPS_UPDATE', payload.props);\n                                                                       //\n                        self.props.set(payload.props);                 // 85\n                                                                       //\n                        self.currentDay.set();                         // 87\n                        self.currentTime.set();                        // 88\n                        self.currentClass.set();                       // 89\n                                                                       //\n                        break;                                         // 92\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassEditPage_DAY_CHANGE\":               // 93\n                    //选择day                                            //\n                    {                                                  // 96\n                        console.log('day change ', payload.day);       // 97\n                        self.currentDay.set(payload.day);              // 98\n                        self.currentTime.set();                        // 99\n                        break;                                         // 100\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassEditPage_TIME_CHANGE\":              // 103\n                    //选择time  确定一个class                                //\n                    {                                                  // 104\n                        debugger;                                      // 105\n                        self.currentTime.set(payload.time);            // 106\n                        break;                                         // 107\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassEditPage_CLASS_SELECT\":             // 110\n                    //select确定                                         //\n                    {                                                  // 111\n                        debugger;                                      // 112\n                                                                       //\n                        var props = self.props.get();                  // 114\n                        var currentClass = self.currentClass.get();    // 115\n                        /*                                             //\n                         * cartId  确定购物车                               //\n                         * swimmerId classId   确定一个item                //\n                         * preferenceNum   确定preference  1，2，3         //\n                         * toClassData     新的class数据  classId？         //\n                         *                                             //\n                         * */                                          //\n                        Meteor.call('change_preference_in_cart', {     // 123\n                            cartId: props.cartId,                      // 124\n                            swimmerId: props.swimmerId,                // 125\n                            classId: props.classId,                    // 126\n                            preferenceNum: props.preferenceNum,        // 127\n                                                                       //\n                            classData: currentClass                    // 129\n                        }, function (err, result) {                    //\n                            debugger;                                  // 131\n                            if (err) {                                 // 132\n                                console.error(err);                    // 133\n                                alert(err.error);                      // 134\n                                return; //todo  prompt                 // 135\n                            }                                          //\n                                                                       //\n                            //通知SelectClassPage.store 更新数据             //\n                            //Dispatcher.dispatch({                    //\n                            //    actionType: 'CRSelectClassPage_SelectedClasses_CHANGE',\n                            //    preferenceNum:props.preferenceNum,   //\n                            //    classData:currentClass               //\n                            //});                                      //\n                                                                       //\n                            //回到上一页                                    //\n                            window.history.back();                     // 147\n                        });                                            //\n                                                                       //\n                        break;                                         // 151\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassEditPage_ComponentWillMount\":       // 152\n                    {                                                  // 155\n                        //清空上一轮的选择                                     //\n                                                                       //\n                        self.currentDay.set(undefinedSelectValue);     // 158\n                        self.currentTime.set(undefinedSelectValue);    // 159\n                        self.currentClass.set(null);                   // 160\n                        self.currentStep.set(1);                       // 161\n                        //self.avaiableDays //依赖于 当前的currentLevel      //\n                        //self.avaiableTimes //依赖于 当前选中的currentDay     //\n                                                                       //\n                        self.selectedClasses.set(Immutable.Map());     // 165\n                                                                       //\n                        break;                                         // 167\n                    }                                                  //\n                                                                       //\n            }                                                          // 168\n        });                                                            //\n                                                                       //\n        /*                                                             //\n         *                                                             //\n         * ********************* wait for ******************           //\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *                                                             //\n         * */                                                          //\n                                                                       //\n        Meteor.startup(function () {                                   // 181\n                                                                       //\n            //根据组件的props 初始化数据                                         //\n            Tracker.autorun(function (compution) {                     // 184\n                                                                       //\n                debugger;                                              // 186\n                                                                       //\n                var props = self.props.get();                          // 188\n                console.log(self.props.dep._dependentsById);           // 189\n                                                                       //\n                if (!props) return; //wait for props                   // 191\n                                                                       //\n                console.log('autorun props', props);                   // 193\n                                                                       //\n                //var cartId= props.cartId;                            //\n                                                                       //\n                //todo classId swimmerId 条件                            //\n                var cart;                                              // 198\n                if (props.cartId) {                                    // 199\n                    cart = DB.ShoppingCart.findOne({                   // 200\n                        _id: props.cartId                              // 201\n                    });                                                //\n                } else {                                               //\n                    cart = DB.ShoppingCart.findOne({                   // 204\n                        status: 'active'                               // 205\n                    });                                                //\n                }                                                      //\n                                                                       //\n                var currentSwimmer = DB.Swimmers.findOne({             // 210\n                    _id: props.swimmerId                               // 211\n                });                                                    //\n                                                                       //\n                if (cart) {                                            // 214\n                    self.cart.set(cart);                               // 215\n                    console.log(cart);                                 // 216\n                }                                                      //\n                                                                       //\n                if (currentSwimmer) {                                  // 221\n                    self.currentSwimmer.set(currentSwimmer);           // 222\n                    //self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n                    //console.log('set currentLevel',currentSwimmer.level)\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //计算level                                                  //\n            Tracker.autorun(function () {                              // 234\n                var currentSwimmer = self.currentSwimmer.get();        // 235\n                var appInfo = DB.App.findOne();                        // 236\n                                                                       //\n                if (!appInfo) return;                                  // 238\n                if (!currentSwimmer) return;                           // 239\n                                                                       //\n                Tracker.autorun(function () {                          // 241\n                                                                       //\n                    var nowClasses = DB.ClassesRegister.find({         // 243\n                        swimmerId: currentSwimmer._id,                 // 244\n                        status: 'normal', //不显示cancel中的和 change中的      // 245\n                        sessionId: App.info.sessionNow                 // 246\n                    }).fetch();                                        //\n                                                                       //\n                    //self.nowClasses.set(nowClasses)                  //\n                                                                       //\n                    if (nowClasses.length > 0) {                       // 251\n                        self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level));\n                    } else {                                           //\n                        self.currentLevel.set(currentSwimmer.level);   // 255\n                    }                                                  //\n                });                                                    //\n            });                                                        //\n                                                                       //\n            //days depend on level of swimmer                          //\n            Tracker.autorun(function (compution) {                     // 264\n                                                                       //\n                console.log(self.currentLevel.dep._dependentsById);    // 266\n                                                                       //\n                console.log('autorun get currentLevel');               // 269\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 272\n                if (!App.info) return;                                 // 273\n                                                                       //\n                var level = self.currentLevel.get();                   // 277\n                console.log('autorun get currentLevel', level, App.info.sessionRegister);\n                                                                       //\n                if (!level) return; // wait for level                  // 280\n                                                                       //\n                var classes = DB.Classes.find({                        // 283\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,                                     // 285\n                    seatsRemain: { $gt: 0 }                            // 286\n                }).fetch();                                            //\n                                                                       //\n                console.log(level, App.info.sessionRegister, classes);\n                                                                       //\n                //debugger                                             //\n                classes = _.uniq(classes, function (item, key, a) {    // 292\n                    return item.day;                                   // 293\n                });                                                    //\n                                                                       //\n                var days = classes.map(function (v, n) {               // 296\n                    return { text: App.Config.week[v.day], value: v.day };\n                });                                                    //\n                days.sort(function (a, b) {                            // 299\n                    return a.value - b.value;                          // 300\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption);              // 304\n                                                                       //\n                self.avaiableDays.set(days);                           // 306\n                                                                       //\n                //重置day                                                //\n                //self.currentDay.set(days[0].value)                   //\n            });                                                        //\n                                                                       //\n            /// time depend on day                                     //\n            Tracker.autorun(function () {                              // 316\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 319\n                if (!App.info) return;                                 // 320\n                                                                       //\n                var currentDay = self.currentDay.get();                // 323\n                                                                       //\n                var level;                                             // 325\n                Tracker.nonreactive(function () {                      // 326\n                    level = self.currentLevel.get();                   // 327\n                });                                                    //\n                                                                       //\n                var classes = DB.Classes.find({                        // 330\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 332\n                    day: currentDay,                                   // 333\n                    seatsRemain: { $gt: 0 }                            // 334\n                }).fetch();                                            //\n                                                                       //\n                var times = classes.map(function (v, n) {              // 337\n                    return {                                           // 338\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime                             // 340\n                    };                                                 //\n                });                                                    //\n                times.sort(function (a, b) {                           // 343\n                    return a.value - b.value;                          // 344\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption);             // 349\n                                                                       //\n                self.avaiableTimes.set(times);                         // 351\n                                                                       //\n                //重置time                                               //\n                //self.currentTime.set(times[0].value)                 //\n            });                                                        //\n                                                                       //\n            //time确定后class就确定了                                         //\n            //level + day+ time  确定一个class                             //\n            Tracker.autorun(function () {                              // 361\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 364\n                if (!App.info) return;                                 // 365\n                                                                       //\n                var time = self.currentTime.get();                     // 367\n                                                                       //\n                var level = undefined,                                 // 370\n                    day = undefined;                                   //\n                Tracker.nonreactive(function () {                      // 371\n                    level = self.currentLevel.get();                   // 372\n                    day = self.currentDay.get();                       // 373\n                });                                                    //\n                                                                       //\n                var theClass = DB.Classes.find({                       // 377\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 379\n                    day: day,                                          // 380\n                    startTime: time,                                   // 381\n                    seatsRemain: { $gt: 0 }                            // 382\n                }).fetch();                                            //\n                                                                       //\n                if (theClass.length > 1) {                             // 385\n                    console.error('Multi class match when select class ');\n                }                                                      //\n                                                                       //\n                if (theClass[0]) {                                     // 389\n                    self.currentClass.set(theClass[0]);                // 390\n                                                                       //\n                    console.log('selected class', theClass[0]);        // 392\n                }                                                      //\n            });                                                        //\n        });                                                            //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/SelectClassEditPage.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/SelectClassEditPage.store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassEditPage.store.jsx","sourcesContent":["/**\n * Created on 10/11/15.\n */\n\n{\n    //单体 在多个地方使用或在meteordata中被触发  仅初始化一次\n    //let _storeInstance=null;\n\n    Dependency.add('classRegister.CRSelectClassEditPage.store', new function () {\n\n        //if(_storeInstance) return _storeInstance;\n        //console.log('run Dependency CRSelectClassEditPage')\n        //_storeInstance = this;\n\n        var self = this;\n\n        ////props///\n\n        self.props = new ReactiveVar();\n        self.cart = new ReactiveVar();\n\n\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care\n        self.getSwimmers = function () {\n            return DB.Swimmers.find({accountId: Meteor.userId()})\n        }\n\n        //////////////////////////////////////////////////////\n        ///////////////////selection info\n        // should reset after add to\n        //选中的swimmer\n        self.currentSwimmer = new ReactiveVar()\n        //当前的level\n        self.currentLevel = new ReactiveVar()\n        //选中的day\n        self.currentDay = new ReactiveVar()\n        self.currentTime = new ReactiveVar()\n        self.currentClass = new ReactiveVar()\n        //当前的步骤\n        self.currentStep = new ReactiveVar(1)\n\n\n        //可选days 依赖于 当前的currentLevel\n        self.avaiableDays = new ReactiveVar([])\n        //可选时间   依赖于 当前选中的currentDay\n        self.avaiableTimes = new ReactiveVar([])\n\n\n        //Session.set('CART_ID')\n\n\n        /*\n         * 一次流程选择的class信息  3步\n         * 使用Immutable库进行对象修改\n         * {\n         *  swimmer:\n         *  class1:{classId, swimmerId}\n         *  class2:\n         *  class3:\n         * }\n         * */\n        self.selectedClasses = new ReactiveVar(Immutable.Map())\n\n\n        var undefinedSelectValueOption = {text:'', value: ''};\n        var undefinedSelectValue = '';\n\n        //暂存购物车ID 后端会验证其有效性\n\n\n        function resetDateAndTime() {\n            self.currentDay.set(undefinedSelectValue)\n            self.currentTime.set(undefinedSelectValue)\n        }\n\n\n        self.tokenId = Dispatcher.register(function (payload) {\n            switch (payload.actionType) {\n\n                case \"CRSelectClassEditPage_PROPS_UPDATE\"://get props\n                {\n                    console.log('CRSelectClassEditPage_PROPS_UPDATE',payload.props)\n\n                    self.props.set(payload.props)\n\n                    self.currentDay.set()\n                    self.currentTime.set()\n                    self.currentClass.set()\n\n\n                    break;\n                }\n\n                case \"CRSelectClassEditPage_DAY_CHANGE\"://选择day\n                {\n                    console.log('day change ', payload.day)\n                    self.currentDay.set(payload.day)\n                    self.currentTime.set()\n                    break;\n                }\n\n                case \"CRSelectClassEditPage_TIME_CHANGE\"://选择time  确定一个class\n                {\n                    debugger\n                    self.currentTime.set(payload.time)\n                    break;\n                }\n\n                case \"CRSelectClassEditPage_CLASS_SELECT\"://select确定\n                {\n                    debugger\n\n                    var props = self.props.get();\n                    var currentClass = self.currentClass.get()\n                    /*\n                     * cartId  确定购物车\n                     * swimmerId classId   确定一个item\n                     * preferenceNum   确定preference  1，2，3\n                     * toClassData     新的class数据  classId？\n                     *\n                     * */\n                    Meteor.call('change_preference_in_cart', {\n                        cartId:props.cartId,\n                        swimmerId: props.swimmerId,\n                        classId: props.classId,\n                        preferenceNum:props.preferenceNum,\n\n                        classData:currentClass\n                    }, function (err, result) {\n                        debugger\n                        if (err) {\n                            console.error(err)\n                            alert(err.error)\n                            return; //todo  prompt\n                        }\n\n                        //通知SelectClassPage.store 更新数据\n                        //Dispatcher.dispatch({\n                        //    actionType: 'CRSelectClassPage_SelectedClasses_CHANGE',\n                        //    preferenceNum:props.preferenceNum,\n                        //    classData:currentClass\n                        //});\n\n\n                        //回到上一页\n                        window.history.back();\n\n                    })\n\n                    break;\n                }\n\n                case \"CRSelectClassEditPage_ComponentWillMount\":\n                {\n                    //清空上一轮的选择\n\n                    self.currentDay.set(undefinedSelectValue)\n                    self.currentTime.set(undefinedSelectValue)\n                    self.currentClass.set(null)\n                    self.currentStep.set(1)\n                    //self.avaiableDays //依赖于 当前的currentLevel\n                    //self.avaiableTimes //依赖于 当前选中的currentDay\n\n                    self.selectedClasses.set(Immutable.Map())\n\n                    break;\n                }\n\n            }\n        });\n\n\n        /*\n         *\n         * ********************* wait for ******************\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *\n         * */\n\n        Meteor.startup(function () {\n\n            //根据组件的props 初始化数据\n            Tracker.autorun(function (compution) {\n\n                debugger\n\n                var props = self.props.get();\n                console.log(self.props.dep._dependentsById)\n\n                if(!props) return; //wait for props\n\n                console.log('autorun props', props)\n\n                //var cartId= props.cartId;\n\n                //todo classId swimmerId 条件\n                var cart\n                if(props.cartId){\n                    cart= DB.ShoppingCart.findOne({\n                        _id:props.cartId\n                    })\n                }else{\n                    cart= DB.ShoppingCart.findOne({\n                        status:'active'\n                    })\n                }\n\n\n                var currentSwimmer= DB.Swimmers.findOne({\n                    _id:props.swimmerId\n                })\n\n                if(cart){\n                    self.cart.set(cart)\n                    console.log(cart)\n\n                }\n\n\n                if(currentSwimmer){\n                    self.currentSwimmer.set(currentSwimmer)\n                    //self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n                    //console.log('set currentLevel',currentSwimmer.level)\n\n                }\n\n\n            })\n\n\n\n            //计算level\n            Tracker.autorun(function () {\n                var currentSwimmer = self.currentSwimmer.get()\n                var appInfo = DB.App.findOne()\n\n                if(!appInfo) return;\n                if(!currentSwimmer) return;\n\n                Tracker.autorun(function () {\n\n                    var nowClasses = DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId: App.info.sessionNow\n                    }).fetch();\n\n                    //self.nowClasses.set(nowClasses)\n\n                    if(nowClasses.length>0){\n                        self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n\n                    }else{\n                        self.currentLevel.set(currentSwimmer.level)\n                    }\n\n                })\n\n            })\n\n\n            //days depend on level of swimmer\n            Tracker.autorun(function (compution) {\n\n                console.log(self.currentLevel.dep._dependentsById)\n\n\n                console.log('autorun get currentLevel')\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n\n\n                var level = self.currentLevel.get();\n                console.log('autorun get currentLevel', level, App.info.sessionRegister)\n\n                if(!level) return;  // wait for level\n\n\n                let classes = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                console.log(level, App.info.sessionRegister, classes)\n\n                //debugger\n                classes = _.uniq(classes, function (item, key, a) {\n                    return item.day;\n                });\n\n                let days = classes.map(function (v, n) {\n                    return {text: App.Config.week[v.day], value: v.day}\n                })\n                days.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption)\n\n                self.avaiableDays.set(days)\n\n\n                //重置day\n                //self.currentDay.set(days[0].value)\n\n\n            });\n\n            /// time depend on day\n            Tracker.autorun(function () {\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n\n                var currentDay = self.currentDay.get();\n\n                var level\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                });\n\n                let classes = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: currentDay,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                let times = classes.map(function (v, n) {\n                    return {\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime\n                    }\n                })\n                times.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption)\n\n                self.avaiableTimes.set(times)\n\n                //重置time\n                //self.currentTime.set(times[0].value)\n\n\n            });\n\n            //time确定后class就确定了\n            //level + day+ time  确定一个class\n            Tracker.autorun(function () {\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n                let time = self.currentTime.get()\n\n\n                let level, day;\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                    day = self.currentDay.get()\n                });\n\n\n                let theClass = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: day,\n                    startTime: time,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                if (theClass.length > 1) {\n                    console.error('Multi class match when select class ')\n                }\n\n                if (theClass[0]) {\n                    self.currentClass.set(theClass[0])\n\n                    console.log('selected class', theClass[0])\n                }\n\n\n            });\n\n\n        })\n\n\n    });\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/SelectClassPage.jsx                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    (function () {                                                     //\n        //let CRSelectClassPageStoreClass;                             //\n        //Dependency.autorun(function () {                             //\n        //    CRSelectClassPageStoreClass = Dependency.get('classRegister.SelectClassPage.storeClass');\n        //});                                                          //\n                                                                       //\n        var CRSelectClassPageStore = undefined;                        // 12\n        Dependency.autorun(function () {                               // 13\n            CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n        });                                                            //\n                                                                       //\n        Cal.CRSelectClassPage = React.createClass({                    // 18\n            displayName: \"CRSelectClassPage\",                          //\n                                                                       //\n            mixins: [ReactMeteorData, Cal.Mixins.windowUnload],        // 19\n            getMeteorData: function () {                               // 20\n                                                                       //\n                //todo                                                 //\n                Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n                //Meteor.subscribe(\"appInfo\");                         //\n                Meteor.subscribe(\"classes\");                           // 25\n                Meteor.subscribe(\"activeShoppingCart\");                // 26\n                                                                       //\n                //仅在页面加载时才初始化                                          //\n                //var CRSelectClassPageStore = new CRSelectClassPageStoreClass;\n                                                                       //\n                var data = {                                           // 32\n                    account: Meteor.users.find().fetch(),              // 33\n                                                                       //\n                    swimmers: CRSelectClassPageStore.getSwimmers().fetch(),\n                                                                       //\n                    currentLevel: CRSelectClassPageStore.currentLevel.get(), //next level\n                                                                       //\n                    currentSwimmer: CRSelectClassPageStore.currentSwimmer.get(),\n                    currentClass: CRSelectClassPageStore.currentClass.get(),\n                                                                       //\n                    //should wait for currentSwimmer                   //\n                    avaiableDays: CRSelectClassPageStore.avaiableDays.get(),\n                    avaiableTimes: CRSelectClassPageStore.avaiableTimes.get(),\n                    currentDay: CRSelectClassPageStore.currentDay.get(),\n                    currentTime: CRSelectClassPageStore.currentTime.get(),\n                                                                       //\n                    currentStep: CRSelectClassPageStore.currentStep.get(),\n                                                                       //\n                    classesNoSeatByLevel: CRSelectClassPageStore.classesNoSeatByLevel.get(),\n                                                                       //\n                    //一次选课流程的所有信息                                      //\n                    selectedClasses: CRSelectClassPageStore.selectedClasses.get()\n                                                                       //\n                };                                                     //\n                                                                       //\n                //debugger                                             //\n                return data;                                           // 59\n            },                                                         //\n                                                                       //\n            /////////////////////////////////////////////////////////////////\n            ///////////actions///////////                              //\n            swimmerChange: function (e) {                              // 65\n                var value = this.refs.swimmer.getValue();              // 66\n                                                                       //\n                var swimmer = _.find(this.data.swimmers, function (v, n) {\n                    return v._id == value;                             // 69\n                });                                                    //\n                                                                       //\n                Dispatcher.dispatch({                                  // 72\n                    actionType: \"CRSelectClassPage_SWIMMER_CHANGE\",    // 73\n                    swimmer: swimmer                                   // 74\n                });                                                    //\n            },                                                         //\n            dayChange: function (e) {                                  // 78\n                var value = this.refs.day.getValue();                  // 79\n                value = parseInt(value, 10);                           // 80\n                                                                       //\n                Dispatcher.dispatch({                                  // 82\n                    actionType: \"CRSelectClassPage_DAY_CHANGE\",        // 83\n                    day: value                                         // 84\n                });                                                    //\n            },                                                         //\n            timeChange: function (e) {                                 // 89\n                var value = this.refs.time.getValue();                 // 90\n                value = parseInt(value, 10);                           // 91\n                Dispatcher.dispatch({                                  // 92\n                    actionType: \"CRSelectClassPage_TIME_CHANGE\",       // 93\n                    time: value                                        // 94\n                });                                                    //\n            },                                                         //\n                                                                       //\n            formSubmit: function (e) {                                 // 99\n                e.preventDefault();                                    // 100\n                                                                       //\n                var formData = this.refs.myForm.getFormData();         // 102\n                                                                       //\n                debugger;                                              // 104\n                                                                       //\n                //todo validation info in ui                           //\n                if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n                    alert('please select a class');                    // 108\n                    return;                                            // 109\n                }                                                      //\n                //no class match                                       //\n                if (!this.data.currentClass) {                         // 112\n                    alert('please select a class');                    // 113\n                    return;                                            // 114\n                }                                                      //\n                                                                       //\n                //check duplicate                                      //\n                var selectedClasses = this.data.selectedClasses;       // 118\n                var currentClass = this.data.currentClass;             // 119\n                if (App.currentClass_in_selectedClasses(currentClass, selectedClasses)) {\n                    alert('class duplicated');                         // 121\n                    return;                                            // 122\n                }                                                      //\n                                                                       //\n                Dispatcher.dispatch({                                  // 126\n                    actionType: \"CRSelectClassPage_CLASS_SELECT\",      // 127\n                    currentStep: this.data.currentStep,                // 128\n                    selectedClass: formData                            // 129\n                });                                                    //\n            },                                                         //\n                                                                       //\n            goToEdit: function (num) {                                 // 134\n                                                                       //\n                /*                                                     //\n                 <div className=\"col col-20\">                          //\n                 <button className=\"button button-clear\"               //\n                 onClick={this.goToEdit.bind(this,1)}                  //\n                 >Edit</button>                                        //\n                 </div>                                                //\n                 */                                                    //\n                Dispatcher.dispatch({                                  // 144\n                    actionType: \"CRSelectClassPage_CLASS_EDIT\",        // 145\n                    currentStep: this.data.currentStep,                // 146\n                    eidtStep: num                                      // 147\n                });                                                    //\n            },                                                         //\n            goToWaitingList: function (e) {                            // 151\n                e.preventDefault();                                    // 152\n                                                                       //\n                var href = \"/classRegister/AddWaitingList\" + \"?swimmerId=\" + this.data.currentSwimmer._id + \"&classLevel=\" + this.data.currentLevel;\n                                                                       //\n                var classesNoSeat = this.data.classesNoSeatByLevel.length;\n                                                                       //\n                if (classesNoSeat == 0) {                              // 160\n                                                                       //\n                    alert('All classes are available, you can register now');\n                } else {                                               //\n                    FlowRouter.go(href);                               // 165\n                }                                                      //\n            },                                                         //\n            componentWillMount: function () {                          // 170\n                                                                       //\n                Dispatcher.dispatch({                                  // 172\n                    actionType: \"componentWillMount_CRSelectClassPage\"\n                });                                                    //\n                                                                       //\n                //尝试清除不完整的购物项                                          //\n                Meteor.call('clear_uncompleted_item_in_cart');         // 177\n            },                                                         //\n            onBeforeUnload: function (e) {                             // 180\n                var message = \"You may lost data, are you sure leving?\";\n                e.returnValue = message;                               // 182\n                return message;                                        // 183\n            },                                                         //\n            render: function () {                                      // 185\n                                                                       //\n                var swimmers = this.data.swimmers.map(function (v, i) {\n                    return { text: v['name'], value: v._id };          // 188\n                });                                                    //\n                                                                       //\n                var swimmer = this.data.selectedClasses.get('swimmer');\n                var class1 = this.data.selectedClasses.get('class1');  // 192\n                var class2 = this.data.selectedClasses.get('class2');  // 193\n                var class3 = this.data.selectedClasses.get('class3');  // 194\n                                                                       //\n                //let currentSwimmerValue = this.data.currentSwimmer   //\n                //    && {value:this.data.currentSwimmer._id,          //\n                //        text:this.data.currentSwimmer.name}          //\n                                                                       //\n                var currentSwimmerValue = this.data.currentSwimmer && this.data.currentSwimmer._id;\n                                                                       //\n                //debugger                                             //\n                                                                       //\n                return React.createElement(                            // 206\n                    \"div\",                                             //\n                    null,                                              //\n                    React.createElement(                               //\n                        RC.Card,                                       // 207\n                        { key: Math.random(), className: \"padding\" },  //\n                        React.createElement(                           //\n                            \"h4\",                                      //\n                            { className: \"brand\" },                    //\n                            \"Register for spring 2015\"                 //\n                        ),                                             //\n                        class1 ? React.createElement(                  //\n                            \"div\",                                     //\n                            { className: \"row\" },                      //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                \"Preference 1\"                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                class1.name                            //\n                            )                                          //\n                        ) : '',                                        //\n                        class2 ? React.createElement(                  //\n                            \"div\",                                     //\n                            { className: \"row\" },                      //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                \"Preference 2\"                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                class2 && class2.name                  //\n                            )                                          //\n                        ) : '',                                        //\n                        class3 ? React.createElement(                  //\n                            \"div\",                                     //\n                            { className: \"row\" },                      //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col\" },                  //\n                                \"Preference 3\"                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                \"div\",                                 //\n                                { className: \"col \" },                 //\n                                class3 && class3.name                  //\n                            )                                          //\n                        ) : ''                                         //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.Form,                                       // 250\n                        { ref: \"myForm\", key: Math.random(), onSubmit: this.formSubmit },\n                        React.createElement(                           //\n                            RC.List,                                   // 251\n                            { theme: \"inset\" },                        //\n                            this.data.currentStep == 1 ? React.createElement(RC.Select2, {\n                                ref: \"swimmer\",                        // 256\n                                options: swimmers,                     // 257\n                                value: currentSwimmerValue,            // 258\n                                name: \"swimmer\",                       // 259\n                                changeHandler: this.swimmerChange,     // 260\n                                label: \"Swimmer\"                       // 261\n                            }) : React.createElement(                  //\n                                RC.Item,                               // 264\n                                { uiColor: \"brand1\" },                 //\n                                \"Swimmer: \",                           //\n                                this.data.currentSwimmer && this.data.currentSwimmer.name\n                            ),                                         //\n                            React.createElement(                       //\n                                RC.Item,                               // 270\n                                { uiColor: \"brand1\" },                 //\n                                \"Level: \",                             //\n                                this.data.currentLevel                 //\n                            ),                                         //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"day\",                            // 275\n                                options: this.data.avaiableDays,       // 276\n                                value: this.data.currentDay,           // 277\n                                name: \"day\",                           // 278\n                                changeHandler: this.dayChange,         // 279\n                                label: \"Day\"                           // 280\n                            }),                                        //\n                            React.createElement(RC.Select2, {          //\n                                ref: \"time\",                           // 284\n                                options: this.data.avaiableTimes,      // 285\n                                value: this.data.currentTime,          // 286\n                                name: \"time\",                          // 287\n                                changeHandler: this.timeChange,        // 288\n                                label: \"Time\"                          // 289\n                            }),                                        //\n                            React.createElement(                       //\n                                RC.Button,                             // 291\n                                { name: \"button\", type: \"submit\",      //\n                                    onClick: this.formSubmit,          // 292\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                this.data.currentStep == 1 ? 'Book' : 'Select'\n                            ),                                         //\n                            this.data.currentStep == 1 ? React.createElement(\n                                RC.Button,                             // 300\n                                { name: \"button\",                      //\n                                    onClick: this.goToWaitingList,     // 301\n                                    theme: \"full\", buttonColor: \"brand\" },\n                                \"Waiting List\"                         //\n                            ) : ''                                     //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            }                                                          //\n                                                                       //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/*swimmer && swimmer.name*/                                            //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/SelectClassPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/SelectClassPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassPage.jsx","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n\n{\n    //let CRSelectClassPageStoreClass;\n    //Dependency.autorun(function () {\n    //    CRSelectClassPageStoreClass = Dependency.get('classRegister.SelectClassPage.storeClass');\n    //});\n\n    let CRSelectClassPageStore;\n    Dependency.autorun(function () {\n        CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    });\n\n\n    Cal.CRSelectClassPage = React.createClass({\n        mixins: [ReactMeteorData,Cal.Mixins.windowUnload],\n        getMeteorData() {\n\n            //todo\n            Meteor.subscribe(\"swimmersByAccountId\", Meteor.userId());\n            //Meteor.subscribe(\"appInfo\");\n            Meteor.subscribe(\"classes\");\n            Meteor.subscribe(\"activeShoppingCart\");\n\n            //仅在页面加载时才初始化\n            //var CRSelectClassPageStore = new CRSelectClassPageStoreClass;\n\n\n            var data = {\n                account: Meteor.users.find().fetch(),\n\n                swimmers: CRSelectClassPageStore.getSwimmers().fetch(),\n\n                currentLevel:CRSelectClassPageStore.currentLevel.get(), //next level\n\n\n                currentSwimmer: CRSelectClassPageStore.currentSwimmer.get(),\n                currentClass:CRSelectClassPageStore.currentClass.get(),\n\n                //should wait for currentSwimmer\n                avaiableDays: CRSelectClassPageStore.avaiableDays.get(),\n                avaiableTimes: CRSelectClassPageStore.avaiableTimes.get(),\n                currentDay: CRSelectClassPageStore.currentDay.get(),\n                currentTime: CRSelectClassPageStore.currentTime.get(),\n\n                currentStep: CRSelectClassPageStore.currentStep.get(),\n\n                classesNoSeatByLevel:CRSelectClassPageStore.classesNoSeatByLevel.get(),\n\n                //一次选课流程的所有信息\n                selectedClasses: CRSelectClassPageStore.selectedClasses.get()\n\n            }\n\n            //debugger\n            return data;\n\n        },\n\n        /////////////////////////////////////////////////////////////////\n        ///////////actions///////////\n        swimmerChange(e){\n            var value = this.refs.swimmer.getValue()\n\n            var swimmer = _.find(this.data.swimmers, function (v, n) {\n                return v._id == value;\n            })\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_SWIMMER_CHANGE\",\n                swimmer: swimmer\n            });\n\n        },\n        dayChange(e){\n            var value = this.refs.day.getValue()\n            value = parseInt(value, 10)\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_DAY_CHANGE\",\n                day: value\n            });\n\n\n        },\n        timeChange(e){\n            var value = this.refs.time.getValue()\n            value = parseInt(value, 10)\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_TIME_CHANGE\",\n                time: value\n            });\n\n        },\n\n        formSubmit (e) {\n            e.preventDefault()\n\n            var formData = this.refs.myForm.getFormData()\n\n            debugger\n\n            //todo validation info in ui\n            if (!this.data.currentSwimmer || !this.data.currentDay || !this.data.currentTime) {\n                alert('please select a class')\n                return;\n            }\n            //no class match\n            if(!this.data.currentClass){\n                alert('please select a class')\n                return\n            }\n\n            //check duplicate\n            var selectedClasses =this.data.selectedClasses\n            var currentClass =this.data.currentClass\n            if(App.currentClass_in_selectedClasses(currentClass,selectedClasses)){\n                alert('class duplicated')\n                return;\n            }\n\n\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_CLASS_SELECT\",\n                currentStep: this.data.currentStep,\n                selectedClass: formData\n            });\n\n        },\n\n        goToEdit(num){\n\n            /*\n             <div className=\"col col-20\">\n             <button className=\"button button-clear\"\n             onClick={this.goToEdit.bind(this,1)}\n             >Edit</button>\n             </div>\n\n            */\n            Dispatcher.dispatch({\n                actionType: \"CRSelectClassPage_CLASS_EDIT\",\n                currentStep: this.data.currentStep,\n                eidtStep: num\n            });\n\n        },\n        goToWaitingList(e){\n            e.preventDefault()\n\n            var href=\"/classRegister/AddWaitingList\"\n                    +\"?swimmerId=\"+this.data.currentSwimmer._id\n                    +\"&classLevel=\"+ this.data.currentLevel\n\n            var classesNoSeat = this.data.classesNoSeatByLevel.length\n\n            if(classesNoSeat==0){\n\n                alert('All classes are available, you can register now')\n\n            }else{\n                FlowRouter.go(href);\n            }\n\n\n        },\n        componentWillMount(){\n\n            Dispatcher.dispatch({\n                actionType: \"componentWillMount_CRSelectClassPage\"\n            });\n\n            //尝试清除不完整的购物项\n            Meteor.call('clear_uncompleted_item_in_cart')\n\n        },\n        onBeforeUnload(e){\n            var message = \"You may lost data, are you sure leving?\";\n            e.returnValue = message;\n            return message;\n        },\n        render() {\n\n            let swimmers = this.data.swimmers.map(function (v, i) {\n                return {text: v['name'], value: v._id}\n            })\n\n            let swimmer = this.data.selectedClasses.get('swimmer')\n            let class1 = this.data.selectedClasses.get('class1')\n            let class2 = this.data.selectedClasses.get('class2')\n            let class3 = this.data.selectedClasses.get('class3')\n\n\n            //let currentSwimmerValue = this.data.currentSwimmer\n            //    && {value:this.data.currentSwimmer._id,\n            //        text:this.data.currentSwimmer.name}\n\n            let currentSwimmerValue = this.data.currentSwimmer\n                    && this.data.currentSwimmer._id\n\n            //debugger\n\n            return <div>\n                <RC.Card key={Math.random()} className=\"padding\">\n                    <h4 className=\"brand\">Register for spring 2015</h4>\n\n                    {/*swimmer && swimmer.name*/}\n\n                    {\n                        class1?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 1\n                            </div>\n                            <div className=\"col\">\n                                {class1.name}\n                            </div>\n\n                        </div>:''\n\n                    }\n\n                    {\n                        class2?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 2\n                            </div>\n                            <div className=\"col\">\n                                {class2 && class2.name}\n                            </div>\n\n                        </div>:''\n                    }\n                    {\n                        class3?<div className=\"row\">\n                            <div className=\"col\">\n                                Preference 3\n                            </div>\n                            <div className=\"col \">\n                                {class3 && class3.name}\n                            </div>\n\n                        </div>:''\n                    }\n\n                </RC.Card>\n\n                <RC.Form ref=\"myForm\" key={Math.random()} onSubmit={this.formSubmit}>\n                    <RC.List theme=\"inset\">\n\n                        {\n                            this.data.currentStep == 1 ?\n                                <RC.Select2\n                                    ref=\"swimmer\"\n                                    options={swimmers}\n                                    value= {currentSwimmerValue}\n                                    name=\"swimmer\"\n                                    changeHandler={this.swimmerChange}\n                                    label=\"Swimmer\"\n                                    />\n\n                                : <RC.Item uiColor=\"brand1\">\n                                    Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n                                </RC.Item>\n                        }\n\n\n                        <RC.Item uiColor=\"brand1\">\n                            Level: {this.data.currentLevel}\n                        </RC.Item>\n\n                        <RC.Select2\n                            ref=\"day\"\n                            options={this.data.avaiableDays}\n                            value={this.data.currentDay}\n                            name=\"day\"\n                            changeHandler={this.dayChange}\n                            label=\"Day\"\n                            />\n\n                        <RC.Select2\n                            ref=\"time\"\n                            options={this.data.avaiableTimes}\n                            value={this.data.currentTime}\n                            name=\"time\"\n                            changeHandler={this.timeChange}\n                            label=\"Time\"\n                            />\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   onClick={this.formSubmit}\n                                   theme=\"full\" buttonColor=\"brand\">\n                            {this.data.currentStep == 1 ? 'Book':'Select'}\n                        </RC.Button>\n\n\n                        {\n                            this.data.currentStep == 1 ?\n                                    <RC.Button name=\"button\"\n                                               onClick={this.goToWaitingList}\n                                               theme=\"full\" buttonColor=\"brand\">\n                                        Waiting List\n                                    </RC.Button>\n                                : ''\n                        }\n\n\n                    </RC.List>\n                </RC.Form>\n            </div>\n        }\n\n    })\n\n}"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/SelectClassPage.store.jsx                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/15/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 6\n    //单体 在多个地方使用或在meteordata中被触发  仅初始化一次                               //\n    //let _storeInstance=null;                                         //\n                                                                       //\n    Dependency.add('classRegister.SelectClassPage.store', new function () {\n                                                                       //\n        //if(_storeInstance) return _storeInstance;                    //\n        //_storeInstance = this;                                       //\n                                                                       //\n        var self = this;                                               // 15\n                                                                       //\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care                                          //\n        self.getSwimmers = function () {                               // 20\n            return DB.Swimmers.find({ accountId: Meteor.userId() });   // 21\n        };                                                             //\n                                                                       //\n        //////////////////////////////////////////////////////         //\n        ///////////////////selection info                              //\n        // should reset after add to                                   //\n        //选中的swimmer                                                   //\n        self.currentSwimmer = new ReactiveVar();                       // 28\n        //当前的level                                                     //\n        self.currentLevel = new ReactiveVar();                         // 30\n        //选中的day                                                       //\n        self.currentDay = new ReactiveVar();                           // 32\n        self.currentTime = new ReactiveVar();                          // 33\n        self.currentClass = new ReactiveVar();                         // 34\n        //当前的步骤                                                        //\n        self.currentStep = new ReactiveVar(1);                         // 36\n                                                                       //\n        //swimmer的class注册信息                                            //\n        self.nowClasses = new ReactiveVar([]);                         // 39\n        self.registeredClasses = new ReactiveVar([]);                  // 40\n        self.historyClasses = new ReactiveVar([]);                     // 41\n        self.shoppingCartClasses = new ReactiveVar([]);                // 42\n                                                                       //\n        self.isFirstTime = new ReactiveVar(false);                     // 44\n                                                                       //\n        //可选days 依赖于 当前的currentLevel                                   //\n        self.avaiableDays = new ReactiveVar([]);                       // 48\n        //可选时间   依赖于 当前选中的currentDay                                   //\n        self.avaiableTimes = new ReactiveVar([]);                      // 50\n                                                                       //\n        //Session.set('CART_ID')                                       //\n                                                                       //\n        //当前level 名额已报满的课程  waitinglist需要用到                            //\n        self.classesNoSeatByLevel = new ReactiveVar([]);               // 56\n                                                                       //\n        /*                                                             //\n         * 一次流程选择的class信息  3步                                          //\n         * 使用Immutable库进行对象修改                                          //\n         * {                                                           //\n         *  swimmer:                                                   //\n         *  class1:{classId, swimmerId}                                //\n         *  class2:                                                    //\n         *  class3:                                                    //\n         * }                                                           //\n         * */                                                          //\n        self.selectedClasses = new ReactiveVar(Immutable.Map());       // 68\n                                                                       //\n        var undefinedSelectValueOption = { text: '', value: '' };      // 71\n        var undefinedSelectValue = '';                                 // 72\n                                                                       //\n        //暂存购物车ID 后端会验证其有效性                                            //\n                                                                       //\n        function resetDateAndTime() {                                  // 77\n            self.currentDay.set(undefinedSelectValue);                 // 78\n            self.currentTime.set(undefinedSelectValue);                // 79\n        }                                                              //\n                                                                       //\n        self.tokenId = Dispatcher.register(function (payload) {        // 83\n            switch (payload.actionType) {                              // 84\n                                                                       //\n                case \"CRSelectClassPage_SWIMMER_CHANGE\":               // 86\n                    //选择swimmer  level可能会变                             //\n                    {                                                  // 87\n                        var swimmer = payload.swimmer;                 // 88\n                        //let level= App.getNextClassLevel(swimmer.level) //next\n                                                                       //\n                        self.currentSwimmer.set(swimmer);              // 92\n                        //self.currentLevel.set(level)                 //\n                                                                       //\n                        self.currentDay.set();                         // 95\n                        self.currentTime.set();                        // 96\n                                                                       //\n                        debugger;                                      // 98\n                                                                       //\n                        break;                                         // 100\n                    }                                                  //\n                case \"CRSelectClassPage_DAY_CHANGE\":                   // 102\n                    //选择day                                            //\n                    {                                                  // 103\n                        debugger;                                      // 104\n                                                                       //\n                        self.currentDay.set(payload.day);              // 106\n                        self.currentTime.set();                        // 107\n                        break;                                         // 108\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassPage_TIME_CHANGE\":                  // 111\n                    //选择time  确定一个class                                //\n                    {                                                  // 112\n                        debugger;                                      // 113\n                        self.currentTime.set(payload.time);            // 114\n                        break;                                         // 115\n                    }                                                  //\n                                                                       //\n                case \"CRSelectClassPage_CLASS_SELECT\":                 // 119\n                    //select确定                                         //\n                    {                                                  // 120\n                        debugger;                                      // 121\n                                                                       //\n                        if (payload.currentStep == 1) {                // 123\n                            (function () {                             //\n                                                                       //\n                                var currentSwimmer = self.currentSwimmer.get();\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var isFistTime = self.isFirstTime.get();\n                                                                       //\n                                Meteor.call('add_class_to_cart', {     // 131\n                                    swimmerId: currentSwimmer._id,     // 132\n                                    classId: currentClass._id,         // 133\n                                    quantity: 1,                       // 134\n                                    swimmer: currentSwimmer,           // 135\n                                    class1: currentClass,              // 136\n                                    type: 'register', //目前不是必须         // 137\n                                                                       //\n                                    //标记购物项是否是第一次注册 用于判断 waiver form   //\n                                    isFistTime: isFistTime             // 140\n                                }, function (err, result) {            //\n                                    debugger;                          // 142\n                                    if (err) {                         // 143\n                                        alert(err.error);              // 144\n                                        console.error(err);            // 145\n                                        return; //todo  prompt         // 146\n                                    }                                  //\n                                                                       //\n                                    //selectedClasses                  //\n                                    var map = self.selectedClasses.get();\n                                    map = map.set('swimmer', currentSwimmer);\n                                    map = map.set('class1', currentClass);\n                                    self.selectedClasses.set(map);     // 153\n                                                                       //\n                                    Session.set('CART_ID', result.cartId);\n                                                                       //\n                                    console.log('step1', currentSwimmer, currentClass);\n                                                                       //\n                                    console.log('CART_ID: ', Session.get('CART_ID'));\n                                                                       //\n                                    self.currentStep.set(2);           // 163\n                                    resetDateAndTime();                // 164\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 2) {                // 170\n                            (function () {                             //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 174\n                                map = map.set('class2', currentClass);\n                                self.selectedClasses.set(map);         // 176\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 179\n                                var class1 = map.get('class1');        // 180\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 184\n                                                                       //\n                                    preferenceNum: 2,                  // 186\n                                                                       //\n                                    classId: class1._id,               // 188\n                                    swimmerId: swimmer._id,            // 189\n                                    data: currentClass                 // 190\n                                }, function (err) {                    //\n                                    if (err) {                         // 192\n                                        alert(err.error);              // 193\n                                        console.error(err);            // 194\n                                        return; //todo  prompt         // 195\n                                    }                                  //\n                                                                       //\n                                    console.log('step2', currentClass);\n                                                                       //\n                                    self.currentStep.set(3);           // 201\n                                    resetDateAndTime();                // 202\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        if (payload.currentStep == 3) {                // 208\n                            (function () {                             //\n                                                                       //\n                                //todo unify with currentStep == 2     //\n                                                                       //\n                                var currentClass = self.currentClass.get();\n                                                                       //\n                                var map = self.selectedClasses.get();  // 214\n                                map = map.set('class3', currentClass);\n                                self.selectedClasses.set(map);         // 216\n                                                                       //\n                                var swimmer = map.get('swimmer');      // 219\n                                var class1 = map.get('class1');        // 220\n                                                                       //\n                                Meteor.call('add_preference_to_cart', {\n                                    cartId: Session.get('CART_ID'),    // 224\n                                                                       //\n                                    preferenceNum: 3,                  // 226\n                                                                       //\n                                    classId: class1._id,               // 228\n                                    swimmerId: swimmer._id,            // 229\n                                    data: currentClass                 // 230\n                                }, function (err) {                    //\n                                    if (err) return; //todo  prompt    // 232\n                                                                       //\n                                    console.log('step3', currentClass);\n                                                                       //\n                                    var href = \"/classRegister/SelectClassReady\" + \"?cartId=\" + Session.get('CART_ID') + \"&swimmerId=\" + swimmer._id + \"&classId=\" + class1._id;\n                                                                       //\n                                    FlowRouter.go(href);               // 241\n                                });                                    //\n                            })();                                      //\n                        }                                              //\n                                                                       //\n                        break;                                         // 246\n                    }                                                  //\n                                                                       //\n                case \"componentWillMount_CRSelectClassPage\":           // 247\n                    {                                                  // 250\n                        //清空上一轮的选择                                     //\n                                                                       //\n                        self.currentDay.set(undefinedSelectValue);     // 253\n                        self.currentTime.set(undefinedSelectValue);    // 254\n                        self.currentClass.set(null);                   // 255\n                        self.currentStep.set(1);                       // 256\n                        //self.avaiableDays //依赖于 当前的currentLevel      //\n                        //self.avaiableTimes //依赖于 当前选中的currentDay     //\n                                                                       //\n                        self.selectedClasses.set(Immutable.Map());     // 260\n                                                                       //\n                        break;                                         // 262\n                    }                                                  //\n                case \"CRSelectClassPage_CLASS_EDIT\":                   // 264\n                    {                                                  // 265\n                        var editStep = payload.eidtStep;               // 266\n                                                                       //\n                        alert(editStep);                               // 268\n                                                                       //\n                        break;                                         // 270\n                    }                                                  //\n                case \"CRSelectClassPage_SelectedClasses_CHANGE\":       // 271\n                    {                                                  // 272\n                        var preferenceNum = payload.preferenceNum;     // 273\n                        var classData = payload.classData;             // 274\n                                                                       //\n                        var map = self.selectedClasses.get();          // 277\n                        map = map.set('class' + preferenceNum, classData);\n                        self.selectedClasses.set(map);                 // 279\n                                                                       //\n                        break;                                         // 282\n                    }                                                  //\n                                                                       //\n            }                                                          // 283\n        });                                                            //\n                                                                       //\n        /*                                                             //\n         *                                                             //\n         * ********************* wait for ******************           //\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *                                                             //\n         * */                                                          //\n                                                                       //\n        Meteor.startup(function () {                                   // 300\n                                                                       //\n            //初始化swimmer and level                                     //\n            Tracker.autorun(function () {                              // 303\n                                                                       //\n                var swimmers = self.getSwimmers().fetch();             // 305\n                                                                       //\n                if (swimmers.length) {                                 // 307\n                    self.currentSwimmer.set(swimmers[0]);              // 308\n                    //var level= App.getNextClassLevel(swimmers[0].level)\n                    //self.currentLevel.set(level) //获取比当前level更高一级的level\n                }                                                      //\n                console.log(swimmers);                                 // 312\n            });                                                        //\n                                                                       //\n            //获取当前swimmer的课数 用于判断swimmer的类型                            //\n            Tracker.autorun(function () {                              // 317\n                var currentSwimmer = self.currentSwimmer.get();        // 318\n                var appInfo = DB.App.findOne();                        // 319\n                                                                       //\n                if (!appInfo) return;                                  // 321\n                if (!currentSwimmer) return;                           // 322\n                                                                       //\n                Tracker.autorun(function () {                          // 324\n                                                                       //\n                    var nowClasses = DB.ClassesRegister.find({         // 326\n                        swimmerId: currentSwimmer._id,                 // 327\n                        status: 'normal', //不显示cancel中的和 change中的      // 328\n                        sessionId: App.info.sessionNow                 // 329\n                    }).fetch();                                        //\n                                                                       //\n                    self.nowClasses.set(nowClasses);                   // 332\n                                                                       //\n                    //self.currentSwimmerClassesRegisterInfo.set(currentSwimmerClassesRegisterInfo)\n                });                                                    //\n                Tracker.autorun(function () {                          // 338\n                                                                       //\n                    var registeredClasses = DB.ClassesRegister.find({  // 340\n                        swimmerId: currentSwimmer._id,                 // 341\n                        status: 'normal', //不显示cancel中的和 change中的      // 342\n                        sessionId: App.info.sessionRegister            // 343\n                    }).fetch();                                        //\n                    self.registeredClasses.set(registeredClasses);     // 345\n                });                                                    //\n                Tracker.autorun(function () {                          // 349\n                                                                       //\n                    var historyClasses = DB.ClassesRegister.find({     // 351\n                        swimmerId: currentSwimmer._id,                 // 352\n                        status: 'normal', //不显示cancel中的和 change中的      // 353\n                        sessionId: { $nin: [App.info.sessionNow, App.info.sessionRegister] }\n                                                                       //\n                    }).fetch();                                        //\n                    self.historyClasses.set(historyClasses);           // 357\n                });                                                    //\n                                                                       //\n                //shoppingCartClasses                                  //\n                Tracker.autorun(function () {                          // 362\n                                                                       //\n                    var shoppingCart = DB.ShoppingCart.findOne({       // 364\n                        status: 'active',                              // 365\n                        type: 'register'                               // 366\n                    });                                                //\n                                                                       //\n                    var classItems = [];                               // 369\n                    if (shoppingCart && shoppingCart.items.length) {   // 370\n                        classItems = _.filter(shoppingCart.items, function (item) {\n                            return item.class1 && item.class2 && item.class3 //完整的注册\n                             && item.swimmerId == currentSwimmer._id;  //\n                        });                                            //\n                    }                                                  //\n                                                                       //\n                    self.shoppingCartClasses.set(classItems);          // 378\n                    console.log(classItems);                           // 379\n                });                                                    //\n            });                                                        //\n                                                                       //\n            //判断swimmer是不是第一次注册                                        //\n            Tracker.autorun(function () {                              // 386\n                var nowClasses = self.nowClasses.get();                // 387\n                var registeredClasses = self.registeredClasses.get();  // 388\n                                                                       //\n                var historyClasses = self.historyClasses.get();        // 390\n                                                                       //\n                var shoppingCartClasses = self.shoppingCartClasses.get();\n                                                                       //\n                if (nowClasses.length == 0 && registeredClasses.length == 0 && historyClasses.length == 0\n                //&& shoppingCartClasses.length>0                      //\n                ) {                                                    //\n                                                                       //\n                        self.isFirstTime.set(true);                    // 401\n                    } else {                                           //\n                    self.isFirstTime.set(false);                       // 403\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //level 计算逻辑                                               //\n            //对于return back 和 new swimmer  Level不变                     //\n            //对于正在游的level＋1                                            //\n            //确定课程注册level                                              //\n            //对于return back 和 new swimmer  Level即当前level               //\n            //对于正在游的level＋1                                            //\n            Tracker.autorun(function () {                              // 415\n                var nowClasses = self.nowClasses.get();                // 416\n                var currentSwimmer = self.currentSwimmer.get();        // 417\n                                                                       //\n                if (!currentSwimmer) return;                           // 419\n                                                                       //\n                //当前session正在游                                         //\n                if (nowClasses.length > 0) {                           // 422\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level));\n                } else {                                               //\n                    self.currentLevel.set(currentSwimmer.level);       // 426\n                }                                                      //\n            });                                                        //\n                                                                       //\n            //days depend on level of swimmer                          //\n            Tracker.autorun(function () {                              // 433\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 436\n                if (!App.info) return;                                 // 437\n                                                                       //\n                var level = self.currentLevel.get();                   // 439\n                console.log('autorun level', level, App.info.sessionRegister);\n                                                                       //\n                //未满的课程                                                //\n                var classes = DB.Classes.find({                        // 444\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,                                     // 446\n                    seatsRemain: { $gt: 0 }                            // 447\n                }).fetch();                                            //\n                                                                       //\n                //已报满的课程                                               //\n                var classesNoSeatByLevel = DB.Classes.find({           // 451\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,                                     // 453\n                    seatsRemain: { $lte: 0 }                           // 454\n                }).fetch();                                            //\n                self.classesNoSeatByLevel.set(classesNoSeatByLevel);   // 456\n                                                                       //\n                console.log(level, App.info.sessionRegister, classes, classesNoSeatByLevel);\n                                                                       //\n                //debugger                                             //\n                classes = _.uniq(classes, function (item, key, a) {    // 462\n                    return item.day;                                   // 463\n                });                                                    //\n                                                                       //\n                var days = classes.map(function (v, n) {               // 466\n                    return { text: App.Config.week[v.day], value: v.day };\n                });                                                    //\n                days.sort(function (a, b) {                            // 469\n                    return a.value - b.value;                          // 470\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption);              // 474\n                                                                       //\n                self.avaiableDays.set(days);                           // 476\n                                                                       //\n                //重置day                                                //\n                //self.currentDay.set(days[0].value)                   //\n            });                                                        //\n                                                                       //\n            /// time depend on day                                     //\n            Tracker.autorun(function () {                              // 486\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 489\n                if (!App.info) return;                                 // 490\n                                                                       //\n                var currentDay = self.currentDay.get();                // 493\n                                                                       //\n                var level;                                             // 495\n                Tracker.nonreactive(function () {                      // 496\n                    level = self.currentLevel.get();                   // 497\n                });                                                    //\n                                                                       //\n                var classes = DB.Classes.find({                        // 500\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 502\n                    day: currentDay,                                   // 503\n                    seatsRemain: { $gt: 0 }                            // 504\n                }).fetch();                                            //\n                                                                       //\n                var times = classes.map(function (v, n) {              // 507\n                    return {                                           // 508\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime                             // 510\n                    };                                                 //\n                });                                                    //\n                times.sort(function (a, b) {                           // 513\n                    return a.value - b.value;                          // 514\n                });                                                    //\n                                                                       //\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption);             // 519\n                                                                       //\n                self.avaiableTimes.set(times);                         // 521\n                                                                       //\n                //重置time                                               //\n                //self.currentTime.set(times[0].value)                 //\n            });                                                        //\n                                                                       //\n            //time确定后class就确定了                                         //\n            //level + day+ time  确定一个class                             //\n            Tracker.autorun(function () {                              // 531\n                                                                       //\n                //wait for App.info ready                              //\n                App.info = App.info || DB.App.findOne();               // 534\n                if (!App.info) return;                                 // 535\n                                                                       //\n                var time = self.currentTime.get();                     // 537\n                                                                       //\n                var level = undefined,                                 // 540\n                    day = undefined;                                   //\n                Tracker.nonreactive(function () {                      // 541\n                    level = self.currentLevel.get();                   // 542\n                    day = self.currentDay.get();                       // 543\n                });                                                    //\n                                                                       //\n                var theClass = DB.Classes.find({                       // 547\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,                                     // 549\n                    day: day,                                          // 550\n                    startTime: time,                                   // 551\n                    seatsRemain: { $gt: 0 }                            // 552\n                }).fetch();                                            //\n                                                                       //\n                if (theClass.length > 1) {                             // 555\n                    console.error('Multi class match when select class ');\n                }                                                      //\n                                                                       //\n                if (theClass[0]) {                                     // 559\n                    self.currentClass.set(theClass[0]);                // 560\n                                                                       //\n                    console.log('selected class', theClass[0]);        // 562\n                }                                                      //\n            });                                                        //\n        });                                                            //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/SelectClassPage.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/SelectClassPage.store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassPage.store.jsx","sourcesContent":["/**\n * Created on 9/15/15.\n */\n\n\n{\n    //单体 在多个地方使用或在meteordata中被触发  仅初始化一次\n    //let _storeInstance=null;\n\n    Dependency.add('classRegister.SelectClassPage.store', new function () {\n\n        //if(_storeInstance) return _storeInstance;\n        //_storeInstance = this;\n\n        var self = this;\n\n\n        //this function may be called in Tracker.autorun and before  DB.Swimmers loaded\n        //so should take care\n        self.getSwimmers = function () {\n            return DB.Swimmers.find({accountId: Meteor.userId()})\n        }\n\n        //////////////////////////////////////////////////////\n        ///////////////////selection info\n        // should reset after add to\n        //选中的swimmer\n        self.currentSwimmer = new ReactiveVar()\n        //当前的level\n        self.currentLevel = new ReactiveVar()\n        //选中的day\n        self.currentDay = new ReactiveVar()\n        self.currentTime = new ReactiveVar()\n        self.currentClass = new ReactiveVar()\n        //当前的步骤\n        self.currentStep = new ReactiveVar(1)\n\n        //swimmer的class注册信息\n        self.nowClasses =new ReactiveVar([])\n        self.registeredClasses =new ReactiveVar([])\n        self.historyClasses =new ReactiveVar([])\n        self.shoppingCartClasses= new ReactiveVar([])\n\n        self.isFirstTime =new ReactiveVar(false)\n\n\n        //可选days 依赖于 当前的currentLevel\n        self.avaiableDays = new ReactiveVar([])\n        //可选时间   依赖于 当前选中的currentDay\n        self.avaiableTimes = new ReactiveVar([])\n\n\n        //Session.set('CART_ID')\n\n        //当前level 名额已报满的课程  waitinglist需要用到\n        self.classesNoSeatByLevel = new ReactiveVar([])\n\n        /*\n         * 一次流程选择的class信息  3步\n         * 使用Immutable库进行对象修改\n         * {\n         *  swimmer:\n         *  class1:{classId, swimmerId}\n         *  class2:\n         *  class3:\n         * }\n         * */\n        self.selectedClasses = new ReactiveVar(Immutable.Map())\n\n\n        var undefinedSelectValueOption = {text:'', value: ''};\n        var undefinedSelectValue = '';\n\n        //暂存购物车ID 后端会验证其有效性\n\n\n        function resetDateAndTime() {\n            self.currentDay.set(undefinedSelectValue)\n            self.currentTime.set(undefinedSelectValue)\n        }\n\n\n        self.tokenId = Dispatcher.register(function (payload) {\n            switch (payload.actionType) {\n\n                case \"CRSelectClassPage_SWIMMER_CHANGE\": //选择swimmer  level可能会变\n                {\n                    let swimmer = payload.swimmer\n                    //let level= App.getNextClassLevel(swimmer.level) //next\n\n\n                    self.currentSwimmer.set(swimmer)\n                    //self.currentLevel.set(level)\n\n                    self.currentDay.set()\n                    self.currentTime.set()\n\n                    debugger\n\n                    break;\n                }\n                case \"CRSelectClassPage_DAY_CHANGE\"://选择day\n                {\n                    debugger\n\n                    self.currentDay.set(payload.day)\n                    self.currentTime.set()\n                    break;\n                }\n\n                case \"CRSelectClassPage_TIME_CHANGE\"://选择time  确定一个class\n                {\n                    debugger\n                    self.currentTime.set(payload.time)\n                    break;\n                }\n\n\n                case \"CRSelectClassPage_CLASS_SELECT\"://select确定\n                {\n                    debugger\n\n                    if (payload.currentStep == 1) {\n\n                        let currentSwimmer = self.currentSwimmer.get()\n                        let currentClass = self.currentClass.get()\n\n                        let isFistTime = self.isFirstTime.get()\n\n\n                        Meteor.call('add_class_to_cart', {\n                            swimmerId: currentSwimmer._id,\n                            classId: currentClass._id,\n                            quantity: 1,\n                            swimmer: currentSwimmer,\n                            class1: currentClass,\n                            type:'register',  //目前不是必须\n\n                            //标记购物项是否是第一次注册 用于判断 waiver form\n                            isFistTime:isFistTime\n                        }, function (err, result) {\n                            debugger\n                            if (err) {\n                                alert(err.error)\n                                console.error(err)\n                                return; //todo  prompt\n                            }\n\n                            //selectedClasses\n                            let map = self.selectedClasses.get()\n                            map = map.set('swimmer', currentSwimmer)\n                            map = map.set('class1', currentClass)\n                            self.selectedClasses.set(map)\n\n\n                            Session.set('CART_ID', result.cartId)\n\n                            console.log('step1', currentSwimmer, currentClass)\n\n                            console.log('CART_ID: ',Session.get('CART_ID'))\n\n\n                            self.currentStep.set(2)\n                            resetDateAndTime();\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == 2) {\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class2', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 2,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) {\n                                alert(err.error)\n                                console.error(err)\n                                return; //todo  prompt\n                            }\n\n                            console.log('step2', currentClass)\n\n\n                            self.currentStep.set(3)\n                            resetDateAndTime()\n                        })\n\n\n                    }\n\n                    if (payload.currentStep == 3) {\n\n                        //todo unify with currentStep == 2\n\n                        let currentClass = self.currentClass.get()\n\n                        let map = self.selectedClasses.get()\n                        map = map.set('class3', currentClass)\n                        self.selectedClasses.set(map)\n\n\n                        let swimmer = map.get('swimmer')\n                        let class1 = map.get('class1')\n\n\n                        Meteor.call('add_preference_to_cart', {\n                            cartId: Session.get('CART_ID'),\n\n                            preferenceNum: 3,\n\n                            classId: class1._id,\n                            swimmerId: swimmer._id,\n                            data: currentClass\n                        }, function (err) {\n                            if (err) return; //todo  prompt\n\n                            console.log('step3', currentClass)\n\n                            var href=\"/classRegister/SelectClassReady\"\n                                    +\"?cartId=\"+Session.get('CART_ID')\n                                    +\"&swimmerId=\"+swimmer._id\n                                    +\"&classId=\"+class1._id\n\n                            FlowRouter.go(href);\n                        })\n\n                    }\n\n                    break;\n                }\n\n                case \"componentWillMount_CRSelectClassPage\":\n                {\n                    //清空上一轮的选择\n\n                    self.currentDay.set(undefinedSelectValue)\n                    self.currentTime.set(undefinedSelectValue)\n                    self.currentClass.set(null)\n                    self.currentStep.set(1)\n                    //self.avaiableDays //依赖于 当前的currentLevel\n                    //self.avaiableTimes //依赖于 当前选中的currentDay\n\n                    self.selectedClasses.set(Immutable.Map())\n\n                    break;\n                }\n                case \"CRSelectClassPage_CLASS_EDIT\":\n                {\n                    var editStep = payload.eidtStep\n\n                    alert(editStep)\n\n                    break;\n                }\n                case \"CRSelectClassPage_SelectedClasses_CHANGE\":{\n                    let preferenceNum = payload.preferenceNum\n                    let classData = payload.classData\n\n\n                    let map = self.selectedClasses.get()\n                    map = map.set('class'+preferenceNum, classData)\n                    self.selectedClasses.set(map)\n\n\n                    break\n                }\n\n\n\n\n\n            }\n        });\n\n\n        /*\n         *\n         * ********************* wait for ******************\n         * wrap in Meteor.startup for Tracker.autorun can run before cellections loaded\n         *\n         * */\n\n        Meteor.startup(function () {\n\n            //初始化swimmer and level\n            Tracker.autorun(function () {\n\n                var swimmers = self.getSwimmers().fetch()\n\n                if (swimmers.length) {\n                    self.currentSwimmer.set(swimmers[0])\n                    //var level= App.getNextClassLevel(swimmers[0].level)\n                    //self.currentLevel.set(level) //获取比当前level更高一级的level\n                }\n                console.log(swimmers)\n\n            })\n\n            //获取当前swimmer的课数 用于判断swimmer的类型\n            Tracker.autorun(function () {\n                var currentSwimmer = self.currentSwimmer.get()\n                var appInfo = DB.App.findOne()\n\n                if(!appInfo) return;\n                if(!currentSwimmer) return;\n\n                Tracker.autorun(function () {\n\n                    var nowClasses = DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId: App.info.sessionNow\n                    }).fetch();\n\n                    self.nowClasses.set(nowClasses)\n\n                    //self.currentSwimmerClassesRegisterInfo.set(currentSwimmerClassesRegisterInfo)\n\n\n                })\n                Tracker.autorun(function () {\n\n                    var registeredClasses = DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId: App.info.sessionRegister\n                    }).fetch();\n                    self.registeredClasses.set(registeredClasses)\n\n\n                })\n                Tracker.autorun(function () {\n\n                    var historyClasses=DB.ClassesRegister.find({\n                        swimmerId: currentSwimmer._id,\n                        status:'normal',  //不显示cancel中的和 change中的\n                        sessionId:{$nin:[ App.info.sessionNow , App.info.sessionRegister]}\n\n                    }).fetch();\n                    self.historyClasses.set(historyClasses)\n\n                })\n\n                //shoppingCartClasses\n                Tracker.autorun(function () {\n\n                    var shoppingCart= DB.ShoppingCart.findOne({\n                        status:'active',\n                        type:'register'\n                    })\n\n                    var classItems=[];\n                    if(shoppingCart && shoppingCart.items.length){\n                        classItems = _.filter(shoppingCart.items,function(item){\n                            return item.class1 && item.class2 && item.class3   //完整的注册\n                                &&  item.swimmerId == currentSwimmer._id\n\n                        })\n                    }\n\n                    self.shoppingCartClasses.set(classItems)\n                    console.log(classItems)\n\n                })\n\n            })\n\n            //判断swimmer是不是第一次注册\n            Tracker.autorun(function () {\n                let nowClasses =self.nowClasses.get()\n                let registeredClasses =self.registeredClasses.get()\n\n                let historyClasses =self.historyClasses.get()\n\n                let shoppingCartClasses =self.shoppingCartClasses.get()\n\n\n                if(nowClasses.length==0\n                    && registeredClasses.length ==0\n                    && historyClasses.length ==0\n                    //&& shoppingCartClasses.length>0\n                ){\n\n                    self.isFirstTime.set(true)\n                }else{\n                    self.isFirstTime.set(false)\n                }\n\n\n            })\n\n                //level 计算逻辑\n            //对于return back 和 new swimmer  Level不变\n            //对于正在游的level＋1\n            //确定课程注册level\n            //对于return back 和 new swimmer  Level即当前level\n            //对于正在游的level＋1\n            Tracker.autorun(function(){\n                var nowClasses =self.nowClasses.get()\n                var currentSwimmer = self.currentSwimmer.get()\n\n                if(!currentSwimmer) return;\n\n                //当前session正在游\n                if(nowClasses.length>0){\n                    self.currentLevel.set(App.getNextClassLevel(currentSwimmer.level))\n\n                }else{\n                    self.currentLevel.set(currentSwimmer.level)\n                }\n\n            })\n\n\n            //days depend on level of swimmer\n            Tracker.autorun(function () {\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n                var level = self.currentLevel.get();\n                console.log('autorun level', level, App.info.sessionRegister)\n\n\n                //未满的课程\n                let classes = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                //已报满的课程\n                let classesNoSeatByLevel = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, //level session\n                    levels: level,\n                    seatsRemain:{$lte:0}\n                }).fetch()\n                self.classesNoSeatByLevel.set(classesNoSeatByLevel)\n\n\n                console.log(level, App.info.sessionRegister, classes,classesNoSeatByLevel)\n\n                //debugger\n                classes = _.uniq(classes, function (item, key, a) {\n                    return item.day;\n                });\n\n                let days = classes.map(function (v, n) {\n                    return {text: App.Config.week[v.day], value: v.day}\n                })\n                days.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n                //add an empty value to prevent browser init select value  use the first item\n                days.unshift(undefinedSelectValueOption)\n\n                self.avaiableDays.set(days)\n\n\n                //重置day\n                //self.currentDay.set(days[0].value)\n\n\n            });\n\n            /// time depend on day\n            Tracker.autorun(function () {\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n\n                var currentDay = self.currentDay.get();\n\n                var level\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                });\n\n                let classes = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: currentDay,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                let times = classes.map(function (v, n) {\n                    return {\n                        text: App.num2time(v.startTime) + \"-\" + App.num2time(v.endTime),\n                        value: v.startTime\n                    }\n                })\n                times.sort(function (a, b) {\n                    return (a.value - b.value);\n                })\n\n\n                //add an empty value to prevent browser init select value  use the first item\n                times.unshift(undefinedSelectValueOption)\n\n                self.avaiableTimes.set(times)\n\n                //重置time\n                //self.currentTime.set(times[0].value)\n\n\n            });\n\n            //time确定后class就确定了\n            //level + day+ time  确定一个class\n            Tracker.autorun(function () {\n\n                //wait for App.info ready\n                App.info = App.info || DB.App.findOne()\n                if (!App.info) return;\n\n                let time = self.currentTime.get()\n\n\n                let level, day;\n                Tracker.nonreactive(function () {\n                    level = self.currentLevel.get()\n                    day = self.currentDay.get()\n                });\n\n\n                let theClass = DB.Classes.find({\n                    sessionId: App.info.sessionRegister, // session level day\n                    levels: level,\n                    day: day,\n                    startTime: time,\n                    seatsRemain:{$gt:0}\n                }).fetch()\n\n                if (theClass.length > 1) {\n                    console.error('Multi class match when select class ')\n                }\n\n                if (theClass[0]) {\n                    self.currentClass.set(theClass[0])\n\n                    console.log('selected class', theClass[0])\n                }\n\n\n            });\n\n\n        })\n\n\n    });\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/SelectClassReadyPage.jsx                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/16/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    //let CRSelectClassPageStore;                                      //\n    //Dependency.autorun(function () {                                 //\n    //    CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    //});                                                              //\n                                                                       //\n    Cal.CRSelectClassReadyPage = React.createClass({                   // 11\n        displayName: 'CRSelectClassReadyPage',                         //\n                                                                       //\n        propTypes: {                                                   // 12\n            cartId: React.PropTypes.string,                            // 13\n            swimmerId: React.PropTypes.string,                         // 14\n            classId: React.PropTypes.string                            // 15\n                                                                       //\n        },                                                             //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 19\n        getMeteorData: function () {                                   // 20\n                                                                       //\n            Meteor.subscribe(\"activeShoppingCart\");                    // 22\n                                                                       //\n            var shoppingCart = DB.ShoppingCart.findOne({               // 25\n                _id: this.props.cartId,                                // 26\n                type: 'register',                                      // 27\n                status: 'active'                                       // 28\n            });                                                        //\n                                                                       //\n            console.log(shoppingCart);                                 // 32\n                                                                       //\n            debugger;                                                  // 34\n                                                                       //\n            var cartItem = {};                                         // 36\n            if (shoppingCart && shoppingCart.items) {                  // 37\n                                                                       //\n                cartItem = _.findWhere(shoppingCart.items, {           // 39\n                    swimmerId: this.props.swimmerId,                   // 40\n                    classId: this.props.classId                        // 41\n                });                                                    //\n            }                                                          //\n                                                                       //\n            return {                                                   // 48\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n                                                                       //\n                cartItem: cartItem                                     // 51\n            };                                                         //\n        },                                                             //\n                                                                       //\n        goToEdit: function (swimmerId, classId, preferenceNum) {       // 55\n                                                                       //\n            var url = '/classRegister/SelectClassEdit' + '?swimmerId=' + swimmerId + '&classId=' + classId + '&preferenceNum=' + preferenceNum + '&cartId=' + this.props.cartId;\n                                                                       //\n            FlowRouter.go(url);                                        // 63\n        },                                                             //\n                                                                       //\n        render: function () {                                          // 67\n            var self = this;                                           // 68\n                                                                       //\n            console.log('CRSelectClassReadyPage cart', this.data.cartItem);\n                                                                       //\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //                                                         //\n            //let class1 = this.data.selectedClassesMap.get('class1')  //\n            //let class2 = this.data.selectedClassesMap.get('class2')  //\n            //let class3 = this.data.selectedClassesMap.get('class3')  //\n                                                                       //\n            if (this.data.cartItem) {                                  // 79\n                var swimmer = this.data.cartItem['swimmer'];           // 80\n                                                                       //\n                var class1 = this.data.cartItem['class1'];             // 82\n                var class2 = this.data.cartItem['class2'];             // 83\n                var class3 = this.data.cartItem['class3'];             // 84\n            }                                                          //\n                                                                       //\n            return React.createElement(                                // 89\n                'div',                                                 //\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.List,                                           // 90\n                    { theme: 'inset' },                                //\n                    React.createElement(                               //\n                        RC.Item,                                       // 91\n                        { theme: 'body' },                             //\n                        React.createElement(                           //\n                            'h2',                                      //\n                            { className: 'brand' },                    //\n                            'Register for spring 2015'                 //\n                        ),                                             //\n                        swimmer ? React.createElement(                 //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Swimmer:'                             //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                swimmer.name                           //\n                            )                                          //\n                        ) : '',                                        //\n                        class1 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 1'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class1.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                React.createElement(                   //\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 1) },\n                                    'Edit'                             //\n                                )                                      //\n                            )                                          //\n                        ) : '',                                        //\n                        class2 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 2'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class2.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                React.createElement(                   //\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 2) },\n                                    'Edit'                             //\n                                )                                      //\n                            )                                          //\n                        ) : '',                                        //\n                        class3 ? React.createElement(                  //\n                            'div',                                     //\n                            { className: 'row' },                      //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                'Preference 3'                         //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col' },                  //\n                                class3.name                            //\n                            ),                                         //\n                            React.createElement(                       //\n                                'div',                                 //\n                                { className: 'col col-20' },           //\n                                React.createElement(                   //\n                                    'button',                          //\n                                    { className: 'button button-clear',\n                                        onClick: this.goToEdit.bind(self, swimmer._id, class1._id, 3) },\n                                    'Edit'                             //\n                                )                                      //\n                            )                                          //\n                        ) : ''                                         //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.URL,                                        // 159\n                        { href: '/classRegister/SelectClass' },        //\n                        React.createElement(                           //\n                            RC.Button,                                 // 160\n                            { name: 'button', type: 'submit',          //\n                                theme: 'full', buttonColor: 'brand' },\n                            'Register More'                            //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        RC.URL,                                        // 168\n                        { href: '/classRegister/RegBillingPage' },     //\n                        React.createElement(                           //\n                            RC.Button,                                 // 169\n                            { name: 'button', type: 'submit',          //\n                                theme: 'full', buttonColor: 'brand' },\n                            'Checkout'                                 //\n                        )                                              //\n                    )                                                  //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/SelectClassReadyPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/SelectClassReadyPage.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/SelectClassReadyPage.jsx","sourcesContent":["/**\n * Created on 9/16/15.\n */\n\n{\n    //let CRSelectClassPageStore;\n    //Dependency.autorun(function () {\n    //    CRSelectClassPageStore = Dependency.get('classRegister.SelectClassPage.store');\n    //});\n\n    Cal.CRSelectClassReadyPage = React.createClass({\n        propTypes:{\n            cartId:React.PropTypes.string,\n            swimmerId:React.PropTypes.string,\n            classId:React.PropTypes.string\n\n        },\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            Meteor.subscribe(\"activeShoppingCart\");\n\n\n            var shoppingCart= DB.ShoppingCart.findOne({\n                _id:this.props.cartId,\n                type:'register',\n                status:'active'\n            })\n\n\n            console.log(shoppingCart)\n\n            debugger\n\n            var cartItem={}\n            if(shoppingCart && shoppingCart.items){\n\n                cartItem= _.findWhere(shoppingCart.items,{\n                    swimmerId:this.props.swimmerId,\n                    classId:this.props.classId\n                })\n\n            }\n\n\n\n            return {\n                //selectedClassesMap: CRSelectClassPageStore.selectedClasses.get()\n\n                cartItem:cartItem\n            }\n        },\n\n        goToEdit(swimmerId, classId, preferenceNum){\n\n            var url = '/classRegister/SelectClassEdit'\n                + '?swimmerId=' + swimmerId\n                + '&classId=' + classId\n                + '&preferenceNum=' + preferenceNum\n                + '&cartId=' + this.props.cartId\n\n            FlowRouter.go(url);\n\n        },\n\n        render() {\n            let self = this\n\n\n            console.log('CRSelectClassReadyPage cart',this.data.cartItem)\n\n            //let swimmer = this.data.selectedClassesMap.get('swimmer')\n            //\n            //let class1 = this.data.selectedClassesMap.get('class1')\n            //let class2 = this.data.selectedClassesMap.get('class2')\n            //let class3 = this.data.selectedClassesMap.get('class3')\n\n            if(this.data.cartItem){\n                var swimmer = this.data.cartItem['swimmer']\n\n                var class1 = this.data.cartItem['class1']\n                var class2 = this.data.cartItem['class2']\n                var class3 = this.data.cartItem['class3']\n            }\n\n\n\n            return <div>\n                <RC.List theme=\"inset\">\n                    <RC.Item theme=\"body\">\n                        <h2 className=\"brand\">Register for spring 2015</h2>\n                        {\n                            swimmer ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Swimmer:\n                                </div>\n                                <div className=\"col\">\n                                    {swimmer.name}\n                                </div>\n                            </div> : ''\n                        }\n\n\n                        {\n                            class1 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 1\n                                </div>\n                                <div className=\"col\">\n                                    {class1.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,1)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class2 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 2\n                                </div>\n                                <div className=\"col\">\n                                    {class2.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,2)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n                        {\n                            class3 ? <div className=\"row\">\n                                <div className=\"col\">\n                                    Preference 3\n                                </div>\n                                <div className=\"col\">\n                                    {class3.name}\n                                </div>\n                                <div className=\"col col-20\">\n                                    <button className=\"button button-clear\"\n                                            onClick={this.goToEdit.bind(self,swimmer._id,class1._id,3)}>Edit\n                                    </button>\n                                </div>\n\n                            </div> : ''\n\n                        }\n\n                    </RC.Item>\n\n                    <RC.URL href=\"/classRegister/SelectClass\">\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Register More\n                        </RC.Button>\n\n                    </RC.URL>\n\n\n                    <RC.URL href=\"/classRegister/RegBillingPage\">\n                        <RC.Button name=\"button\" type=\"submit\"\n                                   theme=\"full\" buttonColor=\"brand\">\n                            Checkout\n                        </RC.Button>\n\n                    </RC.URL>\n\n                </RC.List>\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/ShoppingCart.model.jsx                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/19/15.                                                 //\n */                                                                    //\n                                                                       //\n//@@@@@@@@@ TODO this file is not used now and will be deleted later.  //\n//All the logic have been moved to server side as meteor.methods       //\n                                                                       //\n//ShoppingCart  购物车操作函数                                                //\n//不是一个store 所以不接受消息，可暴露set函数。 在需要的地方直接引用和调用                            //\n//todo 购物车的所有操作全部通过 Meteor.call 完成？ 检查哪些数据避免暴露到前端                      //\n                                                                       //\n/******************购物车数据格式******************                           //\n                                                                       //\n let shoppingCart = {                                                  //\n status: 'active',                                                     //\n accountId: 'account1',                                                //\n sessionId: 'testSession2',                                            //\n items: [item]                                                         //\n }                                                                     //\n                                                                       //\n //swimmer._id  和 class1._id 确定一个item                                  //\n //class1会占用class名额                                                    //\n //class2 class3为用户的备选class                                            //\n //这里不使用id是为了减少账单信息查询 也可以保存用户购物时各项目的信息                                 //\n item＝{                                                                //\n    swimmer:object,                                                    //\n    class1:object,                                                     //\n    class2:object,                                                     //\n    class3:object                                                      //\n }                                                                     //\n                                                                       //\n****************************************/                              //\n                                                                       //\n{                                                                      // 34\n    //用于获取用户当前的选择信息                                                    //\n    var selectClassStore = undefined;                                  // 36\n    Dependency.autorun(function () {                                   // 37\n        selectClassStore = Dependency.get('classRegister.SelectClassPage.store');\n    });                                                                //\n                                                                       //\n    Dependency.add('classRegister.ShoppingCart.model', new function () {\n                                                                       //\n        /////////public ///////////                                    //\n        function getShoppingCartId() {                                 // 46\n            //active                                                   //\n            var cart = DB.ShoppingCart.findOne();                      // 48\n            debugger;                                                  // 49\n            return cart && cart._id;                                   // 50\n        }                                                              //\n                                                                       //\n        //添加选课纪录 step1                                                 //\n        function addClassRegister(cartId, item) {                      // 54\n                                                                       //\n            DB.ClassesRegister.insert({                                // 56\n                sessionId: App.info.sessionRegister,                   // 57\n                swimmerId: item.swimmer._id,                           // 58\n                classId: item.class1._id,                              // 59\n                carted: {                                              // 60\n                    shoppingCardId: cartId                             // 61\n                }                                                      //\n                                                                       //\n            }, function (err, _id) {                                   //\n                err && console.error(err);                             // 65\n                                                                       //\n                //self.currentStep.set(2)                              //\n                //self.currentDay.set({value:false}) //重置时间            //\n            });                                                        //\n        }                                                              //\n                                                                       //\n        //{swimmerId ,classId}                                         //\n        function addShoppingItem(item) {                               // 73\n            //是否重复逻辑                                                   //\n            //push                                                     //\n                                                                       //\n            var cartId = getShoppingCartId();                          // 77\n            if (cartId) {                                              // 78\n                                                                       //\n                //todo !!!class是否重复的判断逻辑  一个swimmer对特定class只能选一个       //\n                //改用meteor.call 后台判断应更方便                               //\n                DB.ShoppingCart.update({                               // 82\n                    '_id': cartId                                      // 83\n                }, {                                                   //\n                    '$push': {                                         // 85\n                        'items': item                                  // 86\n                    }                                                  //\n                }, function (err, _id) {                               //\n                    err && console.error(err);                         // 90\n                                                                       //\n                    //添加选课纪录                                           //\n                    if (!err) addClassRegister(cartId, item);          // 93\n                });                                                    //\n            } else {                                                   //\n                                                                       //\n                var shoppingCart = {                                   // 98\n                    status: 'active',                                  // 99\n                    accountId: Meteor.userId(),                        // 100\n                    sessionId: App.info.sessionRegister,               // 101\n                    items: [item]                                      // 102\n                };                                                     //\n                                                                       //\n                //创建购物车                                                //\n                DB.ShoppingCart.insert(shoppingCart, function (err, cartId) {\n                    if (err) {                                         // 107\n                        console.error(err);                            // 108\n                        return;                                        // 109\n                    }                                                  //\n                    //添加选课纪录                                           //\n                    if (!err) addClassRegister(cartId, item);          // 112\n                });                                                    //\n            }                                                          //\n        }                                                              //\n                                                                       //\n        /*******                                                       //\n          preferenceNum: {Number}                                      //\n         paramObj:{                                                    //\n            'swimmer': swimmer,                                        //\n             'class1':  class1,                                        //\n             data: currentClass                                        //\n         }                                                             //\n         **/                                                           //\n        function addClassPreference(preferenceNum, paramObj, callback) {\n            var cartId = getShoppingCartId();                          // 128\n                                                                       //\n            paramObj.preferenceNum = preferenceNum;                    // 130\n                                                                       //\n            if (cartId) {                                              // 132\n                paramObj.cartId = cartId;                              // 133\n                                                                       //\n                Meteor.call('upsertClassPreference', paramObj, function (error, result) {\n                    callback && callback(error, result);               // 139\n                });                                                    //\n            } else {                                                   //\n                callback && callback({ info: 'there is no valid cart' });\n            }                                                          //\n        }                                                              //\n                                                                       //\n        /////////private ///////////                                   //\n                                                                       //\n        //interface                                                    //\n        return {                                                       // 151\n            getShoppingCartId: getShoppingCartId,                      // 152\n            addClassRegister: addClassRegister,                        // 153\n            addShoppingItem: addShoppingItem,                          // 154\n            addClassPreference: addClassPreference                     // 155\n        };                                                             //\n    }());                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/ShoppingCart.model.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/ShoppingCart.model.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/ShoppingCart.model.jsx","sourcesContent":["/**\n * Created on 9/19/15.\n */\n\n//@@@@@@@@@ TODO this file is not used now and will be deleted later.\n//All the logic have been moved to server side as meteor.methods\n\n//ShoppingCart  购物车操作函数\n//不是一个store 所以不接受消息，可暴露set函数。 在需要的地方直接引用和调用\n//todo 购物车的所有操作全部通过 Meteor.call 完成？ 检查哪些数据避免暴露到前端\n\n/******************购物车数据格式******************\n\n let shoppingCart = {\n status: 'active',\n accountId: 'account1',\n sessionId: 'testSession2',\n items: [item]\n }\n\n //swimmer._id  和 class1._id 确定一个item\n //class1会占用class名额\n //class2 class3为用户的备选class\n //这里不使用id是为了减少账单信息查询 也可以保存用户购物时各项目的信息\n item＝{\n    swimmer:object,\n    class1:object,\n    class2:object,\n    class3:object\n }\n\n****************************************/\n\n{\n    //用于获取用户当前的选择信息\n    let selectClassStore;\n    Dependency.autorun(function () {\n        selectClassStore = Dependency.get('classRegister.SelectClassPage.store');\n    });\n\n\n    Dependency.add('classRegister.ShoppingCart.model', new function () {\n\n\n        /////////public ///////////\n        function getShoppingCartId() {\n            //active\n            var cart = DB.ShoppingCart.findOne()\n            debugger\n            return cart && cart._id\n        }\n\n        //添加选课纪录 step1\n        function addClassRegister(cartId, item) {\n\n            DB.ClassesRegister.insert({\n                sessionId: App.info.sessionRegister,\n                swimmerId: item.swimmer._id,\n                classId: item.class1._id,\n                carted: {\n                    shoppingCardId: cartId\n                }\n\n            }, function (err, _id) {\n                err && console.error(err)\n\n                //self.currentStep.set(2)\n                //self.currentDay.set({value:false}) //重置时间\n            })\n        }\n\n        //{swimmerId ,classId}\n        function addShoppingItem(item) {\n            //是否重复逻辑\n            //push\n\n            var cartId = getShoppingCartId()\n            if (cartId) {\n\n                //todo !!!class是否重复的判断逻辑  一个swimmer对特定class只能选一个\n                //改用meteor.call 后台判断应更方便\n                DB.ShoppingCart.update({\n                        '_id': cartId\n                    }, {\n                        '$push': {\n                            'items': item\n                        }\n                    }\n                    , function (err, _id) {\n                        err && console.error(err)\n\n                        //添加选课纪录\n                        if(!err) addClassRegister(cartId, item)\n                    })\n\n            } else {\n\n                let shoppingCart = {\n                    status: 'active',\n                    accountId: Meteor.userId(),\n                    sessionId: App.info.sessionRegister,\n                    items: [item]\n                }\n\n                //创建购物车\n                DB.ShoppingCart.insert(shoppingCart, function (err, cartId) {\n                    if (err) {\n                        console.error(err)\n                        return\n                    }\n                    //添加选课纪录\n                    if(!err) addClassRegister(cartId, item)\n                })\n            }\n\n        }\n\n        /*******\n\n         preferenceNum: {Number}\n         paramObj:{\n            'swimmer': swimmer,\n             'class1':  class1,\n             data: currentClass\n         }\n         **/\n        function addClassPreference(preferenceNum, paramObj,callback) {\n            var cartId = getShoppingCartId()\n\n            paramObj.preferenceNum = preferenceNum\n\n            if (cartId) {\n                paramObj.cartId = cartId;\n\n                Meteor.call(\n                    'upsertClassPreference',\n                    paramObj,\n                    function (error, result) {\n                        callback && callback(error, result)\n                    })\n            } else {\n                callback && callback({info:'there is no valid cart'})\n            }\n        }\n\n\n        /////////private ///////////\n\n\n        //interface\n        return {\n            getShoppingCartId: getShoppingCartId,\n            addClassRegister: addClassRegister,\n            addShoppingItem: addShoppingItem,\n            addClassPreference: addClassPreference\n        }\n\n\n    })\n\n\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/classRegisterViewControl.jsx              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n                                                                       //\n//{                                                                    //\n//    let classRegisterStore;                                          //\n//    Dependency.autorun(function () {                                 //\n//        classRegisterStore = Dependency.get('ClassRegister.ViewControl.store');\n//    });                                                              //\n//                                                                     //\n//    Cal.CRClassRegisterViewControl = React.createClass({             //\n//                                                                     //\n//        mixins: [ReactMeteorData],                                   //\n//        getMeteorData() {                                            //\n//                                                                     //\n//                                                                     //\n//                                                                     //\n//            return {                                                 //\n//                registerStage:classRegisterStore.registerStage.get(),\n//                isActive:classRegisterStore.getCurrentClassCount().count(), //当前session是否有课程\n//                hasHistory:classRegisterStore.getHistoryClassCount().count()  //上个session是否有课程\n//            }                                                        //\n//        },                                                           //\n//        getRegisterView(){                                           //\n//                                                                     //\n//                                                                     //\n//            debugger                                                 //\n//            if(this.data.registerStage ==1){//                       //\n//                console.log('stage1')                                //\n//                                                                     //\n//                return <Cal.CRBookTheSameTimePage />                 //\n//                                                                     //\n//            }else if(this.data.registerStage ==2){//current可自由选择     //\n//                                                                     //\n//                return <Cal.CRSelectClassPage />                     //\n//                                                                     //\n//            }else if(this.data.registerStage ==3){//return user可选择   //\n//                                                                     //\n//                return <Cal.CRSelectClassPage />                     //\n//                                                                     //\n//            }else if(this.data.registerStage ==4){//所有用户可选择          //\n//                                                                     //\n//                return <Cal.CRSelectClassPage />                     //\n//                                                                     //\n//            }                                                        //\n//                                                                     //\n//                                                                     //\n//        },                                                           //\n//                                                                     //\n//        render() {                                                   //\n//                                                                     //\n//                                                                     //\n//            return this.getRegisterView()                            //\n//        }                                                            //\n//                                                                     //\n//    })                                                               //\n//}                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/classRegisterViewControl.jsx","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/client/app/class.register/classRegisterViewControl.jsx"}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/classRegisterViewControl.store.jsx        //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n                                                                       //\nDependency.add('ClassRegister.ViewControl.store', new function () {    // 5\n                                                                       //\n    var self = this;                                                   // 7\n                                                                       //\n    //定义一个数据源 leftNav打开关闭                                              //\n    /*                                                                 //\n        0  下个session的注册尚未开始 本session已关闭                                //\n        1  第一阶段                                                        //\n        2  第2阶段                                                        //\n        3  第3阶段                                                        //\n        4  第4阶段                                                        //\n        5  已经过了第4个阶段 但仍开放注册？                                           //\n         目前不是server side render 真正处于那个阶段 后端仍需check                     //\n     * */                                                              //\n    self.registerStage = new ReactiveVar(1);                           // 21\n                                                                       //\n    self.appInfo = new ReactiveVar(1);                                 // 23\n                                                                       //\n    self.getCurrentClassCount = function () {                          // 27\n        var appInfo = self.appInfo.get();                              // 28\n                                                                       //\n        //if(!App.info) return;                                        //\n        return DB.ClassesRegister.find({                               // 31\n            accountId: Meteor.userId(),                                // 32\n            sessionId: appInfo && appInfo.sessionNow                   // 33\n        });                                                            //\n    };                                                                 //\n                                                                       //\n    self.getHistoryClassCount = function () {                          // 41\n        //if(!App.info) return;                                        //\n        var appInfo = self.appInfo.get();                              // 43\n                                                                       //\n        return DB.ClassesRegister.find({                               // 45\n            accountId: Meteor.userId(),                                // 46\n            sessionId: { $nin: [appInfo && appInfo.sessionNow, appInfo && appInfo.sessionRegister] }\n        });                                                            //\n    };                                                                 //\n                                                                       //\n    //当前时间                                                             //\n    function getStage() {}                                             // 54\n    //meteor  call                                                     //\n                                                                       //\n    //acount 是否有swimmer正在参与课程                                          //\n                                                                       //\n    self.tokenId = Dispatcher.register(function (payload) {            // 57\n        switch (payload.actionType) {                                  // 63\n                                                                       //\n            case \"CRRegistraionInfoPage_CONTINUE\":                     // 66\n                {                                                      // 66\n                                                                       //\n                    var registerStage = self.registerStage.get();      // 68\n                    var isActive = self.getCurrentClassCount().count();\n                    var hasHistory = self.getHistoryClassCount().count();\n                                                                       //\n                    debugger;                                          // 73\n                    //var registerHref=\"/classRegister/register\"       //\n                                                                       //\n                    var commonRegisterPage = \"/classRegister/SelectClass\";\n                    var BookTheSameTimePage = \"/classRegister/BookTheSameTimePage\";\n                                                                       //\n                    if (registerStage == 1) {                          // 79\n                        //                                             //\n                                                                       //\n                        if (isActive) {                                // 81\n                                                                       //\n                            FlowRouter.go(BookTheSameTimePage);        // 83\n                        } else {                                       //\n                            if (hasHistory) {                          // 86\n                                                                       //\n                                alert('第三阶段再来');                       // 88\n                            } else {                                   //\n                                                                       //\n                                alert('第四阶段再来');                       // 92\n                            }                                          //\n                        }                                              //\n                    } else if (registerStage == 2) {                   //\n                        //current可自由选择                                 //\n                                                                       //\n                        if (isActive) {                                // 98\n                                                                       //\n                            FlowRouter.go(commonRegisterPage);         // 100\n                        } else {                                       //\n                            if (hasHistory) {                          // 103\n                                                                       //\n                                alert('第三阶段再来');                       // 105\n                            } else {                                   //\n                                                                       //\n                                alert('第四阶段再来');                       // 109\n                            }                                          //\n                        }                                              //\n                    } else if (registerStage == 3) {                   //\n                        //return user可选择                               //\n                        if (isActive) {                                // 114\n                                                                       //\n                            FlowRouter.go(commonRegisterPage);         // 116\n                        } else {                                       //\n                            if (hasHistory) {                          // 119\n                                                                       //\n                                FlowRouter.go(commonRegisterPage);     // 121\n                                // alert('第三阶段再来')                     //\n                            } else {                                   //\n                                                                       //\n                                    alert('第四阶段再来');                   // 126\n                                }                                      //\n                        }                                              //\n                    } else if (registerStage == 4) {                   //\n                        //所有用户可选择                                      //\n                                                                       //\n                        FlowRouter.go(commonRegisterPage);             // 134\n                    }                                                  //\n                                                                       //\n                    break;                                             // 138\n                }                                                      //\n                                                                       //\n        }                                                              // 139\n    });                                                                //\n                                                                       //\n    Meteor.startup(function () {                                       // 146\n        Meteor.subscribe('registerInfoByAccountId', Meteor.userId());  // 147\n                                                                       //\n        Tracker.autorun(function () {                                  // 150\n            //if(!DB.Swimmers) return;                                 //\n                                                                       //\n            var appInfo = DB.App.findOne();                            // 153\n                                                                       //\n            if (appInfo) {                                             // 155\n                self.appInfo.set(appInfo);                             // 156\n                self.registerStage.set(appInfo.registerStage);         // 157\n            }                                                          //\n        });                                                            //\n    });                                                                //\n}());                                                                  //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/classRegisterViewControl.store.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/classRegisterViewControl.store.jsx"],"names":[],"mappings":"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","file":"/client/app/class.register/classRegisterViewControl.store.jsx","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\nDependency.add('ClassRegister.ViewControl.store',new function(){\n\n    var self = this;\n\n    //定义一个数据源 leftNav打开关闭\n    /*\n        0  下个session的注册尚未开始 本session已关闭\n        1  第一阶段\n        2  第2阶段\n        3  第3阶段\n        4  第4阶段\n        5  已经过了第4个阶段 但仍开放注册？\n\n        目前不是server side render 真正处于那个阶段 后端仍需check\n\n    * */\n    self.registerStage = new ReactiveVar(1)\n\n    self.appInfo = new ReactiveVar(1)\n\n\n\n    self.getCurrentClassCount= function(){\n        var appInfo= self.appInfo.get()\n\n        //if(!App.info) return;\n        return DB.ClassesRegister.find({\n            accountId:Meteor.userId(),\n            sessionId:appInfo && appInfo.sessionNow\n        })\n\n    }\n\n\n\n\n    self.getHistoryClassCount= function(){\n        //if(!App.info) return;\n        var appInfo= self.appInfo.get()\n\n        return DB.ClassesRegister.find({\n            accountId:Meteor.userId(),\n            sessionId:{$nin:[appInfo && appInfo.sessionNow , appInfo && appInfo.sessionRegister]}\n        })\n\n    }\n\n\n     //当前时间\n    function getStage(){\n        //meteor  call\n\n    }\n\n    //acount 是否有swimmer正在参与课程\n\n\n    self.tokenId = Dispatcher.register(function(payload){\n        switch(payload.actionType){\n\n\n            case \"CRRegistraionInfoPage_CONTINUE\":{\n\n                var registerStage = self.registerStage.get()\n                var isActive = self.getCurrentClassCount().count()\n                var hasHistory = self.getHistoryClassCount().count()\n\n\n                debugger\n                //var registerHref=\"/classRegister/register\"\n\n                var commonRegisterPage = \"/classRegister/SelectClass\"\n                var BookTheSameTimePage =\"/classRegister/BookTheSameTimePage\"\n\n                if(registerStage ==1){//\n\n                    if(isActive){\n\n                        FlowRouter.go(BookTheSameTimePage);\n\n                    }else{\n                        if(hasHistory){\n\n                            alert('第三阶段再来')\n\n                        }else{\n\n                            alert('第四阶段再来')\n                        }\n                    }\n\n                }else if(registerStage ==2){//current可自由选择\n\n                    if(isActive){\n\n                        FlowRouter.go(commonRegisterPage);\n\n                    }else{\n                        if(hasHistory){\n\n                            alert('第三阶段再来')\n\n                        }else{\n\n                            alert('第四阶段再来')\n                        }\n                    }\n\n                }else if(registerStage ==3){//return user可选择\n                    if(isActive){\n\n                        FlowRouter.go(commonRegisterPage);\n\n                    }else{\n                        if(hasHistory){\n\n                            FlowRouter.go(commonRegisterPage);\n                           // alert('第三阶段再来')\n\n                        }else{\n\n                            alert('第四阶段再来')\n\n                        }\n                    }\n\n\n                }else if(registerStage ==4){//所有用户可选择\n\n                    FlowRouter.go(commonRegisterPage);\n\n                }\n\n                break;\n            }\n\n        }\n    });\n\n\n\n    Meteor.startup(function () {\n        Meteor.subscribe('registerInfoByAccountId',Meteor.userId())\n\n\n        Tracker.autorun(function () {\n            //if(!DB.Swimmers) return;\n\n            var appInfo = DB.App.findOne()\n\n            if(appInfo){\n                self.appInfo.set(appInfo)\n                self.registerStage.set(appInfo.registerStage)\n            }\n\n        })\n    })\n\n\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/paymentInstoreConfirm.jsx                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/23/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.CRPaymentInstoreConfirm = React.createClass({                      // 5\n    displayName: \"CRPaymentInstoreConfirm\",                            //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    paied: function () {                                               // 12\n                                                                       //\n        //Meteor.call('move_to_applied',Session.get('CART_ID'),function(err,result){\n        //    if(err) console.error(err)                               //\n        //                                                             //\n        //    alert('payment success')                                 //\n        //                                                             //\n        //                                                             //\n        //                                                             //\n        //    FlowRouter.go('/classEdit/swimmerList')                  //\n        //                                                             //\n        //})                                                           //\n        FlowRouter.go('/classEdit/swimmerList');                       // 24\n    },                                                                 //\n    render: function () {                                              // 27\n                                                                       //\n        var title = \"You’ve choose to pay in store. Please go to our store to \" + \"make a payment of $— within 24 hours in order to secure your spot!\";\n        return React.createElement(                                    // 31\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(RC.Card, { className: \"item-text-wrap\",\n                key: Math.random(), title: title }),                   // 35\n            React.createElement(                                       //\n                RC.List,                                               // 40\n                { theme: \"inset\" },                                    //\n                React.createElement(                                   //\n                    RC.Item,                                           // 41\n                    { theme: \"body\" },                                 //\n                    React.createElement(                               //\n                        RC.Button,                                     // 43\n                        { name: \"button\",                              //\n                            onClick: this.paied,                       // 44\n                            theme: \"full\", buttonColor: \"brand\" },     // 45\n                        \"OK\"                                           //\n                    )                                                  //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/paymentInstoreConfirm.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/paymentInstoreConfirm.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE5C,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,SAAK,EAAC,YAAU;;;;;;;;;;;;AAYZ,kBAAU,CAAC,EAAE,CAAC,wBAAwB,CAAC;KAE1C;AACD,UAAM,cAAG;;AAEL,YAAI,KAAK,GAAC,2DAA2D,GACjE,oEAAoE;AACxE,eAAO;;;YAGH,oBAAC,EAAE,CAAC,IAAI,IAAE,SAAS,EAAC,gBAAgB;AAChC,mBAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,KAAK,EAAE,KAAM,GAG3B;YAEV;AAAC,kBAAE,CAAC,IAAI;kBAAC,KAAK,EAAC,OAAO;gBAClB;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,MAAM;oBAEjB;AAAC,0BAAE,CAAC,MAAM;0BAAC,IAAI,EAAC,QAAQ;AACb,mCAAO,EAAE,IAAI,CAAC,KAAM;AACpB,iCAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;qBAE/B;iBACN;aAEJ;SAKR;KACT;CACJ,CAAC,uE","file":"/client/app/class.register/paymentInstoreConfirm.jsx","sourcesContent":["/**\n * Created on 9/23/15.\n */\n\nCal.CRPaymentInstoreConfirm = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    paied:function(){\n\n        //Meteor.call('move_to_applied',Session.get('CART_ID'),function(err,result){\n        //    if(err) console.error(err)\n        //\n        //    alert('payment success')\n        //\n        //\n        //\n        //    FlowRouter.go('/classEdit/swimmerList')\n        //\n        //})\n        FlowRouter.go('/classEdit/swimmerList')\n\n    },\n    render() {\n\n        let title=\"You’ve choose to pay in store. Please go to our store to \" +\n            \"make a payment of $— within 24 hours in order to secure your spot!\"\n        return <div>\n\n\n            <RC.Card  className=\"item-text-wrap\"\n                key={Math.random()} title={title}>\n\n\n            </RC.Card>\n\n            <RC.List theme=\"inset\">\n                <RC.Item theme=\"body\">\n\n                    <RC.Button name=\"button\"\n                               onClick={this.paied}\n                               theme=\"full\" buttonColor=\"brand\">\n                        OK\n                    </RC.Button>\n                </RC.Item>\n\n            </RC.List>\n\n\n\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/paymentOptionsPage.jsx                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/23/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.CRPaymentOptionsPage = React.createClass({                         // 7\n    displayName: 'CRPaymentOptionsPage',                               //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 9\n    getMeteorData: function () {                                       // 10\n        Meteor.subscribe(\"activeShoppingCart\");                        // 11\n                                                                       //\n        return {                                                       // 13\n            //当前的 ShoppingCart                                         //\n            shoppingCart: DB.ShoppingCart.findOne({                    // 15\n                status: 'active',                                      // 16\n                type: 'register'                                       // 17\n            })                                                         //\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    //////actions                                                      //\n    payNow: function (e) {                                             // 23\n                                                                       //\n        alert('Pay now module need third-party gateway and is still not implemented');\n    },                                                                 //\n    payInStore: function () {                                          // 27\n        var cartId = this.data.shoppingCart && this.data.shoppingCart._id;\n                                                                       //\n        Meteor.call('move_to_checking', cartId, 'pay-in-store', function (err, result) {\n            if (err) {                                                 // 31\n                console.error(err);                                    // 32\n                return;                                                // 33\n            };                                                         //\n                                                                       //\n            FlowRouter.go('/classRegister/paymentInstoreConfirm');     // 36\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 43\n        return React.createElement(                                    // 44\n            'div',                                                     //\n            { className: 'padding' },                                  //\n            React.createElement(                                       //\n                RC.Button,                                             // 47\n                { name: 'button', type: 'submit',                      //\n                    onClick: this.payNow,                              // 48\n                    theme: 'full', buttonColor: 'brand' },             // 49\n                'Pay Now'                                              //\n            ),                                                         //\n            React.createElement(                                       //\n                RC.Button,                                             // 54\n                { name: 'button', type: 'submit',                      //\n                    onClick: this.payInStore,                          // 55\n                    theme: 'full', buttonColor: 'brand' },             // 56\n                'Pay In Store'                                         //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/paymentOptionsPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/paymentOptionsPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAMA,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEzC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,cAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;;AAEvC,eAAO;;AAEH,wBAAY,EAAE,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC;AAClC,sBAAM,EAAC,QAAQ;AACf,oBAAI,EAAC,UAAU;aAClB,CAAC;SACL;KACJ;;;AAGD,UAAM,YAAC,CAAC,EAAC;;AAEL,aAAK,CAAC,sEAAsE,CAAC;KAChF;AACD,cAAU,cAAE;AACR,YAAI,MAAM,GAAI,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG;;AAElE,cAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,cAAc,EAAC,UAAS,GAAG,EAAC,MAAM,EAAC;AACvE,gBAAG,GAAG,EAAE;AACJ,uBAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AAClB,uBAAO;aACV,CAAC;;AAEF,sBAAU,CAAC,EAAE,CAAC,sCAAsC,CAAC,CAAC;SAEzD,CAAC;KAGL;;AAED,UAAM,cAAG;AACL,eAAO;;cAAK,SAAS,EAAC,SAAS;YAG3B;AAAC,kBAAE,CAAC,MAAM;kBAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,2BAAO,EAAE,IAAI,CAAC,MAAO;AACrB,yBAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;aAE/B;YAGZ;AAAC,kBAAE,CAAC,MAAM;kBAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,QAAQ;AAC3B,2BAAO,EAAE,IAAI,CAAC,UAAW;AACzB,yBAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;aAE/B;SAGV;KACT;CACJ,CAAC,uE","file":"/client/app/class.register/paymentOptionsPage.jsx","sourcesContent":["/**\n * Created on 9/23/15.\n */\n\n\n\nCal.CRPaymentOptionsPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        Meteor.subscribe(\"activeShoppingCart\");\n\n        return {\n            //当前的 ShoppingCart\n            shoppingCart: DB.ShoppingCart.findOne({\n                status:'active',\n                type:'register'\n            })\n        }\n    },\n\n    //////actions\n    payNow(e){\n\n        alert('Pay now module need third-party gateway and is still not implemented')\n    },\n    payInStore(){\n        var cartId =  this.data.shoppingCart && this.data.shoppingCart._id\n\n        Meteor.call('move_to_checking', cartId, 'pay-in-store',function(err,result){\n            if(err) {\n                console.error(err)\n                return;\n            };\n\n            FlowRouter.go('/classRegister/paymentInstoreConfirm');\n\n        })\n\n\n    },\n\n    render() {\n        return <div className=\"padding\">\n\n\n            <RC.Button name=\"button\" type=\"submit\"\n                       onClick={this.payNow}\n                       theme=\"full\" buttonColor=\"brand\">\n                Pay Now\n            </RC.Button>\n\n\n            <RC.Button name=\"button\" type=\"submit\"\n                       onClick={this.payInStore}\n                       theme=\"full\" buttonColor=\"brand\">\n                Pay In Store\n            </RC.Button>\n\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/class.register/registraionInfoPage.jsx                   //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/14/15.                                                 //\n */                                                                    //\n                                                                       //\n{                                                                      // 5\n    var classRegisterStore = undefined;                                // 6\n    Dependency.autorun(function () {                                   // 7\n        classRegisterStore = Dependency.get('ClassRegister.ViewControl.store');\n    });                                                                //\n                                                                       //\n    Cal.CRRegistraionInfoPage = React.createClass({                    // 11\n        displayName: \"CRRegistraionInfoPage\",                          //\n                                                                       //\n        mixins: [ReactMeteorData],                                     // 13\n        getMeteorData: function () {                                   // 14\n                                                                       //\n            //Meteor.subscribe('registerInfoByAccountId',Meteor.userId())\n                                                                       //\n            return {};                                                 // 18\n        },                                                             //\n        \"continue\": function () {                                      // 20\n                                                                       //\n            Dispatcher.dispatch({                                      // 22\n                actionType: \"CRRegistraionInfoPage_CONTINUE\"           // 23\n            });                                                        //\n        },                                                             //\n                                                                       //\n        render: function () {                                          // 28\n                                                                       //\n            return React.createElement(                                // 30\n                \"div\",                                                 //\n                { key: Math.random() },                                //\n                React.createElement(                                   //\n                    RC.Card,                                           // 33\n                    { key: Math.random(), title: \"Registration Information\" },\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col col-33\" },               //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                \"1st week\"                             //\n                            ),                                         //\n                            \":\"                                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Current students who want the same day and time\"\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col col-33\" },               //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                \"2nd week\"                             //\n                            ),                                         //\n                            \":\"                                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Current students who want to change their schedule\"\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col col-33\" },               //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                \"3rd week\"                             //\n                            ),                                         //\n                            \":\"                                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Returning students\"                       //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"row\" },                          //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col col-33\" },               //\n                            React.createElement(                       //\n                                \"b\",                                   //\n                                null,                                  //\n                                \"4th week\"                             //\n                            ),                                         //\n                            \":\"                                        //\n                        ),                                             //\n                        React.createElement(                           //\n                            \"div\",                                     //\n                            { className: \"col\" },                      //\n                            \"Open enrollment\"                          //\n                        )                                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"p\",                                           //\n                        { className: \"padding-left padding-right\" },   //\n                        \"Calphin will still have the right to make changes. Schedules are not confirmed until confirmation emails are sent out.\"\n                    ),                                                 //\n                    React.createElement(                               //\n                        \"p\",                                           //\n                        { className: \"padding-left padding-right\" },   //\n                        \"Paced Program Level Abbreviation\",            //\n                        React.createElement(\"br\", null),               //\n                        \"Bubbler -------------BUB\",                    //\n                        React.createElement(\"br\", null),               //\n                        \"Crawler -------------CLR \",                   //\n                        React.createElement(\"br\", null),               //\n                        \"Glider -------------GLD\",                     //\n                        React.createElement(\"br\", null),               //\n                        \"Sprinter-------------SPR\",                    //\n                        React.createElement(\"br\", null),               //\n                        \"Racer-------------RCR\",                       //\n                        React.createElement(\"br\", null),               //\n                        \"Challenger-------------CHL\",                  //\n                        React.createElement(\"br\", null),               //\n                        \"Master-------------MST\",                      //\n                        React.createElement(\"br\", null)                //\n                    )                                                  //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"p\",                                               //\n                    { className: \"padding-left padding-right\" },       //\n                    React.createElement(                               //\n                        \"button\",                                      //\n                        { onClick: this[\"continue\"],                   //\n                            className: \"button button-full button-brand \" },\n                        \"Continue\"                                     //\n                    )                                                  //\n                )                                                      //\n            );                                                         //\n        }                                                              //\n    });                                                                //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/class.register/registraionInfoPage.jsx","sourceMap":{"version":3,"sources":["/client/app/class.register/registraionInfoPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA;AACI,QAAI,kBAAkB,aAAC;AACvB,cAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,0BAAkB,GAAG,UAAU,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;KAC1E,CAAC,CAAC;;AAEH,OAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE1C,cAAM,EAAE,CAAC,eAAe,CAAC;AACzB,qBAAa,cAAG;;;;AAIZ,mBAAO,EAAE;SACZ;AACD,oBAAQ,YAAE;;AAEN,sBAAU,CAAC,QAAQ,CAAC;AAChB,0BAAU,EAAE,gCAAgC;aAC/C,CAAC,CAAC;SAEN;;AAED,cAAM,cAAG;;AAEL,mBAAO;;kBAAK,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG;gBAG3B;AAAC,sBAAE,CAAC,IAAI;sBAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,KAAK,EAAC,0BAA0B;oBAEzD;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,YAAY;4BACvB;;;;6BAAe;;yBACb;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBACJ;oBACN;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,YAAY;4BACvB;;;;6BAAe;;yBACb;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBACJ;oBACN;;0BAAK,SAAS,EAAC,KAAK;wBAChB;;8BAAK,SAAS,EAAC,YAAY;4BACvB;;;;6BAAe;;yBACb;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBACJ;oBACN;;0BAAK,SAAS,EAAC,KAAK;wBAEhB;;8BAAK,SAAS,EAAC,YAAY;4BACvB;;;;6BAAe;;yBACb;wBACN;;8BAAK,SAAS,EAAC,KAAK;;yBAEd;qBACJ;oBAEN;;0BAAG,SAAS,EAAC,4BAA4B;;qBAGrC;oBAGJ;;0BAAG,SAAS,EAAC,4BAA4B;;wBACL,+BAAK;;wBAEb,+BAAK;;wBACJ,+BAAK;;wBACP,+BAAK;;wBACJ,+BAAK;;wBACR,+BAAK;;wBACA,+BAAK;;wBACT,+BAAK;qBAE3B;iBAME;gBAGV;;sBAAG,SAAS,EAAC,4BAA4B;oBAErC;;0BAAQ,OAAO,EAAE,IAAI,YAAU;AACvB,qCAAS,EAAC,kCAAkC;;qBAG3C;iBACT;aAGF;SACT;KACJ,CAAC;CACL,wE","file":"/client/app/class.register/registraionInfoPage.jsx","sourcesContent":["/**\n * Created on 9/14/15.\n */\n\n{\n    let classRegisterStore;\n    Dependency.autorun(function () {\n        classRegisterStore = Dependency.get('ClassRegister.ViewControl.store');\n    });\n\n    Cal.CRRegistraionInfoPage = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            //Meteor.subscribe('registerInfoByAccountId',Meteor.userId())\n\n            return {}\n        },\n        continue(){\n\n            Dispatcher.dispatch({\n                actionType: \"CRRegistraionInfoPage_CONTINUE\"\n            });\n\n        },\n\n        render() {\n\n            return <div key={Math.random()}>\n\n\n                <RC.Card key={Math.random()} title=\"Registration Information\">\n\n                    <div className=\"row\">\n                        <div className=\"col col-33\">\n                            <b>1st week</b>:\n                        </div>\n                        <div className=\"col\">\n                             Current students who want the same day and time\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col col-33\">\n                            <b>2nd week</b>:\n                        </div>\n                        <div className=\"col\">\n                             Current students who want to change their schedule\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col col-33\">\n                            <b>3rd week</b>:\n                        </div>\n                        <div className=\"col\">\n                            Returning students\n                        </div>\n                    </div>\n                    <div className=\"row\">\n\n                        <div className=\"col col-33\">\n                            <b>4th week</b>:\n                        </div>\n                        <div className=\"col\">\n                             Open enrollment\n                        </div>\n                    </div>\n\n                    <p className=\"padding-left padding-right\">\n                        Calphin will still have the right to make changes. Schedules are not confirmed until\n                        confirmation emails are sent out.\n                    </p>\n\n\n                    <p className=\"padding-left padding-right\">\n                        Paced Program Level Abbreviation<br/>\n\n                        Bubbler -------------BUB<br/>\n                        Crawler -------------CLR <br/>\n                        Glider -------------GLD<br/>\n                        Sprinter-------------SPR<br/>\n                        Racer-------------RCR<br/>\n                        Challenger-------------CHL<br/>\n                        Master-------------MST<br/>\n\n                    </p>\n\n\n\n\n\n                </RC.Card>\n\n\n                <p className=\"padding-left padding-right\">\n\n                    <button onClick={this.continue}\n                            className=\"button button-full button-brand \">\n\n                        Continue\n                    </button>\n                </p>\n\n\n            </div>\n        }\n    })\n}\n"]}},{"type":"js","data":"(function(){\n\nDependency.add('Cal.Main.Store',new function(){\n\n    var self = this;\n\n    ///定义一个数据源 leftNav打开关闭\n    self.leftNavStatus = new ReactiveVar(false)\n\n\n    self.tokenId = Dispatcher.register(function(payload){\n        switch(payload.actionType){\n\n            case \"LEFT_NAV_OPEN\":\n                self.leftNavStatus.set(true)\n                break;\n            case \"LEFT_NAV_CLOSE\":\n                self.leftNavStatus.set(false)\n                break;\n        }\n    });\n\n});\n\n}).call(this);\n","servePath":"/client/app/common/Cal.main.store.jsx.js","sourceMap":{"version":3,"sources":["/client/app/common/Cal.main.store.jsx.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/app/common/Cal.main.store.jsx.js","sourcesContent":["\n\nDependency.add('Cal.Main.Store',new function(){\n\n    var self = this;\n\n    ///定义一个数据源 leftNav打开关闭\n    self.leftNavStatus = new ReactiveVar(false)\n\n\n    self.tokenId = Dispatcher.register(function(payload){\n        switch(payload.actionType){\n\n            case \"LEFT_NAV_OPEN\":\n                self.leftNavStatus.set(true)\n                break;\n            case \"LEFT_NAV_CLOSE\":\n                self.leftNavStatus.set(false)\n                break;\n        }\n    });\n\n});\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/common/ContactInfoPage.jsx                               //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 9/22/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.ContactInfoPage = React.createClass({                              // 5\n    displayName: \"ContactInfoPage\",                                    //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 12\n        return React.createElement(                                    // 13\n            \"div\",                                                     //\n            { key: Math.random() },                                    //\n            React.createElement(                                       //\n                RC.Card,                                               // 15\n                { key: Math.random(), title: \"Contact Info\" },         //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"row\" },                              //\n                    React.createElement(                               //\n                        \"div\",                                         //\n                        { className: \"col\" },                          //\n                        React.createElement(                           //\n                            \"p\",                                       //\n                            null,                                      //\n                            \"sfas sfasf fasf sfas sfasf fasfsfas sfasf fasfsfas sfasf\"\n                        ),                                             //\n                        React.createElement(                           //\n                            \"p\",                                       //\n                            null,                                      //\n                            \"fasfsfas sfasf fasfsfas sfasf fasfsfas sfasf fasfsfas sfasf fasfsfas sfasf fasf\"\n                        )                                              //\n                    )                                                  //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/common/ContactInfoPage.jsx","sourceMap":{"version":3,"sources":["/client/app/common/ContactInfoPage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEpC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,UAAM,cAAG;AACL,eAAO;;cAAK,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG;YAE3B;AAAC,kBAAE,CAAC,IAAI;kBAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,KAAK,EAAC,cAAc;gBAC7C;;sBAAK,SAAS,EAAC,KAAK;oBAChB;;0BAAK,SAAS,EAAC,KAAK;wBAEhB;;;;yBAWI;wBAEJ;;;;yBAYI;qBAEF;iBAEJ;aAEA;SAER;KACT;CACJ,CAAC,uE","file":"/client/app/common/ContactInfoPage.jsx","sourcesContent":["/**\n * Created on 9/22/15.\n */\n\nCal.ContactInfoPage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    render() {\n        return <div key={Math.random()}>\n\n            <RC.Card key={Math.random()} title=\"Contact Info\">\n                <div className=\"row\">\n                    <div className=\"col\">\n\n                        <p>\n\n                            sfas\n                            sfasf\n                            fasf\n                            sfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                        </p>\n\n                        <p>\n                            fasfsfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                            fasfsfas\n                            sfasf\n                            fasf\n                        </p>\n\n                    </div>\n\n                </div>\n\n            </RC.Card>\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/common/cal.body.component.jsx                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.Body = React.createClass({                                         // 1\n  displayName: \"Body\",                                                 //\n                                                                       //\n  render: function () {                                                // 2\n    return React.createElement(                                        // 3\n      \"div\",                                                           //\n      { className: \"transition\", id: \"app-body\" },                     //\n      React.createElement(                                             //\n        \"div\",                                                         //\n        { className: \"wrapper\" },                                      //\n        h.returnComponent(this.props.tmpl)                             //\n      )                                                                //\n    );                                                                 //\n  }                                                                    //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/common/cal.body.component.jsx","sourceMap":{"version":3,"sources":["/client/app/common/cal.body.component.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC3B,QAAM,cAAG;AACP,WAAO;;QAAK,SAAS,EAAC,YAAY,EAAC,EAAE,EAAC,UAAU;MAC9C;;UAAK,SAAS,EAAC,SAAS;QACrB,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;OAC/B;KACF;GACP;CACF,CAAC,uE","file":"/client/app/common/cal.body.component.jsx","sourcesContent":["Cal.Body = React.createClass({\n  render() {\n    return <div className=\"transition\" id=\"app-body\">\n      <div className=\"wrapper\">\n        {h.returnComponent(this.props.tmpl)}\n      </div>\n    </div>\n  }\n})\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/common/cal.home.page.jsx                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nCal.Home = React.createClass({                                         // 1\n    displayName: 'Home',                                               //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 4\n    getMeteorData: function () {                                       // 5\n                                                                       //\n        Meteor.subscribe(\"accountCurrent\");                            // 7\n                                                                       //\n        return {                                                       // 9\n            account: Meteor.users.findOne()                            // 10\n        };                                                             //\n    },                                                                 //\n    render: function () {                                              // 13\n                                                                       //\n        var title = 'Welcome To Our ' + (this.data.account && this.data.account.profile.location) + ' Facility';\n                                                                       //\n        console.log(title);                                            // 17\n        return React.createElement(                                    // 18\n            'div',                                                     //\n            { className: 'padding' },                                  //\n            React.createElement(RC.Card, { title: title }),            //\n            React.createElement(                                       //\n                RC.List,                                               // 25\n                { theme: 'inset' },                                    //\n                React.createElement(                                   //\n                    RC.Item,                                           // 26\n                    { theme: 'body' },                                 //\n                    React.createElement(                               //\n                        RC.URL,                                        // 28\n                        { href: '/classRegister/registraionInfoPage' },\n                        React.createElement(                           //\n                            RC.Button,                                 // 29\n                            { name: 'button', theme: 'full', buttonColor: 'brand' },\n                            'Register Class'                           //\n                        )                                              //\n                    )                                                  //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/common/cal.home.page.jsx","sourceMap":{"version":3,"sources":["/client/app/common/cal.home.page.jsx"],"names":[],"mappings":";;;;;;;;AAAA,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAGzB,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAE;;AAEX,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;;AAEnC,eAAM;AACF,mBAAO,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE;SAClC;KACJ;AACD,UAAM,cAAG;;AAEL,YAAI,KAAK,GAAG,iBAAiB,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAC,WAAW;;AAEpG,eAAO,CAAC,GAAG,CAAC,KAAK,CAAC;AAClB,eAAO;;cAAK,SAAS,EAAC,SAAS;YAG3B,oBAAC,EAAE,CAAC,IAAI,IAAC,KAAK,EAAE,KAAM,GAEZ;YAEV;AAAC,kBAAE,CAAC,IAAI;kBAAC,KAAK,EAAC,OAAO;gBAClB;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,MAAM;oBAEjB;AAAC,0BAAE,CAAC,GAAG;0BAAC,IAAI,EAAC,oCAAoC;wBAC7C;AAAC,8BAAE,CAAC,MAAM;8BAAC,IAAI,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO;;yBAE7C;qBACP;iBACH;aAEJ;SAER;KAET;CACJ,CAAC,uE","file":"/client/app/common/cal.home.page.jsx","sourcesContent":["Cal.Home = React.createClass({\n\n\n    mixins: [ReactMeteorData],\n    getMeteorData(){\n\n        Meteor.subscribe(\"accountCurrent\");\n\n        return{\n            account: Meteor.users.findOne()\n        }\n    },\n    render() {\n\n        let title = 'Welcome To Our '+ (this.data.account && this.data.account.profile.location)+' Facility'\n\n        console.log(title)\n        return <div className=\"padding\">\n\n\n            <RC.Card title={title}>\n\n            </RC.Card>\n\n            <RC.List theme=\"inset\">\n                <RC.Item theme=\"body\">\n\n                    <RC.URL href=\"/classRegister/registraionInfoPage\">\n                        <RC.Button name=\"button\" theme=\"full\" buttonColor=\"brand\">\n                            Register Class\n                        </RC.Button>\n                    </RC.URL>\n                </RC.Item>\n\n            </RC.List>\n\n        </div>\n\n    }\n})\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/common/cal.main.component.jsx                            //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n{                                                                      // 1\n    (function () {                                                     //\n                                                                       //\n        //定义store依赖 发生于初始化过程                                           //\n        var CalMainStore = undefined;                                  // 4\n        Dependency.autorun(function () {                               // 5\n            CalMainStore = Dependency.get('Cal.Main.Store');           // 6\n        });                                                            //\n                                                                       //\n        var leftNavList = [{ text: \"Calphin\", type: \"title\" }, {       // 10\n            href: \"/\", text: \"Home\"                                    // 13\n        }, {                                                           //\n            href: \"/account\",                                          // 15\n            text: \"Your Account\"                                       // 16\n        }, {                                                           //\n            href: \"/classEdit/swimmerList\",                            // 18\n            text: \"Your Swimmers\"                                      // 19\n        }, {                                                           //\n            href: \"/classRegister/registraionInfoPage\",                // 21\n            text: \"Class Registration\"                                 // 22\n        }, {                                                           //\n            href: \"/classEdit/billingAndPayment\",                      // 25\n            text: \"Your BIlling & Payment\"                             // 26\n        }, {                                                           //\n            href: \"/ContactInfoPage\",                                  // 28\n            text: \"Contact Us\"                                         // 29\n        }, {                                                           //\n            //href: \"/\",                                               //\n            text: \"Sign Out\",                                          // 32\n            onClick: function () {                                     // 33\n                                                                       //\n                Dispatcher.dispatch({ actionType: 'LEFT_NAV_CLOSE' });\n                Dispatcher.dispatch({ actionType: 'AUTH_LOGOUT' });    // 36\n            }                                                          //\n        }];                                                            //\n                                                                       //\n        Cal.Main = React.createClass({                                 // 43\n            displayName: \"Main\",                                       //\n                                                                       //\n            mixins: [ReactMeteorData],                                 // 45\n            getMeteorData: function () {                               // 46\n                                                                       //\n                Meteor.subscribe('activeShoppingCart');                // 48\n                var shoppingCart = DB.ShoppingCart.findOne({           // 49\n                    status: 'active'                                   // 50\n                });                                                    //\n                                                                       //\n                console.log(shoppingCart);                             // 53\n                                                                       //\n                return {                                               // 56\n                    leftNavIsOpen: CalMainStore.leftNavStatus.get(),   // 57\n                    shoppingCart: shoppingCart                         // 58\n                };                                                     //\n            },                                                         //\n                                                                       //\n            render: function () {                                      // 63\n                return React.createElement(                            // 64\n                    \"div\",                                             //\n                    { className: h.getPlatform(), id: \"app-root\" },    //\n                    React.createElement(RC.LeftNav2, { navList: leftNavList, ref: \"LeftNav\", openOnInit: this.data.leftNavIsOpen }),\n                    React.createElement(RC.HeaderNav, { nav: this.props.headerNav,\n                                                                       //\n                        hideBackButton: this.props.hideBackButton,     // 69\n                        hideLeftNavToggle: this.props.hideLeftNavToggle,\n                        hideShoppingCartButton: this.props.hideShoppingCartButton,\n                        shoppingCart: this.data.shoppingCart,          // 72\n                        showLogo: true,                                // 73\n                        title: this.props.title, theme: \"flat\" }),     // 74\n                    React.createElement(RC.GlobalNav, { isVisible: this.props.showGlobalNav, list: this.props.globalNav,\n                        location: this.props.globalNavLocation, theme: \"flat\" }),\n                    React.createElement(Cal.Body, { tmpl: this.props.body })\n                );                                                     //\n            }                                                          //\n        });                                                            //\n    })();                                                              //\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/common/cal.main.component.jsx","sourceMap":{"version":3,"sources":["/client/app/common/cal.main.component.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AAGI,YAAI,YAAY,aAAC;AACjB,kBAAU,CAAC,OAAO,CAAC,YAAY;AAC3B,wBAAY,GAAG,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;SACnD,CAAC,CAAC;;AAGH,YAAI,WAAW,GAAG,CACd,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAC,EAChC;AACI,gBAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM;SAC1B,EAAE;AACC,gBAAI,EAAE,UAAU;AAChB,gBAAI,EAAE,cAAc;SACvB,EAAE;AACC,gBAAI,EAAE,wBAAwB;AAC9B,gBAAI,EAAE,eAAe;SACxB,EAAE;AACC,gBAAI,EAAE,oCAAoC;AAC1C,gBAAI,EAAE,oBAAoB;SAC7B,EACD;AACI,gBAAI,EAAE,8BAA8B;AACpC,gBAAI,EAAE,wBAAwB;SACjC,EAAE;AACC,gBAAI,EAAE,kBAAkB;AACxB,gBAAI,EAAE,YAAY;SACrB,EAAE;;AAEC,gBAAI,EAAE,UAAU;AAChB,mBAAO,EAAC,YAAU;;AAEd,0BAAU,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAC,gBAAgB,EAAC,CAAC;AAClD,0BAAU,CAAC,QAAQ,CAAC,EAAC,UAAU,EAAC,aAAa,EAAC,CAAC;aAGlD;SACJ,CAAC;;AAGN,WAAG,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEzB,kBAAM,EAAE,CAAC,eAAe,CAAC;AACzB,yBAAa,cAAG;;AAEZ,sBAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC;AACtC,oBAAI,YAAY,GAAE,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC;AACtC,0BAAM,EAAC,QAAQ;iBAClB,CAAC;;AAEF,uBAAO,CAAC,GAAG,CAAC,YAAY,CAAC;;AAGzB,uBAAO;AACH,iCAAa,EAAE,YAAY,CAAC,aAAa,CAAC,GAAG,EAAE;AAC/C,gCAAY,EAAC,YAAY;iBAC5B;aACJ;;AAGD,kBAAM,cAAG;AACL,uBAAO;;sBAAK,SAAS,EAAE,CAAC,CAAC,WAAW,EAAG,EAAC,EAAE,EAAC,UAAU;oBACjD,oBAAC,EAAE,CAAC,QAAQ,IAAC,OAAO,EAAE,WAAY,EAAC,GAAG,EAAC,SAAS,EAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,aAAc,GAAE;oBAEvF,oBAAC,EAAE,CAAC,SAAS,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;;AAE1B,sCAAc,EAAG,IAAI,CAAC,KAAK,CAAC,cAAe;AAC3C,yCAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAkB;AAChD,8CAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAuB;AAC1D,oCAAY,EAAE,IAAI,CAAC,IAAI,CAAC,YAAa;AACrC,gCAAQ,EAAE,IAAK;AACf,6BAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM,EAAC,KAAK,EAAC,MAAM,GAAE;oBACrD,oBAAC,EAAE,CAAC,SAAS,IAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,aAAc,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;AAChE,gCAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAkB,EAAC,KAAK,EAAC,MAAM,GAAE;oBACpE,oBAAC,GAAG,CAAC,IAAI,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAK,GAAE;iBAChC;aACT;SACJ,CAAC;;CAGL,wE","file":"/client/app/common/cal.main.component.jsx","sourcesContent":["{\n\n    //定义store依赖 发生于初始化过程\n    let CalMainStore;\n    Dependency.autorun(function () {\n        CalMainStore = Dependency.get('Cal.Main.Store');\n    });\n\n\n    let leftNavList = [\n        {text: \"Calphin\", type: \"title\"},\n        {\n            href: \"/\", text: \"Home\"\n        }, {\n            href: \"/account\",\n            text: \"Your Account\"\n        }, {\n            href: \"/classEdit/swimmerList\",\n            text: \"Your Swimmers\"\n        }, {\n            href: \"/classRegister/registraionInfoPage\",\n            text: \"Class Registration\"\n        },\n        {\n            href: \"/classEdit/billingAndPayment\",\n            text: \"Your BIlling & Payment\"\n        }, {\n            href: \"/ContactInfoPage\",\n            text: \"Contact Us\"\n        }, {\n            //href: \"/\",\n            text: \"Sign Out\",\n            onClick:function(){\n\n                Dispatcher.dispatch({actionType:'LEFT_NAV_CLOSE'})\n                Dispatcher.dispatch({actionType:'AUTH_LOGOUT'})\n\n\n            }\n        }]\n\n\n    Cal.Main = React.createClass({\n\n        mixins: [ReactMeteorData],\n        getMeteorData() {\n\n            Meteor.subscribe('activeShoppingCart')\n            var shoppingCart= DB.ShoppingCart.findOne({\n                status:'active'\n            })\n\n            console.log(shoppingCart)\n\n\n            return {\n                leftNavIsOpen: CalMainStore.leftNavStatus.get(),\n                shoppingCart:shoppingCart\n            }\n        },\n\n\n        render() {\n            return <div className={h.getPlatform()} id=\"app-root\">\n                <RC.LeftNav2 navList={leftNavList} ref=\"LeftNav\" openOnInit={this.data.leftNavIsOpen}/>\n\n                <RC.HeaderNav nav={this.props.headerNav}\n\n                              hideBackButton= {this.props.hideBackButton}\n                              hideLeftNavToggle={this.props.hideLeftNavToggle}\n                              hideShoppingCartButton={this.props.hideShoppingCartButton}\n                              shoppingCart={this.data.shoppingCart}\n                              showLogo={true}\n                              title={this.props.title} theme=\"flat\"/>\n                <RC.GlobalNav isVisible={this.props.showGlobalNav} list={this.props.globalNav}\n                              location={this.props.globalNavLocation} theme=\"flat\"/>\n                <Cal.Body tmpl={this.props.body}/>\n            </div>\n        }\n    })\n\n\n}\n\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/component/SelectDay.jsx                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/1/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.SelectDay = React.createClass({                                    // 5\n    displayName: \"SelectDay\",                                          //\n                                                                       //\n    propTypes: {                                                       // 6\n        avaiableDays: React.PropTypes.array,                           // 7\n        currentDay: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),\n        changeMessage: React.PropTypes.string,                         // 12\n                                                                       //\n        readyOnly: React.PropTypes.bool                                // 14\n    },                                                                 //\n                                                                       //\n    //mixins: [ReactMeteorData],                                       //\n    //getMeteorData() {                                                //\n    //    return {}                                                    //\n    //},                                                               //\n                                                                       //\n    dayChange: function (e) {                                          // 22\n        var value = this.refs.day.getValue();                          // 23\n        value = parseInt(value, 10);                                   // 24\n                                                                       //\n        Dispatcher.dispatch({                                          // 26\n            actionType: this.props.changeMessage, //\"BookTheSameTime_DAY_CHANGE\",\n            day: value                                                 // 28\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 33\n        return React.createElement(RC.Select2, {                       // 34\n            ref: \"day\",                                                // 35\n            options: this.props.avaiableDays,                          // 36\n            value: this.props.currentDay,                              // 37\n            name: \"day\",                                               // 38\n            changeHandler: this.dayChange,                             // 39\n            label: \"Day\"                                               // 40\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/component/SelectDay.jsx","sourceMap":{"version":3,"sources":["/client/app/component/SelectDay.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC9B,aAAS,EAAC;AACN,oBAAY,EAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AAClC,kBAAU,EAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CACjC,KAAK,CAAC,SAAS,CAAC,MAAM,EACtB,KAAK,CAAC,SAAS,CAAC,MAAM,CACzB,CAAC;AACF,qBAAa,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;;AAEpC,iBAAS,EAAC,KAAK,CAAC,SAAS,CAAC,IAAI;KACjC;;;;;;;AAOD,aAAS,YAAC,CAAC,EAAC;AACR,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;AACpC,aAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;;AAE3B,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;AACpC,eAAG,EAAE,KAAK;SACb,CAAC,CAAC;KAEN;;AAED,UAAM,cAAG;AACL,eAAO,oBAAC,EAAE,CAAC,OAAO;AACV,eAAG,EAAC,KAAK;AACT,mBAAO,EAAE,IAAI,CAAC,KAAK,CAAC,YAAa;AACjC,iBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,UAAW;AAC7B,gBAAI,EAAC,KAAK;AACV,yBAAa,EAAE,IAAI,CAAC,SAAU;AAC9B,iBAAK,EAAC,KAAK;UACb;KACT;CACJ,CAAC,uE","file":"/client/app/component/SelectDay.jsx","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\nCal.SelectDay = React.createClass({\n    propTypes:{\n        avaiableDays:React.PropTypes.array,\n        currentDay:React.PropTypes.oneOfType([\n            React.PropTypes.string,\n            React.PropTypes.number\n        ]),\n        changeMessage:React.PropTypes.string,\n\n        readyOnly:React.PropTypes.bool\n    },\n\n    //mixins: [ReactMeteorData],\n    //getMeteorData() {\n    //    return {}\n    //},\n\n    dayChange(e){\n        var value = this.refs.day.getValue()\n        value = parseInt(value, 10)\n\n        Dispatcher.dispatch({\n            actionType: this.props.changeMessage, //\"BookTheSameTime_DAY_CHANGE\",\n            day: value\n        });\n\n    },\n\n    render() {\n        return <RC.Select2\n                ref=\"day\"\n                options={this.props.avaiableDays}\n                value={this.props.currentDay}\n                name=\"day\"\n                changeHandler={this.dayChange}\n                label=\"Day\"\n            />\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/component/SelectSwimmer.jsx                              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/1/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.SelectSwimmer = React.createClass({                                // 5\n    displayName: \"SelectSwimmer\",                                      //\n                                                                       //\n    propTypes: {                                                       // 6\n        swimmers: React.PropTypes.array,                               // 7\n        currentSwimmer: React.PropTypes.object,                        // 8\n        changeMessage: React.PropTypes.string,                         // 9\n        readyOnly: React.PropTypes.bool                                // 10\n    },                                                                 //\n    mixins: [ReactMeteorData],                                         // 12\n    getMeteorData: function () {                                       // 13\n        var swimmers = this.props.swimmers && this.props.swimmers.map(function (v, i) {\n            return { text: v['name'], value: v._id };                  // 15\n        });                                                            //\n                                                                       //\n        var currentSwimmerValue = this.props.currentSwimmer && this.props.currentSwimmer._id;\n        //&& {value:this.props.currentSwimmer._id,                     //\n        //    text:this.props.currentSwimmer.name}                     //\n                                                                       //\n        return {                                                       // 24\n            swimmers: swimmers,                                        // 25\n            currentSwimmerValue: currentSwimmerValue,                  // 26\n                                                                       //\n            currentSwimmer: this.props.currentSwimmer,                 // 28\n            readyOnly: this.props.readyOnly                            // 29\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    //actions                                                          //\n    swimmerChange: function (e) {                                      // 34\n        var value = this.refs.swimmer.getValue();                      // 35\n                                                                       //\n        var swimmer = _.find(this.props.swimmers, function (v, n) {    // 37\n            return v._id == value;                                     // 38\n        });                                                            //\n                                                                       //\n        Dispatcher.dispatch({                                          // 41\n            actionType: this.props.changeMessage,                      // 42\n            swimmer: swimmer                                           // 43\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 48\n                                                                       //\n        return this.props.readyOnly ? React.createElement(             // 50\n            RC.Item,                                                   // 51\n            { uiColor: \"brand1\" },                                     //\n            \"Swimmer: \",                                               //\n            this.data.currentSwimmer && this.data.currentSwimmer.name  //\n        ) : React.createElement(RC.Select2, {                          //\n            ref: \"swimmer\",                                            // 56\n            options: this.data.swimmers,                               // 57\n            value: this.data.currentSwimmerValue,                      // 58\n            name: \"swimmer\",                                           // 59\n            changeHandler: this.swimmerChange,                         // 60\n            label: \"Swimmer\"                                           // 61\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/component/SelectSwimmer.jsx","sourceMap":{"version":3,"sources":["/client/app/component/SelectSwimmer.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAClC,aAAS,EAAE;AACP,gBAAQ,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;AAC/B,sBAAc,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACtC,qBAAa,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;AACrC,iBAAS,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;KAClC;AACD,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,YAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACtE,mBAAO,EAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAC;SACzC,CAAC;;AAGN,YAAI,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG;;;;AAKpF,eAAO;AACH,oBAAQ,EAAE,QAAQ;AAClB,+BAAmB,EAAE,mBAAmB;;AAExC,0BAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;AACzC,qBAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;SAClC;KACJ;;;AAGD,iBAAa,YAAC,CAAC,EAAC;AACZ,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;;AAExC,YAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;AACtD,mBAAO,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC;SACzB,CAAC;;AAEF,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;AACpC,mBAAO,EAAE,OAAO;SACnB,CAAC,CAAC;KAEN;;AAED,UAAM,cAAG;;AAEL,eAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GACvB;AAAC,cAAE,CAAC,IAAI;cAAC,OAAO,EAAC,QAAQ;;YACX,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI;SAC7D,GAER,oBAAC,EAAE,CAAC,OAAO;AACT,eAAG,EAAC,SAAS;AACb,mBAAO,EAAE,IAAI,CAAC,IAAI,CAAC,QAAS;AAC5B,iBAAK,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAoB;AACrC,gBAAI,EAAC,SAAS;AACd,yBAAa,EAAE,IAAI,CAAC,aAAc;AAClC,iBAAK,EAAC,SAAS;UACjB;KAGT;CACJ,CAAC,uE","file":"/client/app/component/SelectSwimmer.jsx","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\nCal.SelectSwimmer = React.createClass({\n    propTypes: {\n        swimmers: React.PropTypes.array,\n        currentSwimmer: React.PropTypes.object,\n        changeMessage: React.PropTypes.string,\n        readyOnly: React.PropTypes.bool,\n    },\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        let swimmers = this.props.swimmers && this.props.swimmers.map(function (v, i) {\n                return {text: v['name'], value: v._id}\n            })\n\n\n        let currentSwimmerValue = this.props.currentSwimmer && this.props.currentSwimmer._id\n        //&& {value:this.props.currentSwimmer._id,\n        //    text:this.props.currentSwimmer.name}\n\n\n        return {\n            swimmers: swimmers,\n            currentSwimmerValue: currentSwimmerValue,\n\n            currentSwimmer: this.props.currentSwimmer,\n            readyOnly: this.props.readyOnly\n        }\n    },\n\n    //actions\n    swimmerChange(e){\n        var value = this.refs.swimmer.getValue()\n\n        var swimmer = _.find(this.props.swimmers, function (v, n) {\n            return v._id == value;\n        })\n\n        Dispatcher.dispatch({\n            actionType: this.props.changeMessage,\n            swimmer: swimmer\n        });\n\n    },\n\n    render() {\n\n        return this.props.readyOnly ?\n            <RC.Item uiColor=\"brand1\">\n                Swimmer: {this.data.currentSwimmer && this.data.currentSwimmer.name}\n            </RC.Item>\n\n            : <RC.Select2\n                ref=\"swimmer\"\n                options={this.data.swimmers}\n                value={this.data.currentSwimmerValue}\n                name=\"swimmer\"\n                changeHandler={this.swimmerChange}\n                label=\"Swimmer\"\n            />\n\n\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/component/SelectTime.jsx                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/1/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.SelectTime = React.createClass({                                   // 5\n    displayName: \"SelectTime\",                                         //\n                                                                       //\n    propTypes: {                                                       // 6\n        avaiableTimes: React.PropTypes.array,                          // 7\n        currentTime: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number]),\n        changeMessage: React.PropTypes.string                          // 12\n    },                                                                 //\n    //mixins: [ReactMeteorData],                                       //\n    //getMeteorData() {                                                //\n    //    return {}                                                    //\n    //},                                                               //\n                                                                       //\n    timeChange: function (e) {                                         // 19\n        var value = this.refs.time.getValue();                         // 20\n        value = parseInt(value, 10);                                   // 21\n        Dispatcher.dispatch({                                          // 22\n            actionType: this.props.changeMessage,                      // 23\n            time: value                                                // 24\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 29\n                                                                       //\n        return React.createElement(RC.Select2, {                       // 31\n            ref: \"time\",                                               // 32\n            options: this.props.avaiableTimes,                         // 33\n            value: this.props.currentTime,                             // 34\n            name: \"time\",                                              // 35\n            changeHandler: this.timeChange,                            // 36\n            label: \"Time\"                                              // 37\n        });                                                            //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/component/SelectTime.jsx","sourceMap":{"version":3,"sources":["/client/app/component/SelectTime.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,aAAS,EAAC;AACN,qBAAa,EAAC,KAAK,CAAC,SAAS,CAAC,KAAK;AACnC,mBAAW,EAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAClC,KAAK,CAAC,SAAS,CAAC,MAAM,EACtB,KAAK,CAAC,SAAS,CAAC,MAAM,CACzB,CAAC;AACF,qBAAa,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;KACvC;;;;;;AAMD,cAAU,YAAC,CAAC,EAAC;AACT,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACrC,aAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC;AAC3B,kBAAU,CAAC,QAAQ,CAAC;AAChB,sBAAU,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;AACpC,gBAAI,EAAE,KAAK;SACd,CAAC,CAAC;KAEN;;AAED,UAAM,cAAG;;AAEL,eAAO,oBAAC,EAAE,CAAC,OAAO;AACV,eAAG,EAAC,MAAM;AACV,mBAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAc;AAClC,iBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,WAAY;AAC9B,gBAAI,EAAC,MAAM;AACX,yBAAa,EAAE,IAAI,CAAC,UAAW;AAC/B,iBAAK,EAAC,MAAM;UACd;KACT;CACJ,CAAC,uE","file":"/client/app/component/SelectTime.jsx","sourcesContent":["/**\n * Created on 10/1/15.\n */\n\nCal.SelectTime = React.createClass({\n    propTypes:{\n        avaiableTimes:React.PropTypes.array,\n        currentTime:React.PropTypes.oneOfType([\n            React.PropTypes.string,\n            React.PropTypes.number\n        ]),\n        changeMessage:React.PropTypes.string\n    },\n    //mixins: [ReactMeteorData],\n    //getMeteorData() {\n    //    return {}\n    //},\n\n    timeChange(e){\n        var value = this.refs.time.getValue()\n        value = parseInt(value, 10)\n        Dispatcher.dispatch({\n            actionType: this.props.changeMessage,\n            time: value\n        });\n\n    },\n\n    render() {\n\n        return <RC.Select2\n                ref=\"time\"\n                options={this.props.avaiableTimes}\n                value={this.props.currentTime}\n                name=\"time\"\n                changeHandler={this.timeChange}\n                label=\"Time\"\n            />\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/component/SelectedClassInfoCard.jsx                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/13/15.                                                //\n */                                                                    //\n                                                                       //\nCal.SelectedClassInfoCard = React.createClass({                        // 5\n    displayName: 'SelectedClassInfoCard',                              //\n                                                                       //\n    //selectedClasses 是一个Immutable.Map 非纯对象 所以这里直接传入内容                 //\n    propTypes: {                                                       // 8\n        title: React.PropTypes.string,                                 // 9\n        swimmer: React.PropTypes.object,                               // 10\n        selectedClasses: React.PropTypes.object                        // 11\n        //class1:React.PropTypes.object,                               //\n        //class2:React.PropTypes.object,                               //\n        //class3:React.PropTypes.object                                //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 17\n                                                                       //\n        var title = this.props.title || 'Register for spring 2015';    // 19\n        var swimmer = this.props.swimmer;                              // 20\n                                                                       //\n        var selectedClasses = this.props.selectedClasses;              // 22\n        var class1 = selectedClasses['class1'];                        // 23\n        var class2 = selectedClasses['class2'];                        // 24\n        var class3 = selectedClasses['class3'];                        // 25\n                                                                       //\n        return React.createElement(                                    // 28\n            RC.Card,                                                   // 28\n            { className: 'padding' },                                  //\n            React.createElement(                                       //\n                'h4',                                                  //\n                { className: 'brand' },                                //\n                title                                                  //\n            ),                                                         //\n            class1 ? React.createElement(                              //\n                'div',                                                 //\n                { className: 'row' },                                  //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col' },                              //\n                    'Preference 1'                                     //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col' },                              //\n                    class1.name                                        //\n                )                                                      //\n            ) : '',                                                    //\n            class2 ? React.createElement(                              //\n                'div',                                                 //\n                { className: 'row' },                                  //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col' },                              //\n                    'Preference 2'                                     //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col' },                              //\n                    class2 && class2.name                              //\n                )                                                      //\n            ) : '',                                                    //\n            class3 ? React.createElement(                              //\n                'div',                                                 //\n                { className: 'row' },                                  //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col' },                              //\n                    'Preference 3'                                     //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col ' },                             //\n                    class3 && class3.name                              //\n                )                                                      //\n            ) : ''                                                     //\n        );                                                             //\n    }                                                                  //\n                                                                       //\n});                                                                    //\n/*swimmer && swimmer.name*/                                            //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/component/SelectedClassInfoCard.jsx","sourceMap":{"version":3,"sources":["/client/app/component/SelectedClassInfoCard.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,qBAAqB,GAAG,KAAK,CAAC,WAAW,CAAC;;;;AAG1C,aAAS,EAAC;AACN,aAAK,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;AAC5B,eAAO,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;AAC9B,uBAAe,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM;;;;KAIzC;;AAED,UAAM,EAAE,YAAY;;AAEhB,YAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,0BAA0B;AAC1D,YAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;;AAEjC,YAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe;AAChD,YAAI,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC;AACtC,YAAI,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC;AACtC,YAAI,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC;;AAGtC,eAAO;AAAC,cAAE,CAAC,IAAI;cAAE,SAAS,EAAC,SAAS;YAChC;;kBAAI,SAAS,EAAC,OAAO;gBAAE,KAAK;aAAM;YAK9B,MAAM,GAAC;;kBAAK,SAAS,EAAC,KAAK;gBACvB;;sBAAK,SAAS,EAAC,KAAK;;iBAEd;gBACN;;sBAAK,SAAS,EAAC,KAAK;oBACf,MAAM,CAAC,IAAI;iBACV;aAEJ,GAAC,EAAE;YAKT,MAAM,GAAC;;kBAAK,SAAS,EAAC,KAAK;gBACvB;;sBAAK,SAAS,EAAC,KAAK;;iBAEd;gBACN;;sBAAK,SAAS,EAAC,KAAK;oBACf,MAAM,IAAI,MAAM,CAAC,IAAI;iBACpB;aAEJ,GAAC,EAAE;YAGT,MAAM,GAAC;;kBAAK,SAAS,EAAC,KAAK;gBACvB;;sBAAK,SAAS,EAAC,KAAK;;iBAEd;gBACN;;sBAAK,SAAS,EAAC,MAAM;oBAChB,MAAM,IAAI,MAAM,CAAC,IAAI;iBACpB;aAEJ,GAAC,EAAE;SAGP;KACb;;CAEJ,CAAC,CAAC","file":"/client/app/component/SelectedClassInfoCard.jsx","sourcesContent":["/**\n * Created on 10/13/15.\n */\n\nCal.SelectedClassInfoCard = React.createClass({\n\n    //selectedClasses 是一个Immutable.Map 非纯对象 所以这里直接传入内容\n    propTypes:{\n        title:React.PropTypes.string,\n        swimmer:React.PropTypes.object,\n        selectedClasses:React.PropTypes.object\n        //class1:React.PropTypes.object,\n        //class2:React.PropTypes.object,\n        //class3:React.PropTypes.object\n    },\n\n    render: function () {\n\n        let title = this.props.title || 'Register for spring 2015'\n        let swimmer = this.props.swimmer;\n\n        let selectedClasses = this.props.selectedClasses\n        let class1 = selectedClasses['class1']\n        let class2 = selectedClasses['class2']\n        let class3 = selectedClasses['class3']\n\n\n        return <RC.Card  className=\"padding\">\n            <h4 className=\"brand\">{title}</h4>\n\n            {/*swimmer && swimmer.name*/}\n\n            {\n                class1?<div className=\"row\">\n                    <div className=\"col\">\n                        Preference 1\n                    </div>\n                    <div className=\"col\">\n                        {class1.name}\n                    </div>\n\n                </div>:''\n\n            }\n\n            {\n                class2?<div className=\"row\">\n                    <div className=\"col\">\n                        Preference 2\n                    </div>\n                    <div className=\"col\">\n                        {class2 && class2.name}\n                    </div>\n\n                </div>:''\n            }\n            {\n                class3?<div className=\"row\">\n                    <div className=\"col\">\n                        Preference 3\n                    </div>\n                    <div className=\"col \">\n                        {class3 && class3.name}\n                    </div>\n\n                </div>:''\n            }\n\n        </RC.Card>\n    }\n\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test/test.component.jsx                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\n                                                                       //\nCal.Test = React.createClass({                                         // 3\n    displayName: \"Test\",                                               //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 5\n    getMeteorData: function () {                                       // 6\n                                                                       //\n        var handle = Meteor.subscribe(\"accounts\");                     // 8\n                                                                       //\n        var handle2 = Meteor.subscribe(\"swimmers\");                    // 10\n                                                                       //\n        var handle3 = Meteor.subscribe(\"classes\");                     // 12\n                                                                       //\n        Meteor.subscribe(\"account1\");                                  // 15\n                                                                       //\n        return {                                                       // 19\n            //currentUser: Meteor.user(),                              //\n                                                                       //\n            currentUser: Meteor.users.find({ _id: 'account1' }).fetch()[0],\n                                                                       //\n            accounts: Meteor.users.find().fetch(),                     // 24\n            swimmers: DB.Swimmers.find().fetch(),                      // 25\n            classes: DB.Classes.find().fetch()                         // 26\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 30\n        return React.createElement(                                    // 31\n            \"div\",                                                     //\n            { className: \"transition\", id: \"app-body\" },               //\n            React.createElement(                                       //\n                \"div\",                                                 //\n                { className: \"wrapper\" },                              //\n                React.createElement(                                   //\n                    \"span\",                                            //\n                    null,                                              //\n                    \"Hello\",                                           //\n                    React.createElement(                               //\n                        \"b\",                                           //\n                        null,                                          //\n                        this.data.currentUser && this.data.currentUser.profile.name\n                    ),                                                 //\n                    \"!\"                                                //\n                ),                                                     //\n                React.createElement(\"hr\", null),                       //\n                this.data.accounts,                                    //\n                React.createElement(\"hr\", null),                       //\n                this.data.swimmers,                                    //\n                React.createElement(\"hr\", null),                       //\n                this.data.classes,                                     //\n                React.createElement(                                   //\n                    RC.Card,                                           // 51\n                    null,                                              //\n                    \"hello\"                                            //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test/test.component.jsx","sourceMap":{"version":3,"sources":["/client/app/test/test.component.jsx"],"names":[],"mappings":";;;;;;;;;;AAEA,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEzB,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAEZ,YAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;AAE1C,YAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;AAE3C,YAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;;AAG1C,cAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;;AAI7B,eAAO;;;AAGH,uBAAW,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,GAAG,EAAC,UAAU,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;;AAE3D,oBAAQ,EAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;AACpC,oBAAQ,EAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;AACnC,mBAAO,EAAC,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE;SACpC,CAAC;KACL;;AAED,UAAM,cAAG;AACL,eAAO;;cAAK,SAAS,EAAC,YAAY,EAAC,EAAE,EAAC,UAAU;YAC5C;;kBAAK,SAAS,EAAC,SAAS;gBACpB;;;;oBAEI;;;wBACC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI;qBACxD;;iBAED;gBAEP,+BAAK;gBACJ,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAEnB,+BAAK;gBACJ,IAAI,CAAC,IAAI,CAAC,QAAQ;gBAEnB,+BAAK;gBAEJ,IAAI,CAAC,IAAI,CAAC,OAAO;gBAElB;AAAC,sBAAE,CAAC,IAAI;;;iBAEE;aACR;SACJ;KACT;CACJ,CAAC,uE","file":"/client/app/test/test.component.jsx","sourcesContent":["\n\nCal.Test = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        var handle = Meteor.subscribe(\"accounts\");\n\n        var handle2 = Meteor.subscribe(\"swimmers\");\n\n        var handle3 = Meteor.subscribe(\"classes\");\n\n\n        Meteor.subscribe(\"account1\");\n\n\n\n        return {\n            //currentUser: Meteor.user(),\n\n            currentUser: Meteor.users.find({_id:'account1'}).fetch()[0],\n\n            accounts:Meteor.users.find().fetch(),\n            swimmers:DB.Swimmers.find().fetch(),\n            classes:DB.Classes.find().fetch()\n        };\n    },\n\n    render() {\n        return <div className=\"transition\" id=\"app-body\">\n            <div className=\"wrapper\">\n                <span>\n                    Hello\n                    <b>\n                    {this.data.currentUser && this.data.currentUser.profile.name}\n                    </b>!\n\n                </span>\n\n                <hr/>\n                {this.data.accounts}\n\n                <hr/>\n                {this.data.swimmers}\n\n                <hr/>\n\n                {this.data.classes}\n\n                <RC.Card>\n                    hello\n                </RC.Card>\n            </div>\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test/test.layout.jsx                                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n                                                                       //\nCal.TestLayout = React.createClass({                                   // 2\n    displayName: \"TestLayout\",                                         //\n                                                                       //\n    render: function () {                                              // 3\n        return React.createElement(                                    // 4\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                \"header\",                                              //\n                null,                                                  //\n                \"This is our header\"                                   //\n            ),                                                         //\n            React.createElement(                                       //\n                \"main\",                                                //\n                null,                                                  //\n                this.props.content                                     //\n            ),                                                         //\n            React.createElement(                                       //\n                \"footer\",                                              //\n                null,                                                  //\n                \"This is our footer\"                                   //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test/test.layout.jsx","sourceMap":{"version":3,"sources":["/client/app/test/test.layout.jsx"],"names":[],"mappings":";;;;;;;;;AACA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAC/B,UAAM,cAAE;AACJ,eAAO;;;YACH;;;;aAES;YACT;;;gBACK,IAAI,CAAC,KAAK,CAAC,OAAO;aAChB;YACP;;;;aAES;SACP;KACT;CACJ,CAAC,uE","file":"/client/app/test/test.layout.jsx","sourcesContent":["\nCal.TestLayout = React.createClass({\n    render(){\n        return <div>\n            <header>\n                This is our header\n            </header>\n            <main>\n                {this.props.content}\n            </main>\n            <footer>\n                This is our footer\n            </footer>\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test.admin/TestAdmin.jsx                                 //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/4/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.TestAdmin = React.createClass({                                    // 5\n    displayName: \"TestAdmin\",                                          //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n                                                                       //\n        Meteor.subscribe('appInfo');                                   // 10\n                                                                       //\n        return {                                                       // 12\n            app: DB.App.findOne()                                      // 13\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 17\n        return React.createElement(                                    // 18\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                RC.Card,                                               // 19\n                { key: Math.random(), className: \"padding\" },          //\n                React.createElement(                                   //\n                    \"h4\",                                              //\n                    { className: \"brand\" },                            //\n                    \"Current stage\"                                    //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"row\" },                              //\n                    this.data.app && this.data.app.registerStage       //\n                )                                                      //\n            ),                                                         //\n            React.createElement(                                       //\n                RC.List,                                               // 33\n                null,                                                  //\n                React.createElement(                                   //\n                    RC.Item,                                           // 37\n                    { theme: \"icon-left\", uiClass: \"list-ul\", uiColor: \"brand1\",\n                        href: \"#\" },                                   // 38\n                    \"accounts\"                                         //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 40\n                    { theme: \"icon-left\", uiClass: \"list-ul\", uiColor: \"brand1\",\n                        href: \"/testAdmin/registerStage\" },            // 41\n                    \"registerStage\"                                    //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 43\n                    { theme: \"icon-left\", uiClass: \"list-ul\", uiColor: \"brand2\",\n                        href: \"#\" },                                   // 44\n                    \"classes\"                                          //\n                ),                                                     //\n                React.createElement(                                   //\n                    RC.Item,                                           // 45\n                    { theme: \"icon-left\", uiClass: \"list-ul\", uiColor: \"brand3\",\n                        href: \"/testAdmin/billing\" },                  // 46\n                    \"billings\"                                         //\n                )                                                      //\n            )                                                          //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test.admin/TestAdmin.jsx","sourceMap":{"version":3,"sources":["/client/app/test.admin/TestAdmin.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE9B,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAEZ,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC;;AAE3B,eAAO;AACJ,eAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE;SACvB;KACJ;;AAED,UAAM,cAAG;AACL,eAAO;;;YACH;AAAC,kBAAE,CAAC,IAAI;kBAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,SAAS,EAAC,SAAS;gBAG5C;;sBAAI,SAAS,EAAC,OAAO;;iBAEhB;gBAGL;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa;iBAC3C;aAEA;YAEV;AAAC,kBAAE,CAAC,IAAI;;gBAIJ;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,QAAQ;AACpD,4BAAI,EAAC,GAAG;;iBAAmB;gBAEpC;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,QAAQ;AACpD,4BAAI,EAAC,0BAA0B;;iBAAwB;gBAEhE;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,QAAQ;AACpD,4BAAI,EAAC,GAAG;;iBAAkB;gBACnC;AAAC,sBAAE,CAAC,IAAI;sBAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,OAAO,EAAC,QAAQ;AACpD,4BAAI,EAAC,oBAAoB;;iBAAmB;aAE/C;SAER;KACT;CACJ,CAAC,uE","file":"/client/app/test.admin/TestAdmin.jsx","sourcesContent":["/**\n * Created on 10/4/15.\n */\n\nCal.TestAdmin = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        Meteor.subscribe('appInfo')\n\n        return {\n           app: DB.App.findOne()\n        }\n    },\n\n    render() {\n        return <div>\n            <RC.Card key={Math.random()} className=\"padding\">\n\n\n                <h4 className=\"brand\">\n                    Current stage\n                </h4>\n\n\n                <div className=\"row\">\n                    {this.data.app && this.data.app.registerStage}\n                </div>\n\n            </RC.Card>\n\n            <RC.List>\n\n\n\n                <RC.Item theme=\"icon-left\" uiClass=\"list-ul\" uiColor=\"brand1\"\n                         href=\"#\">accounts</RC.Item>\n\n                <RC.Item theme=\"icon-left\" uiClass=\"list-ul\" uiColor=\"brand1\"\n                         href=\"/testAdmin/registerStage\">registerStage</RC.Item>\n\n                <RC.Item theme=\"icon-left\" uiClass=\"list-ul\" uiColor=\"brand2\"\n                         href=\"#\">classes</RC.Item>\n                <RC.Item theme=\"icon-left\" uiClass=\"list-ul\" uiColor=\"brand3\"\n                         href=\"/testAdmin/billing\">billings</RC.Item>\n\n            </RC.List>\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test.admin/TestAdminBilling.jsx                          //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/16/15.                                                //\n */                                                                    //\n                                                                       //\nCal.TestAdminBilling = React.createClass({                             // 5\n    displayName: 'TestAdminBilling',                                   //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 6\n    getMeteorData: function () {                                       // 7\n                                                                       //\n        Meteor.subscribe('allRegisterShoppingCart');                   // 9\n                                                                       //\n        return {                                                       // 11\n            carts: DB.ShoppingCart.find({                              // 12\n                //status:'checking'                                    //\n            }).fetch()                                                 //\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    onPay: function (item) {                                           // 20\n                                                                       //\n        console.log('=====onPay====', item.status);                    // 22\n                                                                       //\n        if (item.status == \"checking\") {                               // 24\n                                                                       //\n            Meteor.call('move_to_applied', item._id, function (err, result) {\n                if (err) console.error(err);                           // 27\n                                                                       //\n                alert('payment success');                              // 29\n                                                                       //\n                //FlowRouter.go('/classEdit/swimmerList')              //\n            });                                                        //\n        }                                                              //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 39\n        var self = this;                                               // 40\n                                                                       //\n        return React.createElement(                                    // 42\n            'div',                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                'div',                                                 //\n                { className: 'row' },                                  //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col cal-text-wrap' },                //\n                    'CartId'                                           //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col cal-text-wrap' },                //\n                    'Type'                                             //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col cal-text-wrap' },                //\n                    'status'                                           //\n                ),                                                     //\n                React.createElement(                                   //\n                    'div',                                             //\n                    { className: 'col col-20 cal-text-wrap' },         //\n                    'action'                                           //\n                )                                                      //\n            ),                                                         //\n            this.data.carts.map(function (item, i) {                   //\n                                                                       //\n                return React.createElement(                            // 63\n                    'div',                                             //\n                    { className: 'row', key: i },                      //\n                    React.createElement(                               //\n                        'div',                                         //\n                        { className: 'col cal-text-wrap' },            //\n                        item._id                                       //\n                    ),                                                 //\n                    React.createElement(                               //\n                        'div',                                         //\n                        { className: 'col cal-text-wrap' },            //\n                        item.checkoutType                              //\n                    ),                                                 //\n                    React.createElement(                               //\n                        'div',                                         //\n                        { className: 'col cal-text-wrap ' },           //\n                        item.status                                    //\n                    ),                                                 //\n                    React.createElement(                               //\n                        'div',                                         //\n                        { className: 'col col-20 cal-text-wrap' },     //\n                        React.createElement(                           //\n                            'span',                                    //\n                            { className: 'button button-small button-clear',\n                                onClick: self.onPay.bind(self, item) },\n                            'pay'                                      //\n                        )                                              //\n                    )                                                  //\n                );                                                     //\n            })                                                         //\n        );                                                             //\n    }                                                                  //\n                                                                       //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test.admin/TestAdminBilling.jsx","sourceMap":{"version":3,"sources":["/client/app/test.admin/TestAdminBilling.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,gBAAgB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AACrC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAEZ,cAAM,CAAC,SAAS,CAAC,yBAAyB,CAAC;;AAE3C,eAAO;AACH,iBAAK,EAAE,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;;aAE3B,CAAC,CAAC,KAAK,EAAE;SACb;KAGJ;;AAED,SAAK,YAAC,IAAI,EAAC;;AAEP,eAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAAC,MAAM,CAAC;;AAEzC,YAAG,IAAI,CAAC,MAAM,IAAG,UAAU,EAAC;;AAExB,kBAAM,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,GAAG,EAAC,UAAS,GAAG,EAAC,MAAM,EAAC;AACvD,oBAAG,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;;AAE1B,qBAAK,CAAC,iBAAiB,CAAC;;;aAI3B,CAAC;SAEL;KAEJ;;AAED,UAAM,EAAE,YAAY;AAChB,YAAI,IAAI,GAAC,IAAI;;AAEb,eAAO;;;YAEH;;kBAAK,SAAS,EAAC,KAAK;gBAChB;;sBAAK,SAAS,EAAC,mBAAmB;;iBAE5B;gBACN;;sBAAK,SAAS,EAAC,mBAAmB;;iBAE5B;gBACN;;sBAAK,SAAS,EAAC,mBAAmB;;iBAE5B;gBACN;;sBAAK,SAAS,EAAC,0BAA0B;;iBAEnC;aACJ;YAIF,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,IAAI,EAAE,CAAC,EAAC;;AAEjC,uBAAO;;sBAAK,SAAS,EAAC,KAAK,EAAC,GAAG,EAAE,CAAE;oBAE3B;;0BAAK,SAAS,EAAC,mBAAmB;wBAC7B,IAAI,CAAC,GAAG;qBAEP;oBACN;;0BAAK,SAAS,EAAC,mBAAmB;wBAC7B,IAAI,CAAC,YAAY;qBAEhB;oBAEN;;0BAAK,SAAS,EAAC,oBAAoB;wBAC9B,IAAI,CAAC,MAAM;qBAEV;oBAEN;;0BAAK,SAAS,EAAC,0BAA0B;wBAErC;;8BAAM,SAAS,EAAC,kCAAkC;AAC5C,uCAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAE;;yBAEpC;qBAEL;iBAER;aACT,CAAC;SAKJ,CAAC;KACV;;CAEJ,CAAC,CAAC,sE","file":"/client/app/test.admin/TestAdminBilling.jsx","sourcesContent":["/**\n * Created on 10/16/15.\n */\n\nCal.TestAdminBilling = React.createClass({\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        Meteor.subscribe('allRegisterShoppingCart')\n\n        return {\n            carts: DB.ShoppingCart.find({\n                //status:'checking'\n            }).fetch()\n        }\n\n\n    },\n\n    onPay(item){\n\n        console.log('=====onPay====',item.status)\n\n        if(item.status ==\"checking\"){\n\n            Meteor.call('move_to_applied',item._id,function(err,result){\n                if(err) console.error(err)\n\n                alert('payment success')\n\n                //FlowRouter.go('/classEdit/swimmerList')\n\n            })\n\n        }\n\n    },\n\n    render: function () {\n        var self=this\n\n        return <div>\n\n            <div className=\"row\">\n                <div className=\"col cal-text-wrap\" >\n                    CartId\n                </div>\n                <div className=\"col cal-text-wrap\">\n                    Type\n                </div>\n                <div className=\"col cal-text-wrap\">\n                    status\n                </div>\n                <div className=\"col col-20 cal-text-wrap\">\n                    action\n                </div>\n            </div>\n\n\n            {\n                this.data.carts.map(function(item ,i){\n\n                    return <div className=\"row\" key={i}>\n\n                            <div className=\"col cal-text-wrap\" >\n                                {item._id}\n\n                            </div>\n                            <div className=\"col cal-text-wrap\">\n                                {item.checkoutType}\n\n                            </div>\n\n                            <div className=\"col cal-text-wrap \">\n                                {item.status}\n\n                            </div>\n\n                            <div className=\"col col-20 cal-text-wrap\">\n\n                                <span className=\"button button-small button-clear\"\n                                      onClick={self.onPay.bind(self, item)}>\n                                    pay\n                                </span>\n\n                            </div>\n\n                    </div>\n                })\n\n\n            }\n\n        </div>;\n    }\n\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test.admin/TestAdminLayout.jsx                           //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/4/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.TestAdminLayout = React.createClass({                              // 5\n    displayName: \"TestAdminLayout\",                                    //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 12\n        return React.createElement(                                    // 13\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(RC.HeaderNav, { nav: this.props.headerNav,\n                hideBackButton: this.props.hideBackButton,             // 16\n                title: this.props.title, theme: \"flat\" }),             // 17\n            React.createElement(Cal.Body, { tmpl: this.props.body })   //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test.admin/TestAdminLayout.jsx","sourceMap":{"version":3,"sources":["/client/app/test.admin/TestAdminLayout.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAEpC,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,UAAM,cAAG;AACL,eAAO;;;YAEH,oBAAC,EAAE,CAAC,SAAS,IAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAU;AAC1B,8BAAc,EAAG,IAAI,CAAC,KAAK,CAAC,cAAe;AAC3C,qBAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM,EAAC,KAAK,EAAC,MAAM,GAAE;YACrD,oBAAC,GAAG,CAAC,IAAI,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAK,GAAE;SAChC;KACT;CACJ,CAAC,uE","file":"/client/app/test.admin/TestAdminLayout.jsx","sourcesContent":["/**\n * Created on 10/4/15.\n */\n\nCal.TestAdminLayout = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    render() {\n        return <div>\n\n            <RC.HeaderNav nav={this.props.headerNav}\n                          hideBackButton= {this.props.hideBackButton}\n                          title={this.props.title} theme=\"flat\"/>\n            <Cal.Body tmpl={this.props.body}/>\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test.admin/TestAdminPayInStore.jsx                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/4/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.___ = React.createClass({                                          // 5\n    displayName: \"___\",                                                //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n        return {};                                                     // 9\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 12\n        return React.createElement(\"div\", null);                       // 13\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test.admin/TestAdminPayInStore.jsx","sourceMap":{"version":3,"sources":["/client/app/test.admin/TestAdminPayInStore.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAExB,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;AACZ,eAAO,EAAE;KACZ;;AAED,UAAM,cAAG;AACL,eAAO,gCAAW;KACrB;CACJ,CAAC,uE","file":"/client/app/test.admin/TestAdminPayInStore.jsx","sourcesContent":["/**\n * Created on 10/4/15.\n */\n\nCal.___ = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n        return {}\n    },\n\n    render() {\n        return <div></div>\n    }\n})"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/app/test.admin/TestAdminRegisterStage.jsx                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/**                                                                    //\n * Created on 10/4/15.                                                 //\n */                                                                    //\n                                                                       //\nCal.TestAdminRegisterStage = React.createClass({                       // 5\n    displayName: \"TestAdminRegisterStage\",                             //\n                                                                       //\n    mixins: [ReactMeteorData],                                         // 7\n    getMeteorData: function () {                                       // 8\n                                                                       //\n        Meteor.subscribe('appInfo');                                   // 10\n                                                                       //\n        return {                                                       // 12\n            app: DB.App.findOne()                                      // 13\n        };                                                             //\n    },                                                                 //\n                                                                       //\n    stageChange: function () {                                         // 19\n                                                                       //\n        var value = this.refs.stageSelect.getValue();                  // 21\n                                                                       //\n        DB.App.update({ _id: App.info._id }, {                         // 23\n            $set: { registerStage: value }                             // 26\n        });                                                            //\n    },                                                                 //\n                                                                       //\n    render: function () {                                              // 31\n                                                                       //\n        var options = [{ text: \"stage-1\", value: 1 }, { text: \"stage-2\", value: 2 }, { text: \"stage-3\", value: 3 }, { text: \"stage-4\", value: 4 }];\n                                                                       //\n        return React.createElement(                                    // 40\n            \"div\",                                                     //\n            null,                                                      //\n            React.createElement(                                       //\n                RC.Card,                                               // 42\n                { key: Math.random(), className: \"padding\" },          //\n                React.createElement(                                   //\n                    \"h4\",                                              //\n                    { className: \"brand\" },                            //\n                    \"Current stage\"                                    //\n                ),                                                     //\n                React.createElement(                                   //\n                    \"div\",                                             //\n                    { className: \"row\" },                              //\n                    this.data.app && this.data.app.registerStage       //\n                )                                                      //\n            ),                                                         //\n            React.createElement(RC.Select, {                           //\n                ref: \"stageSelect\",                                    // 58\n                changeHandler: this.stageChange,                       // 59\n                theme: \"small-label\",                                  // 60\n                options: options,                                      // 61\n                value: App.info && App.info.registerStage, label: \"stage\", labelColor: \"brand3\"\n            })                                                         //\n        );                                                             //\n    }                                                                  //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/app/test.admin/TestAdminRegisterStage.jsx","sourceMap":{"version":3,"sources":["/client/app/test.admin/TestAdminRegisterStage.jsx"],"names":[],"mappings":";;;;;;;;;;;;AAIA,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAE3C,UAAM,EAAE,CAAC,eAAe,CAAC;AACzB,iBAAa,cAAG;;AAEZ,cAAM,CAAC,SAAS,CAAC,SAAS,CAAC;;AAE3B,eAAO;AACH,eAAG,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE;SACxB;KAGJ;;AAED,eAAW,cAAE;;AAET,YAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;;AAE5C,UAAE,CAAC,GAAG,CAAC,MAAM,CACT,EAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EACpB;AACI,gBAAI,EAAC,EAAC,aAAa,EAAE,KAAK,EAAC;SAC9B,CAAC;KAET;;AAED,UAAM,cAAG;;AAEL,YAAI,OAAO,GAAG,CACV,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAC,EAC3B,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAC,EAC3B,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAC,EAC3B,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;;AAGhC,eAAO;;;YAEH;AAAC,kBAAE,CAAC,IAAI;kBAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAG,EAAC,SAAS,EAAC,SAAS;gBAG5C;;sBAAI,SAAS,EAAC,OAAO;;iBAEhB;gBAGL;;sBAAK,SAAS,EAAC,KAAK;oBACf,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa;iBAC3C;aAEA;YAGV,oBAAC,EAAE,CAAC,MAAM;AACN,mBAAG,EAAC,aAAa;AACjB,6BAAa,EAAE,IAAI,CAAC,WAAY;AAChC,qBAAK,EAAC,aAAa;AACnB,uBAAO,EAAE,OAAQ;AACjB,qBAAK,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,aAAc,EAAC,KAAK,EAAC,OAAO,EAAC,UAAU,EAAC,QAAQ;cAC1E;SAGJ;KACT;CACJ,CAAC,uE","file":"/client/app/test.admin/TestAdminRegisterStage.jsx","sourcesContent":["/**\n * Created on 10/4/15.\n */\n\nCal.TestAdminRegisterStage = React.createClass({\n\n    mixins: [ReactMeteorData],\n    getMeteorData() {\n\n        Meteor.subscribe('appInfo')\n\n        return {\n            app: DB.App.findOne()\n        }\n\n\n    },\n\n    stageChange(){\n\n        var value = this.refs.stageSelect.getValue()\n\n        DB.App.update(\n            {_id: App.info._id },\n            {\n                $set:{registerStage: value}\n            })\n\n    },\n\n    render() {\n\n        var options = [\n            {text: \"stage-1\", value: 1},\n            {text: \"stage-2\", value: 2},\n            {text: \"stage-3\", value: 3},\n            {text: \"stage-4\", value: 4}]\n\n\n        return <div>\n\n            <RC.Card key={Math.random()} className=\"padding\">\n\n\n                <h4 className=\"brand\">\n                    Current stage\n                </h4>\n\n\n                <div className=\"row\">\n                    {this.data.app && this.data.app.registerStage}\n                </div>\n\n            </RC.Card>\n\n\n            <RC.Select\n                ref=\"stageSelect\"\n                changeHandler={this.stageChange}\n                theme=\"small-label\"\n                options={options}\n                value={App.info && App.info.registerStage} label=\"stage\" labelColor=\"brand3\"\n                />\n\n\n        </div>\n    }\n})"]}},{"type":"js","data":"(function(){/*\n*\n* Refer to https://github.com/aldeed/meteor-collection2\n* Attach a Schema to Meteor.users\n*\n* */\n\n\n//Accounts = new Mongo.Collection('accounts');\n\n/*\n name: \"Joe Schmoe\",\n phone: \"+1 555 555 5555\",\n address: \"Somewhere, San Jose, CA 95134\",\n location: \"Dublin\" or \"Fremont\",\n */\n\nDB.Schema.AccountProfile = new SimpleSchema({\n    name: {\n        type: String,\n        optional: true\n    },\n    phone: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    location: {\n        type: String,\n        optional: true\n    }\n});\n\nDB.Schema.Account = new SimpleSchema({\n\n    username: {\n        type: String,\n        optional: true\n    },\n    emails: {\n        type: Array\n    },\n\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n\n    //name: {\n    //    type: String\n    //},\n\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n\n    // !!!Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n\n    role: {\n        type: String,\n        optional: true    //todo change to false\n    },\n\n    profile: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n\n\n    credits: {\n        type: Number,\n        optional: true\n    },\n\n    alterContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    emergencyContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    optInCheck: {\n        type: Boolean,\n        optional: true\n    },\n    swimmers: {\n        type: [String],\n        optional: true\n\n    }\n});\n\n\n//Accounts.attachSchema(App.Schema.Account)\n\nMeteor.users.attachSchema(DB.Schema.Account);\n}).call(this);\n","servePath":"/both/collections/Accounts.js","sourceMap":{"version":3,"sources":["/both/collections/Accounts.js"],"names":[],"mappings":"cfile":"/both/collections/Accounts.js","sourcesContent":["/*\n*\n* Refer to https://github.com/aldeed/meteor-collection2\n* Attach a Schema to Meteor.users\n*\n* */\n\n\n//Accounts = new Mongo.Collection('accounts');\n\n/*\n name: \"Joe Schmoe\",\n phone: \"+1 555 555 5555\",\n address: \"Somewhere, San Jose, CA 95134\",\n location: \"Dublin\" or \"Fremont\",\n */\n\nDB.Schema.AccountProfile = new SimpleSchema({\n    name: {\n        type: String,\n        optional: true\n    },\n    phone: {\n        type: String,\n        optional: true\n    },\n    address: {\n        type: String,\n        optional: true\n    },\n    location: {\n        type: String,\n        optional: true\n    }\n});\n\nDB.Schema.Account = new SimpleSchema({\n\n    username: {\n        type: String,\n        optional: true\n    },\n    emails: {\n        type: Array\n    },\n\n    \"emails.$\": {\n        type: Object\n    },\n    \"emails.$.address\": {\n        type: String,\n        regEx: SimpleSchema.RegEx.Email\n    },\n    \"emails.$.verified\": {\n        type: Boolean\n    },\n\n    //name: {\n    //    type: String\n    //},\n\n    createdAt: {\n        type: Date,\n        optional: true\n    },\n\n    // !!!Make sure this services field is in your schema if you're using any of the accounts packages\n    services: {\n        type: Object,\n        optional: true,\n        blackbox: true\n    },\n\n    role: {\n        type: String,\n        optional: true    //todo change to false\n    },\n\n    profile: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n\n\n    credits: {\n        type: Number,\n        optional: true\n    },\n\n    alterContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    emergencyContact: {\n        type: DB.Schema.AccountProfile,\n        optional: true\n    },\n    optInCheck: {\n        type: Boolean,\n        optional: true\n    },\n    swimmers: {\n        type: [String],\n        optional: true\n\n    }\n});\n\n\n//Accounts.attachSchema(App.Schema.Account)\n\nMeteor.users.attachSchema(DB.Schema.Account);"]}},{"type":"js","data":"(function(){/**\n * Created on 9/12/15.\n */\n\n//存储全局性的配置信息\n\nDB.App = new Mongo.Collection('app');\n\n\nDB.Schema.App = new SimpleSchema(\n    {\n        status: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n        setting: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n\n\n        sessionNow:{//正在进行的session\n            type: String,\n            optional: true\n        },\n        sessionRegister:{//注册的session\n            type: String,\n            optional: true\n        },\n        openRegister:{\n            type: Boolean,\n            optional: true\n        },\n        //for test  当前注册阶段  1 2 3 4\n        registerStage:{\n            type: Number,\n            optional: true\n        }\n\n    });\n\n\nDB.App.attachSchema(DB.Schema.App)\n\n\n}).call(this);\n","servePath":"/both/collections/App.js","sourceMap":{"version":3,"sources":["/both/collections/App.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/App.js","sourcesContent":["/**\n * Created on 9/12/15.\n */\n\n//存储全局性的配置信息\n\nDB.App = new Mongo.Collection('app');\n\n\nDB.Schema.App = new SimpleSchema(\n    {\n        status: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n        setting: {\n            type: Object,\n            optional: true,\n            blackbox: true\n        },\n\n\n        sessionNow:{//正在进行的session\n            type: String,\n            optional: true\n        },\n        sessionRegister:{//注册的session\n            type: String,\n            optional: true\n        },\n        openRegister:{\n            type: Boolean,\n            optional: true\n        },\n        //for test  当前注册阶段  1 2 3 4\n        registerStage:{\n            type: Number,\n            optional: true\n        }\n\n    });\n\n\nDB.App.attachSchema(DB.Schema.App)\n\n"]}},{"type":"js","data":"(function(){\nDB.ClassesRegister = new Mongo.Collection('classesRegister');\n\n\n\nDB.Schema.ClassesRegister = new SimpleSchema({\n    /*\n    *  classId确定后sessionId就确定了。\n    *  添加这个字段可以用便查询swimmer在当前session是否有课\n    * */\n    sessionId: {\n        type: String\n    },\n    //方便查询\n    accountId: {\n        type: String,\n        optional: true\n    },\n    \n    //方便查询  因为注册level 并不能根据swimmer或者 class的信息得出!!!\n    // 一个class有多个level\n    // 对于新用户returnback用户swimmer的level可能和注册的level一致\n    // 对于正在游的用户 注册的level比swimmer的level 高一个等级\n    classLevel:{\n        type: String,\n        optional: true\n    },\n    classId: {\n        type: String\n    },\n    swimmerId: {\n        type: String\n    },\n    cartId:{\n        type: String  //即使后台直接注册也会产生 cart\n    },\n\n    timestamp: {//todo change to lastModified\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate || this.isInsert || this.isUpsert) {\n                return new Date();\n            }\n        },\n        optional: true\n    },\n    registerTime:{ //从购物车获取\n        type: Date,\n        optional: true\n    },\n\n    //可能是normal canceling 或changing\n    status: {\n        type: String,\n        //optional: true,\n        allowedValues:['normal','canceling','changing'],\n        defaultValue:'normal'\n    },\n    //在 cancel和change class时标记\n    carted:{\n        //type: [DB.Schema.ClassesShoppingCart],\n        type: [String], //存储cancel和change类型的购物车id\n        optional: true,\n        blackbox: true\n    }\n\n\n});\n\nDB.ClassesRegister.attachSchema(DB.Schema.ClassesRegister)\n}).call(this);\n","servePath":"/both/collections/ClassesRegister.js","sourceMap":{"version":3,"sources":["/both/collections/ClassesRegister.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D","file":"/both/collections/ClassesRegister.js","sourcesContent":["\nDB.ClassesRegister = new Mongo.Collection('classesRegister');\n\n\n\nDB.Schema.ClassesRegister = new SimpleSchema({\n    /*\n    *  classId确定后sessionId就确定了。\n    *  添加这个字段可以用便查询swimmer在当前session是否有课\n    * */\n    sessionId: {\n        type: String\n    },\n    //方便查询\n    accountId: {\n        type: String,\n        optional: true\n    },\n    \n    //方便查询  因为注册level 并不能根据swimmer或者 class的信息得出!!!\n    // 一个class有多个level\n    // 对于新用户returnback用户swimmer的level可能和注册的level一致\n    // 对于正在游的用户 注册的level比swimmer的level 高一个等级\n    classLevel:{\n        type: String,\n        optional: true\n    },\n    classId: {\n        type: String\n    },\n    swimmerId: {\n        type: String\n    },\n    cartId:{\n        type: String  //即使后台直接注册也会产生 cart\n    },\n\n    timestamp: {//todo change to lastModified\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate || this.isInsert || this.isUpsert) {\n                return new Date();\n            }\n        },\n        optional: true\n    },\n    registerTime:{ //从购物车获取\n        type: Date,\n        optional: true\n    },\n\n    //可能是normal canceling 或changing\n    status: {\n        type: String,\n        //optional: true,\n        allowedValues:['normal','canceling','changing'],\n        defaultValue:'normal'\n    },\n    //在 cancel和change class时标记\n    carted:{\n        //type: [DB.Schema.ClassesShoppingCart],\n        type: [String], //存储cancel和change类型的购物车id\n        optional: true,\n        blackbox: true\n    }\n\n\n});\n\nDB.ClassesRegister.attachSchema(DB.Schema.ClassesRegister)"]}},{"type":"js","data":"(function(){DB.Sessions = new Mongo.Collection('sessions');\n\n\nDB.Schema.Sessions = new SimpleSchema(\n    {\n        name: {\n            type: String,\n            optional: true\n        },\n        registerStartDate: { //注册开始时间\n            type: Date\n        },\n        startDate: {   //session开始时间\n            type: Date\n        }\n    });\n\n\nDB.Sessions.attachSchema(DB.Schema.Sessions)\n\n}).call(this);\n","servePath":"/both/collections/Sessions.js","sourceMap":{"version":3,"sources":["/both/collections/Sessions.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/Sessions.js","sourcesContent":["DB.Sessions = new Mongo.Collection('sessions');\n\n\nDB.Schema.Sessions = new SimpleSchema(\n    {\n        name: {\n            type: String,\n            optional: true\n        },\n        registerStartDate: { //注册开始时间\n            type: Date\n        },\n        startDate: {   //session开始时间\n            type: Date\n        }\n    });\n\n\nDB.Sessions.attachSchema(DB.Schema.Sessions)\n"]}},{"type":"js","data":"(function(){/**\n * Created on 9/13/15.\n */\n\n/*\n *\n * 无效购物车需要定时执行的程序进行清空\n *\n * */\nDB.ShoppingCart = new Mongo.Collection('shoppingCart');\n\n\nDB.ShoppingCart.attachSchema(new SimpleSchema({\n\n    accountId: {\n        type: String\n    },\n    sessionId:{\n        type: String,\n        optional: true //todo remove\n    },\n\n    /*\n     *\n         active\n         pending\n         checking\n         applied\n         done\n\n         expiring\n         expired\n\n         canceling\n         canceled\n\n     *\n     * */\n    status: {\n        type: String\n    },\n\n    /*\n    * 购物车添加类型，cancel ，change独立于register另建购物车 方便事务中恢复逻辑的实现\n    * 否则一个中断于pending时购物车中若同时存在三种项目 会增加恢复执行或回滚的复杂性\n    * */\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    },\n\n    lastModified: {   //用于计算超时 清空购物车\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate) {\n                return new Date();\n            }\n            if (this.isUpsert) {\n                return new Date();\n            }\n            if (this.isInsert) {\n                return new Date();\n            }\n        }\n    },\n    appliedTime:{//完成交易 设置applied的时间\n        type: Date,\n        optional: true\n    },\n    /*\n     *\n     * 两种类型的超时时间不一样\n     *\n     * pay-in-store  24h\n     * pay-now   15 minutes\n     * */\n    checkoutType: {\n        type: String,\n        optional: true  //add default value?\n    },\n\n\n    /*\n        添加class或取消class\n        {\n        type=='add'\n        sessionId   //todo remove\n        swimmerId classId, quantity\n        swimmer class1 class2 class3\n        }\n\n        change class\n        {\n            type=='change'\n            sessionId, swimmerId,\n            fromClass, toClass\n        }\n\n        isBookTheSameTime //标记购物项是否是通过bookthesametime添加\n\n    * */\n    //\n    items: {\n        type: [Object],\n        optional: true,\n        blackbox: true\n    }\n\n}))\n}).call(this);\n","servePath":"/both/collections/ShoppingCart.js","sourceMap":{"version":3,"sources":["/both/collections/ShoppingCart.js"],"names":[],"mappings":"efile":"/both/collections/ShoppingCart.js","sourcesContent":["/**\n * Created on 9/13/15.\n */\n\n/*\n *\n * 无效购物车需要定时执行的程序进行清空\n *\n * */\nDB.ShoppingCart = new Mongo.Collection('shoppingCart');\n\n\nDB.ShoppingCart.attachSchema(new SimpleSchema({\n\n    accountId: {\n        type: String\n    },\n    sessionId:{\n        type: String,\n        optional: true //todo remove\n    },\n\n    /*\n     *\n         active\n         pending\n         checking\n         applied\n         done\n\n         expiring\n         expired\n\n         canceling\n         canceled\n\n     *\n     * */\n    status: {\n        type: String\n    },\n\n    /*\n    * 购物车添加类型，cancel ，change独立于register另建购物车 方便事务中恢复逻辑的实现\n    * 否则一个中断于pending时购物车中若同时存在三种项目 会增加恢复执行或回滚的复杂性\n    * */\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    },\n\n    lastModified: {   //用于计算超时 清空购物车\n        type: Date,\n        autoValue: function () {\n            if (this.isUpdate) {\n                return new Date();\n            }\n            if (this.isUpsert) {\n                return new Date();\n            }\n            if (this.isInsert) {\n                return new Date();\n            }\n        }\n    },\n    appliedTime:{//完成交易 设置applied的时间\n        type: Date,\n        optional: true\n    },\n    /*\n     *\n     * 两种类型的超时时间不一样\n     *\n     * pay-in-store  24h\n     * pay-now   15 minutes\n     * */\n    checkoutType: {\n        type: String,\n        optional: true  //add default value?\n    },\n\n\n    /*\n        添加class或取消class\n        {\n        type=='add'\n        sessionId   //todo remove\n        swimmerId classId, quantity\n        swimmer class1 class2 class3\n        }\n\n        change class\n        {\n            type=='change'\n            sessionId, swimmerId,\n            fromClass, toClass\n        }\n\n        isBookTheSameTime //标记购物项是否是通过bookthesametime添加\n\n    * */\n    //\n    items: {\n        type: [Object],\n        optional: true,\n        blackbox: true\n    }\n\n}))"]}},{"type":"js","data":"(function(){\n\nDB.Swimmers = new Mongo.Collection('swimmers');\n\n\nDB.Schema.Swimmers = new SimpleSchema({\n    name: {\n        type: String\n\n    },\n    //所属account\n    accountId: {\n        type: String\n    },\n\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['male', 'female'],\n        optional: true\n    },\n    age: {\n        type: Number,\n        optional: true\n    },\n    allergy:{\n        type: String,\n        optional: true\n    },\n\n    location: {\n        type: String,\n    },\n    level:{\n        type: String\n    },\n    waiveFormAgreed: {\n        type: Boolean,\n        optional: true\n    },\n    paymentStatus: {\n        type: Boolean,\n        optional: true\n    },\n    meetingDate:{\n        type: Date,\n        optional: true\n    },\n    registerAt:{\n        type: Date,\n        optional: true\n    },\n    classes:{\n        type: [String],  //｛class ids  ，register date｝?\n        optional: true\n    }\n\n\n});\n\n\nDB.Swimmers.attachSchema(DB.Schema.Swimmers)\n\n}).call(this);\n","servePath":"/both/collections/Swimmers.js","sourceMap":{"version":3,"sources":["/both/collections/Swimmers.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/Swimmers.js","sourcesContent":["\n\nDB.Swimmers = new Mongo.Collection('swimmers');\n\n\nDB.Schema.Swimmers = new SimpleSchema({\n    name: {\n        type: String\n\n    },\n    //所属account\n    accountId: {\n        type: String\n    },\n\n    birthday: {\n        type: Date,\n        optional: true\n    },\n    gender: {\n        type: String,\n        allowedValues: ['male', 'female'],\n        optional: true\n    },\n    age: {\n        type: Number,\n        optional: true\n    },\n    allergy:{\n        type: String,\n        optional: true\n    },\n\n    location: {\n        type: String,\n    },\n    level:{\n        type: String\n    },\n    waiveFormAgreed: {\n        type: Boolean,\n        optional: true\n    },\n    paymentStatus: {\n        type: Boolean,\n        optional: true\n    },\n    meetingDate:{\n        type: Date,\n        optional: true\n    },\n    registerAt:{\n        type: Date,\n        optional: true\n    },\n    classes:{\n        type: [String],  //｛class ids  ，register date｝?\n        optional: true\n    }\n\n\n});\n\n\nDB.Swimmers.attachSchema(DB.Schema.Swimmers)\n"]}},{"type":"js","data":"(function(){/**\n * Created on 10/2/15.\n */\n\nDB.WaitingList = new Mongo.Collection('waitingList');\n\n\nDB.WaitingList.attachSchema(new SimpleSchema(\n    {\n\n        swimmerId: {\n            type: String\n        },\n        classId: {\n            type: String\n        },\n\n        //sessionId  accountId是为了方便查询\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        accountId: {\n            type: String,\n            optional: true\n        },\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n\n}).call(this);\n","servePath":"/both/collections/WaitingList.js","sourceMap":{"version":3,"sources":["/both/collections/WaitingList.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/both/collections/WaitingList.js","sourcesContent":["/**\n * Created on 10/2/15.\n */\n\nDB.WaitingList = new Mongo.Collection('waitingList');\n\n\nDB.WaitingList.attachSchema(new SimpleSchema(\n    {\n\n        swimmerId: {\n            type: String\n        },\n        classId: {\n            type: String\n        },\n\n        //sessionId  accountId是为了方便查询\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        accountId: {\n            type: String,\n            optional: true\n        },\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n"]}},{"type":"js","data":"(function(){/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver = new Mongo.Collection('waiver');\n\nDB.Waiver.attachSchema(new SimpleSchema(\n    {\n\n        accountId: {\n            type: String,\n        },\n        //sessionId  accountId是为了方便查询\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        swimmers: {\n            type: [String]\n        },\n\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))\n}).call(this);\n","servePath":"/both/collections/Waiver.js","sourceMap":{"version":3,"sources":["/both/collections/Waiver.js"],"names":[],"mappings":"eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O","file":"/both/collections/Waiver.js","sourcesContent":["/**\n * Created by Jeffreyfan on 10/18/15.\n */\n\nDB.Waiver = new Mongo.Collection('waiver');\n\nDB.Waiver.attachSchema(new SimpleSchema(\n    {\n\n        accountId: {\n            type: String,\n        },\n        //sessionId  accountId是为了方便查询\n        sessionId: {\n            type: String,\n            optional: true\n        },\n        swimmers: {\n            type: [String]\n        },\n\n        lastModified: {\n            type: Date,\n            autoValue: function () {\n                if (this.isUpdate || this.isInsert || this.isUpsert) {\n                    return new Date();\n                }\n            }\n        }\n\n\n    }))"]}},{"type":"js","data":"(function(){\nDB.Classes = new Mongo.Collection('classes');\n\n\n\nDB.Schema.ClassesShoppingCart= new SimpleSchema({\n\n    cartId: {\n        type: String,\n        optional: true\n    },\n    swimmerId:{\n        type: String,\n        optional: true\n    },\n    quantity:{\n        type: Number\n    },\n    timestamp: {\n        type: Date\n    },\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    }\n});\n\n\n\nDB.Schema.Classes = new SimpleSchema({\n    name: {\n        type: String\n    },\n    //所属的session\n    sessionId:{\n        type: String\n    },\n\n    //todo delete\n    level:  {\n      type: String,\n      optional: true\n    },\n\n    // 一个class包含多个level\n    levels:  {\n      type: [String],\n      optional: true\n    },\n\n    //class的时间定义 每周仅一次？\n    //周几  1-7\n    day:{\n        type: Number\n    },\n\n    startTime: {\n        type: Number\n    },\n    endTime: {\n        type: Number\n    },\n    price:  {\n        type: Number\n    },\n\n    carted:{\n        type: [DB.Schema.ClassesShoppingCart],\n        optional: true\n    },\n\n    seatsTotal:{\n        type: Number\n    },\n    seatsRemain:{\n        type: Number\n    },\n    students:{\n        type: [String],  //students ids\n        optional: true\n    },\n\n    ///////////////////////////////////////////////\n    startDate: {\n        type: Date,\n        optional: true\n    },\n    endDate: {\n        type: Date,\n        optional: true\n    },\n\n    duration: {\n        type: Number,\n        optional: true\n    },\n    frequency:{\n        type: String,\n        optional: true\n    },\n    type: {\n        type: String,\n        optional: true\n    },\n    coachId: {\n        type: String,\n        optional: true\n    },\n    coachName: {\n        type: String,\n        optional: true\n\n    }\n});\n\n\nDB.Classes.attachSchema(DB.Schema.Classes)\n}).call(this);\n","servePath":"/both/collections/classes.js","sourceMap":{"version":3,"sources":["/both/collections/classes.js"],"names":[],"mappingsfile":"/both/collections/classes.js","sourcesContent":["\nDB.Classes = new Mongo.Collection('classes');\n\n\n\nDB.Schema.ClassesShoppingCart= new SimpleSchema({\n\n    cartId: {\n        type: String,\n        optional: true\n    },\n    swimmerId:{\n        type: String,\n        optional: true\n    },\n    quantity:{\n        type: Number\n    },\n    timestamp: {\n        type: Date\n    },\n    type:{\n        type: String,\n        allowedValues:['register','cancel','change'],\n        defaultValue:'register'\n    }\n});\n\n\n\nDB.Schema.Classes = new SimpleSchema({\n    name: {\n        type: String\n    },\n    //所属的session\n    sessionId:{\n        type: String\n    },\n\n    //todo delete\n    level:  {\n      type: String,\n      optional: true\n    },\n\n    // 一个class包含多个level\n    levels:  {\n      type: [String],\n      optional: true\n    },\n\n    //class的时间定义 每周仅一次？\n    //周几  1-7\n    day:{\n        type: Number\n    },\n\n    startTime: {\n        type: Number\n    },\n    endTime: {\n        type: Number\n    },\n    price:  {\n        type: Number\n    },\n\n    carted:{\n        type: [DB.Schema.ClassesShoppingCart],\n        optional: true\n    },\n\n    seatsTotal:{\n        type: Number\n    },\n    seatsRemain:{\n        type: Number\n    },\n    students:{\n        type: [String],  //students ids\n        optional: true\n    },\n\n    ///////////////////////////////////////////////\n    startDate: {\n        type: Date,\n        optional: true\n    },\n    endDate: {\n        type: Date,\n        optional: true\n    },\n\n    duration: {\n        type: Number,\n        optional: true\n    },\n    frequency:{\n        type: String,\n        optional: true\n    },\n    type: {\n        type: String,\n        optional: true\n    },\n    coachId: {\n        type: String,\n        optional: true\n    },\n    coachName: {\n        type: String,\n        optional: true\n\n    }\n});\n\n\nDB.Classes.attachSchema(DB.Schema.Classes)"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/main.jsx                                                     //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\n/*                                                                     //\n*                                                                      //\n* borrow from ihealth_framework-mobile startup.js                      //\n* Todo will remove after update of ihealth_framework-mobile            //\n* */                                                                   //\nMeteor.startup(function () {                                           // 6\n                                                                       //\n    // Back Handler                                                    //\n    document.addEventListener(\"backbutton\", function (e) {             // 9\n        e.preventDefault();                                            // 10\n        if (FlowRouter.current().path == \"/\") {                        // 11\n            navigator.app.exitApp();                                   // 12\n        } else {                                                       //\n            FlowRouter.BackButton = true;                              // 14\n            navigator.app.backHistory();                               // 15\n        }                                                              //\n    }, false);                                                         //\n                                                                       //\n    // Important : Meta                                                //\n    var metaTag = document.createElement('meta');                      // 20\n    metaTag.name = \"viewport\";                                         // 21\n    metaTag.content = \"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1\";\n    document.getElementsByTagName('head')[0].appendChild(metaTag);     // 23\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/main.jsx","sourceMap":{"version":3,"sources":["/client/main.jsx"],"names":[],"mappings":";;;;;;;;;;;;;AAKA,MAAM,CAAC,OAAO,CAAE,YAAW;;;AAGvB,YAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAS,CAAC,EAAC;AAC/C,SAAC,CAAC,cAAc,EAAE;AAClB,YAAI,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,IAAE,GAAG,EAAE;AAChC,qBAAS,CAAC,GAAG,CAAC,OAAO,EAAE;SAC1B,MAAM;AACH,sBAAU,CAAC,UAAU,GAAG,IAAI;AAC5B,qBAAS,CAAC,GAAG,CAAC,WAAW,EAAE;SAC9B;KACJ,EAAE,KAAK,CAAC;;;AAGT,QAAI,OAAO,GAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3C,WAAO,CAAC,IAAI,GAAG,UAAU;AACzB,WAAO,CAAC,OAAO,GAAG,qEAAqE;AACvF,YAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;CAEhE,CAAC,uE","file":"/client/main.jsx","sourcesContent":["/*\n*\n* borrow from ihealth_framework-mobile startup.js\n* Todo will remove after update of ihealth_framework-mobile\n* */\nMeteor.startup( function() {\n\n    // Back Handler\n    document.addEventListener(\"backbutton\", function(e){\n        e.preventDefault()\n        if (FlowRouter.current().path==\"/\") {\n            navigator.app.exitApp()\n        } else {\n            FlowRouter.BackButton = true\n            navigator.app.backHistory()\n        }\n    }, false)\n\n    // Important : Meta\n    var metaTag=document.createElement('meta');\n    metaTag.name = \"viewport\"\n    metaTag.content = \"user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1\"\n    document.getElementsByTagName('head')[0].appendChild(metaTag)\n\n})"]}}]