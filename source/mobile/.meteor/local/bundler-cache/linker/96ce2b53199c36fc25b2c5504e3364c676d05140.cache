[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar shoppingCart, shopping_cart_export, common_create_cart, common_get_or_create_active_cart, common_check_cart_status, create_cart, get_active_cart_id, get_carts, checkCartStatus, register_add_class_to_cart, register_add_preference_to_cart, change_caculate_fee, change_create_cart, change_get_or_create_active_cart, change_class, change_class_due, change_class_refund, change_add_class_to_cart, change_move_pending_to_applied, change_move__applied_to_done, change_move_pending_to_checking, change_rollback_from_pending, change_rollback_from_checking, change_checking_to_applied, cancel_create_cart, cancel_add_class_to_cart, cancel_move_canceling_to_applied, cancel_move_canceling_to_applied_rollback, cancel_move_applied_to_done;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cal_cart/shoppingCart.common.js                                                                      //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**                                                                                                              // 1\n * Created on 9/25/15.                                                                                           // 2\n */                                                                                                              // 3\n                                                                                                                 // 4\n                                                                                                                 // 5\n                                                                                                                 // 6\nshoppingCart = {};                                                                                               // 7\n                                                                                                                 // 8\n//a utils                                                                                                        // 9\nshopping_cart_export=function(obj){                                                                              // 10\n    for(var x in obj){                                                                                           // 11\n                                                                                                                 // 12\n        if(obj.hasOwnProperty(x)){                                                                               // 13\n                                                                                                                 // 14\n            if(shoppingCart[x]){                                                                                 // 15\n                throw x+\" is duplicated\";                                                                        // 16\n            }                                                                                                    // 17\n            shoppingCart[x] =obj[x]                                                                              // 18\n        }                                                                                                        // 19\n    }                                                                                                            // 20\n}                                                                                                                // 21\n/////////////////////////////////////////////////////////                                                        // 22\n                                                                                                                 // 23\n////package scope                                                                                                // 24\n                                                                                                                 // 25\n//{type:'register'}                                                                                              // 26\ncommon_create_cart = function (params) {                                                                         // 27\n                                                                                                                 // 28\n    var shoppingCart = {                                                                                         // 29\n        status: 'active',                                                                                        // 30\n        accountId: Meteor.userId(),                                                                              // 31\n        type: params.type,                                                                                       // 32\n        sessionId: App.info.sessionRegister,                                                                     // 33\n        items: params.item ? [params.item] : []                                                                  // 34\n    }                                                                                                            // 35\n                                                                                                                 // 36\n    var cartId = DB.ShoppingCart.insert(shoppingCart);                                                           // 37\n                                                                                                                 // 38\n    return DB.ShoppingCart.findOne({_id: cartId});                                                               // 39\n                                                                                                                 // 40\n}                                                                                                                // 41\n                                                                                                                 // 42\n                                                                                                                 // 43\n//{type:'register'}                                                                                              // 44\ncommon_get_or_create_active_cart = function (params) {                                                           // 45\n                                                                                                                 // 46\n    var cart = DB.ShoppingCart.findOne({                                                                         // 47\n        accountId: Meteor.userId(),                                                                              // 48\n        status: 'active',                                                                                        // 49\n        type: params.type,                                                                                       // 50\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}                                              // 51\n                                                                                                                 // 52\n                                                                                                                 // 53\n    })                                                                                                           // 54\n                                                                                                                 // 55\n    return cart || create_cart({status: 'active', type: params.type})                                            // 56\n}                                                                                                                // 57\n                                                                                                                 // 58\n                                                                                                                 // 59\ncommon_check_cart_status =function (cartId, status) {                                                            // 60\n                                                                                                                 // 61\n    //todo 加入时间计算                                                                                                // 62\n    var cart = DB.ShoppingCart.findOne({                                                                         // 63\n        _id: cartId,                                                                                             // 64\n        accountId: Meteor.userId(),                                                                              // 65\n        status: status                                                                                           // 66\n    })                                                                                                           // 67\n                                                                                                                 // 68\n    return !!(cart && cart._id)                                                                                  // 69\n                                                                                                                 // 70\n}                                                                                                                // 71\n                                                                                                                 // 72\n                                                                                                                 // 73\n                                                                                                                 // 74\n                                                                                                                 // 75\n                                                                                                                 // 76\n                                                                                                                 // 77\n///////////////////old to delete///////////////////                                                              // 78\ncreate_cart = function (item) {                                                                                  // 79\n                                                                                                                 // 80\n    var shoppingCart = {                                                                                         // 81\n        status: 'active',                                                                                        // 82\n        accountId: Meteor.userId(),                                                                              // 83\n        sessionId: App.info.sessionRegister,                                                                     // 84\n        items: item ? [item] : []                                                                                // 85\n    }                                                                                                            // 86\n                                                                                                                 // 87\n    var cartId = DB.ShoppingCart.insert(shoppingCart);                                                           // 88\n                                                                                                                 // 89\n    return cartId;                                                                                               // 90\n                                                                                                                 // 91\n}                                                                                                                // 92\n                                                                                                                 // 93\n//todo pending且未超时状态下 恢复为active的逻辑                                                                               // 94\nget_active_cart_id =function (createIfNotExist) {                                                                // 95\n                                                                                                                 // 96\n    var cart = DB.ShoppingCart.findOne({ //todo 加入时间计算                                                           // 97\n        accountId: Meteor.userId(),                                                                              // 98\n        status: 'active'                                                                                         // 99\n    })                                                                                                           // 100\n                                                                                                                 // 101\n    //console.log(cart)                                                                                          // 102\n                                                                                                                 // 103\n    return (cart && cart._id) || (createIfNotExist && create_cart());                                            // 104\n}                                                                                                                // 105\n                                                                                                                 // 106\nget_carts = function (status) {                                                                                  // 107\n    var options = {                                                                                              // 108\n        accountId: Meteor.userId(),                                                                              // 109\n        sessionId: App.info.sessionRegister,                                                                     // 110\n    }                                                                                                            // 111\n    status = status | {}                                                                                         // 112\n                                                                                                                 // 113\n    options = _.extend(options, status)                                                                          // 114\n                                                                                                                 // 115\n    var carts = DB.ShoppingCart.find(options).fetch()                                                            // 116\n    return carts;                                                                                                // 117\n}                                                                                                                // 118\n                                                                                                                 // 119\n                                                                                                                 // 120\n//package scope                                                                                                  // 121\ncheckCartStatus =function (cartId, status) {                                                                     // 122\n                                                                                                                 // 123\n    //todo 加入时间计算                                                                                                // 124\n    var cart = DB.ShoppingCart.findOne({                                                                         // 125\n        _id: cartId,                                                                                             // 126\n        accountId: Meteor.userId(),                                                                              // 127\n        status: status                                                                                           // 128\n    })                                                                                                           // 129\n                                                                                                                 // 130\n    return !!(cart && cart._id)                                                                                  // 131\n                                                                                                                 // 132\n}                                                                                                                // 133\n                                                                                                                 // 134\n                                                                                                                 // 135\n                                                                                                                 // 136\n                                                                                                                 // 137\nshopping_cart_export({                                                                                           // 138\n    //create_cart: create_cart,                                                                                  // 139\n    get_or_create_active_cart: common_get_or_create_active_cart,                                                 // 140\n    check_cart_status: common_check_cart_status,                                                                 // 141\n                                                                                                                 // 142\n                                                                                                                 // 143\n    ////////old/////                                                                                             // 144\n    create_cart: create_cart,                                                                                    // 145\n    get_active_cart_id: get_active_cart_id,                                                                      // 146\n    get_carts: get_carts,                                                                                        // 147\n    checkCartStatus: checkCartStatus                                                                             // 148\n})                                                                                                               // 149\n                                                                                                                 // 150\n                                                                                                                 // 151\n                                                                                                                 // 152\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cal_cart/shoppingCart.register.js                                                                    //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**                                                                                                              // 1\n * Created on 9/25/15.                                                                                           // 2\n */                                                                                                              // 3\n                                                                                                                 // 4\n                                                                                                                 // 5\n                                                                                                                 // 6\nregister_add_class_to_cart = function (classId) {                                                                // 7\n                                                                                                                 // 8\n                                                                                                                 // 9\n}                                                                                                                // 10\nregister_add_preference_to_cart = function () {                                                                  // 11\n                                                                                                                 // 12\n                                                                                                                 // 13\n}                                                                                                                // 14\n                                                                                                                 // 15\nfunction add_item_to_cart(item) {                                                                                // 16\n                                                                                                                 // 17\n                                                                                                                 // 18\n}                                                                                                                // 19\n                                                                                                                 // 20\n//cart中 单个swimmer添加的课程的数量                                                                                        // 21\nfunction get_class_count_in_cart(cartId, swimmerId) {                                                            // 22\n    var cart = DB.ShoppingCart.findOne({                                                                         // 23\n        _id: cartId                                                                                              // 24\n    })                                                                                                           // 25\n    if (!cart)throw new Meteor.Error(500, 'in get_class_count_in_cart', 'cart not exist ' + cartId)              // 26\n                                                                                                                 // 27\n    var items = cart.items                                                                                       // 28\n    var count = 0                                                                                                // 29\n                                                                                                                 // 30\n    items.forEach(function (item) {                                                                              // 31\n        if (item.swimmerId == swimmerId) count++                                                                 // 32\n    })                                                                                                           // 33\n                                                                                                                 // 34\n    return count;                                                                                                // 35\n}                                                                                                                // 36\n//用于检查是否已经注册过该课程                                                                                                 // 37\nfunction get_class_count_in_register(swimmerId, classId, sessionId) {                                            // 38\n    sessionId = sessionId || App.info.sessionRegister                                                            // 39\n                                                                                                                 // 40\n    var count = DB.ClassesRegister.find({                                                                        // 41\n        swimmerId:swimmerId,                                                                                     // 42\n        classId:classId,                                                                                         // 43\n        sessionId: sessionId                                                                                     // 44\n    }).count()                                                                                                   // 45\n                                                                                                                 // 46\n    return count;                                                                                                // 47\n}                                                                                                                // 48\n                                                                                                                 // 49\n//==============================================================                                                 // 50\n//////////////////////old////////////////////////////                                                            // 51\n//注册课程 先占用课程数量                                                                                                   // 52\n                                                                                                                 // 53\n                                                                                                                 // 54\n/////////////////////////////////////////////                                                                    // 55\n//{swimmerId,classId, quantity , swimmer,  class1, ...}                                                          // 56\nfunction add_class_to_cart(item) {                                                                               // 57\n                                                                                                                 // 58\n                                                                                                                 // 59\n    //////////////////////////////////                                                                           // 60\n    //check 参数                                                                                                   // 61\n    if (!item || !item.classId) {                                                                                // 62\n        throw new Meteor.Error(500, 'in add_class_to_cart', 'param invalid');                                    // 63\n    }                                                                                                            // 64\n                                                                                                                 // 65\n    ////////////////////////////////////                                                                         // 66\n    //check class可注册数目                                                                                           // 67\n    var classItem = DB.Classes.findOne({                                                                         // 68\n        _id: item.classId                                                                                        // 69\n    })                                                                                                           // 70\n    if (classItem.seatsRemain < 1) {                                                                             // 71\n        throw new Meteor.Error('ERROR_CLASS_NOT_ENOUGH', 'in add_class_to_cart');                                // 72\n    }                                                                                                            // 73\n                                                                                                                 // 74\n                                                                                                                 // 75\n    ///////////////////////////////////                                                                          // 76\n    //获取或创建购物车                                                                                                   // 77\n    var cart_id = get_active_cart_id(true)                                                                       // 78\n    if (!cart_id) {                                                                                              // 79\n        throw new Meteor.Error(500,                                                                              // 80\n            'add_class_to_cart  error',                                                                          // 81\n            'get_active_cart_id: ' + cart_id);                                                                   // 82\n    }                                                                                                            // 83\n    console.log('get_active_cart_id ' + cart_id);                                                                // 84\n                                                                                                                 // 85\n                                                                                                                 // 86\n    //////////////////////////////////////////                                                                   // 87\n    //check 检测购物车是否已有该class                                                                                      // 88\n    var cart = DB.ShoppingCart.findOne(                                                                          // 89\n        {                                                                                                        // 90\n            _id: cart_id,                                                                                        // 91\n            status: 'active',                                                                                    // 92\n            items: {                                                                                             // 93\n                $elemMatch: {                                                                                    // 94\n                    'swimmerId': item.swimmerId,                                                                 // 95\n                    'classId': item.classId                                                                      // 96\n                                                                                                                 // 97\n                }                                                                                                // 98\n            }                                                                                                    // 99\n        })                                                                                                       // 100\n                                                                                                                 // 101\n    if (cart) {                                                                                                  // 102\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_IN_CART', 'in add_class_to_cart');                           // 103\n    }                                                                                                            // 104\n    console.log('check cart', cart,item.swimmerId,item.classId)                                                  // 105\n                                                                                                                 // 106\n                                                                                                                 // 107\n    //////////////////////////////////////////////////                                                           // 108\n    /////////check 单次 一个swimmer最多注册3节                                                                            // 109\n    var classCount = get_class_count_in_cart(cart_id, item.swimmerId);                                           // 110\n    if (classCount == 3) {                                                                                       // 111\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_3_IN_CART', 'in add_class_to_cart');                         // 112\n    }                                                                                                            // 113\n                                                                                                                 // 114\n    if(get_class_count_in_register(item.swimmerId, item.classId)){                                               // 115\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_REGISTERED', 'in add_class_to_cart');                        // 116\n                                                                                                                 // 117\n    }                                                                                                            // 118\n                                                                                                                 // 119\n                                                                                                                 // 120\n    /////////////加入购物车///////////                                                                                // 121\n    var result;                                                                                                  // 122\n    result = DB.ShoppingCart.update({//todo 1门课仅可注册一个； 最多注册3门                                                    // 123\n        '_id': cart_id                                                                                           // 124\n    }, {                                                                                                         // 125\n        '$set': {status: 'pending'},//已开始事务处里 置为pending                                                          // 126\n        '$push': {                                                                                               // 127\n            'items': item  //item.quantity==1 or -1                                                              // 128\n        }                                                                                                        // 129\n    })                                                                                                           // 130\n                                                                                                                 // 131\n    if (!result) {                                                                                               // 132\n        throw new Meteor.Error(500, 'add_class_to_cart error', 'DB.ShoppingCart.update $push');                  // 133\n    }                                                                                                            // 134\n    ;                                                                                                            // 135\n                                                                                                                 // 136\n    //此时处于pending状态 若此处中断 若超时由定时程序清理，继续往下进行 todo恢复逻辑                                                             // 137\n                                                                                                                 // 138\n    //可能数量不够 //todo 1门课仅可注册一个； 最多注册3门 ;确保多次操作结果唯一                                                                // 139\n    result = DB.Classes.update(                                                                                  // 140\n        {'_id': item.classId, 'seatsRemain': {'$gte': item.quantity}},                                           // 141\n        {                                                                                                        // 142\n            '$inc': {'seatsRemain': -item.quantity},                                                             // 143\n            '$push': {                                                                                           // 144\n                'carted': {                                                                                      // 145\n                    'type': 'register',                                                                          // 146\n                    'cartId': cart_id,                                                                           // 147\n                    'swimmerId': item.swimmerId,                                                                 // 148\n                    'quantity': item.quantity,                                                                   // 149\n                    'timestamp': new Date()                                                                      // 150\n                }                                                                                                // 151\n            }                                                                                                    // 152\n        })                                                                                                       // 153\n                                                                                                                 // 154\n    //todo result判断仅适用第一次加入 恢复操作不再适用                                                                             // 155\n    if (!result) {                                                                                               // 156\n        DB.ShoppingCart.update(                                                                                  // 157\n            {'_id': cart_id},                                                                                    // 158\n            {                                                                                                    // 159\n                '$set': {status: 'active'}, //重置为active                                                          // 160\n                '$pull': {                                                                                       // 161\n                    'items': {                                                                                   // 162\n                        //'type': 'register',                                                                    // 163\n                        'swimmerId': item.swimmerId,                                                             // 164\n                        classId: item.classId                                                                    // 165\n                    }                                                                                            // 166\n                }                                                                                                // 167\n            })                                                                                                   // 168\n                                                                                                                 // 169\n        throw new Meteor.Error(500,                                                                              // 170\n            'add_class_to_cart ' + cart_id + ' error. There is not enough class to register?',                   // 171\n            'DB.Classes.update $push');                                                                          // 172\n                                                                                                                 // 173\n    } else {                                                                                                     // 174\n        DB.ShoppingCart.update(                                                                                  // 175\n            {'_id': cart_id},                                                                                    // 176\n            {                                                                                                    // 177\n                '$set': {status: 'active'} //重置为active                                                           // 178\n            })                                                                                                   // 179\n        return {cartId: cart_id}                                                                                 // 180\n    }                                                                                                            // 181\n                                                                                                                 // 182\n}                                                                                                                // 183\n                                                                                                                 // 184\n//添加两个备选                                                                                                         // 185\n/*                                                                                                               // 186\n *                                                                                                               // 187\n * {                                                                                                             // 188\n * cartId                                                                                                        // 189\n *                                                                                                               // 190\n * classId,  定位到class                                                                                            // 191\n * swimmerId 定位到swimmer                                                                                          // 192\n *                                                                                                               // 193\n * preferenceNum,                                                                                                // 194\n * data {item}                                                                                                   // 195\n * ,                                                                                                             // 196\n * , }                                                                                                           // 197\n * */                                                                                                            // 198\nfunction add_preference_to_cart(p) {                                                                             // 199\n                                                                                                                 // 200\n    //var cartId = get_active_cart_id();                                                                         // 201\n    var cartId = p.cartId                                                                                        // 202\n    if (!checkCartStatus(cartId, 'active')) {                                                                    // 203\n        throw new Meteor.Error(500, cartId + ' is not active');                                                  // 204\n    }                                                                                                            // 205\n                                                                                                                 // 206\n                                                                                                                 // 207\n    //console.log(p)                                                                                             // 208\n                                                                                                                 // 209\n    if (!cartId) return 'cartId not exist';                                                                      // 210\n                                                                                                                 // 211\n                                                                                                                 // 212\n    /*                                                                                                           // 213\n     http://docs.mongodb.org/manual/reference/operator/projection/positional/#proj._S_                           // 214\n     {                                                                                                           // 215\n     '_id': p.cartId,                                                                                            // 216\n     'items.swimmer._id': p.swimmer._id,                                                                         // 217\n     'items.class1._id': p.class1._id                                                                            // 218\n     }                                                                                                           // 219\n     在一个swimmer选择多个class时总是匹配第一个  $elemMatch不存在这个问题                                                              // 220\n     * */                                                                                                        // 221\n                                                                                                                 // 222\n    if (p.preferenceNum == 2) {                                                                                  // 223\n        DB.ShoppingCart.update({                                                                                 // 224\n            '_id': cartId,                                                                                       // 225\n            'items': {                                                                                           // 226\n                $elemMatch: {                                                                                    // 227\n                    'swimmerId': p.swimmerId,                                                                    // 228\n                    'classId': p.classId                                                                         // 229\n                                                                                                                 // 230\n                }                                                                                                // 231\n            }                                                                                                    // 232\n        }, {                                                                                                     // 233\n            $set: {                                                                                              // 234\n                'items.$.class2': p.data  //class2                                                               // 235\n            }                                                                                                    // 236\n        })                                                                                                       // 237\n    }                                                                                                            // 238\n    if (p.preferenceNum == 3) {                                                                                  // 239\n        DB.ShoppingCart.update({                                                                                 // 240\n            '_id': cartId,                                                                                       // 241\n            'items': {                                                                                           // 242\n                $elemMatch: {                                                                                    // 243\n                    'swimmerId': p.swimmerId,                                                                    // 244\n                    'classId': p.classId                                                                         // 245\n                }                                                                                                // 246\n            }                                                                                                    // 247\n        }, {                                                                                                     // 248\n            $set: {                                                                                              // 249\n                'items.$.class3': p.data //class3                                                                // 250\n            }                                                                                                    // 251\n        })                                                                                                       // 252\n    }                                                                                                            // 253\n}                                                                                                                // 254\n                                                                                                                 // 255\n//当用户触发pay－now 或 pay－in－store时                                                                                   // 256\nfunction move_to_checking(cartId, checkoutType) {                                                                // 257\n    //todo check payType value                                                                                   // 258\n                                                                                                                 // 259\n    //var cartId = get_active_cart_id()                                                                          // 260\n    if (!checkCartStatus(cartId, 'active')) {                                                                    // 261\n        throw new Meteor.Error(500, cartId + ' is not active');                                                  // 262\n    }                                                                                                            // 263\n                                                                                                                 // 264\n                                                                                                                 // 265\n    var result = DB.ShoppingCart.update({                                                                        // 266\n        '_id': cartId,                                                                                           // 267\n        status: 'active'                                                                                         // 268\n    }, {                                                                                                         // 269\n        '$set': {                                                                                                // 270\n            'checkoutType': checkoutType,                                                                        // 271\n            'status': 'checking'                                                                                 // 272\n        }                                                                                                        // 273\n                                                                                                                 // 274\n    })                                                                                                           // 275\n                                                                                                                 // 276\n    if (!result) {                                                                                               // 277\n        throw new Meteor.Error(500, 'move_to_checking error');                                                   // 278\n                                                                                                                 // 279\n    }                                                                                                            // 280\n                                                                                                                 // 281\n    return {status: 'success'}                                                                                   // 282\n                                                                                                                 // 283\n}                                                                                                                // 284\n                                                                                                                 // 285\n//支付成功后调用此过程                                                                                                     // 286\n//在店里通过后台 或根据支付网关的回调 设置为已支付  同时触发后续处理过程                                                                          // 287\nfunction move_to_applied(cartId) {                                                                               // 288\n    //todo check to make sure paied                                                                              // 289\n                                                                                                                 // 290\n    if (!checkCartStatus(cartId, 'checking')) {                                                                  // 291\n        throw new Meteor.Error(500, cartId + ' is not in status of checking');                                   // 292\n    }                                                                                                            // 293\n                                                                                                                 // 294\n                                                                                                                 // 295\n    DB.ShoppingCart.update({                                                                                     // 296\n        '_id': cartId,                                                                                           // 297\n        'status': 'checking'                                                                                     // 298\n    }, {                                                                                                         // 299\n        '$set': {status: 'applied'} //                                                                           // 300\n                                                                                                                 // 301\n    })                                                                                                           // 302\n                                                                                                                 // 303\n    move_to_done(cartId)                                                                                         // 304\n}                                                                                                                // 305\n                                                                                                                 // 306\nfunction move_to_done(cartId) {                                                                                  // 307\n                                                                                                                 // 308\n    if (!checkCartStatus(cartId, 'applied')) {                                                                   // 309\n        throw new Meteor.Error(500, cartId + ' is not in status of applied');                                    // 310\n    }                                                                                                            // 311\n                                                                                                                 // 312\n    var cart = DB.ShoppingCart.findOne({ //todo optimize                                                         // 313\n        _id: cartId                                                                                              // 314\n    })                                                                                                           // 315\n                                                                                                                 // 316\n    //console.log(cart)                                                                                          // 317\n                                                                                                                 // 318\n    _move_to_done(cart)                                                                                          // 319\n}                                                                                                                // 320\n                                                                                                                 // 321\n//private                                                                                                        // 322\n//cart status [apllied]=>[done]                                                                                  // 323\nfunction _move_to_done(cart) {                                                                                   // 324\n                                                                                                                 // 325\n    if (typeof cart === 'string') {                                                                              // 326\n                                                                                                                 // 327\n    }                                                                                                            // 328\n                                                                                                                 // 329\n                                                                                                                 // 330\n    //todo test  mongodb 多个class 一个cart有多个item是否都可以删除                                                            // 331\n    DB.Classes.update({                                                                                          // 332\n        'carted.cartId': cart._id                                                                                // 333\n    }, {                                                                                                         // 334\n        '$pull': {                                                                                               // 335\n            'carted': {cartId: cart._id}                                                                         // 336\n        }                                                                                                        // 337\n    }, {multi: true})                                                                                            // 338\n                                                                                                                 // 339\n                                                                                                                 // 340\n    cart.items.forEach(function (item) {                                                                         // 341\n                                                                                                                 // 342\n        if (item.quantity == 1) {//注册 todo using type                                                            // 343\n                                                                                                                 // 344\n            //insert the document if it does not exist                                                           // 345\n            DB.ClassesRegister.update({                                                                          // 346\n                swimmerId: item.swimmerId,                                                                       // 347\n                classId: item.classId,                                                                           // 348\n                status: 'normal',                                                                                // 349\n                                                                                                                 // 350\n                accountId: cart.accountId,                                                                       // 351\n                sessionId: cart.sessionId,                                                                       // 352\n                cartId: cart._id                                                                                 // 353\n            }, {                                                                                                 // 354\n                $set: {                                                                                          // 355\n                    registerTime: cart.lastModified                                                              // 356\n                }                                                                                                // 357\n            }, {                                                                                                 // 358\n                upsert: true //insert if not found                                                               // 359\n            })                                                                                                   // 360\n                                                                                                                 // 361\n                                                                                                                 // 362\n        } else if (item.quantity == -1) {//取消注册 todo using type                                                  // 363\n            DB.ClassesRegister.remove({                                                                          // 364\n                swimmerId: item.swimmerId,                                                                       // 365\n                classId: item.classId,                                                                           // 366\n                                                                                                                 // 367\n                sessionId: cart.sessionId,                                                                       // 368\n                cartId: cart._id                                                                                 // 369\n            })                                                                                                   // 370\n                                                                                                                 // 371\n        } else if (item.type == 'change') {                                                                      // 372\n                                                                                                                 // 373\n                                                                                                                 // 374\n        }                                                                                                        // 375\n    })                                                                                                           // 376\n                                                                                                                 // 377\n    //以上过程非异步 完成之后                                                                                               // 378\n    DB.ShoppingCart.update({                                                                                     // 379\n        '_id': cart._id,                                                                                         // 380\n        'status': 'applied'                                                                                      // 381\n    }, {                                                                                                         // 382\n        '$set': {status: 'done'} //                                                                              // 383\n    })                                                                                                           // 384\n                                                                                                                 // 385\n}                                                                                                                // 386\n                                                                                                                 // 387\n                                                                                                                 // 388\n//{cartId, swimmerId,classId}                                                                                    // 389\nfunction delete_class_from_cart(params){                                                                         // 390\n                                                                                                                 // 391\n    console.log('====delete_class_from_cart params=====:',params)                                                // 392\n                                                                                                                 // 393\n                                                                                                                 // 394\n    //恢复class数目                                                                                                  // 395\n    result = DB.Classes.update(                                                                                  // 396\n        {'_id': params.classId},                                                                                 // 397\n        {                                                                                                        // 398\n            '$inc': {'seatsRemain': 1},                                                                          // 399\n            '$pull': {                                                                                           // 400\n                'carted': {                                                                                      // 401\n                    'type': 'register',                                                                          // 402\n                    'cartId': params.cartId,                                                                     // 403\n                    'swimmerId': params.swimmerId,                                                               // 404\n                    'quantity': 1,                                                                               // 405\n                    //'timestamp': new Date()                                                                    // 406\n                }                                                                                                // 407\n            }                                                                                                    // 408\n        })                                                                                                       // 409\n    console.log('====delete_class_from_cart [restore class] step1=====:'+result)                                 // 410\n                                                                                                                 // 411\n    //从购物车删除                                                                                                     // 412\n    var result = DB.ShoppingCart.update(                                                                         // 413\n        {'_id': params.cartId},                                                                                  // 414\n        {                                                                                                        // 415\n            '$set': {status: 'active'}, //重置为active                                                              // 416\n            '$pull': {                                                                                           // 417\n                'items': {                                                                                       // 418\n                    //'type': 'register',                                                                        // 419\n                    'swimmerId': params.swimmerId,                                                               // 420\n                    classId: params.classId                                                                      // 421\n                }                                                                                                // 422\n            }                                                                                                    // 423\n        })                                                                                                       // 424\n    console.log('====delete_class_from_cart step2=====:'+result)                                                 // 425\n                                                                                                                 // 426\n                                                                                                                 // 427\n                                                                                                                 // 428\n                                                                                                                 // 429\n}                                                                                                                // 430\n                                                                                                                 // 431\n/*                                                                                                               // 432\n* cartId  确定购物车                                                                                                  // 433\n* swimmerId classId   确定一个item                                                                                   // 434\n* preferenceNum   确定preference  1，2，3                                                                            // 435\n* classData     新的class数据  classId？                                                                              // 436\n*                                                                                                                // 437\n* */                                                                                                             // 438\nfunction change_preference_in_cart(params){                                                                      // 439\n                                                                                                                 // 440\n    console.log('change_preference_in_cart',params)                                                              // 441\n                                                                                                                 // 442\n    //check 处于active状态                                                                                           // 443\n                                                                                                                 // 444\n    if(params.preferenceNum==1) {                                                                                // 445\n                                                                                                                 // 446\n                                                                                                                 // 447\n        //更新购物车课程 以及状态                                                                                           // 448\n        var result =DB.ShoppingCart.update({                                                                     // 449\n            '_id': params.cartId,                                                                                // 450\n            'items': {                                                                                           // 451\n                $elemMatch: {                                                                                    // 452\n                    'swimmerId': params.swimmerId,                                                               // 453\n                    'classId': params.classId                                                                    // 454\n                }                                                                                                // 455\n            }                                                                                                    // 456\n        }, {                                                                                                     // 457\n            $set: {                                                                                              // 458\n                status: 'pending',                                                                               // 459\n                //'items.$.swimmerId': classData.swimmerId,                                                      // 460\n                'items.$.classId': params.classData.classId,                                                     // 461\n                'items.$.class1': params.classData //class3                                                      // 462\n            }                                                                                                    // 463\n        })                                                                                                       // 464\n        console.log('--step1---result-----',result)                                                              // 465\n                                                                                                                 // 466\n        //恢复已选课程数目                                                                                               // 467\n        result = DB.Classes.update(                                                                              // 468\n            {'_id': params.classId},                                                                             // 469\n            {                                                                                                    // 470\n                '$inc': {'seatsRemain': 1},                                                                      // 471\n                '$pull': {                                                                                       // 472\n                    'carted': {                                                                                  // 473\n                        'type': 'register',                                                                      // 474\n                        'cartId': params.cartId,                                                                 // 475\n                        'swimmerId': params.swimmerId,                                                           // 476\n                        'quantity': 1,                                                                           // 477\n                        //'timestamp': new Date()                                                                // 478\n                    }                                                                                            // 479\n                }                                                                                                // 480\n            })                                                                                                   // 481\n        console.log('--step2---result-----',result)                                                              // 482\n                                                                                                                 // 483\n                                                                                                                 // 484\n        //占用新class的数目                                                                                            // 485\n        result = DB.Classes.update(                                                                              // 486\n            {'_id': params.classId, 'seatsRemain': {'$gte': 1}},                                                 // 487\n            {                                                                                                    // 488\n                '$inc': {'seatsRemain': -1},                                                                     // 489\n                '$push': {                                                                                       // 490\n                    'carted': {                                                                                  // 491\n                        'type': 'register',                                                                      // 492\n                        'cartId': params.cartId,                                                                 // 493\n                        'swimmerId': params.swimmerId,                                                           // 494\n                        'quantity': 1,                                                                           // 495\n                        'timestamp': new Date()                                                                  // 496\n                    }                                                                                            // 497\n                }                                                                                                // 498\n            })                                                                                                   // 499\n                                                                                                                 // 500\n                                                                                                                 // 501\n        if (result)                                                                                              // 502\n        {                                                                                                        // 503\n            DB.ShoppingCart.update(                                                                              // 504\n                {'_id': params.cartId},                                                                          // 505\n                {                                                                                                // 506\n                    '$set': {status: 'active'} //重置为active                                                       // 507\n                })                                                                                               // 508\n            return {cartId: params.cartId}                                                                       // 509\n                                                                                                                 // 510\n        }else {                                                                                                  // 511\n                                                                                                                 // 512\n            //DB.ShoppingCart.update(                                                                            // 513\n            //    {'_id': cart_id},                                                                              // 514\n            //    {                                                                                              // 515\n            //        '$set': {status: 'active'}, //重置为active                                                    // 516\n            //        '$pull': {                                                                                 // 517\n            //            'items': {                                                                             // 518\n            //                'type': 'register',                                                                // 519\n            //                'swimmerId': item.swimmerId,                                                       // 520\n            //                classId: item.classId                                                              // 521\n            //            }                                                                                      // 522\n            //        }                                                                                          // 523\n            //    })                                                                                             // 524\n            //todo 回退逻辑 但这种情况极少发生 一般前端可选 就有相应课程                                                                  // 525\n                                                                                                                 // 526\n            throw new Meteor.Error(500,                                                                          // 527\n                'change_preference 1' + params.cartId + ' error. There is not enough class you are changing to',\n                'DB.Classes.update $push');                                                                      // 529\n                                                                                                                 // 530\n        }                                                                                                        // 531\n                                                                                                                 // 532\n                                                                                                                 // 533\n                                                                                                                 // 534\n                                                                                                                 // 535\n                                                                                                                 // 536\n    } else if(params.preferenceNum==2){                                                                          // 537\n                                                                                                                 // 538\n        DB.ShoppingCart.update({                                                                                 // 539\n            '_id': params.cartId,                                                                                // 540\n            'items': {                                                                                           // 541\n                $elemMatch: {                                                                                    // 542\n                    'swimmerId': params.swimmerId,                                                               // 543\n                    'classId': params.classId                                                                    // 544\n                }                                                                                                // 545\n            }                                                                                                    // 546\n        }, {                                                                                                     // 547\n            $set: {                                                                                              // 548\n                'items.$.class2': params.classData //class3                                                      // 549\n            }                                                                                                    // 550\n        })                                                                                                       // 551\n                                                                                                                 // 552\n                                                                                                                 // 553\n    }else if(params.preferenceNum==3){                                                                           // 554\n                                                                                                                 // 555\n        DB.ShoppingCart.update({                                                                                 // 556\n            '_id': params.cartId,                                                                                // 557\n            'items': {                                                                                           // 558\n                $elemMatch: {                                                                                    // 559\n                    'swimmerId': params.swimmerId,                                                               // 560\n                    'classId': params.classId                                                                    // 561\n                }                                                                                                // 562\n            }                                                                                                    // 563\n        }, {                                                                                                     // 564\n            $set: {                                                                                              // 565\n                'items.$.class3': params.classData //class3                                                      // 566\n            }                                                                                                    // 567\n        })                                                                                                       // 568\n                                                                                                                 // 569\n                                                                                                                 // 570\n    }                                                                                                            // 571\n                                                                                                                 // 572\n                                                                                                                 // 573\n}                                                                                                                // 574\n                                                                                                                 // 575\n                                                                                                                 // 576\n//clear uncompletedShoppingCartItem                                                                              // 577\n//流程中断时 清除课程占用及选课记录                                                                                              // 578\nfunction clear_uncompleted_item_in_cart(){                                                                       // 579\n                                                                                                                 // 580\n    console.log('====clear_uncompleted_item_in_cart===')                                                         // 581\n                                                                                                                 // 582\n    var cart = DB.ShoppingCart.findOne(                                                                          // 583\n        {                                                                                                        // 584\n            status: 'active',                                                                                    // 585\n            type:'register'                                                                                      // 586\n        })                                                                                                       // 587\n                                                                                                                 // 588\n    var items=[]                                                                                                 // 589\n                                                                                                                 // 590\n    //找出未完成的item                                                                                                 // 591\n    if(cart && cart.items){                                                                                      // 592\n        items=_.filter(cart.items,function(item){                                                                // 593\n            return  !(item.class1 && item.class2 && item.class3)                                                 // 594\n        })                                                                                                       // 595\n    }                                                                                                            // 596\n                                                                                                                 // 597\n                                                                                                                 // 598\n                                                                                                                 // 599\n    items.forEach(function(item){                                                                                // 600\n                                                                                                                 // 601\n        delete_class_from_cart({                                                                                 // 602\n            cartId:cart._id,                                                                                     // 603\n            swimmerId: item.swimmerId,                                                                           // 604\n            classId:item.classId                                                                                 // 605\n                                                                                                                 // 606\n        })                                                                                                       // 607\n    })                                                                                                           // 608\n}                                                                                                                // 609\n                                                                                                                 // 610\nshopping_cart_export({                                                                                           // 611\n                                                                                                                 // 612\n    //add_class_register_to_cart: add_class_register_to_cart,                                                    // 613\n    add_item_to_cart: add_item_to_cart,                                                                          // 614\n    add_class_to_cart: add_class_to_cart,                                                                        // 615\n    add_preference_to_cart: add_preference_to_cart,                                                              // 616\n    move_to_checking: move_to_checking,                                                                          // 617\n    move_to_applied: move_to_applied,                                                                            // 618\n    move_to_done: move_to_done,                                                                                  // 619\n                                                                                                                 // 620\n    delete_class_from_cart:delete_class_from_cart,                                                               // 621\n    change_preference_in_cart:change_preference_in_cart,                                                         // 622\n    clear_uncompleted_item_in_cart:clear_uncompleted_item_in_cart                                                // 623\n                                                                                                                 // 624\n})                                                                                                               // 625\n                                                                                                                 // 626\n                                                                                                                 // 627\n                                                                                                                 // 628\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cal_cart/shoppingCart.change.js                                                                      //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**                                                                                                              // 1\n * Created on 9/25/15.                                                                                           // 2\n */                                                                                                              // 3\n                                                                                                                 // 4\n                                                                                                                 // 5\n//计算change class的费用  根据正负走不同逻辑                                                                                   // 6\n//若用户仍需补交费用 需限时   占用新class名额                                                                                     // 7\n//                                                                                                               // 8\nchange_caculate_fee = function (swimmerId, fromClassId, toClassId) {                                             // 9\n                                                                                                                 // 10\n                                                                                                                 // 11\n    return -10 //假定需退用户10元                                                                                       // 12\n    //return 10                                                                                                  // 13\n}                                                                                                                // 14\n                                                                                                                 // 15\nchange_create_cart = function(item){                                                                             // 16\n    var shoppingCart = {                                                                                         // 17\n        accountId: Meteor.userId(),                                                                              // 18\n        type: 'change',                                                                                          // 19\n        status: 'active',                                                                                        // 20\n        sessionId: App.info.sessionRegister,                                                                     // 21\n        items: item?[item]:[]                                                                                    // 22\n    }                                                                                                            // 23\n                                                                                                                 // 24\n    var cartId = DB.ShoppingCart.insert(shoppingCart);                                                           // 25\n                                                                                                                 // 26\n    return cartId;                                                                                               // 27\n}                                                                                                                // 28\n                                                                                                                 // 29\nchange_get_or_create_active_cart =function(){                                                                    // 30\n                                                                                                                 // 31\n    var cart = DB.ShoppingCart.findOne({                                                                         // 32\n        _id: cartId,                                                                                             // 33\n        accountId: Meteor.userId(),                                                                              // 34\n        type:'change',                                                                                           // 35\n        //15分以内的                                                                                                 // 36\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}                                              // 37\n                                                                                                                 // 38\n    })                                                                                                           // 39\n                                                                                                                 // 40\n    return cart || change_create_cart()                                                                          // 41\n                                                                                                                 // 42\n}                                                                                                                // 43\n                                                                                                                 // 44\n                                                                                                                 // 45\nchange_class=function(swimmerId, fromClassId, toClassId){                                                        // 46\n    var fee = change_caculate_fee(swimmerId, fromClassId, toClassId)                                             // 47\n    if(fee>0){                                                                                                   // 48\n        change_class_due(swimmerId, fromClassId, toClassId)                                                      // 49\n                                                                                                                 // 50\n    }else{//<=0                                                                                                  // 51\n        change_class_refund(swimmerId, fromClassId, toClassId)                                                   // 52\n    }                                                                                                            // 53\n                                                                                                                 // 54\n}                                                                                                                // 55\n                                                                                                                 // 56\n                                                                                                                 // 57\nchange_class_due =function(swimmerId, fromClassId, toClassId){                                                   // 58\n                                                                                                                 // 59\n}                                                                                                                // 60\n                                                                                                                 // 61\nchange_class_refund=function(swimmerId, fromClassId, toClassId){                                                 // 62\n                                                                                                                 // 63\n    ////////////check/////////                                                                                   // 64\n    //确保swimmerId已注册fromClassId 并且未进行 cancel或change操作                                                            // 65\n    var registerItem =DB.ClassesRegister.findOne({                                                               // 66\n        swimmerId:swimmerId,                                                                                     // 67\n        classId:fromClassId                                                                                      // 68\n    })                                                                                                           // 69\n    if(!registerItem){                                                                                           // 70\n        throw new Meteor.Error(500, swimmerId+' did not register class '+fromClassId);                           // 71\n    }else if(registerItem.status!='normal'){                                                                     // 72\n                                                                                                                 // 73\n        throw new Meteor.Error(500, 'class is under status '+registerItem.status);                               // 74\n    }                                                                                                            // 75\n                                                                                                                 // 76\n    //check 数目                                                                                                   // 77\n                                                                                                                 // 78\n                                                                                                                 // 79\n    //////////////////////                                                                                       // 80\n                                                                                                                 // 81\n                                                                                                                 // 82\n    //var cart = change_get_or_create_active_cart()                                                              // 83\n    //var cart_id = cart._id                                                                                     // 84\n                                                                                                                 // 85\n    var cart_id = change_create_cart()                                                                           // 86\n                                                                                                                 // 87\n    console.log('1-----'+cart_id)                                                                                // 88\n                                                                                                                 // 89\n                                                                                                                 // 90\n    //构造改变课程时的item                                                                                               // 91\n    var item = {                                                                                                 // 92\n        type: 'change',                                                                                          // 93\n        swimmerId: swimmerId,                                                                                    // 94\n        fromClassId: fromClassId,                                                                                // 95\n        toClassId: toClassId,                                                                                    // 96\n                                                                                                                 // 97\n        //extra info todo only pick special fields                                                               // 98\n        swimmer: DB.Swimmers.findOne({_id: swimmerId}),                                                          // 99\n        fromClass: DB.Classes.findOne({_id: fromClassId}),                                                       // 100\n        toClass: DB.Classes.findOne({_id: toClassId})                                                            // 101\n                                                                                                                 // 102\n    }                                                                                                            // 103\n                                                                                                                 // 104\n                                                                                                                 // 105\n                                                                                                                 // 106\n    ///////////////////////////////////////////////                                                              // 107\n    //完成change class购物车创建                                                                                        // 108\n    var result = DB.ShoppingCart.update({                                                                        // 109\n        '_id': cart_id                                                                                           // 110\n    }, {                                                                                                         // 111\n        '$set': {status: 'pending'},//已开始事务处里 置为pending  todo touch时间                                            // 112\n        '$push': {                                                                                               // 113\n            'items': item  //item.quantity==1 or -1                                                              // 114\n        }                                                                                                        // 115\n    })                                                                                                           // 116\n                                                                                                                 // 117\n                                                                                                                 // 118\n    console.log('2-----'+result)                                                                                 // 119\n                                                                                                                 // 120\n                                                                                                                 // 121\n    ////////////////////change_move_pending_to_applied/////////////////                                          // 122\n                                                                                                                 // 123\n    //占用一个class  todo 确保$push 唯一                                                                                 // 124\n    //需先查询 todo 确保不存在以前的change历史 否则清理以前的操作                                                                       // 125\n                                                                                                                 // 126\n                                                                                                                 // 127\n    //后面基于 以前未做过相同的change并且因为特殊原因而中断                                                                             // 128\n    result = DB.Classes.update(                                                                                  // 129\n        {                                                                                                        // 130\n            '_id': toClassId,                                                                                    // 131\n            'seatsRemain': {'$gte': 1}                                                                           // 132\n        },                                                                                                       // 133\n        {                                                                                                        // 134\n            '$inc': {'seatsRemain': -1},                                                                         // 135\n            '$push': {                                                                                           // 136\n                'carted': {                                                                                      // 137\n                    'cartId': cart_id,                                                                           // 138\n                                                                                                                 // 139\n                    'type': 'change',                                                                            // 140\n                    'fromClassId': fromClassId,                                                                  // 141\n                    'toClassId': toClassId,                                                                      // 142\n                                                                                                                 // 143\n                    'swimmerId': swimmerId,                                                                      // 144\n                    'quantity': 1,  //change时购物车无数量 class里需要数量 用于恢复时区分是from还是to                                  // 145\n                    'timestamp': new Date()                                                                      // 146\n                }                                                                                                // 147\n            }                                                                                                    // 148\n        })                                                                                                       // 149\n                                                                                                                 // 150\n    console.log('3-----'+result)                                                                                 // 151\n                                                                                                                 // 152\n                                                                                                                 // 153\n    if (!result) {//占用失败 数目不够时                                                                                   // 154\n        DB.ShoppingCart.update(                                                                                  // 155\n            {'_id': cart_id},                                                                                    // 156\n            {                                                                                                    // 157\n                '$set': {status: 'active'}, //重置为active                                                          // 158\n                '$pull': {                                                                                       // 159\n                    'items': {                                                                                   // 160\n                        'type': 'change',                                                                        // 161\n                        'fromClassId': fromClassId,                                                              // 162\n                        'toClassId': toClassId,                                                                  // 163\n                    }                                                                                            // 164\n                }                                                                                                // 165\n            })                                                                                                   // 166\n        //todo 直接删除购物车？                                                                                          // 167\n                                                                                                                 // 168\n        throw new Meteor.Error(500, 'add_class_to_cart error 课程占用失败');                                           // 169\n                                                                                                                 // 170\n    }                                                                                                            // 171\n                                                                                                                 // 172\n    //else {                                                                                                     // 173\n    //    DB.ShoppingCart.update(                                                                                // 174\n    //        {'_id': cart_id},                                                                                  // 175\n    //        {                                                                                                  // 176\n    //            '$set': {status: 'active'} //重置为active                                                         // 177\n    //        })                                                                                                 // 178\n    //    return {cartId: cart_id}                                                                               // 179\n    //}                                                                                                          // 180\n                                                                                                                 // 181\n                                                                                                                 // 182\n                                                                                                                 // 183\n    //标记oldclass                                                                                                 // 184\n    var oldRegister =DB.ClassesRegister.update({                                                                 // 185\n        swimmerId:swimmerId,                                                                                     // 186\n        classId:fromClassId                                                                                      // 187\n    },{                                                                                                          // 188\n        '$set': {status: 'changing'},                                                                            // 189\n        '$push': {                                                                                               // 190\n            'carted':cart_id                                                                                     // 191\n        }                                                                                                        // 192\n    })                                                                                                           // 193\n                                                                                                                 // 194\n                                                                                                                 // 195\n    console.log('4-----'+oldRegister)                                                                            // 196\n                                                                                                                 // 197\n    // 插入并标记newclass                                                                                             // 198\n    var newRegister =DB.ClassesRegister.insert({                                                                 // 199\n        sessionId: App.info.sessionRegister,                                                                     // 200\n        account:Meteor.userId(),                                                                                 // 201\n        swimmerId:swimmerId,                                                                                     // 202\n        classId:toClassId,                                                                                       // 203\n        cartId:cart_id,                                                                                          // 204\n        status: 'changing',                                                                                      // 205\n        'carted':[cart_id]                                                                                       // 206\n    })                                                                                                           // 207\n                                                                                                                 // 208\n    console.log('5-----'+newRegister)                                                                            // 209\n                                                                                                                 // 210\n                                                                                                                 // 211\n    ////// 到达applied 状态                                                                                          // 212\n    result=DB.ShoppingCart.update(                                                                               // 213\n        {'_id': cart_id},                                                                                        // 214\n        {                                                                                                        // 215\n            '$set': {status: 'applied'} //重置为active                                                              // 216\n        })                                                                                                       // 217\n                                                                                                                 // 218\n    console.log('6-----'+result)                                                                                 // 219\n                                                                                                                 // 220\n                                                                                                                 // 221\n    //已成功退课 清除事务纪录                                                                                               // 222\n    //change_move__applied_to_donejia                                                                            // 223\n    //todo 增加 changed canceled 态保持历史操作？                                                                          // 224\n                                                                                                                 // 225\n                                                                                                                 // 226\n    console.log('change_move__applied_to_done');                                                                 // 227\n                                                                                                                 // 228\n    result =DB.ClassesRegister.remove({                                                                          // 229\n        swimmerId:swimmerId,                                                                                     // 230\n        classId:fromClassId,                                                                                     // 231\n        status:'changing'                                                                                        // 232\n    });                                                                                                          // 233\n    console.log('7-----'+result)                                                                                 // 234\n                                                                                                                 // 235\n    result = DB.ClassesRegister.update({                                                                         // 236\n        swimmerId:swimmerId,                                                                                     // 237\n        classId:toClassId,                                                                                       // 238\n        status:'changing'                                                                                        // 239\n    },{                                                                                                          // 240\n        $set:{status: 'normal'},                                                                                 // 241\n        $pull:{'carted':cart_id}                                                                                 // 242\n    })                                                                                                           // 243\n    console.log('8-----'+result)                                                                                 // 244\n                                                                                                                 // 245\n                                                                                                                 // 246\n    //旧课程数目＋1                                                                                                    // 247\n    result =DB.Classes.update(                                                                                   // 248\n        {                                                                                                        // 249\n            '_id': fromClassId                                                                                   // 250\n        },                                                                                                       // 251\n        {                                                                                                        // 252\n            '$inc': {'seatsRemain': 1}                                                                           // 253\n        })                                                                                                       // 254\n                                                                                                                 // 255\n    console.log('9-----'+result)                                                                                 // 256\n                                                                                                                 // 257\n                                                                                                                 // 258\n    //新课程 清除事务纪录                                                                                                 // 259\n    result =DB.Classes.update(                                                                                   // 260\n        {                                                                                                        // 261\n            '_id': toClassId                                                                                     // 262\n        },                                                                                                       // 263\n        {                                                                                                        // 264\n            '$pull': {                                                                                           // 265\n                'carted': {                                                                                      // 266\n                    'cartId': cart_id,                                                                           // 267\n                                                                                                                 // 268\n                    'type': 'change',                                                                            // 269\n                    'fromClassId': fromClassId,                                                                  // 270\n                    'toClassId': toClassId,                                                                      // 271\n                                                                                                                 // 272\n                    'swimmerId': swimmerId,                                                                      // 273\n                    'quantity': 1  //change时购物车无数量 class里需要数量 用于恢复时区分是from还是to                                   // 274\n                }                                                                                                // 275\n            }                                                                                                    // 276\n        })                                                                                                       // 277\n    console.log('10-----'+result)                                                                                // 278\n                                                                                                                 // 279\n                                                                                                                 // 280\n    result =DB.ShoppingCart.update(                                                                              // 281\n        {'_id': cart_id},                                                                                        // 282\n        {                                                                                                        // 283\n            '$set': {status: 'done'} //重置为active                                                                 // 284\n        })                                                                                                       // 285\n                                                                                                                 // 286\n                                                                                                                 // 287\n    console.log('11-----'+result)                                                                                // 288\n                                                                                                                 // 289\n                                                                                                                 // 290\n                                                                                                                 // 291\n                                                                                                                 // 292\n}                                                                                                                // 293\n                                                                                                                 // 294\n                                                                                                                 // 295\n//pending =>                                                                                                     // 296\nchange_add_class_to_cart = function (swimmerId, fromClassId, toClassId) {                                        // 297\n                                                                                                                 // 298\n}                                                                                                                // 299\n                                                                                                                 // 300\n                                                                                                                 // 301\n/*                                                                                                               // 302\n    1.classes 占用一个fromclass对应的数目                                                                                 // 303\n    2.标记classRegister中 oldclass对应项状态为 changing                                                                   // 304\n                                                                                                                 // 305\n    若用户需支付费用 cart进入 checking状态 根据支付情况以及是否超时进行后面处理                                                                // 306\n                                                                                                                 // 307\n    若需退用户费用 直接标记为applied 走applied＝》done步骤                                                                        // 308\n* */                                                                                                             // 309\nchange_move_pending_to_applied =function(){                                                                      // 310\n                                                                                                                 // 311\n                                                                                                                 // 312\n                                                                                                                 // 313\n                                                                                                                 // 314\n                                                                                                                 // 315\n}                                                                                                                // 316\nchange_move__applied_to_done =function(){                                                                        // 317\n                                                                                                                 // 318\n                                                                                                                 // 319\n}                                                                                                                // 320\n                                                                                                                 // 321\n                                                                                                                 // 322\n///////////////due//////用户欠费的case/////////////////////////////                                                   // 323\n                                                                                                                 // 324\nchange_move_pending_to_checking=function(){                                                                      // 325\n                                                                                                                 // 326\n}                                                                                                                // 327\n//由pending回滚  支付超时 或程序异常 导致停留在checking态                                                                          // 328\nchange_rollback_from_pending =function(){                                                                        // 329\n                                                                                                                 // 330\n}                                                                                                                // 331\n                                                                                                                 // 332\nchange_rollback_from_checking=function(){                                                                        // 333\n                                                                                                                 // 334\n}                                                                                                                // 335\n                                                                                                                 // 336\nchange_checking_to_applied=function(){                                                                           // 337\n                                                                                                                 // 338\n}                                                                                                                // 339\n                                                                                                                 // 340\n                                                                                                                 // 341\n                                                                                                                 // 342\nshopping_cart_export({                                                                                           // 343\n    //add_class_change_to_cart: change_add_class_to_cart                                                         // 344\n    change_class:change_class                                                                                    // 345\n})                                                                                                               // 346\n                                                                                                                 // 347\n                                                                                                                 // 348\n                                                                                                                 // 349\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cal_cart/shoppingCart.cancel.js                                                                      //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**                                                                                                              // 1\n * Created on 9/25/15.                                                                                           // 2\n */                                                                                                              // 3\n                                                                                                                 // 4\n                                                                                                                 // 5\n                                                                                                                 // 6\n/*                                                                                                               // 7\n                                                                                                                 // 8\n    canceling<--[middle]--> applied-->done                                                                       // 9\n                                                                                                                 // 10\n* */                                                                                                             // 11\n                                                                                                                 // 12\n//canceling                                                                                                      // 13\ncancel_create_cart = function (item) {                                                                           // 14\n    var shoppingCart = {                                                                                         // 15\n        accountId: Meteor.userId(),                                                                              // 16\n        type: 'cancel',                                                                                          // 17\n        status: 'canceling',                                                                                     // 18\n        sessionId: App.info.sessionRegister,                                                                     // 19\n        items: item?[item]:[]                                                                                    // 20\n    }                                                                                                            // 21\n                                                                                                                 // 22\n    var cartId = DB.ShoppingCart.insert(shoppingCart);                                                           // 23\n                                                                                                                 // 24\n    return cartId;                                                                                               // 25\n                                                                                                                 // 26\n    //return DB.ShoppingCart.findOne({_id: cartId});                                                             // 27\n}                                                                                                                // 28\n                                                                                                                 // 29\n//取消课程 先退费再恢复课程数量   cancel 付费后再 恢复class数量                                                                        // 30\ncancel_add_class_to_cart = function (swimmerId, classId) {                                                       // 31\n    //check swimmer belong to current account todo                                                               // 32\n    //check 用户已注册该课程                                                                                             // 33\n    var classReg = DB.ClassesRegister.findOne({                                                                  // 34\n        swimmerId: swimmerId,                                                                                    // 35\n        classId: classId,                                                                                        // 36\n        sessionId: App.info.sessionRegister                                                                      // 37\n    })                                                                                                           // 38\n                                                                                                                 // 39\n    if (!classReg) {                                                                                             // 40\n        throw new Meteor.Error(500, 'add_class_cancel_to_cart:class not exist');                                 // 41\n    }                                                                                                            // 42\n                                                                                                                 // 43\n    ////////create item data                                                                                     // 44\n    var item = {                                                                                                 // 45\n        type: 'cancel',                                                                                          // 46\n        classId: classId,                                                                                        // 47\n        swimmerId: swimmerId,                                                                                    // 48\n        quantity: -1,                                                                                            // 49\n                                                                                                                 // 50\n        //extra info todo only pick special fields                                                               // 51\n        swimmer: DB.Swimmers.findOne({_id: swimmerId}),                                                          // 52\n        class: DB.Classes.findOne({_id: classId})                                                                // 53\n    }                                                                                                            // 54\n                                                                                                                 // 55\n    /////step1 加入购物车                                                                                             // 56\n    var cart_id = cancel_create_cart(item)                                                                       // 57\n                                                                                                                 // 58\n    //var result = DB.ShoppingCart.update({                                                                      // 59\n    //    '_id': cart_id                                                                                         // 60\n    //}, {                                                                                                       // 61\n    //    '$set': {status: 'pending'},//已开始事务处里 置为pending                                                        // 62\n    //    '$push': {                                                                                             // 63\n    //        'items': item                                                                                      // 64\n    //    }                                                                                                      // 65\n    //})                                                                                                         // 66\n                                                                                                                 // 67\n                                                                                                                 // 68\n    cancel_move_canceling_to_applied(cart_id, item)                                                              // 69\n                                                                                                                 // 70\n                                                                                                                 // 71\n}                                                                                                                // 72\n                                                                                                                 // 73\n                                                                                                                 // 74\n//canceling=>applied 若需canceling恢复执行同样调用此函数                                                                      // 75\ncancel_move_canceling_to_applied = function (cart_id, item) {                                                    // 76\n                                                                                                                 // 77\n    //step2更新商品数量                                                                                                // 78\n    var result = DB.Classes.update(                                                                              // 79\n        {                                                                                                        // 80\n            '_id': item.classId//,                                                                               // 81\n            //'carted.swimmerId' and type                                                                        // 82\n            //'seatsRemain': {'$gte': item.quantity}                                                             // 83\n            //todo add condition to prevent duplicate $push                                                      // 84\n        },                                                                                                       // 85\n        {                                                                                                        // 86\n            '$inc': {'seatsRemain': -item.quantity},                                                             // 87\n            '$push': {                                                                                           // 88\n                'carted': {                                                                                      // 89\n                    'type': 'cancel',                                                                            // 90\n                    'cartId': cart_id,                                                                           // 91\n                    'swimmerId': item.swimmerId,                                                                 // 92\n                    'quantity': item.quantity,                                                                   // 93\n                    'timestamp': new Date()                                                                      // 94\n                }                                                                                                // 95\n            }                                                                                                    // 96\n        })                                                                                                       // 97\n                                                                                                                 // 98\n                                                                                                                 // 99\n    /////标记registerClass项为 canceling                                                                             // 100\n    var result = DB.ClassesRegister.update({                                                                     // 101\n        'classId': item.classId,                                                                                 // 102\n        'swimmerId': item.swimmerId                                                                              // 103\n    }, {                                                                                                         // 104\n        '$set': {status: 'canceling'}//已开始事务处里 置为pending                                                         // 105\n    })                                                                                                           // 106\n                                                                                                                 // 107\n                                                                                                                 // 108\n}                                                                                                                // 109\n                                                                                                                 // 110\n                                                                                                                 // 111\n//canceling未到达applied状态而中断 回滚逻辑 逆操作                                                                              // 112\ncancel_move_canceling_to_applied_rollback =function(){                                                           // 113\n                                                                                                                 // 114\n                                                                                                                 // 115\n}                                                                                                                // 116\n                                                                                                                 // 117\n//applied_to_done  退款后的清理工作                                                                                      // 118\n//删除 classRegister 项                                                                                             // 119\n//删除 classRegister 中的carted项                                                                                     // 120\ncancel_move_applied_to_done = function () {                                                                      // 121\n                                                                                                                 // 122\n                                                                                                                 // 123\n}                                                                                                                // 124\n                                                                                                                 // 125\n                                                                                                                 // 126\nshopping_cart_export({                                                                                           // 127\n    cancel_add_class_to_cart: cancel_add_class_to_cart                                                           // 128\n})                                                                                                               // 129\n                                                                                                                 // 130\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cal_cart/shoppingCart.cron.js                                                                        //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n/**                                                                                                              // 1\n * Created on 9/25/15.                                                                                           // 2\n */                                                                                                              // 3\n                                                                                                                 // 4\n                                                                                                                 // 5\n//////////////////////定时任务/////////////////////////////                                                          // 6\n//后续处理  此过程若中断 可由定时程序确保其完成                                                                                       // 7\nfunction cron_move_applied_to_done() {                                                                           // 8\n    if (this.connection) return;                                                                                 // 9\n                                                                                                                 // 10\n    var allCarts = get_carts({'status': 'applied'})                                                              // 11\n                                                                                                                 // 12\n    //可能有多个cart                                                                                                  // 13\n    allCarts.forEach(function (cart) {                                                                           // 14\n        _move_to_done(cart)                                                                                      // 15\n    })                                                                                                           // 16\n}                                                                                                                // 17\n//定时程序调用 走 expired状态流程                                                                                           // 18\nfunction cron_expiring() {                                                                                       // 19\n                                                                                                                 // 20\n                                                                                                                 // 21\n}                                                                                                                // 22\n                                                                                                                 // 23\n                                                                                                                 // 24\nshopping_cart_export({                                                                                           // 25\n    cron_move_applied_to_done: cron_move_applied_to_done,                                                        // 26\n    cron_expiring: cron_expiring                                                                                 // 27\n})                                                                                                               // 28\n                                                                                                                 // 29\n                                                                                                                 // 30\n                                                                                                                 // 31\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cal:cart'] = {\n  shoppingCart: shoppingCart\n};\n\n})();\n","servePath":"/packages/cal_cart.js","sourceMap":{"version":3,"sources":["/packages/cal_cart/shoppingCart.common.js","/packages/cal_cart/shoppingCart.register.js","/packages/cal_cart/shoppingCart.change.js","/packages/cal_cart/shoppingCart.cancel.js","/packages/cal_cart/shoppingCart.cron.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;;;;;;;;ACvuH;;;;;;;;;;;;;;;;;;ACnnuuH;;;;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sH","file":"/packages/cal_cart.js","sourcesContent":["/**\n * Created on 9/25/15.\n */\n\n\n\nshoppingCart = {};\n\n//a utils\nshopping_cart_export=function(obj){\n    for(var x in obj){\n\n        if(obj.hasOwnProperty(x)){\n\n            if(shoppingCart[x]){\n                throw x+\" is duplicated\";\n            }\n            shoppingCart[x] =obj[x]\n        }\n    }\n}\n/////////////////////////////////////////////////////////\n\n////package scope\n\n//{type:'register'}\ncommon_create_cart = function (params) {\n\n    var shoppingCart = {\n        status: 'active',\n        accountId: Meteor.userId(),\n        type: params.type,\n        sessionId: App.info.sessionRegister,\n        items: params.item ? [params.item] : []\n    }\n\n    var cartId = DB.ShoppingCart.insert(shoppingCart);\n\n    return DB.ShoppingCart.findOne({_id: cartId});\n\n}\n\n\n//{type:'register'}\ncommon_get_or_create_active_cart = function (params) {\n\n    var cart = DB.ShoppingCart.findOne({\n        accountId: Meteor.userId(),\n        status: 'active',\n        type: params.type,\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}\n\n\n    })\n\n    return cart || create_cart({status: 'active', type: params.type})\n}\n\n\ncommon_check_cart_status =function (cartId, status) {\n\n    //todo 加入时间计算\n    var cart = DB.ShoppingCart.findOne({\n        _id: cartId,\n        accountId: Meteor.userId(),\n        status: status\n    })\n\n    return !!(cart && cart._id)\n\n}\n\n\n\n\n\n\n///////////////////old to delete///////////////////\ncreate_cart = function (item) {\n\n    var shoppingCart = {\n        status: 'active',\n        accountId: Meteor.userId(),\n        sessionId: App.info.sessionRegister,\n        items: item ? [item] : []\n    }\n\n    var cartId = DB.ShoppingCart.insert(shoppingCart);\n\n    return cartId;\n\n}\n\n//todo pending且未超时状态下 恢复为active的逻辑\nget_active_cart_id =function (createIfNotExist) {\n\n    var cart = DB.ShoppingCart.findOne({ //todo 加入时间计算\n        accountId: Meteor.userId(),\n        status: 'active'\n    })\n\n    //console.log(cart)\n\n    return (cart && cart._id) || (createIfNotExist && create_cart());\n}\n\nget_carts = function (status) {\n    var options = {\n        accountId: Meteor.userId(),\n        sessionId: App.info.sessionRegister,\n    }\n    status = status | {}\n\n    options = _.extend(options, status)\n\n    var carts = DB.ShoppingCart.find(options).fetch()\n    return carts;\n}\n\n\n//package scope\ncheckCartStatus =function (cartId, status) {\n\n    //todo 加入时间计算\n    var cart = DB.ShoppingCart.findOne({\n        _id: cartId,\n        accountId: Meteor.userId(),\n        status: status\n    })\n\n    return !!(cart && cart._id)\n\n}\n\n\n\n\nshopping_cart_export({\n    //create_cart: create_cart,\n    get_or_create_active_cart: common_get_or_create_active_cart,\n    check_cart_status: common_check_cart_status,\n\n\n    ////////old/////\n    create_cart: create_cart,\n    get_active_cart_id: get_active_cart_id,\n    get_carts: get_carts,\n    checkCartStatus: checkCartStatus\n})\n\n\n","/**\n * Created on 9/25/15.\n */\n\n\n\nregister_add_class_to_cart = function (classId) {\n\n\n}\nregister_add_preference_to_cart = function () {\n\n\n}\n\nfunction add_item_to_cart(item) {\n\n\n}\n\n//cart中 单个swimmer添加的课程的数量\nfunction get_class_count_in_cart(cartId, swimmerId) {\n    var cart = DB.ShoppingCart.findOne({\n        _id: cartId\n    })\n    if (!cart)throw new Meteor.Error(500, 'in get_class_count_in_cart', 'cart not exist ' + cartId)\n\n    var items = cart.items\n    var count = 0\n\n    items.forEach(function (item) {\n        if (item.swimmerId == swimmerId) count++\n    })\n\n    return count;\n}\n//用于检查是否已经注册过该课程\nfunction get_class_count_in_register(swimmerId, classId, sessionId) {\n    sessionId = sessionId || App.info.sessionRegister\n\n    var count = DB.ClassesRegister.find({\n        swimmerId:swimmerId,\n        classId:classId,\n        sessionId: sessionId\n    }).count()\n\n    return count;\n}\n\n//==============================================================\n//////////////////////old////////////////////////////\n//注册课程 先占用课程数量\n\n\n/////////////////////////////////////////////\n//{swimmerId,classId, quantity , swimmer,  class1, ...}\nfunction add_class_to_cart(item) {\n\n\n    //////////////////////////////////\n    //check 参数\n    if (!item || !item.classId) {\n        throw new Meteor.Error(500, 'in add_class_to_cart', 'param invalid');\n    }\n\n    ////////////////////////////////////\n    //check class可注册数目\n    var classItem = DB.Classes.findOne({\n        _id: item.classId\n    })\n    if (classItem.seatsRemain < 1) {\n        throw new Meteor.Error('ERROR_CLASS_NOT_ENOUGH', 'in add_class_to_cart');\n    }\n\n\n    ///////////////////////////////////\n    //获取或创建购物车\n    var cart_id = get_active_cart_id(true)\n    if (!cart_id) {\n        throw new Meteor.Error(500,\n            'add_class_to_cart  error',\n            'get_active_cart_id: ' + cart_id);\n    }\n    console.log('get_active_cart_id ' + cart_id);\n\n\n    //////////////////////////////////////////\n    //check 检测购物车是否已有该class\n    var cart = DB.ShoppingCart.findOne(\n        {\n            _id: cart_id,\n            status: 'active',\n            items: {\n                $elemMatch: {\n                    'swimmerId': item.swimmerId,\n                    'classId': item.classId\n\n                }\n            }\n        })\n\n    if (cart) {\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_IN_CART', 'in add_class_to_cart');\n    }\n    console.log('check cart', cart,item.swimmerId,item.classId)\n\n\n    //////////////////////////////////////////////////\n    /////////check 单次 一个swimmer最多注册3节\n    var classCount = get_class_count_in_cart(cart_id, item.swimmerId);\n    if (classCount == 3) {\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_3_IN_CART', 'in add_class_to_cart');\n    }\n\n    if(get_class_count_in_register(item.swimmerId, item.classId)){\n        throw new Meteor.Error('ERROR_CLASS_ALREADY_REGISTERED', 'in add_class_to_cart');\n\n    }\n\n\n    /////////////加入购物车///////////\n    var result;\n    result = DB.ShoppingCart.update({//todo 1门课仅可注册一个； 最多注册3门\n        '_id': cart_id\n    }, {\n        '$set': {status: 'pending'},//已开始事务处里 置为pending\n        '$push': {\n            'items': item  //item.quantity==1 or -1\n        }\n    })\n\n    if (!result) {\n        throw new Meteor.Error(500, 'add_class_to_cart error', 'DB.ShoppingCart.update $push');\n    }\n    ;\n\n    //此时处于pending状态 若此处中断 若超时由定时程序清理，继续往下进行 todo恢复逻辑\n\n    //可能数量不够 //todo 1门课仅可注册一个； 最多注册3门 ;确保多次操作结果唯一\n    result = DB.Classes.update(\n        {'_id': item.classId, 'seatsRemain': {'$gte': item.quantity}},\n        {\n            '$inc': {'seatsRemain': -item.quantity},\n            '$push': {\n                'carted': {\n                    'type': 'register',\n                    'cartId': cart_id,\n                    'swimmerId': item.swimmerId,\n                    'quantity': item.quantity,\n                    'timestamp': new Date()\n                }\n            }\n        })\n\n    //todo result判断仅适用第一次加入 恢复操作不再适用\n    if (!result) {\n        DB.ShoppingCart.update(\n            {'_id': cart_id},\n            {\n                '$set': {status: 'active'}, //重置为active\n                '$pull': {\n                    'items': {\n                        //'type': 'register',\n                        'swimmerId': item.swimmerId,\n                        classId: item.classId\n                    }\n                }\n            })\n\n        throw new Meteor.Error(500,\n            'add_class_to_cart ' + cart_id + ' error. There is not enough class to register?',\n            'DB.Classes.update $push');\n\n    } else {\n        DB.ShoppingCart.update(\n            {'_id': cart_id},\n            {\n                '$set': {status: 'active'} //重置为active\n            })\n        return {cartId: cart_id}\n    }\n\n}\n\n//添加两个备选\n/*\n *\n * {\n * cartId\n *\n * classId,  定位到class\n * swimmerId 定位到swimmer\n *\n * preferenceNum,\n * data {item}\n * ,\n * , }\n * */\nfunction add_preference_to_cart(p) {\n\n    //var cartId = get_active_cart_id();\n    var cartId = p.cartId\n    if (!checkCartStatus(cartId, 'active')) {\n        throw new Meteor.Error(500, cartId + ' is not active');\n    }\n\n\n    //console.log(p)\n\n    if (!cartId) return 'cartId not exist';\n\n\n    /*\n     http://docs.mongodb.org/manual/reference/operator/projection/positional/#proj._S_\n     {\n     '_id': p.cartId,\n     'items.swimmer._id': p.swimmer._id,\n     'items.class1._id': p.class1._id\n     }\n     在一个swimmer选择多个class时总是匹配第一个  $elemMatch不存在这个问题\n     * */\n\n    if (p.preferenceNum == 2) {\n        DB.ShoppingCart.update({\n            '_id': cartId,\n            'items': {\n                $elemMatch: {\n                    'swimmerId': p.swimmerId,\n                    'classId': p.classId\n\n                }\n            }\n        }, {\n            $set: {\n                'items.$.class2': p.data  //class2\n            }\n        })\n    }\n    if (p.preferenceNum == 3) {\n        DB.ShoppingCart.update({\n            '_id': cartId,\n            'items': {\n                $elemMatch: {\n                    'swimmerId': p.swimmerId,\n                    'classId': p.classId\n                }\n            }\n        }, {\n            $set: {\n                'items.$.class3': p.data //class3\n            }\n        })\n    }\n}\n\n//当用户触发pay－now 或 pay－in－store时\nfunction move_to_checking(cartId, checkoutType) {\n    //todo check payType value\n\n    //var cartId = get_active_cart_id()\n    if (!checkCartStatus(cartId, 'active')) {\n        throw new Meteor.Error(500, cartId + ' is not active');\n    }\n\n\n    var result = DB.ShoppingCart.update({\n        '_id': cartId,\n        status: 'active'\n    }, {\n        '$set': {\n            'checkoutType': checkoutType,\n            'status': 'checking'\n        }\n\n    })\n\n    if (!result) {\n        throw new Meteor.Error(500, 'move_to_checking error');\n\n    }\n\n    return {status: 'success'}\n\n}\n\n//支付成功后调用此过程\n//在店里通过后台 或根据支付网关的回调 设置为已支付  同时触发后续处理过程\nfunction move_to_applied(cartId) {\n    //todo check to make sure paied\n\n    if (!checkCartStatus(cartId, 'checking')) {\n        throw new Meteor.Error(500, cartId + ' is not in status of checking');\n    }\n\n\n    DB.ShoppingCart.update({\n        '_id': cartId,\n        'status': 'checking'\n    }, {\n        '$set': {status: 'applied'} //\n\n    })\n\n    move_to_done(cartId)\n}\n\nfunction move_to_done(cartId) {\n\n    if (!checkCartStatus(cartId, 'applied')) {\n        throw new Meteor.Error(500, cartId + ' is not in status of applied');\n    }\n\n    var cart = DB.ShoppingCart.findOne({ //todo optimize\n        _id: cartId\n    })\n\n    //console.log(cart)\n\n    _move_to_done(cart)\n}\n\n//private\n//cart status [apllied]=>[done]\nfunction _move_to_done(cart) {\n\n    if (typeof cart === 'string') {\n\n    }\n\n\n    //todo test  mongodb 多个class 一个cart有多个item是否都可以删除\n    DB.Classes.update({\n        'carted.cartId': cart._id\n    }, {\n        '$pull': {\n            'carted': {cartId: cart._id}\n        }\n    }, {multi: true})\n\n\n    cart.items.forEach(function (item) {\n\n        if (item.quantity == 1) {//注册 todo using type\n\n            //insert the document if it does not exist\n            DB.ClassesRegister.update({\n                swimmerId: item.swimmerId,\n                classId: item.classId,\n                status: 'normal',\n\n                accountId: cart.accountId,\n                sessionId: cart.sessionId,\n                cartId: cart._id\n            }, {\n                $set: {\n                    registerTime: cart.lastModified\n                }\n            }, {\n                upsert: true //insert if not found\n            })\n\n\n        } else if (item.quantity == -1) {//取消注册 todo using type\n            DB.ClassesRegister.remove({\n                swimmerId: item.swimmerId,\n                classId: item.classId,\n\n                sessionId: cart.sessionId,\n                cartId: cart._id\n            })\n\n        } else if (item.type == 'change') {\n\n\n        }\n    })\n\n    //以上过程非异步 完成之后\n    DB.ShoppingCart.update({\n        '_id': cart._id,\n        'status': 'applied'\n    }, {\n        '$set': {status: 'done'} //\n    })\n\n}\n\n\n//{cartId, swimmerId,classId}\nfunction delete_class_from_cart(params){\n\n    console.log('====delete_class_from_cart params=====:',params)\n\n\n    //恢复class数目\n    result = DB.Classes.update(\n        {'_id': params.classId},\n        {\n            '$inc': {'seatsRemain': 1},\n            '$pull': {\n                'carted': {\n                    'type': 'register',\n                    'cartId': params.cartId,\n                    'swimmerId': params.swimmerId,\n                    'quantity': 1,\n                    //'timestamp': new Date()\n                }\n            }\n        })\n    console.log('====delete_class_from_cart [restore class] step1=====:'+result)\n\n    //从购物车删除\n    var result = DB.ShoppingCart.update(\n        {'_id': params.cartId},\n        {\n            '$set': {status: 'active'}, //重置为active\n            '$pull': {\n                'items': {\n                    //'type': 'register',\n                    'swimmerId': params.swimmerId,\n                    classId: params.classId\n                }\n            }\n        })\n    console.log('====delete_class_from_cart step2=====:'+result)\n\n\n\n\n}\n\n/*\n* cartId  确定购物车\n* swimmerId classId   确定一个item\n* preferenceNum   确定preference  1，2，3\n* classData     新的class数据  classId？\n*\n* */\nfunction change_preference_in_cart(params){\n\n    console.log('change_preference_in_cart',params)\n\n    //check 处于active状态\n\n    if(params.preferenceNum==1) {\n\n\n        //更新购物车课程 以及状态\n        var result =DB.ShoppingCart.update({\n            '_id': params.cartId,\n            'items': {\n                $elemMatch: {\n                    'swimmerId': params.swimmerId,\n                    'classId': params.classId\n                }\n            }\n        }, {\n            $set: {\n                status: 'pending',\n                //'items.$.swimmerId': classData.swimmerId,\n                'items.$.classId': params.classData.classId,\n                'items.$.class1': params.classData //class3\n            }\n        })\n        console.log('--step1---result-----',result)\n\n        //恢复已选课程数目\n        result = DB.Classes.update(\n            {'_id': params.classId},\n            {\n                '$inc': {'seatsRemain': 1},\n                '$pull': {\n                    'carted': {\n                        'type': 'register',\n                        'cartId': params.cartId,\n                        'swimmerId': params.swimmerId,\n                        'quantity': 1,\n                        //'timestamp': new Date()\n                    }\n                }\n            })\n        console.log('--step2---result-----',result)\n\n\n        //占用新class的数目\n        result = DB.Classes.update(\n            {'_id': params.classId, 'seatsRemain': {'$gte': 1}},\n            {\n                '$inc': {'seatsRemain': -1},\n                '$push': {\n                    'carted': {\n                        'type': 'register',\n                        'cartId': params.cartId,\n                        'swimmerId': params.swimmerId,\n                        'quantity': 1,\n                        'timestamp': new Date()\n                    }\n                }\n            })\n\n\n        if (result)\n        {\n            DB.ShoppingCart.update(\n                {'_id': params.cartId},\n                {\n                    '$set': {status: 'active'} //重置为active\n                })\n            return {cartId: params.cartId}\n\n        }else {\n\n            //DB.ShoppingCart.update(\n            //    {'_id': cart_id},\n            //    {\n            //        '$set': {status: 'active'}, //重置为active\n            //        '$pull': {\n            //            'items': {\n            //                'type': 'register',\n            //                'swimmerId': item.swimmerId,\n            //                classId: item.classId\n            //            }\n            //        }\n            //    })\n            //todo 回退逻辑 但这种情况极少发生 一般前端可选 就有相应课程\n\n            throw new Meteor.Error(500,\n                'change_preference 1' + params.cartId + ' error. There is not enough class you are changing to',\n                'DB.Classes.update $push');\n\n        }\n\n\n\n\n\n    } else if(params.preferenceNum==2){\n\n        DB.ShoppingCart.update({\n            '_id': params.cartId,\n            'items': {\n                $elemMatch: {\n                    'swimmerId': params.swimmerId,\n                    'classId': params.classId\n                }\n            }\n        }, {\n            $set: {\n                'items.$.class2': params.classData //class3\n            }\n        })\n\n\n    }else if(params.preferenceNum==3){\n\n        DB.ShoppingCart.update({\n            '_id': params.cartId,\n            'items': {\n                $elemMatch: {\n                    'swimmerId': params.swimmerId,\n                    'classId': params.classId\n                }\n            }\n        }, {\n            $set: {\n                'items.$.class3': params.classData //class3\n            }\n        })\n\n\n    }\n\n\n}\n\n\n//clear uncompletedShoppingCartItem\n//流程中断时 清除课程占用及选课记录\nfunction clear_uncompleted_item_in_cart(){\n\n    console.log('====clear_uncompleted_item_in_cart===')\n\n    var cart = DB.ShoppingCart.findOne(\n        {\n            status: 'active',\n            type:'register'\n        })\n\n    var items=[]\n\n    //找出未完成的item\n    if(cart && cart.items){\n        items=_.filter(cart.items,function(item){\n            return  !(item.class1 && item.class2 && item.class3)\n        })\n    }\n\n\n\n    items.forEach(function(item){\n\n        delete_class_from_cart({\n            cartId:cart._id,\n            swimmerId: item.swimmerId,\n            classId:item.classId\n\n        })\n    })\n}\n\nshopping_cart_export({\n\n    //add_class_register_to_cart: add_class_register_to_cart,\n    add_item_to_cart: add_item_to_cart,\n    add_class_to_cart: add_class_to_cart,\n    add_preference_to_cart: add_preference_to_cart,\n    move_to_checking: move_to_checking,\n    move_to_applied: move_to_applied,\n    move_to_done: move_to_done,\n\n    delete_class_from_cart:delete_class_from_cart,\n    change_preference_in_cart:change_preference_in_cart,\n    clear_uncompleted_item_in_cart:clear_uncompleted_item_in_cart\n\n})\n\n\n","/**\n * Created on 9/25/15.\n */\n\n\n//计算change class的费用  根据正负走不同逻辑\n//若用户仍需补交费用 需限时   占用新class名额\n//\nchange_caculate_fee = function (swimmerId, fromClassId, toClassId) {\n\n\n    return -10 //假定需退用户10元\n    //return 10\n}\n\nchange_create_cart = function(item){\n    var shoppingCart = {\n        accountId: Meteor.userId(),\n        type: 'change',\n        status: 'active',\n        sessionId: App.info.sessionRegister,\n        items: item?[item]:[]\n    }\n\n    var cartId = DB.ShoppingCart.insert(shoppingCart);\n\n    return cartId;\n}\n\nchange_get_or_create_active_cart =function(){\n\n    var cart = DB.ShoppingCart.findOne({\n        _id: cartId,\n        accountId: Meteor.userId(),\n        type:'change',\n        //15分以内的\n        lastModified: {$gt: new Date(+new Date() - 15 * 60 * 1000)}\n\n    })\n\n    return cart || change_create_cart()\n\n}\n\n\nchange_class=function(swimmerId, fromClassId, toClassId){\n    var fee = change_caculate_fee(swimmerId, fromClassId, toClassId)\n    if(fee>0){\n        change_class_due(swimmerId, fromClassId, toClassId)\n\n    }else{//<=0\n        change_class_refund(swimmerId, fromClassId, toClassId)\n    }\n\n}\n\n\nchange_class_due =function(swimmerId, fromClassId, toClassId){\n\n}\n\nchange_class_refund=function(swimmerId, fromClassId, toClassId){\n\n    ////////////check/////////\n    //确保swimmerId已注册fromClassId 并且未进行 cancel或change操作\n    var registerItem =DB.ClassesRegister.findOne({\n        swimmerId:swimmerId,\n        classId:fromClassId\n    })\n    if(!registerItem){\n        throw new Meteor.Error(500, swimmerId+' did not register class '+fromClassId);\n    }else if(registerItem.status!='normal'){\n\n        throw new Meteor.Error(500, 'class is under status '+registerItem.status);\n    }\n\n    //check 数目\n\n\n    //////////////////////\n\n\n    //var cart = change_get_or_create_active_cart()\n    //var cart_id = cart._id\n\n    var cart_id = change_create_cart()\n\n    console.log('1-----'+cart_id)\n\n\n    //构造改变课程时的item\n    var item = {\n        type: 'change',\n        swimmerId: swimmerId,\n        fromClassId: fromClassId,\n        toClassId: toClassId,\n\n        //extra info todo only pick special fields\n        swimmer: DB.Swimmers.findOne({_id: swimmerId}),\n        fromClass: DB.Classes.findOne({_id: fromClassId}),\n        toClass: DB.Classes.findOne({_id: toClassId})\n\n    }\n\n\n\n    ///////////////////////////////////////////////\n    //完成change class购物车创建\n    var result = DB.ShoppingCart.update({\n        '_id': cart_id\n    }, {\n        '$set': {status: 'pending'},//已开始事务处里 置为pending  todo touch时间\n        '$push': {\n            'items': item  //item.quantity==1 or -1\n        }\n    })\n\n\n    console.log('2-----'+result)\n\n\n    ////////////////////change_move_pending_to_applied/////////////////\n\n    //占用一个class  todo 确保$push 唯一\n    //需先查询 todo 确保不存在以前的change历史 否则清理以前的操作\n\n\n    //后面基于 以前未做过相同的change并且因为特殊原因而中断\n    result = DB.Classes.update(\n        {\n            '_id': toClassId,\n            'seatsRemain': {'$gte': 1}\n        },\n        {\n            '$inc': {'seatsRemain': -1},\n            '$push': {\n                'carted': {\n                    'cartId': cart_id,\n\n                    'type': 'change',\n                    'fromClassId': fromClassId,\n                    'toClassId': toClassId,\n\n                    'swimmerId': swimmerId,\n                    'quantity': 1,  //change时购物车无数量 class里需要数量 用于恢复时区分是from还是to\n                    'timestamp': new Date()\n                }\n            }\n        })\n\n    console.log('3-----'+result)\n\n\n    if (!result) {//占用失败 数目不够时\n        DB.ShoppingCart.update(\n            {'_id': cart_id},\n            {\n                '$set': {status: 'active'}, //重置为active\n                '$pull': {\n                    'items': {\n                        'type': 'change',\n                        'fromClassId': fromClassId,\n                        'toClassId': toClassId,\n                    }\n                }\n            })\n        //todo 直接删除购物车？\n\n        throw new Meteor.Error(500, 'add_class_to_cart error 课程占用失败');\n\n    }\n\n    //else {\n    //    DB.ShoppingCart.update(\n    //        {'_id': cart_id},\n    //        {\n    //            '$set': {status: 'active'} //重置为active\n    //        })\n    //    return {cartId: cart_id}\n    //}\n\n\n\n    //标记oldclass\n    var oldRegister =DB.ClassesRegister.update({\n        swimmerId:swimmerId,\n        classId:fromClassId\n    },{\n        '$set': {status: 'changing'},\n        '$push': {\n            'carted':cart_id\n        }\n    })\n\n\n    console.log('4-----'+oldRegister)\n\n    // 插入并标记newclass\n    var newRegister =DB.ClassesRegister.insert({\n        sessionId: App.info.sessionRegister,\n        account:Meteor.userId(),\n        swimmerId:swimmerId,\n        classId:toClassId,\n        cartId:cart_id,\n        status: 'changing',\n        'carted':[cart_id]\n    })\n\n    console.log('5-----'+newRegister)\n\n\n    ////// 到达applied 状态\n    result=DB.ShoppingCart.update(\n        {'_id': cart_id},\n        {\n            '$set': {status: 'applied'} //重置为active\n        })\n\n    console.log('6-----'+result)\n\n\n    //已成功退课 清除事务纪录\n    //change_move__applied_to_donejia\n    //todo 增加 changed canceled 态保持历史操作？\n\n\n    console.log('change_move__applied_to_done');\n\n    result =DB.ClassesRegister.remove({\n        swimmerId:swimmerId,\n        classId:fromClassId,\n        status:'changing'\n    });\n    console.log('7-----'+result)\n\n    result = DB.ClassesRegister.update({\n        swimmerId:swimmerId,\n        classId:toClassId,\n        status:'changing'\n    },{\n        $set:{status: 'normal'},\n        $pull:{'carted':cart_id}\n    })\n    console.log('8-----'+result)\n\n\n    //旧课程数目＋1\n    result =DB.Classes.update(\n        {\n            '_id': fromClassId\n        },\n        {\n            '$inc': {'seatsRemain': 1}\n        })\n\n    console.log('9-----'+result)\n\n\n    //新课程 清除事务纪录\n    result =DB.Classes.update(\n        {\n            '_id': toClassId\n        },\n        {\n            '$pull': {\n                'carted': {\n                    'cartId': cart_id,\n\n                    'type': 'change',\n                    'fromClassId': fromClassId,\n                    'toClassId': toClassId,\n\n                    'swimmerId': swimmerId,\n                    'quantity': 1  //change时购物车无数量 class里需要数量 用于恢复时区分是from还是to\n                }\n            }\n        })\n    console.log('10-----'+result)\n\n\n    result =DB.ShoppingCart.update(\n        {'_id': cart_id},\n        {\n            '$set': {status: 'done'} //重置为active\n        })\n\n\n    console.log('11-----'+result)\n\n\n\n\n}\n\n\n//pending =>\nchange_add_class_to_cart = function (swimmerId, fromClassId, toClassId) {\n\n}\n\n\n/*\n    1.classes 占用一个fromclass对应的数目\n    2.标记classRegister中 oldclass对应项状态为 changing\n\n    若用户需支付费用 cart进入 checking状态 根据支付情况以及是否超时进行后面处理\n\n    若需退用户费用 直接标记为applied 走applied＝》done步骤\n* */\nchange_move_pending_to_applied =function(){\n\n\n\n\n\n}\nchange_move__applied_to_done =function(){\n\n\n}\n\n\n///////////////due//////用户欠费的case/////////////////////////////\n\nchange_move_pending_to_checking=function(){\n\n}\n//由pending回滚  支付超时 或程序异常 导致停留在checking态\nchange_rollback_from_pending =function(){\n\n}\n\nchange_rollback_from_checking=function(){\n\n}\n\nchange_checking_to_applied=function(){\n\n}\n\n\n\nshopping_cart_export({\n    //add_class_change_to_cart: change_add_class_to_cart\n    change_class:change_class\n})\n\n\n","/**\n * Created on 9/25/15.\n */\n\n\n\n/*\n\n    canceling<--[middle]--> applied-->done\n\n* */\n\n//canceling\ncancel_create_cart = function (item) {\n    var shoppingCart = {\n        accountId: Meteor.userId(),\n        type: 'cancel',\n        status: 'canceling',\n        sessionId: App.info.sessionRegister,\n        items: item?[item]:[]\n    }\n\n    var cartId = DB.ShoppingCart.insert(shoppingCart);\n\n    return cartId;\n\n    //return DB.ShoppingCart.findOne({_id: cartId});\n}\n\n//取消课程 先退费再恢复课程数量   cancel 付费后再 恢复class数量\ncancel_add_class_to_cart = function (swimmerId, classId) {\n    //check swimmer belong to current account todo\n    //check 用户已注册该课程\n    var classReg = DB.ClassesRegister.findOne({\n        swimmerId: swimmerId,\n        classId: classId,\n        sessionId: App.info.sessionRegister\n    })\n\n    if (!classReg) {\n        throw new Meteor.Error(500, 'add_class_cancel_to_cart:class not exist');\n    }\n\n    ////////create item data\n    var item = {\n        type: 'cancel',\n        classId: classId,\n        swimmerId: swimmerId,\n        quantity: -1,\n\n        //extra info todo only pick special fields\n        swimmer: DB.Swimmers.findOne({_id: swimmerId}),\n        class: DB.Classes.findOne({_id: classId})\n    }\n\n    /////step1 加入购物车\n    var cart_id = cancel_create_cart(item)\n\n    //var result = DB.ShoppingCart.update({\n    //    '_id': cart_id\n    //}, {\n    //    '$set': {status: 'pending'},//已开始事务处里 置为pending\n    //    '$push': {\n    //        'items': item\n    //    }\n    //})\n\n\n    cancel_move_canceling_to_applied(cart_id, item)\n\n\n}\n\n\n//canceling=>applied 若需canceling恢复执行同样调用此函数\ncancel_move_canceling_to_applied = function (cart_id, item) {\n\n    //step2更新商品数量\n    var result = DB.Classes.update(\n        {\n            '_id': item.classId//,\n            //'carted.swimmerId' and type\n            //'seatsRemain': {'$gte': item.quantity}\n            //todo add condition to prevent duplicate $push\n        },\n        {\n            '$inc': {'seatsRemain': -item.quantity},\n            '$push': {\n                'carted': {\n                    'type': 'cancel',\n                    'cartId': cart_id,\n                    'swimmerId': item.swimmerId,\n                    'quantity': item.quantity,\n                    'timestamp': new Date()\n                }\n            }\n        })\n\n\n    /////标记registerClass项为 canceling\n    var result = DB.ClassesRegister.update({\n        'classId': item.classId,\n        'swimmerId': item.swimmerId\n    }, {\n        '$set': {status: 'canceling'}//已开始事务处里 置为pending\n    })\n\n\n}\n\n\n//canceling未到达applied状态而中断 回滚逻辑 逆操作\ncancel_move_canceling_to_applied_rollback =function(){\n\n\n}\n\n//applied_to_done  退款后的清理工作\n//删除 classRegister 项\n//删除 classRegister 中的carted项\ncancel_move_applied_to_done = function () {\n\n\n}\n\n\nshopping_cart_export({\n    cancel_add_class_to_cart: cancel_add_class_to_cart\n})\n","/**\n * Created on 9/25/15.\n */\n\n\n//////////////////////定时任务/////////////////////////////\n//后续处理  此过程若中断 可由定时程序确保其完成\nfunction cron_move_applied_to_done() {\n    if (this.connection) return;\n\n    var allCarts = get_carts({'status': 'applied'})\n\n    //可能有多个cart\n    allCarts.forEach(function (cart) {\n        _move_to_done(cart)\n    })\n}\n//定时程序调用 走 expired状态流程\nfunction cron_expiring() {\n\n\n}\n\n\nshopping_cart_export({\n    cron_move_applied_to_done: cron_move_applied_to_done,\n    cron_expiring: cron_expiring\n})\n\n\n"]}}]