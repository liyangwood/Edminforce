[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\n\n/* Package-scope variables */\nvar DevTools;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/ihealth_dev-tools/debug-console.js                                              //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\nDevTools = {}                                                                               // 1\n                                                                                            // 2\n// call debugL(3) to make it a Level 3 debug console.log function                           // 3\nDevTools.consoleWithLevels = function(levelFilter, debugLevel) {                            // 4\n  return function() {                                                                       // 5\n    var messagesRaw = Array.prototype.slice.call(arguments)                                 // 6\n    if(messagesRaw.length > 0) {                                                            // 7\n      var messagesMapped = messagesRaw.slice(1).map(function(message) {                     // 8\n        if (typeof(message) === \"string\") {                                                 // 9\n          return (message)                                                                  // 10\n          // return (\"string: \" + message)                                                  // 11\n        } else {                                                                            // 12\n          return (Object.prototype.toString.call(message) + \": \" + JSON.stringify(message))\n        }                                                                                   // 14\n      })                                                                                    // 15\n      if (levelFilter >= debugLevel) {                                                      // 16\n        var debugLine = \"debug\" + debugLevel + \" - \"                                        // 17\n        messagesMapped.unshift(debugLine, messagesRaw[0])                                   // 18\n                                                                                            // 19\n        var log = Function.prototype.bind.call(console.log, console);                       // 20\n        log.apply(console, messagesMapped);                                                 // 21\n      }                                                                                     // 22\n    }                                                                                       // 23\n  }                                                                                         // 24\n}                                                                                           // 25\n                                                                                            // 26\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ihealth:dev-tools'] = {\n  DevTools: DevTools\n};\n\n})();\n","servePath":"/packages/ihealth_dev-tools.js","sourceMap":{"version":3,"sources":["/packages/ihealth_dev-tools/debug-console.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iG","file":"/packages/ihealth_dev-tools.js","sourcesContent":["DevTools = {}\n\n// call debugL(3) to make it a Level 3 debug console.log function\nDevTools.consoleWithLevels = function(levelFilter, debugLevel) {\n  return function() {\n    var messagesRaw = Array.prototype.slice.call(arguments)\n    if(messagesRaw.length > 0) {\n      var messagesMapped = messagesRaw.slice(1).map(function(message) {\n        if (typeof(message) === \"string\") {\n          return (message)\n          // return (\"string: \" + message)\n        } else {\n          return (Object.prototype.toString.call(message) + \": \" + JSON.stringify(message))\n        }\n      })\n      if (levelFilter >= debugLevel) {\n        var debugLine = \"debug\" + debugLevel + \" - \"\n        messagesMapped.unshift(debugLine, messagesRaw[0])\n\n        var log = Function.prototype.bind.call(console.log, console);\n        log.apply(console, messagesMapped);\n      }\n    }\n  }\n}\n"]}}]