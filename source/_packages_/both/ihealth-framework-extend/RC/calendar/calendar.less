//
// Variables
// --------------------------------------------------

// Type
// --------------------------------------------------
@font-family-default: "Helvetica Neue", Helvetica, sans-serif;
@font-size-default: 0.85rem;
@font-weight: 500;
@font-weight-light: 400;
@line-height-default: 1.05rem;


// Colors
// -------------------------------------------------
// 主色
@color-primary: #0894ec;
@color-danger: #f6383a;
@color-warning: #f60;
@color-success: #4cd964;

@color-primary-active: #0a8ddf;
@color-danger-active: darken(@color-danger, 10%);
@color-warning-active: darken(@color-warning, 10%);
@color-success-active: darken(@color-success, 10%);

@color-split: #e7e7e7;  //分割线的颜色
@color-bg: #eee;
@color-text: #3d4145; //文案色
@color-text-secondary: #5f646e; //次级文案
@color-text-gray: #999; //灰色文案
@color-text-gray-light: #ccc; //更灰色文案

//链接色
@color-link: @color-primary; //链接色有可能不同于主色
@color-link-active: @color-primary-active; //链接色有可能不同于主色

// Bars
// --------------------------------------------------

@bar-base-height:  2.2rem;
@bar-tab-height:   2.5rem;
@bar-side-spacing: 0.5rem;


// Cards
// --------------------------------------------------

@card-bg: #fff;


// Buttons
// --------------------------------------------------

@button-font-size: 0.6rem;


// Transitions
// --------------------------------------------------

@timing-fuction: cubic-bezier(.1,.5,.1,1); // Inspired by @c2prods


// Borders
// --------------------------------------------------

@border-default-width: 1px;
@border-default-color: @color-split;
@border-default: @border-default-width solid @border-default-color;
@border-radius: 0.3rem;



//mixins

.scrollable(){
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}
.flexbox() {
    display: -webkit-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
.flex-wrap(@fw) when (@fw = nowrap) {
    -webkit-box-lines: single;
    -moz-box-lines: single;
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: none;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
}
.flex-wrap(@fw) when (@fw = wrap) {
    -webkit-box-lines: multiple;
    -moz-box-lines: multiple;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}
.flex-wrap(@fw) when not (@fw = wrap) and not (@fw = nowrap) {
    -webkit-flex-wrap: @fw;
    -ms-flex-wrap: @fw;
    flex-wrap: @fw;
}
.flex-shrink(@fs) {
    -webkit-flex-shrink: @fs;
    -ms-flex: 0 @fs auto;
    flex-shrink: @fs;
}
.justify-content(@jc) when (@jc = flex-start) {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
}
.justify-content(@jc) when (@jc = flex-end) {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
}
.justify-content(@jc) when (@jc = space-between) {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
}
.justify-content(@jc) when not (@jc = flex-start) and not (@jc = flex-end) and not (@jc = space-between) {
    -webkit-box-pack: @jc;
    -ms-flex-pack: @jc;
    -webkit-justify-content: @jc;
    justify-content: @jc;
}
.align-items(@ai) when (@ai = flex-start) {
    -webkit-box-align: start;
    -ms-flex-align: start;
    -webkit-align-items: flex-start;
    align-items: flex-start;
}
.align-items(@ai) when (@ai = flex-end) {
    -webkit-box-align: end;
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    align-items: flex-end;
}
.align-items(@ai) when not (@ai = flex-start) and not (@ai = flex-end) {
    -webkit-box-align: @ai;
    -ms-flex-align: @ai;
    -webkit-align-items: @ai;
    align-items: @ai;
}
.align-content(@ai) {
    -ms-flex-line-pack: @ai;
    -webkit-align-content: @ai;
    align-content: @ai;
}
.align-self(@as) {
    -ms-flex-item-align: @as;
    -webkit-align-self: @as;
    align-self: @as;
}
.clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}
.hairline(@position, @color) when (@position = top) {
    &:before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        bottom: auto;
        right: auto;
        height: 1px;
        width: 100%;
        background-color: @color;
        display: block;
        z-index: 15;
        transform-origin: 50% 0%;
        @media only screen and (-webkit-min-device-pixel-ratio: 2) {
            transform: scaleY(0.5);
        }
        @media only screen and (-webkit-min-device-pixel-ratio: 3) {
            transform: scaleY(0.33);
        }
    }
}
.hairline(@position, @color) when (@position = left) {
    &:before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        bottom: auto;
        right: auto;
        width: 1px;
        height: 100%;
        background-color: @color;
        display: block;
        z-index: 15;
        transform-origin: 0% 50%;
        @media only screen and (-webkit-min-device-pixel-ratio: 2) {
            transform: scaleY(0.5);
        }
        @media only screen and (-webkit-min-device-pixel-ratio: 3) {
            transform: scaleY(0.33);
        }
    }
}
.hairline(@position, @color) when (@position = bottom) {
    &:after {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        right: auto;
        top: auto;
        height: 1px;
        width: 100%;
        background-color: @color;
        display: block;
        z-index: 15;
        transform-origin: 50% 100%;
        @media only screen and (-webkit-min-device-pixel-ratio: 2) {
            transform: scaleY(0.5);
        }
        @media only screen and (-webkit-min-device-pixel-ratio: 3) {
            transform: scaleY(0.33);
        }
    }
}
.hairline(@position, @color) when (@position = right) {
    &:after {
        content: '';
        position: absolute;
        right: 0;
        top: 0;
        left: auto;
        bottom: auto;
        width: 1px;
        height: 100%;
        background-color: @color;
        display: block;
        z-index: 15;
        transform-origin: 100% 50%;
        @media only screen and (-webkit-min-device-pixel-ratio: 2) {
            transform: scaleY(0.5);
        }
        @media only screen and (-webkit-min-device-pixel-ratio: 3) {
            transform: scaleY(0.33);
        }
    }
}
// For right and bottom
.hairline-remove(@position) when not (@position = left) and not (@position = top) {
    &:after {
        display: none;
    }
}
// For left and top
.hairline-remove(@position) when not (@position = right) and not (@position = bottom) {
    &:before {
        display: none;
    }
}
// For right and bottom
.hairline-color(@position, @color) when not (@position = left) and not (@position = top) {
    &:after {
        background-color: @color;
    }
}
// For left and top
.hairline-color(@position, @color) when not (@position = right) and not (@position = bottom) {
    &:before {
        background-color: @color;
    }
}

// Encoded SVG Background
.encoded-svg-background(@svg) {
    @url: `encodeURIComponent(@{svg})`;
    background-image: url("data:image/svg+xml;charset=utf-8,@{url}");
}

// Preserve3D
.preserve3d() {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style: preserve-3d;
    -ms-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

//from ratchet
.linear-gradient(@color-from, @color-to) {
    background-color: @color-from; // Old browsers
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@color-from), color-stop(100%,@color-to)); // Chrome, Safari4+
    background-image: -webkit-linear-gradient(top, @color-from 0%, @color-to 100%);           // Chrome10+, Safari5.1+
    background-image:    -moz-linear-gradient(top, @color-from 0%, @color-to 100%);           // FF3.6+
    background-image:     -ms-linear-gradient(top, @color-from 0%, @color-to 100%);           // IE10+
    background-image:      -o-linear-gradient(top, @color-from 0%, @color-to 100%);           // Opera 11.10+
    background-image:         linear-gradient(to bottom, @color-from 0%, @color-to 100%);     // W3C
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{@color-from}', endColorstr='#{@color-to}', GradientType=0 ); // IE6-9
}
.directional-gradient(@color-from, @color-to, @deg: 45deg) {
    background-color: @color-from; // Old browsers
    background-image: -webkit-gradient(linear, left bottom, right top, color-stop(0%,@color-from), color-stop(100%,@color-to)); // Chrome, Safari4+
    background-image: -webkit-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // Chrome10+, Safari5.1+
    background-image:    -moz-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // FF3.6+
    background-image:     -ms-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // IE10+
    background-image:      -o-linear-gradient(@deg, @color-from 0%, @color-to 100%);           // Opera 11.10+
    background-image:         linear-gradient(@deg, @color-from 0%, @color-to 100%);     // W3C
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{@color-from}', endColorstr='#{@color-to}', GradientType=1 ); // IE6-9
}

.hairline(@type, @color, @offset) when (@type = single) {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
    background-position: @offset 100%;
}
.hairline(@type, @color, @offset) when (@type = double) {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>"),
    url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
    background-position: @offset 100%, @offset 0;
    background-repeat: no-repeat;
}






////////////////////////////// Picker style/////////////////////////////////////
////todo   css  in  js

.picker-modal {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 13rem;
    z-index: 11500;
    //display: none; //react
    transition-property: transform;
    background: #cfd5da;
    //transform: translate3d( 0,100%,0); //react
    &.modal-in, &.modal-out {
        transition-duration: 400ms;
    }
    &.modal-in {
        transform: translate3d(0,0,0);
    }
    &.modal-out {
        transform: translate3d(0,100%,0);
    }
    .picker-modal-inner {
        height: 100%;
        position: relative;
    }
    .toolbar {
        .hairline(top, @color-text-gray);
        position: relative;
        width: 100%;
        + .picker-modal-inner {
            height: ~"-webkit-calc(100% - 2.2rem)";
            height: ~"-moz-calc(100% - 2.2rem)";
            height: ~"calc(100% - 2.2rem)";
        }
    }
    &.picker-modal-inline {
        display: block;
        position: relative;
        background: none;
        z-index: inherit;
        transform: translate3d(0,0,0);
        .toolbar {
            .hairline-remove(top);
            .hairline(bottom, @color-text-gray);
        }
    }


    font-family:@font-family-default
}

/* === Calendar === */
.picker-calendar {
    background: #fff;
    height: 300px;
    width: 100%;
    overflow: hidden;
    @media (orientation: landscape) and (max-height: 415px) {
        &:not(.picker-modal-inline) {
            height: 220px;
        }
    }
    .picker-modal-inner {
        overflow: hidden;
    }
}
.picker-calendar-week-days {
    height: 18px;
    background: #f7f7f8;
    .flexbox();
    .hairline(bottom, #c4c4c4);
    font-size: 11px;
    box-sizing: border-box;
    position: relative;
    .picker-calendar-week-day {
        .flex-shrink(1);
        width: 100% / 7;
        width: ~"-webkit-calc(100% / 7)";
        width: ~"-moz-calc(100% / 7)";
        width: ~"calc(100% / 7)";
        line-height: 17px;
        text-align: center;
    }
    + .picker-calendar-months {
        height: ~"-webkit-calc(100% - 18px)";
        height: ~"-moz-calc(100% - 18px)";
        height: ~"calc(100% - 18px)";
    }
}
.picker-calendar-months {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
}
.picker-calendar-months-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    transition: 300ms;
}
.picker-calendar-month {
    .flexbox();
    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    -ms-flex-direction: column;
    -webkit-flex-direction: column;
    flex-direction: column;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
}
.picker-calendar-row {
    height: 100% / 6;
    height: ~"-webkit-calc(100% / 6)";
    height: ~"-moz-calc(100% / 6)";
    height: ~"calc(100% / 6)";
    .flexbox();
    .flex-shrink(1);
    width: 100%;
    position: relative;
    .hairline(bottom, #ccc);
    &:last-child {
        .hairline-remove(bottom);
    }
}
.picker-calendar-day {
    .flex-shrink(1);
    .flexbox();
    .justify-content(center);
    .align-items(center);
    box-sizing: border-box;
    width: 100% / 7;
    width: ~"-webkit-calc(100% / 7)";
    width: ~"-moz-calc(100% / 7)";
    width: ~"calc(100% / 7)";
    text-align: center;
    color:@color-text;
    font-size: 15px;
    cursor: pointer;
    &.picker-calendar-day-weekend {
    }
    &.picker-calendar-day-prev, &.picker-calendar-day-next {
        color: @color-text-gray-light;
    }
    .picker-calendar-month-prev &, .picker-calendar-month-next & {

    }
    &.picker-calendar-day-disabled {
        color: #d4d4d4;
        cursor: auto;
    }
    &.picker-calendar-day-today span {
        background: #e3e3e3;
    }
    &.picker-calendar-day-selected span {
        background: @color-primary;
        color:#fff;
    }
    span {
        display: inline-block;
        border-radius: 100%;
        width: 30px;
        height: 30px;
        line-height: 30px;

    }
}
.picker-calendar-month-picker, .picker-calendar-year-picker {
    .flexbox();
    .align-items(center);
    .justify-content(space-between);
    width: 50%;
    max-width: 200px;
    .flex-shrink(10);
    a.icon-only {
        min-width: 36px;
    }
    span {
        .flex-shrink(1);
        position: relative;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}

//修复toolbar
.picker-modal .toolbar-inner {
    height: 2.2rem;
    .flexbox();
    text-align: center;
}

//修复Android 4.1 上 toolbar元素宽度错误
//因为它不能对 inline 的元素设置宽度
.picker-calendar-month-picker, .picker-calendar-year-picker {
    display: block;
    line-height: 2.2rem;

    a.icon-only {
        float: left;
        width: 25%;
        //height: 2.2rem;
        //line-height: 2rem;  //不知道为什么 2.2rem 无法上下对齐；

        color:@color-primary;  //react
        height: 2.5rem;
        line-height: 2.5rem;
        font-size: 1.5rem;
    }
    .current-month-value, .current-year-value {
        float: left;
        width: 50%;
        height: 2.2rem;
    }
}
